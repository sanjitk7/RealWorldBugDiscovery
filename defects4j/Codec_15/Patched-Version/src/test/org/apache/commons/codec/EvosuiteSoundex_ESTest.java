/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 00:25:18 GMT 2024
 */

package org.apache.commons.codec.language;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.Soundex;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Soundex_ESTest extends Soundex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      int int0 = soundex0.getMaxLength();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Soundex soundex0 = null;
      try {
        soundex0 = new Soundex((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Soundex soundex0 = new Soundex("LCJ|OXK-:j[gOEu");
      soundex0.setMaxLength((-279));
      assertEquals((-279), soundex0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      Object object0 = soundex0.encode((Object) "hHFQ+-@G)S9#}E8h");
      assertEquals("H120", object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Soundex soundex0 = new Soundex();
      try { 
        soundex0.encode((Object) soundex0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parameter supplied to Soundex encode is not of type java.lang.String
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      int int0 = soundex0.difference("HYwrde", "HYwrde");
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Soundex soundex0 = new Soundex("dg");
      // Undeclared exception!
      try { 
        soundex0.difference("dg", "dg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character is not mapped: D
         //
         verifyException("org.apache.commons.codec.language.Soundex", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      int int0 = soundex0.difference((String) null, (String) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      Object object0 = soundex0.encode((Object) "01230120022455012623010202");
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Soundex soundex0 = Soundex.US_ENGLISH;
      int int0 = soundex0.difference("t8]0d/JA='~MI,/Zbyu", "t8]0d/JA='~MI,/Zbyu");
      assertEquals(4, int0);
  }
}
