diff --git a/tests/NIRCam_ecfs/S3_NIRCam.ecf b/tests/NIRCam_ecfs/S3_NIRCam.ecf
index b7d5df80..f86af41b 100644
--- a/tests/NIRCam_ecfs/S3_NIRCam.ecf
+++ b/tests/NIRCam_ecfs/S3_NIRCam.ecf
@@ -1,5 +1,6 @@
 # Eureka! Control File for Stage 3: Data Reduction
 
+inst        nircam      # Only needed during testing since we haven't run S2
 ncpu        1           # Number of CPUs
 nfiles      1           # The number of data files to analyze simultaneously
 max_memory  0.5         # The maximum fraction of memory you want utilized by read-in frames (this will reduce nfiles if need be)
diff --git a/tests/test_MIRI.py b/tests/test_MIRI.py
index 236eb416..87b74c36 100644
--- a/tests/test_MIRI.py
+++ b/tests/test_MIRI.py
@@ -126,16 +126,16 @@ def test_MIRI(capsys):
     # run assertions for S3
     meta.outputdir_raw = (f'data{os.sep}JWST-Sim{os.sep}MIRI{os.sep}'
                           f'Stage3{os.sep}')
-    name = pathdirectory(meta, 'S3', 1, ap=4, bg=10)
+    name = pathdirectory(meta, 'S3', 1, ap=8, bg=20)
     assert os.path.exists(name)
     assert os.path.exists(name+os.sep+'figs')
-    
+
     assert np.array_equal(s3_meta.citations, s3_cites)
 
     # run assertions for S4
     meta.outputdir_raw = (f'data{os.sep}JWST-Sim{os.sep}MIRI{os.sep}'
                           f'Stage4{os.sep}')
-    name = pathdirectory(meta, 'S4', 1, ap=4, bg=10)
+    name = pathdirectory(meta, 'S4', 1, ap=8, bg=20)
     assert os.path.exists(name)
     assert os.path.exists(name+os.sep+'figs')
 
@@ -145,10 +145,10 @@ def test_MIRI(capsys):
     # run assertions for S5
     meta.outputdir_raw = (f'data{os.sep}JWST-Sim{os.sep}MIRI{os.sep}'
                           f'Stage5{os.sep}')
-    name = pathdirectory(meta, 'S5', 1, ap=4, bg=10)
+    name = pathdirectory(meta, 'S5', 1, ap=8, bg=20)
     assert os.path.exists(name)
     assert os.path.exists(name+os.sep+'figs')
-    
+
     s5_cites = np.union1d(s4_cites, COMMON_IMPORTS[4] + ["dynesty", "batman"])
     assert np.array_equal(s5_meta.citations, s5_cites)
 
@@ -160,7 +160,7 @@ def test_MIRI(capsys):
     # run assertions for S6
     meta.outputdir_raw = (f'data{os.sep}JWST-Sim{os.sep}MIRI{os.sep}'
                           f'Stage6{os.sep}')
-    name = pathdirectory(meta, 'S6', 1, ap=4, bg=10)
+    name = pathdirectory(meta, 'S6', 1, ap=8, bg=20)
     assert os.path.exists(name)
     assert os.path.exists(name+os.sep+'figs')
 
diff --git a/tests/test_NIRCam.py b/tests/test_NIRCam.py
index 550a0b4b..ac54d66b 100644
--- a/tests/test_NIRCam.py
+++ b/tests/test_NIRCam.py
@@ -51,23 +51,23 @@ def test_NIRCam(capsys):
     s4_spec, s4_lc, s4_meta = s4.genlc(meta.eventlabel, ecf_path=ecf_path,
                                        s3_meta=s3_meta)
     s5_meta = s5.fitlc(meta.eventlabel, ecf_path=ecf_path, s4_meta=s4_meta)
-    s6_meta = s6.plot_spectra(meta.eventlabel, ecf_path=ecf_path, 
+    s6_meta = s6.plot_spectra(meta.eventlabel, ecf_path=ecf_path,
                               s5_meta=s5_meta)
 
     # run assertions for S3
     meta.outputdir_raw = (f'data{os.sep}JWST-Sim{os.sep}NIRCam{os.sep}'
                           f'Stage3{os.sep}')
-    name = pathdirectory(meta, 'S3', 1, ap=8, bg=12)
+    name = pathdirectory(meta, 'S3', 1, ap=16, bg=24)
     assert os.path.exists(name)
     assert os.path.exists(name+os.sep+'figs')
-    
+
     s3_cites = np.union1d(COMMON_IMPORTS[2], ["nircam"])
     assert np.array_equal(s3_meta.citations, s3_cites)
 
     # run assertions for S4
     meta.outputdir_raw = (f'data{os.sep}JWST-Sim{os.sep}NIRCam{os.sep}'
                           f'Stage4{os.sep}')
-    name = pathdirectory(meta, 'S4', 1, ap=8, bg=12)
+    name = pathdirectory(meta, 'S4', 1, ap=16, bg=24)
     assert os.path.exists(name)
     assert os.path.exists(name+os.sep+'figs')
 
@@ -77,18 +77,18 @@ def test_NIRCam(capsys):
     # run assertions for S5
     meta.outputdir_raw = (f'data{os.sep}JWST-Sim{os.sep}NIRCam{os.sep}'
                           f'Stage5{os.sep}')
-    name = pathdirectory(meta, 'S5', 1, ap=8, bg=12)
+    name = pathdirectory(meta, 'S5', 1, ap=16, bg=24)
     assert os.path.exists(name)
     assert os.path.exists(name+os.sep+'figs')
 
-    s5_cites = np.union1d(s4_cites, COMMON_IMPORTS[4] + 
+    s5_cites = np.union1d(s4_cites, COMMON_IMPORTS[4] +
                           ["emcee", "dynesty", "batman"])
     assert np.array_equal(s5_meta.citations, s5_cites)
 
     # run assertions for S6
     meta.outputdir_raw = (f'data{os.sep}JWST-Sim{os.sep}NIRCam{os.sep}'
                           f'Stage6{os.sep}')
-    name = pathdirectory(meta, 'S6', 1, ap=8, bg=12)
+    name = pathdirectory(meta, 'S6', 1, ap=16, bg=24)
     assert os.path.exists(name)
     assert os.path.exists(name+os.sep+'figs')
 
