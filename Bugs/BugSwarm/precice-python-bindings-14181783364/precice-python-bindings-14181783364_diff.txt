diff --git a/cyprecice/cyprecice.pyx b/cyprecice/cyprecice.pyx
index cfe48e4..751d322 100644
--- a/cyprecice/cyprecice.pyx
+++ b/cyprecice/cyprecice.pyx
@@ -126,11 +126,6 @@ cdef class Participant:
         computed_timestep_length : double
             Length of timestep used by the solver.
 
-        Returns
-        -------
-        max_timestep : double
-            Maximum length of next timestep to be computed by solver.
-
         Notes
         -----
         Previous calls:
@@ -147,7 +142,7 @@ cdef class Participant:
             [Second Participant] Configured post processing schemes are applied.
             Meshes with data are exported to files if configured.
         """
-        return self.thisptr.advance (computed_timestep_length)
+        self.thisptr.advance (computed_timestep_length)
 
 
     def finalize (self):
@@ -1094,4 +1089,4 @@ def get_version_information ():
     -------
     Current preCICE version information
     """
-    return Participant.getVersionInformation()
+    return CppParticipant.getVersionInformation()
diff --git a/test/test_bindings_module.py b/test/test_bindings_module.py
index b933ca4..e7c18d5 100644
--- a/test/test_bindings_module.py
+++ b/test/test_bindings_module.py
@@ -398,7 +398,6 @@ class TestBindings(TestCase):
         dt = 1
         # Gradient data is essential vector data, hence the appropriate data name is used here
         read_data = participant.read_data("FakeMesh", "FakeVectorData", [0], dt)
-        print("DEBUG: write_data: {}, read_data: {}".format(write_data, read_data))
         self.assertTrue(np.array_equiv(write_data, read_data))
 
     def test_write_block_vector_gradient_data(self):
