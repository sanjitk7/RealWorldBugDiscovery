diff --git a/role-make-version-changelog.sh b/role-make-version-changelog.sh
index e77bb62..a0bdb08 100755
--- a/role-make-version-changelog.sh
+++ b/role-make-version-changelog.sh
@@ -180,12 +180,12 @@ You have three options:
         new_features_file=.new_features.md
         bug_fixes_file=.bug_fixes.md
         other_changes_file=.other_changes.md
-        # git log --pretty=format:%s --no-merges --reverse "${latest_tag}".. | while read commit; do
-        # groupping git log because the last commit is not read otherwise
-        (git log --no-merges --reverse --pretty=format:"%h" "${latest_tag}"..; echo) | while read commit; do
-            if [[ $(git log --oneline --no-merges --pretty=format:"%s" -1 $commit) =~ ^feat.* ]]; then
+        # Need to groupp git log with echo because otherwise while read doesn't
+        # read the last commit because git log doesn't put newline at the end
+        (git log --no-merges --reverse --pretty=format:"%h" "${latest_tag}"..; echo) | while read -r commit; do
+            if [[ $(git log --oneline --no-merges --pretty=format:"%s" -1 "$commit") =~ ^feat.* ]]; then
                 commits_to_file "$new_features_file"
-            elif [[ $(git log --oneline --no-merges --pretty=format:"%s" -1 $commit) =~ ^fix.* ]]; then
+            elif [[ $(git log --oneline --no-merges --pretty=format:"%s" -1 "$commit") =~ ^fix.* ]]; then
                 commits_to_file "$bug_fixes_file"
             else
                 commits_to_file "$other_changes_file"
@@ -210,11 +210,6 @@ You have three options:
                   echo ""
                   cat $other_changes_file; } >> "$rel_notes_file"
             fi
-            if [ -n "$latest_tag" ]; then
-                git_range="${latest_tag}.."
-            else
-                git_range=HEAD
-            fi
         fi
         ${EDITOR:-vi} "$rel_notes_file"
         myheader="Changelog
