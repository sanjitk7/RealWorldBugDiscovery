diff --git a/src/main/java/picard/util/DbSnpBitSetUtil.java b/src/main/java/picard/util/DbSnpBitSetUtil.java
index bc491f34c..aa4f02168 100755
--- a/src/main/java/picard/util/DbSnpBitSetUtil.java
+++ b/src/main/java/picard/util/DbSnpBitSetUtil.java
@@ -216,10 +216,10 @@ public class DbSnpBitSetUtil {
         final VCFFileReader variantReader = new VCFFileReader(dbSnpFile.toPath(), intervals != null);
         
         SequenceDictionaryUtils.assertSequenceDictionariesEqual(
-            sequenceDictionary,
-            "Reference genome",
             variantReader.getFileHeader().getSequenceDictionary(),
-            variantReader.getRawInputString()
+            "DBSNP_REFERENCE_VCF",
+            sequenceDictionary,
+            "INPUT_VCF"
         );
                 
         final Iterator<VariantContext> variantIterator;
diff --git a/src/test/java/picard/util/SequenceDictionaryUtilsTest.java b/src/test/java/picard/util/SequenceDictionaryUtilsTest.java
index ce05dda8b..bcf469118 100644
--- a/src/test/java/picard/util/SequenceDictionaryUtilsTest.java
+++ b/src/test/java/picard/util/SequenceDictionaryUtilsTest.java
@@ -2,10 +2,17 @@ package picard.util;
 
 import htsjdk.samtools.SAMSequenceDictionary;
 import htsjdk.samtools.SAMSequenceRecord;
+import htsjdk.samtools.metrics.MetricsFile;
+import htsjdk.variant.utils.SAMSequenceDictionaryExtractor;
+import org.testng.Assert;
 import org.testng.annotations.DataProvider;
 import org.testng.annotations.Test;
 import picard.PicardException;
+import picard.analysis.AlignmentSummaryMetrics;
 
+import java.io.File;
+import java.io.FileReader;
+import java.io.IOException;
 import java.util.List;
 
 public class SequenceDictionaryUtilsTest {
@@ -45,4 +52,35 @@ public class SequenceDictionaryUtilsTest {
         SequenceDictionaryUtils.assertSequenceDictionariesEqual(s1, "s1", s2, "s2");
     }
 
-}
+    @Test
+    public void testDbSnpSequenceDictionaryPositive() {
+        final File f1 = new File("testdata/picard/vcf", "mini.dbsnp.vcf");
+        final File f2 = new File("testdata/picard/vcf", "mini.vcf");
+
+        final SAMSequenceDictionary s1 = SAMSequenceDictionaryExtractor.extractDictionary(f1.toPath());
+        final SAMSequenceDictionary s2 = SAMSequenceDictionaryExtractor.extractDictionary(f2.toPath());
+
+        SequenceDictionaryUtils.assertSequenceDictionariesEqual(
+            s1,
+            "s1",
+            s2,
+            "s2"
+        );
+    }
+
+    @Test(expectedExceptions = PicardException.class)
+    public void testDbSnpSequenceDictionaryNegative() {
+        final File f1 = new File("testdata/picard/vcf", "mini.dbsnp.vcf");
+        final File f2 = new File("testdata/picard/vcf", "spanningDeletionCallset.vcf");
+
+        final SAMSequenceDictionary s1 = SAMSequenceDictionaryExtractor.extractDictionary(f1.toPath());
+        final SAMSequenceDictionary s2 = SAMSequenceDictionaryExtractor.extractDictionary(f2.toPath());
+
+        SequenceDictionaryUtils.assertSequenceDictionariesEqual(
+            s1,
+            "s1",
+            s2,
+            "s2"
+        );
+    }
+}
\ No newline at end of file
