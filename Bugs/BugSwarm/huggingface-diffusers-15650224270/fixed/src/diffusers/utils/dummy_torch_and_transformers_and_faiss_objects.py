# This file is autogenerated by the command `make fix-copies`, do not edit.
from ..utils import DummyObject, requires_backends


class Index(metaclass=DummyObject):
    _backends = ["torch", "transformers", "faiss"]

    def __init__(self, *args, **kwargs):
        requires_backends(self, ["torch", "transformers", "faiss"])

    @classmethod
    def from_config(cls, *args, **kwargs):
        requires_backends(cls, ["torch", "transformers", "faiss"])

    @classmethod
    def from_pretrained(cls, *args, **kwargs):
        requires_backends(cls, ["torch", "transformers", "faiss"])


class IndexConfig(metaclass=DummyObject):
    _backends = ["torch", "transformers", "faiss"]

    def __init__(self, *args, **kwargs):
        requires_backends(self, ["torch", "transformers", "faiss"])

    @classmethod
    def from_config(cls, *args, **kwargs):
        requires_backends(cls, ["torch", "transformers", "faiss"])

    @classmethod
    def from_pretrained(cls, *args, **kwargs):
        requires_backends(cls, ["torch", "transformers", "faiss"])


class RDMPipeline(metaclass=DummyObject):
    _backends = ["torch", "transformers", "faiss"]

    def __init__(self, *args, **kwargs):
        requires_backends(self, ["torch", "transformers", "faiss"])

    @classmethod
    def from_config(cls, *args, **kwargs):
        requires_backends(cls, ["torch", "transformers", "faiss"])

    @classmethod
    def from_pretrained(cls, *args, **kwargs):
        requires_backends(cls, ["torch", "transformers", "faiss"])


class Retriever(metaclass=DummyObject):
    _backends = ["torch", "transformers", "faiss"]

    def __init__(self, *args, **kwargs):
        requires_backends(self, ["torch", "transformers", "faiss"])

    @classmethod
    def from_config(cls, *args, **kwargs):
        requires_backends(cls, ["torch", "transformers", "faiss"])

    @classmethod
    def from_pretrained(cls, *args, **kwargs):
        requires_backends(cls, ["torch", "transformers", "faiss"])
