diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/configuration/FeignConsumerConfiguration.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/configuration/FeignConsumerConfiguration.java
index 5ed34cf6..b45d8fc1 100644
--- a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/configuration/FeignConsumerConfiguration.java
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/configuration/FeignConsumerConfiguration.java
@@ -1,3 +1,19 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package com.alibaba.cloud.consumer.feign.configuration;
 
 import com.alibaba.cloud.consumer.feign.decorator.FeignClientDecorator;
@@ -22,11 +38,8 @@ public class FeignConsumerConfiguration {
 			SpringClientFactory clientFactory) {
 
 		return new LoadBalancerFeignClient(
-				new FeignClientDecorator(
-						new Client.Default(null, null)),
-				cachingFactory,
-				clientFactory
-		);
+				new FeignClientDecorator(new Client.Default(null, null)), cachingFactory,
+				clientFactory);
 	}
 
 }
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/constant/FeignConsumerConstants.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/constant/FeignConsumerConstants.java
index dc851b06..2c979606 100644
--- a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/constant/FeignConsumerConstants.java
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/constant/FeignConsumerConstants.java
@@ -1,3 +1,19 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package com.alibaba.cloud.consumer.feign.constant;
 
 /**
@@ -18,6 +34,6 @@ public final class FeignConsumerConstants {
 	/**
 	 * Http Ok status code.
 	 */
-	public static final int PASS_STATUS= 200;
+	public static final int PASS_STATUS = 200;
 
 }
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/decorator/FeignClientDecorator.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/decorator/FeignClientDecorator.java
index a989e365..b91c5b1d 100644
--- a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/decorator/FeignClientDecorator.java
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/decorator/FeignClientDecorator.java
@@ -1,3 +1,19 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package com.alibaba.cloud.consumer.feign.decorator;
 
 import java.io.IOException;
@@ -14,8 +30,7 @@ import feign.Response;
 
 /**
  * @author yuluo
- * @author 1481556636@qq.com
- * Rewrite the feign client to get the feign response.
+ * @author 1481556636@qq.com Rewrite the feign client to get the feign response.
  */
 
 public class FeignClientDecorator implements Client {
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/decorator/FeignResponseDecoder.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/decorator/FeignResponseDecoder.java
index b2356628..aeb7c917 100644
--- a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/decorator/FeignResponseDecoder.java
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/decorator/FeignResponseDecoder.java
@@ -1,14 +1,35 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package com.alibaba.cloud.consumer.feign.decorator;
 
 import java.io.IOException;
 import java.io.Reader;
 import java.lang.reflect.Type;
 import java.nio.charset.StandardCharsets;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 import java.util.Objects;
 
 import javax.annotation.Resource;
 
+import com.alibaba.cloud.consumer.feign.entity.NodeInfo;
 import feign.FeignException;
 import feign.Response;
 import feign.Util;
@@ -37,14 +58,17 @@ public class FeignResponseDecoder extends SpringDecoder {
 	}
 
 	@Override
-	public Object decode(Response response, Type type) throws IOException, FeignException {
+	public Object decode(Response response, Type type)
+			throws IOException, FeignException {
 
 		Reader reader = response.body().asReader(StandardCharsets.UTF_8);
 		String json = Util.toString(reader);
 		String result = getResult(json);
 		if (Objects.isNull(result)) {
 
-			return super.decode(response.toBuilder().body(json, StandardCharsets.UTF_8).build(), type);
+			return super.decode(
+					response.toBuilder().body(json, StandardCharsets.UTF_8).build(),
+					type);
 		}
 
 		return result;
@@ -53,9 +77,30 @@ public class FeignResponseDecoder extends SpringDecoder {
 
 	private String getResult(String json) {
 
-		String server = json.substring(9, 26);
-		List<ServiceInstance> instances = discoveryClient.getInstances(server);
-		System.out.println(instances);
+		String serverPort = json.substring(21, 26);
+
+		List<String> services = discoveryClient.getServices();
+		for (String service : services) {
+			List<ServiceInstance> instances = discoveryClient.getInstances(service);
+			for (ServiceInstance instance : instances) {
+				if ((instance.getPort() + "").equals(serverPort)) {
+					String server = instance.getServiceId();
+					Map<String, String> metadata = instance.getMetadata();
+					List<Map<String, List<String>>> metaList = new ArrayList<>();
+					Map<String, List<String>> map = new HashMap<>();
+					for (String s : metadata.keySet()) {
+						map.put(s, Collections.singletonList(metadata.get(s)));
+					}
+					map.put("port", Collections.singletonList(instance.getPort() + ""));
+					map.put("host", Collections.singletonList(instance.getHost()));
+					map.put("instanceId",
+							Collections.singletonList(instance.getInstanceId()));
+					metaList.add(map);
+
+					NodeInfo.set(server, metaList);
+				}
+			}
+		}
 
 		return json;
 	}
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/entity/NodeInfo.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/entity/NodeInfo.java
index cd8bdba7..af2f69fd 100644
--- a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/entity/NodeInfo.java
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/entity/NodeInfo.java
@@ -1,3 +1,19 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package com.alibaba.cloud.consumer.feign.entity;
 
 import java.util.List;
@@ -14,7 +30,7 @@ import org.springframework.stereotype.Component;
 @Component
 public final class NodeInfo {
 
-	private static Map<String, List<Map<String, List<String>>>> nodeIno = new ConcurrentHashMap<>();;
+	private static Map<String, List<Map<String, List<String>>>> nodeIno = new ConcurrentHashMap<>();
 
 	private NodeInfo() {
 	}
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/util/FeignConsumerUtil.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/util/FeignConsumerUtil.java
index b0fb7626..f003c78a 100644
--- a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/util/FeignConsumerUtil.java
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-feign-consumer-example/src/main/java/com/alibaba/cloud/consumer/feign/util/FeignConsumerUtil.java
@@ -1,3 +1,19 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package com.alibaba.cloud.consumer.feign.util;
 
 import java.io.IOException;
@@ -14,7 +30,7 @@ import feign.Response;
 
 public final class FeignConsumerUtil {
 
-	private FeignConsumerUtil(){
+	private FeignConsumerUtil() {
 	}
 
 	public static String toString(Response response) {
@@ -30,9 +46,11 @@ public final class FeignConsumerUtil {
 			throw new RuntimeException(e);
 		}
 
-		while(true) {
+		while (true) {
 			try {
-				if (reader.read(charBuf) == -1) break;
+				if (reader.read(charBuf) == -1) {
+					break;
+				}
 			}
 			catch (IOException e) {
 				throw new RuntimeException(e);
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/configuration/WebClientConfiguration.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/configuration/WebClientConfiguration.java
index 337beff6..28f64fa5 100644
--- a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/configuration/WebClientConfiguration.java
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/configuration/WebClientConfiguration.java
@@ -16,9 +16,13 @@
 
 package com.alibaba.cloud.consumer.reactive.configuration;
 
+import reactor.core.publisher.Mono;
+
 import org.springframework.cloud.client.loadbalancer.LoadBalanced;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.web.reactive.function.BodyExtractors;
+import org.springframework.web.reactive.function.client.ExchangeFilterFunction;
 import org.springframework.web.reactive.function.client.WebClient;
 
 /**
@@ -29,11 +33,38 @@ import org.springframework.web.reactive.function.client.WebClient;
 @Configuration
 public class WebClientConfiguration {
 
+	private static String serverPort = null;
+
 	@Bean
 	@LoadBalanced
 	public WebClient.Builder webClient() {
 
-		return WebClient.builder();
+		return WebClient.builder().filter(response());
+	}
+
+	// private ExchangeFilterFunction request() {
+	//
+	// return ((clientRequest, exchangeFunction) -> {
+	//
+	// HttpHeaders headers = clientRequest.headers();
+	// return exchangeFunction.exchange(clientRequest);
+	// });
+	// }
+
+	private ExchangeFilterFunction response() {
+
+		return ExchangeFilterFunction.ofResponseProcessor(clientResponse -> {
+
+			Object body = clientResponse.body(BodyExtractors.toDataBuffers());
+			serverPort = body.toString().substring(45, 50);
+
+			return Mono.just(clientResponse);
+		});
+	}
+
+	public String getServerPort() {
+
+		return serverPort;
 	}
 
 }
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/constant/ReactiveConsumerConstants.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/constant/ReactiveConsumerConstants.java
new file mode 100644
index 00000000..2baae18f
--- /dev/null
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/constant/ReactiveConsumerConstants.java
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.cloud.consumer.reactive.constant;
+
+/**
+ * @author yuluo
+ * @author 1481556636@qq.com
+ */
+
+public final class ReactiveConsumerConstants {
+
+	private ReactiveConsumerConstants() {
+	}
+
+	/**
+	 * Application name.
+	 */
+	public static final String APPLICATION_NAME = "routing-reactive-consumer-example";
+
+	/**
+	 * Http Ok status code.
+	 */
+	public static final int PASS_STATUS = 200;
+
+}
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/controller/ConsumerReactiveExampleController.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/controller/ConsumerReactiveExampleController.java
index 10a0fb6d..a7110959 100644
--- a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/controller/ConsumerReactiveExampleController.java
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/controller/ConsumerReactiveExampleController.java
@@ -17,7 +17,10 @@
 package com.alibaba.cloud.consumer.reactive.controller;
 
 import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import javax.annotation.Resource;
 
@@ -28,6 +31,8 @@ import com.alibaba.cloud.commons.governance.routing.UnifiedRoutingDataStructure;
 import com.alibaba.cloud.commons.governance.routing.rule.HeaderRoutingRule;
 import com.alibaba.cloud.commons.governance.routing.rule.Rule;
 import com.alibaba.cloud.commons.governance.routing.rule.UrlRoutingRule;
+import com.alibaba.cloud.consumer.reactive.configuration.WebClientConfiguration;
+import com.alibaba.cloud.consumer.reactive.entity.NodeInfo;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import reactor.core.publisher.Flux;
@@ -35,6 +40,8 @@ import reactor.core.publisher.Mono;
 
 import org.springframework.beans.BeansException;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.cloud.client.ServiceInstance;
+import org.springframework.cloud.client.discovery.DiscoveryClient;
 import org.springframework.cloud.client.discovery.ReactiveDiscoveryClient;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.ApplicationContextAware;
@@ -64,6 +71,43 @@ public class ConsumerReactiveExampleController implements ApplicationContextAwar
 	@Resource
 	private WebClient.Builder webClientBuilder;
 
+	@Resource
+	private WebClientConfiguration webClientConfiguration;
+
+	@Autowired
+	private DiscoveryClient discoveryClient;
+
+	@GetMapping("/nodeInfo")
+	public Map<String, List<Map<String, List<String>>>> getNodeInfo() {
+
+		String serverPort = webClientConfiguration.getServerPort();
+
+		List<String> services = discoveryClient.getServices();
+		for (String service : services) {
+			List<ServiceInstance> instances = discoveryClient.getInstances(service);
+			for (ServiceInstance instance : instances) {
+				if ((instance.getPort() + "").equals(serverPort)) {
+					String server = instance.getServiceId();
+					Map<String, String> metadata = instance.getMetadata();
+					List<Map<String, List<String>>> metaList = new ArrayList<>();
+					Map<String, List<String>> nmap = new HashMap<>();
+					for (String s : metadata.keySet()) {
+						nmap.put(s, Collections.singletonList(metadata.get(s)));
+					}
+					nmap.put("port", Collections.singletonList(instance.getPort() + ""));
+					nmap.put("host", Collections.singletonList(instance.getHost()));
+					nmap.put("instanceId",
+							Collections.singletonList(instance.getInstanceId()));
+					metaList.add(nmap);
+
+					NodeInfo.set(server, metaList);
+				}
+			}
+		}
+
+		return NodeInfo.getNodeIno();
+	}
+
 	@Override
 	public void setApplicationContext(ApplicationContext applicationContext)
 			throws BeansException {
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/entity/NodeInfo.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/entity/NodeInfo.java
new file mode 100644
index 00000000..d05ece58
--- /dev/null
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/entity/NodeInfo.java
@@ -0,0 +1,53 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.cloud.consumer.reactive.entity;
+
+import java.util.List;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+
+import org.springframework.stereotype.Component;
+
+/**
+ * @author yuluo
+ * @author 1481556636@qq.com
+ */
+
+@Component
+public final class NodeInfo {
+
+	private static Map<String, List<Map<String, List<String>>>> nodeIno = new ConcurrentHashMap<>();
+
+	private NodeInfo() {
+	}
+
+	public static void set(String var1, List<Map<String, List<String>>> var2) {
+
+		nodeIno.put(var1, var2);
+	}
+
+	public static List<Map<String, List<String>>> get(String var) {
+
+		return nodeIno.get(var);
+	}
+
+	public static Map<String, List<Map<String, List<String>>>> getNodeIno() {
+
+		return nodeIno;
+	}
+
+}
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/util/ReactiveConsumerUtil.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/util/ReactiveConsumerUtil.java
new file mode 100644
index 00000000..fb530285
--- /dev/null
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-reactive-consumer-example/src/main/java/com/alibaba/cloud/consumer/reactive/util/ReactiveConsumerUtil.java
@@ -0,0 +1,28 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.cloud.consumer.reactive.util;
+
+/**
+ * @author yuluo
+ * @author 1481556636@qq.com
+ */
+public final class ReactiveConsumerUtil {
+
+	private ReactiveConsumerUtil() {
+	}
+
+}
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/configuration/RestTemplateConfiguration.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/configuration/RestTemplateConfiguration.java
index 7581a923..e38e387a 100644
--- a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/configuration/RestTemplateConfiguration.java
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/configuration/RestTemplateConfiguration.java
@@ -16,9 +16,13 @@
 
 package com.alibaba.cloud.consumer.resttemplate.configuration;
 
+import com.alibaba.cloud.consumer.resttemplate.interceptor.RestRequestInterceptor;
+
 import org.springframework.cloud.client.loadbalancer.LoadBalanced;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.http.client.BufferingClientHttpRequestFactory;
+import org.springframework.http.client.SimpleClientHttpRequestFactory;
 import org.springframework.web.client.RestTemplate;
 
 /**
@@ -33,7 +37,15 @@ public class RestTemplateConfiguration {
 	@LoadBalanced
 	public RestTemplate restTemplate() {
 
-		return new RestTemplate();
+		// Resolve an issue where the response stream can only be read once.
+		SimpleClientHttpRequestFactory requestFactory = new SimpleClientHttpRequestFactory();
+		BufferingClientHttpRequestFactory simpleBufferingClientHttpRequest = new BufferingClientHttpRequestFactory(
+				requestFactory);
+
+		RestTemplate restTemplate = new RestTemplate(simpleBufferingClientHttpRequest);
+		restTemplate.getInterceptors().add(new RestRequestInterceptor());
+
+		return restTemplate;
 	}
 
 }
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/constant/RestConsumerConstants.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/constant/RestConsumerConstants.java
new file mode 100644
index 00000000..95168793
--- /dev/null
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/constant/RestConsumerConstants.java
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.cloud.consumer.resttemplate.constant;
+
+/**
+ * @author yuluo
+ * @author 1481556636@qq.com
+ */
+
+public final class RestConsumerConstants {
+
+	private RestConsumerConstants() {
+	}
+
+	/**
+	 * Application name.
+	 */
+	public static final String APPLICATION_NAME = "routing-rest-consumer";
+
+}
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/controller/ConsumerRestTemplateExampleController.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/controller/ConsumerRestTemplateExampleController.java
index b92a42d4..08d35053 100644
--- a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/controller/ConsumerRestTemplateExampleController.java
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/controller/ConsumerRestTemplateExampleController.java
@@ -17,7 +17,10 @@
 package com.alibaba.cloud.consumer.resttemplate.controller;
 
 import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import com.alibaba.cloud.commons.governance.event.RoutingDataChangedEvent;
 import com.alibaba.cloud.commons.governance.routing.MatchService;
@@ -26,11 +29,15 @@ import com.alibaba.cloud.commons.governance.routing.UnifiedRoutingDataStructure;
 import com.alibaba.cloud.commons.governance.routing.rule.HeaderRoutingRule;
 import com.alibaba.cloud.commons.governance.routing.rule.Rule;
 import com.alibaba.cloud.commons.governance.routing.rule.UrlRoutingRule;
+import com.alibaba.cloud.consumer.resttemplate.entity.NodeInfo;
+import com.alibaba.cloud.consumer.resttemplate.interceptor.RestRequestInterceptor;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import org.springframework.beans.BeansException;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.cloud.client.ServiceInstance;
+import org.springframework.cloud.client.discovery.DiscoveryClient;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.ApplicationContextAware;
 import org.springframework.web.bind.annotation.GetMapping;
@@ -56,6 +63,12 @@ public class ConsumerRestTemplateExampleController implements ApplicationContext
 	@Autowired
 	private RestTemplate restTemplate;
 
+	@Autowired
+	private DiscoveryClient discoveryClient;
+
+	@Autowired
+	private RestRequestInterceptor restRequestInterceptor;
+
 	@Override
 	public void setApplicationContext(ApplicationContext applicationContext)
 			throws BeansException {
@@ -63,6 +76,43 @@ public class ConsumerRestTemplateExampleController implements ApplicationContext
 		this.applicationContext = applicationContext;
 	}
 
+	@GetMapping("/nodeInfo")
+	public Map<String, List<Map<String, List<String>>>> getNodeInfo() {
+
+		String serverPort = restRequestInterceptor.getServerPort();
+
+		List<String> services = discoveryClient.getServices();
+		for (String service : services) {
+			List<ServiceInstance> instances = discoveryClient.getInstances(service);
+			for (ServiceInstance instance : instances) {
+				if ((instance.getPort() + "").equals(serverPort)) {
+					String server = instance.getServiceId();
+					Map<String, String> metadata = instance.getMetadata();
+					List<Map<String, List<String>>> metaList = new ArrayList<>();
+					Map<String, List<String>> nmap = new HashMap<>();
+					for (String s : metadata.keySet()) {
+						nmap.put(s, Collections.singletonList(metadata.get(s)));
+					}
+					nmap.put("port", Collections.singletonList(instance.getPort() + ""));
+					nmap.put("host", Collections.singletonList(instance.getHost()));
+					nmap.put("instanceId",
+							Collections.singletonList(instance.getInstanceId()));
+					metaList.add(nmap);
+
+					NodeInfo.set(server, metaList);
+				}
+			}
+		}
+
+		return NodeInfo.getNodeIno();
+	}
+
+	@GetMapping("/service")
+	public Object getServices() {
+
+		return discoveryClient.getServices();
+	}
+
 	@GetMapping("/router-test")
 	public String notFound() {
 
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/entity/NodeInfo.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/entity/NodeInfo.java
new file mode 100644
index 00000000..39031e1f
--- /dev/null
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/entity/NodeInfo.java
@@ -0,0 +1,53 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.cloud.consumer.resttemplate.entity;
+
+import java.util.List;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+
+import org.springframework.stereotype.Component;
+
+/**
+ * @author yuluo
+ * @author 1481556636@qq.com
+ */
+
+@Component
+public final class NodeInfo {
+
+	private static Map<String, List<Map<String, List<String>>>> nodeIno = new ConcurrentHashMap<>();
+
+	private NodeInfo() {
+	}
+
+	public static void set(String var1, List<Map<String, List<String>>> var2) {
+
+		nodeIno.put(var1, var2);
+	}
+
+	public static List<Map<String, List<String>>> get(String var) {
+
+		return nodeIno.get(var);
+	}
+
+	public static Map<String, List<Map<String, List<String>>>> getNodeIno() {
+
+		return nodeIno;
+	}
+
+}
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/interceptor/RestRequestInterceptor.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/interceptor/RestRequestInterceptor.java
new file mode 100644
index 00000000..867cec4f
--- /dev/null
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/interceptor/RestRequestInterceptor.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.cloud.consumer.resttemplate.interceptor;
+
+import java.io.IOException;
+import java.io.InputStream;
+
+import com.alibaba.cloud.consumer.resttemplate.util.RestConsumerUtil;
+
+import org.springframework.http.HttpRequest;
+import org.springframework.http.client.ClientHttpRequestExecution;
+import org.springframework.http.client.ClientHttpRequestInterceptor;
+import org.springframework.http.client.ClientHttpResponse;
+import org.springframework.stereotype.Component;
+
+/**
+ * @author yuluo
+ * @author 1481556636@qq.com
+ */
+
+@Component
+public class RestRequestInterceptor implements ClientHttpRequestInterceptor {
+
+	private static String serverPort = null;
+
+	@Override
+	public ClientHttpResponse intercept(HttpRequest request, byte[] body,
+			ClientHttpRequestExecution execution) throws IOException {
+
+		ClientHttpResponse response = execution.execute(request, body);
+		InputStream responseBody = response.getBody();
+
+		serverPort = RestConsumerUtil.getResult(responseBody).substring(21, 26);
+
+		return response;
+	}
+
+	public String getServerPort() {
+
+		return serverPort;
+	}
+
+}
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/util/RestConsumerUtil.java b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/util/RestConsumerUtil.java
new file mode 100644
index 00000000..c362f9d0
--- /dev/null
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/java/com/alibaba/cloud/consumer/resttemplate/util/RestConsumerUtil.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2013-2023 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.cloud.consumer.resttemplate.util;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.UnsupportedEncodingException;
+
+/**
+ * @author yuluo
+ * @author 1481556636@qq.com
+ */
+public final class RestConsumerUtil {
+
+	public static String getResult(InputStream inputStream) {
+
+		InputStreamReader isr = null;
+		try {
+			isr = new InputStreamReader(inputStream, "UTF-8");
+		}
+		catch (UnsupportedEncodingException e) {
+			throw new RuntimeException(e);
+		}
+		BufferedReader bf = new BufferedReader(isr);
+		StringBuilder results = new StringBuilder();
+		String newLine = "";
+		while (true) {
+			try {
+				newLine = bf.readLine();
+				if (newLine == null) {
+					break;
+				}
+			}
+			catch (IOException e) {
+				throw new RuntimeException(e);
+			}
+			results.append(newLine).append("\n");
+		}
+
+		return results.toString();
+	}
+
+}
diff --git a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/resources/application.properties b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/resources/application.properties
index 6c5387a4..2f85df2b 100644
--- a/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/resources/application.properties
+++ b/spring-cloud-alibaba-examples/governance-example/label-routing-example/routing-consumer-example/routing-rest-consumer-example/src/main/resources/application.properties
@@ -12,4 +12,3 @@ spring.cloud.nacos.password=nacos
 # Regional affinity routing configuration
 spring.cloud.governance.routing.region=qa
 spring.cloud.governance.routing.zone=zone1
-
