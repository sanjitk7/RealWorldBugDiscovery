diff --git a/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/event/BroadcastRuleConfigurationEventBuilder.java b/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/event/BroadcastRuleConfigurationEventBuilder.java
index 8c9f0c089d0..b171b5a0a9a 100644
--- a/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/event/BroadcastRuleConfigurationEventBuilder.java
+++ b/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/event/BroadcastRuleConfigurationEventBuilder.java
@@ -59,9 +59,7 @@ public final class BroadcastRuleConfigurationEventBuilder implements RuleConfigu
     }
     
     private BroadcastRuleConfiguration swapBroadcastTableRuleConfig(final String yamlContext) {
-        BroadcastRuleConfiguration result = new BroadcastRuleConfiguration();
         YamlBroadcastRuleConfiguration yamlBroadcastRuleConfiguration = YamlEngine.unmarshal(yamlContext, YamlBroadcastRuleConfiguration.class);
-        result.setTables(yamlBroadcastRuleConfiguration.getTables());
-        return result;
+        return new BroadcastRuleConfiguration(yamlBroadcastRuleConfiguration.getTables());
     }
 }
diff --git a/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/subscriber/BroadcastConfigurationSubscriber.java b/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/subscriber/BroadcastConfigurationSubscriber.java
index d125662bab2..ec41c13a2bf 100644
--- a/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/subscriber/BroadcastConfigurationSubscriber.java
+++ b/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/subscriber/BroadcastConfigurationSubscriber.java
@@ -63,10 +63,10 @@ public final class BroadcastConfigurationSubscriber implements RuleConfiguration
         BroadcastRuleConfiguration config;
         if (rule.isPresent()) {
             config = rule.get().getConfiguration();
-            config.setTables(needToAddedConfig.getTables());
+            config.getTables().clear();
+            config.getTables().addAll(needToAddedConfig.getTables());
         } else {
-            config = new BroadcastRuleConfiguration();
-            config.setTables(needToAddedConfig.getTables());
+            config = new BroadcastRuleConfiguration(needToAddedConfig.getTables());
         }
         instanceContext.getEventBusContext().post(new DatabaseRuleConfigurationChangedEvent(event.getDatabaseName(), config));
     }
@@ -81,7 +81,8 @@ public final class BroadcastConfigurationSubscriber implements RuleConfiguration
         ShardingSphereDatabase database = databases.get(event.getDatabaseName());
         BroadcastRuleConfiguration needToAlteredConfig = event.getConfig();
         BroadcastRuleConfiguration config = database.getRuleMetaData().getSingleRule(BroadcastRule.class).getConfiguration();
-        config.setTables(needToAlteredConfig.getTables());
+        config.getTables().clear();
+        config.getTables().addAll(needToAlteredConfig.getTables());
         instanceContext.getEventBusContext().post(new DatabaseRuleConfigurationChangedEvent(event.getDatabaseName(), config));
     }
     
@@ -94,7 +95,7 @@ public final class BroadcastConfigurationSubscriber implements RuleConfiguration
     public synchronized void renew(final DeleteBroadcastConfigurationEvent event) {
         ShardingSphereDatabase database = databases.get(event.getDatabaseName());
         BroadcastRuleConfiguration config = database.getRuleMetaData().getSingleRule(BroadcastRule.class).getConfiguration();
-        config.setTables(null);
+        config.getTables().clear();
         instanceContext.getEventBusContext().post(new DatabaseRuleConfigurationChangedEvent(event.getDatabaseName(), config));
     }
 }
diff --git a/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/yaml/swapper/NewYamlBroadcastRuleConfigurationSwapper.java b/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/yaml/swapper/NewYamlBroadcastRuleConfigurationSwapper.java
index 5a6683c72df..4dc963663e1 100644
--- a/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/yaml/swapper/NewYamlBroadcastRuleConfigurationSwapper.java
+++ b/features/broadcast/core/src/main/java/org/apache/shardingsphere/broadcast/yaml/swapper/NewYamlBroadcastRuleConfigurationSwapper.java
@@ -46,12 +46,11 @@ public final class NewYamlBroadcastRuleConfigurationSwapper implements NewYamlRu
     
     @Override
     public BroadcastRuleConfiguration swapToObject(final Collection<YamlDataNode> dataNodes) {
-        BroadcastRuleConfiguration result = new BroadcastRuleConfiguration();
         if (!dataNodes.isEmpty()) {
             YamlBroadcastRuleConfiguration yamlBroadcastRuleConfiguration = YamlEngine.unmarshal(dataNodes.iterator().next().getValue(), YamlBroadcastRuleConfiguration.class);
-            result.setTables(yamlBroadcastRuleConfiguration.getTables());
+            return new BroadcastRuleConfiguration(yamlBroadcastRuleConfiguration.getTables());
         }
-        return result;
+        return new BroadcastRuleConfiguration(Collections.emptyList());
     }
     
     @Override
