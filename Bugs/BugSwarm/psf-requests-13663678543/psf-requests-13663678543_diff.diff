diff --git a/requests/sessions.py b/requests/sessions.py
index dbcf2a7b..df35bfe2 100644
--- a/requests/sessions.py
+++ b/requests/sessions.py
@@ -326,7 +326,7 @@ class SessionRedirectMixin:
 
         # urllib3 handles proxy authorization for us in the standard adapter.
         # Avoid appending this to TLS tunneled requests where it may be leaked.
-        if not scheme.startswith('https') and username and password:
+        if not scheme.startswith("https") and username and password:
             headers["Proxy-Authorization"] = _basic_auth_str(username, password)
 
         return new_proxies
diff --git a/tests/test_requests.py b/tests/test_requests.py
index b420c44d..5a01f5fb 100644
--- a/tests/test_requests.py
+++ b/tests/test_requests.py
@@ -647,25 +647,26 @@ class TestRequests:
 
         assert sent_headers.get("Proxy-Authorization") == proxy_auth_value
 
-
     @pytest.mark.parametrize(
         "url,has_proxy_auth",
         (
-            ('http://example.com', True),
-            ('https://example.com', False),
+            ("http://example.com", True),
+            ("https://example.com", False),
         ),
     )
-    def test_proxy_authorization_not_appended_to_https_request(self, url, has_proxy_auth):
+    def test_proxy_authorization_not_appended_to_https_request(
+        self, url, has_proxy_auth
+    ):
         session = requests.Session()
         proxies = {
-            'http': 'http://test:pass@localhost:8080',
-            'https': 'http://test:pass@localhost:8090',
+            "http": "http://test:pass@localhost:8080",
+            "https": "http://test:pass@localhost:8090",
         }
-        req = requests.Request('GET', url)
+        req = requests.Request("GET", url)
         prep = req.prepare()
         session.rebuild_proxies(prep, proxies)
 
-        assert ('Proxy-Authorization' in prep.headers) is has_proxy_auth
+        assert ("Proxy-Authorization" in prep.headers) is has_proxy_auth
 
     def test_basicauth_with_netrc(self, httpbin):
         auth = ("user", "pass")
