diff --git a/environ/environ.py b/environ/environ.py
index 051063a..f42ebd1 100644
--- a/environ/environ.py
+++ b/environ/environ.py
@@ -937,17 +937,13 @@ class Env:
                 # val:  abc#def
                 key, val = m1.group(1), m1.group(2)
 
-                # Look for value in quotes
+                # A: Look for value in single quotes
+                m2 = re.match(r"\A'(.*)'\Z", val)
+
+                # B: Ignore post-# comments (outside quotes):
+                # Something like ['val'  # comment] becomes ['val'].
                 if parse_comments:
-                    # A.
-                    # Ignore post-# comments (outside quotes):
-                    # The "KEY='val'  # comment" line becomes
-                    # "KEY='val'"
                     m2 = re.match(r"\A\s*'(?<!\\)(.*)'\s*(#.*\s*)?\Z", val)
-                else:
-                    # B.
-                    # Default behavior: Look for value in quotes
-                    m2 = re.match(r"\A'(.*)'\Z", val)
 
                 if m2:  # Suitable for A and B
                     val = m2.group(1)
@@ -957,10 +953,13 @@ class Env:
                     m2a = re.match(r"\A(.*?)(#.*\s*)?\Z", val)
                     if m2a:
                         val = m2a.group(1)
+
+                # C: Look for value in double quotes
                 m3 = re.match(r'\A"(.*)"\Z', val)
                 if m3:
                     val = re.sub(r'\\(.)', _keep_escaped_format_characters,
                                  m3.group(1))
+
                 overrides[key] = str(val)
             elif not line or line.startswith('#'):
                 # ignore warnings for empty line-breaks or comments
diff --git a/tests/test_env.py b/tests/test_env.py
index 0b105f5..6fa0fc0 100644
--- a/tests/test_env.py
+++ b/tests/test_env.py
@@ -8,7 +8,8 @@
 
 import os
 from urllib.parse import quote
-
+import tempfile
+import os
 import pytest
 
 from environ import Env, Path
@@ -21,6 +22,32 @@ from .asserts import assert_type_and_value
 from .fixtures import FakeEnv
 
 
+def test_parse_comments():
+    old_environ = os.environ
+
+    with tempfile.TemporaryDirectory() as temp_dir:
+        env_path = os.path.join(temp_dir, '.env')
+
+        test_data = [
+            "BOOL_TRUE_STRING_LIKE_BOOL_WITH_COMMENT='True' # comment",
+            "BOOL_TRUE_BOOL_WITH_COMMENT=True # comment",
+        ]
+
+        with open(env_path, 'w') as f:
+            f.writelines(test_data)
+            f.flush()
+
+            env = Env()
+
+            Env.ENVIRON = {}
+            env.read_env(env_path, parse_comments=True)
+
+            assert_type_and_value(bool, True, env.bool('BOOL_TRUE_STRING_LIKE_BOOL_WITH_COMMENT'))
+            assert_type_and_value(bool, True, env('BOOL_TRUE_STRING_LIKE_BOOL_WITH_COMMENT', cast=bool))
+
+    os.environ = old_environ
+
+
 class TestEnv:
     def setup_method(self, method):
         """
@@ -112,10 +139,8 @@ class TestEnv:
         [
             (True, 'BOOL_TRUE_STRING_LIKE_INT'),
             (True, 'BOOL_TRUE_STRING_LIKE_BOOL'),
-            (True, 'BOOL_TRUE_STRING_LIKE_BOOL_WITH_COMMENT'),
             (True, 'BOOL_TRUE_INT'),
             (True, 'BOOL_TRUE_BOOL'),
-            (True, 'BOOL_TRUE_BOOL_WITH_COMMENT'),
             (True, 'BOOL_TRUE_STRING_1'),
             (True, 'BOOL_TRUE_STRING_2'),
             (True, 'BOOL_TRUE_STRING_3'),
@@ -341,8 +366,6 @@ class TestEnv:
 
     def test_smart_cast(self):
         assert self.env.get_value('STR_VAR', default='string') == 'bar'
-        assert self.env.get_value('STR_QUOTED_IGNORE_COMMENT', default='string') == 'foo'
-        assert self.env.get_value('STR_QUOTED_INCLUDE_HASH', default='string') == 'foo # with hash'
         assert self.env.get_value('BOOL_TRUE_STRING_LIKE_INT', default=True)
         assert not self.env.get_value(
             'BOOL_FALSE_STRING_LIKE_INT',
diff --git a/tests/test_env.txt b/tests/test_env.txt
index d5480bf..39ab896 100644
--- a/tests/test_env.txt
+++ b/tests/test_env.txt
@@ -25,8 +25,6 @@ BOOL_TRUE_STRING_3='yes'
 BOOL_TRUE_STRING_4='y'
 BOOL_TRUE_STRING_5='true'
 BOOL_TRUE_BOOL=True
-BOOL_TRUE_STRING_LIKE_BOOL_WITH_COMMENT='True' # comment
-BOOL_TRUE_BOOL_WITH_COMMENT=True # comment
 BOOL_FALSE_STRING_LIKE_INT='0'
 BOOL_FALSE_INT=0
 BOOL_FALSE_STRING_LIKE_BOOL='False'
@@ -47,8 +45,6 @@ INT_VAR=42
 STR_LIST_WITH_SPACES= foo,  spaces
 STR_LIST_WITH_SPACES_QUOTED=' foo','  quoted'
 STR_VAR=bar
-STR_QUOTED_IGNORE_COMMENT= 'foo' # comment
-STR_QUOTED_INCLUDE_HASH='foo # with hash' # not comment
 MULTILINE_STR_VAR=foo\nbar
 MULTILINE_QUOTED_STR_VAR="---BEGIN---\r\n---END---"
 MULTILINE_ESCAPED_STR_VAR=---BEGIN---\\n---END---
