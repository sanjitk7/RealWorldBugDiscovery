diff --git a/docs/public-api/tools/flowable-rest-asciidoc/pom.xml b/docs/public-api/tools/flowable-rest-asciidoc/pom.xml
index 6e1f6a97f0..ac245836cf 100644
--- a/docs/public-api/tools/flowable-rest-asciidoc/pom.xml
+++ b/docs/public-api/tools/flowable-rest-asciidoc/pom.xml
@@ -148,6 +148,7 @@
                 </executions>
             </plugin>
             <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-antrun-plugin</artifactId>
                 <version>1.8</version>
                 <executions>
diff --git a/modules/flowable-app-engine/pom.xml b/modules/flowable-app-engine/pom.xml
index b788b56fd9..758a66c8e3 100644
--- a/modules/flowable-app-engine/pom.xml
+++ b/modules/flowable-app-engine/pom.xml
@@ -238,10 +238,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-copy-logging</id>
@@ -301,10 +299,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -358,10 +354,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -415,10 +409,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
diff --git a/modules/flowable-cmmn-engine/pom.xml b/modules/flowable-cmmn-engine/pom.xml
index 0da26ac068..25f3148bba 100644
--- a/modules/flowable-cmmn-engine/pom.xml
+++ b/modules/flowable-cmmn-engine/pom.xml
@@ -312,10 +312,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-copy-logging</id>
@@ -375,10 +373,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -432,10 +428,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -489,10 +483,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -647,8 +639,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
diff --git a/modules/flowable-cmmn-engine/src/main/java/org/flowable/cmmn/engine/impl/callback/DefaultInternalCmmnJobManager.java b/modules/flowable-cmmn-engine/src/main/java/org/flowable/cmmn/engine/impl/callback/DefaultInternalCmmnJobManager.java
index 85680dd40b..2ad8eaf9c4 100644
--- a/modules/flowable-cmmn-engine/src/main/java/org/flowable/cmmn/engine/impl/callback/DefaultInternalCmmnJobManager.java
+++ b/modules/flowable-cmmn-engine/src/main/java/org/flowable/cmmn/engine/impl/callback/DefaultInternalCmmnJobManager.java
@@ -68,13 +68,14 @@ public class DefaultInternalCmmnJobManager extends ScopeAwareInternalJobManager
     @Override
     protected void lockJobScopeInternal(Job job) {
         CaseInstanceEntityManager caseInstanceEntityManager = cmmnEngineConfiguration.getCaseInstanceEntityManager();
-        String lockOwner;
-        Date lockExpirationTime;
+        String lockOwner = null;
+        Date lockExpirationTime = null;
 
         if (job instanceof JobInfoEntity) {
             lockOwner = ((JobInfoEntity) job).getLockOwner();
             lockExpirationTime = ((JobInfoEntity) job).getLockExpirationTime();
-        } else {
+        }
+        if (lockOwner == null || lockExpirationTime == null) {
             int lockMillis = cmmnEngineConfiguration.getAsyncExecutor().getAsyncJobLockTimeInMillis();
             GregorianCalendar lockCal = new GregorianCalendar();
             lockCal.setTime(cmmnEngineConfiguration.getClock().getCurrentTime());
diff --git a/modules/flowable-dmn-engine/pom.xml b/modules/flowable-dmn-engine/pom.xml
index ba9ab7e7da..55b63b32a1 100755
--- a/modules/flowable-dmn-engine/pom.xml
+++ b/modules/flowable-dmn-engine/pom.xml
@@ -211,10 +211,8 @@
             <build>
                 <plugins>
                     <plugin>
+						<groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>error-logging</id>
@@ -273,10 +271,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<!-- only worked with this version, there might be a bug with antrun 
-							see http://jira.codehaus.org/browse/MANTRUN-109 -->
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
@@ -325,10 +321,8 @@
             <build>
                 <plugins>
                     <plugin>
+						<groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be a bug with antrun 
-                            see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -377,10 +371,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<!-- only worked with this version, there might be a bug with antrun 
-							see http://jira.codehaus.org/browse/MANTRUN-109 -->
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
diff --git a/modules/flowable-engine/pom.xml b/modules/flowable-engine/pom.xml
index 6259eb74f3..cf314b18f3 100755
--- a/modules/flowable-engine/pom.xml
+++ b/modules/flowable-engine/pom.xml
@@ -479,10 +479,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be 
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -536,10 +534,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be 
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -593,10 +589,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be 
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -656,9 +650,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -718,10 +711,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be 
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -781,10 +772,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be 
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -818,10 +807,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be 
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>configExecution</id>
@@ -890,10 +877,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be 
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>configExecution</id>
@@ -966,8 +951,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -1013,10 +998,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be 
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -1085,10 +1068,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be 
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -1157,8 +1138,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -1205,8 +1186,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -1266,8 +1247,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -1330,8 +1311,8 @@
                         </configuration>
                     </plugin>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -1396,8 +1377,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -1580,10 +1561,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be 
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-copy-logging</id>
@@ -1620,8 +1599,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>change config</id>
diff --git a/modules/flowable-engine/src/main/java/org/flowable/engine/impl/cfg/DefaultInternalJobManager.java b/modules/flowable-engine/src/main/java/org/flowable/engine/impl/cfg/DefaultInternalJobManager.java
index 0033e23267..8fdb45a32c 100644
--- a/modules/flowable-engine/src/main/java/org/flowable/engine/impl/cfg/DefaultInternalJobManager.java
+++ b/modules/flowable-engine/src/main/java/org/flowable/engine/impl/cfg/DefaultInternalJobManager.java
@@ -148,13 +148,15 @@ public class DefaultInternalJobManager extends ScopeAwareInternalJobManager {
         ExecutionEntityManager executionEntityManager = getExecutionEntityManager();
         ExecutionEntity execution = executionEntityManager.findById(job.getExecutionId());
         if (execution != null) {
-            String lockOwner;
-            Date lockExpirationTime;
+            String lockOwner = null;
+            Date lockExpirationTime = null;
 
             if (job instanceof JobInfoEntity) {
                 lockOwner = ((JobInfoEntity) job).getLockOwner();
                 lockExpirationTime = ((JobInfoEntity) job).getLockExpirationTime();
-            } else {
+            }
+
+            if (lockOwner == null || lockExpirationTime == null) {
                 int lockMillis = processEngineConfiguration.getAsyncExecutor().getAsyncJobLockTimeInMillis();
                 GregorianCalendar lockCal = new GregorianCalendar();
                 lockCal.setTime(processEngineConfiguration.getClock().getCurrentTime());
diff --git a/modules/flowable-engine/src/test/java/org/flowable/engine/test/bpmn/async/AsyncExclusiveJobsTest.java b/modules/flowable-engine/src/test/java/org/flowable/engine/test/bpmn/async/AsyncExclusiveJobsTest.java
index 7d030dc321..9ced07a67f 100644
--- a/modules/flowable-engine/src/test/java/org/flowable/engine/test/bpmn/async/AsyncExclusiveJobsTest.java
+++ b/modules/flowable-engine/src/test/java/org/flowable/engine/test/bpmn/async/AsyncExclusiveJobsTest.java
@@ -18,7 +18,10 @@ import org.flowable.common.engine.impl.history.HistoryLevel;
 import org.flowable.engine.history.HistoricActivityInstance;
 import org.flowable.engine.impl.test.HistoryTestHelper;
 import org.flowable.engine.impl.test.PluggableFlowableTestCase;
+import org.flowable.engine.runtime.ProcessInstance;
 import org.flowable.engine.test.Deployment;
+import org.flowable.job.service.impl.asyncexecutor.AsyncJobExecutorConfiguration;
+import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.condition.DisabledIfSystemProperty;
 
@@ -57,4 +60,35 @@ public class AsyncExclusiveJobsTest extends PluggableFlowableTestCase {
 
     }
 
+    @Test
+    @Deployment
+    public void testParallelGatewayExclusiveJobs() {
+        ProcessInstance processInstance = runtimeService.createProcessInstanceBuilder()
+                .processDefinitionKey("parallelExclusiveServiceTasks")
+                .variable("counter", 0L)
+                .start();
+
+        assertThat(runtimeService.getVariable(processInstance.getId(), "counter"))
+                .isEqualTo(0L);
+
+        AsyncJobExecutorConfiguration asyncExecutorConfiguration = processEngineConfiguration.getAsyncExecutorConfiguration();
+        boolean originalGlobalAcquireLockEnabled = asyncExecutorConfiguration.isGlobalAcquireLockEnabled();
+        CollectingAsyncRunnableExecutionExceptionHandler executionExceptionHandler = new CollectingAsyncRunnableExecutionExceptionHandler();
+        try {
+            asyncExecutorConfiguration.setGlobalAcquireLockEnabled(true);
+            processEngineConfiguration.getJobServiceConfiguration()
+                    .getAsyncRunnableExecutionExceptionHandlers()
+                    .add(0, executionExceptionHandler);
+            waitForJobExecutorToProcessAllJobs(15000, 200);
+        } finally {
+            asyncExecutorConfiguration.setGlobalAcquireLockEnabled(originalGlobalAcquireLockEnabled);
+            processEngineConfiguration.getJobServiceConfiguration()
+                    .getAsyncRunnableExecutionExceptionHandlers()
+                    .remove(executionExceptionHandler);
+        }
+
+        assertThat(executionExceptionHandler.getExceptions()).isEmpty();
+        assertThat(runtimeService.getVariable(processInstance.getId(), "counter"))
+                .isEqualTo(3L);
+    }
 }
diff --git a/modules/flowable-engine/src/test/java/org/flowable/engine/test/bpmn/async/CollectingAsyncRunnableExecutionExceptionHandler.java b/modules/flowable-engine/src/test/java/org/flowable/engine/test/bpmn/async/CollectingAsyncRunnableExecutionExceptionHandler.java
new file mode 100644
index 0000000000..b4ce7e761d
--- /dev/null
+++ b/modules/flowable-engine/src/test/java/org/flowable/engine/test/bpmn/async/CollectingAsyncRunnableExecutionExceptionHandler.java
@@ -0,0 +1,38 @@
+/* Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.flowable.engine.test.bpmn.async;
+
+import java.util.ArrayList;
+import java.util.Collection;
+
+import org.flowable.job.api.JobInfo;
+import org.flowable.job.service.JobServiceConfiguration;
+import org.flowable.job.service.impl.asyncexecutor.AsyncRunnableExecutionExceptionHandler;
+
+/**
+ * @author Filip Hrisafov
+ */
+public class CollectingAsyncRunnableExecutionExceptionHandler implements AsyncRunnableExecutionExceptionHandler {
+
+    protected final Collection<Throwable> exceptions = new ArrayList<>();
+
+    @Override
+    public boolean handleException(JobServiceConfiguration jobServiceConfiguration, JobInfo job, Throwable exception) {
+        exceptions.add(exception);
+        return false;
+    }
+
+    public Collection<Throwable> getExceptions() {
+        return exceptions;
+    }
+}
diff --git a/modules/flowable-engine/src/test/java/org/flowable/engine/test/jobexecutor/BulkUpdateJobLockTest.java b/modules/flowable-engine/src/test/java/org/flowable/engine/test/jobexecutor/BulkUpdateJobLockTest.java
index 2cfcb98a9d..425c21ffc2 100644
--- a/modules/flowable-engine/src/test/java/org/flowable/engine/test/jobexecutor/BulkUpdateJobLockTest.java
+++ b/modules/flowable-engine/src/test/java/org/flowable/engine/test/jobexecutor/BulkUpdateJobLockTest.java
@@ -157,7 +157,7 @@ public class BulkUpdateJobLockTest extends JobExecutorTestCase  {
             return null;
         });
 
-        for (Job job : managementService.createJobQuery().list()) {
+        for (HistoryJob job : managementService.createHistoryJobQuery().list()) {
             assertThat(((HistoryJobEntity) job).getLockOwner()).isEqualTo("test");
             assertThat(((HistoryJobEntity) job).getLockExpirationTime()).isNotNull();
         }
diff --git a/modules/flowable-engine/src/test/resources/org/flowable/engine/test/bpmn/async/AsyncExclusiveJobsTest.testParallelGatewayExclusiveJobs.bpmn20.xml b/modules/flowable-engine/src/test/resources/org/flowable/engine/test/bpmn/async/AsyncExclusiveJobsTest.testParallelGatewayExclusiveJobs.bpmn20.xml
new file mode 100755
index 0000000000..f483f0133b
--- /dev/null
+++ b/modules/flowable-engine/src/test/resources/org/flowable/engine/test/bpmn/async/AsyncExclusiveJobsTest.testParallelGatewayExclusiveJobs.bpmn20.xml
@@ -0,0 +1,186 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:flowable="http://flowable.org/bpmn"
+             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC"
+             xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" xmlns:design="http://flowable.org/design" typeLanguage="http://www.w3.org/2001/XMLSchema"
+             expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://flowable.org/test" design:palette="flowable-engage-process-palette"
+             xsi:schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd">
+    <process id="parallelExclusiveServiceTasks" name="Parallel Exclusive Service Tasks" isExecutable="true" flowable:candidateStarterGroups="flowableUser">
+        <extensionElements>
+            <design:stencilid><![CDATA[BPMNDiagram]]></design:stencilid>
+            <design:creationdate><![CDATA[2023-11-13T15:20:20.369Z]]></design:creationdate>
+            <design:modificationdate><![CDATA[2023-11-13T15:29:47.381Z]]></design:modificationdate>
+        </extensionElements>
+        <scriptTask id="bpmnTask_3" name="Script Task" scriptFormat="groovy" flowable:async="true" flowable:exclusive="true">
+            <script>
+                <![CDATA[
+                Thread.sleep(500);
+                execution.setVariable("counter", counter + 1);]]>
+            </script>
+        </scriptTask>
+        <scriptTask id="bpmnTask_5" name="Script Task" scriptFormat="groovy" flowable:async="true" flowable:exclusive="true">
+            <script>
+                <![CDATA[
+                Thread.sleep(500);
+                execution.setVariable("counter", counter + 1);]]>
+            </script>
+        </scriptTask>
+        <scriptTask id="bpmnTask_7" name="Script Task" scriptFormat="groovy" flowable:async="true" flowable:exclusive="true">
+            <script>
+                <![CDATA[
+                Thread.sleep(500);
+                execution.setVariable("counter", counter + 1);]]>
+            </script>
+        </scriptTask>
+        <userTask id="bpmnTask_13" name="User task" flowable:assignee="${initiator}" flowable:formFieldValidation="false">
+            <extensionElements>
+                <flowable:task-candidates-type><![CDATA[all]]></flowable:task-candidates-type>
+                <design:stencilid><![CDATA[FormTask]]></design:stencilid>
+                <design:stencilsuperid><![CDATA[Task]]></design:stencilsuperid>
+            </extensionElements>
+        </userTask>
+        <parallelGateway id="bpmnGateway_1">
+            <extensionElements>
+                <design:stencilid><![CDATA[ParallelGateway]]></design:stencilid>
+            </extensionElements>
+        </parallelGateway>
+        <parallelGateway id="bpmnGateway_9">
+            <extensionElements>
+                <design:stencilid><![CDATA[ParallelGateway]]></design:stencilid>
+            </extensionElements>
+        </parallelGateway>
+        <startEvent id="startnoneevent1" flowable:initiator="initiator" flowable:formFieldValidation="false">
+            <extensionElements>
+                <flowable:work-form-field-validation><![CDATA[false]]></flowable:work-form-field-validation>
+                <design:stencilid><![CDATA[StartNoneEvent]]></design:stencilid>
+            </extensionElements>
+        </startEvent>
+        <endEvent id="bpmnEndEvent_15">
+            <extensionElements>
+                <design:stencilid><![CDATA[EndNoneEvent]]></design:stencilid>
+            </extensionElements>
+        </endEvent>
+        <sequenceFlow id="bpmnSequenceFlow_10" sourceRef="bpmnTask_3" targetRef="bpmnGateway_9">
+            <extensionElements>
+                <design:stencilid><![CDATA[SequenceFlow]]></design:stencilid>
+            </extensionElements>
+        </sequenceFlow>
+        <sequenceFlow id="bpmnSequenceFlow_11" sourceRef="bpmnTask_5" targetRef="bpmnGateway_9">
+            <extensionElements>
+                <design:stencilid><![CDATA[SequenceFlow]]></design:stencilid>
+            </extensionElements>
+        </sequenceFlow>
+        <sequenceFlow id="bpmnSequenceFlow_12" sourceRef="bpmnTask_7" targetRef="bpmnGateway_9">
+            <extensionElements>
+                <design:stencilid><![CDATA[SequenceFlow]]></design:stencilid>
+            </extensionElements>
+        </sequenceFlow>
+        <sequenceFlow id="bpmnSequenceFlow_16" sourceRef="bpmnTask_13" targetRef="bpmnEndEvent_15">
+            <extensionElements>
+                <design:stencilid><![CDATA[SequenceFlow]]></design:stencilid>
+            </extensionElements>
+        </sequenceFlow>
+        <sequenceFlow id="bpmnSequenceFlow_4" sourceRef="bpmnGateway_1" targetRef="bpmnTask_3">
+            <extensionElements>
+                <design:stencilid><![CDATA[SequenceFlow]]></design:stencilid>
+            </extensionElements>
+        </sequenceFlow>
+        <sequenceFlow id="bpmnSequenceFlow_6" sourceRef="bpmnGateway_1" targetRef="bpmnTask_5">
+            <extensionElements>
+                <design:stencilid><![CDATA[SequenceFlow]]></design:stencilid>
+            </extensionElements>
+        </sequenceFlow>
+        <sequenceFlow id="bpmnSequenceFlow_8" sourceRef="bpmnGateway_1" targetRef="bpmnTask_7">
+            <extensionElements>
+                <design:stencilid><![CDATA[SequenceFlow]]></design:stencilid>
+            </extensionElements>
+        </sequenceFlow>
+        <sequenceFlow id="bpmnSequenceFlow_14" sourceRef="bpmnGateway_9" targetRef="bpmnTask_13">
+            <extensionElements>
+                <design:stencilid><![CDATA[SequenceFlow]]></design:stencilid>
+            </extensionElements>
+        </sequenceFlow>
+        <sequenceFlow id="bpmnSequenceFlow_2" sourceRef="startnoneevent1" targetRef="bpmnGateway_1">
+            <extensionElements>
+                <design:stencilid><![CDATA[SequenceFlow]]></design:stencilid>
+            </extensionElements>
+        </sequenceFlow>
+    </process>
+    <bpmndi:BPMNDiagram id="BPMNDiagram_parallelExclusiveServiceTasks">
+        <bpmndi:BPMNPlane bpmnElement="parallelExclusiveServiceTasks" id="BPMNPlane_parallelExclusiveServiceTasks">
+            <bpmndi:BPMNShape bpmnElement="bpmnTask_3" id="BPMNShape_bpmnTask_3">
+                <omgdc:Bounds height="80.0" width="100.0" x="549.0" y="111.0"></omgdc:Bounds>
+            </bpmndi:BPMNShape>
+            <bpmndi:BPMNShape bpmnElement="bpmnTask_5" id="BPMNShape_bpmnTask_5">
+                <omgdc:Bounds height="80.0" width="100.0" x="549.0" y="236.0"></omgdc:Bounds>
+            </bpmndi:BPMNShape>
+            <bpmndi:BPMNShape bpmnElement="bpmnTask_7" id="BPMNShape_bpmnTask_7">
+                <omgdc:Bounds height="80.0" width="100.0" x="549.0" y="371.0"></omgdc:Bounds>
+            </bpmndi:BPMNShape>
+            <bpmndi:BPMNShape bpmnElement="bpmnTask_13" id="BPMNShape_bpmnTask_13">
+                <omgdc:Bounds height="80.0" width="100.0" x="839.0" y="236.0"></omgdc:Bounds>
+            </bpmndi:BPMNShape>
+            <bpmndi:BPMNShape bpmnElement="bpmnGateway_1" id="BPMNShape_bpmnGateway_1">
+                <omgdc:Bounds height="40.0" width="40.0" x="409.0" y="256.0"></omgdc:Bounds>
+            </bpmndi:BPMNShape>
+            <bpmndi:BPMNShape bpmnElement="bpmnGateway_9" id="BPMNShape_bpmnGateway_9">
+                <omgdc:Bounds height="40.0" width="40.0" x="749.0" y="256.0"></omgdc:Bounds>
+            </bpmndi:BPMNShape>
+            <bpmndi:BPMNShape bpmnElement="startnoneevent1" id="BPMNShape_startnoneevent1">
+                <omgdc:Bounds height="30.0" width="30.0" x="317.0" y="261.0"></omgdc:Bounds>
+            </bpmndi:BPMNShape>
+            <bpmndi:BPMNShape bpmnElement="bpmnEndEvent_15" id="BPMNShape_bpmnEndEvent_15">
+                <omgdc:Bounds height="28.0" width="28.0" x="989.0" y="262.0"></omgdc:Bounds>
+            </bpmndi:BPMNShape>
+            <bpmndi:BPMNEdge bpmnElement="bpmnSequenceFlow_11" id="BPMNEdge_bpmnSequenceFlow_11" flowable:sourceDockerX="50.0" flowable:sourceDockerY="40.0"
+                             flowable:targetDockerX="20.0" flowable:targetDockerY="20.0">
+                <omgdi:waypoint x="649.0" y="276.0"></omgdi:waypoint>
+                <omgdi:waypoint x="749.0" y="276.0"></omgdi:waypoint>
+            </bpmndi:BPMNEdge>
+            <bpmndi:BPMNEdge bpmnElement="bpmnSequenceFlow_10" id="BPMNEdge_bpmnSequenceFlow_10" flowable:sourceDockerX="50.0" flowable:sourceDockerY="40.0"
+                             flowable:targetDockerX="20.0" flowable:targetDockerY="20.0">
+                <omgdi:waypoint x="649.0" y="151.0"></omgdi:waypoint>
+                <omgdi:waypoint x="769.0" y="151.0"></omgdi:waypoint>
+                <omgdi:waypoint x="769.0" y="256.0"></omgdi:waypoint>
+            </bpmndi:BPMNEdge>
+            <bpmndi:BPMNEdge bpmnElement="bpmnSequenceFlow_12" id="BPMNEdge_bpmnSequenceFlow_12" flowable:sourceDockerX="50.0" flowable:sourceDockerY="40.0"
+                             flowable:targetDockerX="20.0" flowable:targetDockerY="20.0">
+                <omgdi:waypoint x="649.0" y="411.0"></omgdi:waypoint>
+                <omgdi:waypoint x="769.0" y="411.0"></omgdi:waypoint>
+                <omgdi:waypoint x="769.0" y="296.0"></omgdi:waypoint>
+            </bpmndi:BPMNEdge>
+            <bpmndi:BPMNEdge bpmnElement="bpmnSequenceFlow_14" id="BPMNEdge_bpmnSequenceFlow_14" flowable:sourceDockerX="20.0" flowable:sourceDockerY="20.0"
+                             flowable:targetDockerX="50.0" flowable:targetDockerY="40.0">
+                <omgdi:waypoint x="789.0" y="276.0"></omgdi:waypoint>
+                <omgdi:waypoint x="839.0" y="276.0"></omgdi:waypoint>
+            </bpmndi:BPMNEdge>
+            <bpmndi:BPMNEdge bpmnElement="bpmnSequenceFlow_16" id="BPMNEdge_bpmnSequenceFlow_16" flowable:sourceDockerX="50.0" flowable:sourceDockerY="40.0"
+                             flowable:targetDockerX="14.0" flowable:targetDockerY="14.0">
+                <omgdi:waypoint x="939.0" y="276.0"></omgdi:waypoint>
+                <omgdi:waypoint x="989.0" y="276.0"></omgdi:waypoint>
+            </bpmndi:BPMNEdge>
+            <bpmndi:BPMNEdge bpmnElement="bpmnSequenceFlow_4" id="BPMNEdge_bpmnSequenceFlow_4" flowable:sourceDockerX="20.0" flowable:sourceDockerY="20.0"
+                             flowable:targetDockerX="50.0" flowable:targetDockerY="40.0">
+                <omgdi:waypoint x="429.0" y="256.0"></omgdi:waypoint>
+                <omgdi:waypoint x="429.0" y="151.0"></omgdi:waypoint>
+                <omgdi:waypoint x="549.0" y="151.0"></omgdi:waypoint>
+            </bpmndi:BPMNEdge>
+            <bpmndi:BPMNEdge bpmnElement="bpmnSequenceFlow_2" id="BPMNEdge_bpmnSequenceFlow_2" flowable:sourceDockerX="15.0" flowable:sourceDockerY="15.0"
+                             flowable:targetDockerX="20.0" flowable:targetDockerY="20.0">
+                <omgdi:waypoint x="347.0" y="276.0"></omgdi:waypoint>
+                <omgdi:waypoint x="409.0" y="276.0"></omgdi:waypoint>
+            </bpmndi:BPMNEdge>
+            <bpmndi:BPMNEdge bpmnElement="bpmnSequenceFlow_8" id="BPMNEdge_bpmnSequenceFlow_8" flowable:sourceDockerX="20.0" flowable:sourceDockerY="20.0"
+                             flowable:targetDockerX="50.0" flowable:targetDockerY="40.0">
+                <omgdi:waypoint x="429.0" y="296.0"></omgdi:waypoint>
+                <omgdi:waypoint x="429.0" y="411.0"></omgdi:waypoint>
+                <omgdi:waypoint x="549.0" y="411.0"></omgdi:waypoint>
+            </bpmndi:BPMNEdge>
+            <bpmndi:BPMNEdge bpmnElement="bpmnSequenceFlow_6" id="BPMNEdge_bpmnSequenceFlow_6" flowable:sourceDockerX="20.0" flowable:sourceDockerY="20.0"
+                             flowable:targetDockerX="50.0" flowable:targetDockerY="40.0">
+                <omgdi:waypoint x="449.0" y="276.0"></omgdi:waypoint>
+                <omgdi:waypoint x="549.0" y="276.0"></omgdi:waypoint>
+            </bpmndi:BPMNEdge>
+        </bpmndi:BPMNPlane>
+    </bpmndi:BPMNDiagram>
+</definitions>
\ No newline at end of file
diff --git a/modules/flowable-event-registry-spring/src/test/java/org/flowable/eventregistry/spring/test/kafka/KafkaChannelDefinitionProcessorTest.java b/modules/flowable-event-registry-spring/src/test/java/org/flowable/eventregistry/spring/test/kafka/KafkaChannelDefinitionProcessorTest.java
index 003ca6f84e..8401f8f784 100644
--- a/modules/flowable-event-registry-spring/src/test/java/org/flowable/eventregistry/spring/test/kafka/KafkaChannelDefinitionProcessorTest.java
+++ b/modules/flowable-event-registry-spring/src/test/java/org/flowable/eventregistry/spring/test/kafka/KafkaChannelDefinitionProcessorTest.java
@@ -669,12 +669,50 @@ class KafkaChannelDefinitionProcessorTest {
                 + "}");
         kafkaTemplate.send(producerRecord).get(2, TimeUnit.SECONDS);
 
+        await("receive events")
+                .atMost(Duration.ofSeconds(5))
+                .pollInterval(Duration.ofMillis(200))
+                .untilAsserted(() -> assertThat(testEventConsumer.getEvents())
+                    .extracting(EventRegistryEvent::getType)
+                    .hasSize(1));
+
+        EventInstance event = (EventInstance) testEventConsumer.getEvents().get(0).getEventObject();
+
+        assertThat(event).isNotNull();
+        assertThat(event.getPayloadInstances())
+                .extracting(EventPayloadInstance::getDefinitionName, EventPayloadInstance::getValue)
+                .containsExactlyInAnyOrder(
+                    tuple("name", "Kermit the Frog 1"),
+                    tuple("receivedTopic", "test-customer-multi-partition"),
+                    tuple("receivedPartition", 0),
+                    tuple("receivedOffset", 0L)
+                );
+
         producerRecord = new ProducerRecord<>("test-customer-multi-partition", 1, null, "{"
                 + "    \"eventKey\": \"test\","
                 + "    \"name\": \"Kermit the Frog 2\""
                 + "}");
         kafkaTemplate.send(producerRecord).get(2, TimeUnit.SECONDS);
 
+        await("receive events")
+                .atMost(Duration.ofSeconds(5))
+                .pollInterval(Duration.ofMillis(200))
+                .untilAsserted(() -> assertThat(testEventConsumer.getEvents())
+                    .extracting(EventRegistryEvent::getType)
+                    .hasSize(2));
+
+        event = (EventInstance) testEventConsumer.getEvents().get(1).getEventObject();
+
+        assertThat(event).isNotNull();
+        assertThat(event.getPayloadInstances())
+                .extracting(EventPayloadInstance::getDefinitionName, EventPayloadInstance::getValue)
+                .containsExactlyInAnyOrder(
+                    tuple("name", "Kermit the Frog 2"),
+                    tuple("receivedTopic", "test-customer-multi-partition"),
+                    tuple("receivedPartition", 1),
+                    tuple("receivedOffset", 0L)
+                );
+
         producerRecord = new ProducerRecord<>("test-customer-multi-partition", 0, null, "{"
                 + "    \"eventKey\": \"test\","
                 + "    \"name\": \"Fozzie the Bear 1\""
@@ -688,29 +726,6 @@ class KafkaChannelDefinitionProcessorTest {
                 .extracting(EventRegistryEvent::getType)
                 .hasSize(3));
 
-        EventInstance event = (EventInstance) testEventConsumer.getEvents().get(0).getEventObject();
-
-        assertThat(event).isNotNull();
-        assertThat(event.getPayloadInstances())
-            .extracting(EventPayloadInstance::getDefinitionName, EventPayloadInstance::getValue)
-            .containsExactlyInAnyOrder(
-                tuple("name", "Kermit the Frog 1"),
-                tuple("receivedTopic", "test-customer-multi-partition"),
-                tuple("receivedPartition", 0),
-                tuple("receivedOffset", 0L)
-            );
-
-        event = (EventInstance) testEventConsumer.getEvents().get(1).getEventObject();
-
-        assertThat(event).isNotNull();
-        assertThat(event.getPayloadInstances())
-            .extracting(EventPayloadInstance::getDefinitionName, EventPayloadInstance::getValue)
-            .containsExactlyInAnyOrder(
-                tuple("name", "Kermit the Frog 2"),
-                tuple("receivedTopic", "test-customer-multi-partition"),
-                tuple("receivedPartition", 1),
-                tuple("receivedOffset", 0L)
-            );
 
         event = (EventInstance) testEventConsumer.getEvents().get(2).getEventObject();
 
diff --git a/modules/flowable-event-registry/pom.xml b/modules/flowable-event-registry/pom.xml
index c1b4664c78..8455842fb7 100644
--- a/modules/flowable-event-registry/pom.xml
+++ b/modules/flowable-event-registry/pom.xml
@@ -227,10 +227,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be a bug with antrun 
-                            see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -279,10 +277,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be a bug with antrun 
-                            see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -331,10 +327,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be a bug with antrun 
-                            see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
diff --git a/modules/flowable-idm-engine/pom.xml b/modules/flowable-idm-engine/pom.xml
index f0f5c126f5..a731827f2d 100755
--- a/modules/flowable-idm-engine/pom.xml
+++ b/modules/flowable-idm-engine/pom.xml
@@ -248,10 +248,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<!-- only worked with this version, there might be a bug with antrun 
-							see http://jira.codehaus.org/browse/MANTRUN-109 -->
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
@@ -300,10 +298,8 @@
             <build>
                 <plugins>
                     <plugin>
+						<groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be a bug with antrun 
-                            see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-test-create-schema</id>
@@ -352,10 +348,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<!-- only worked with this version, there might be a bug with antrun 
-							see http://jira.codehaus.org/browse/MANTRUN-109 -->
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
@@ -501,10 +495,8 @@
             <build>
                 <plugins>
                     <plugin>
+						<groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be a bug with antrun 
-                            see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>database-copy-logging</id>
diff --git a/modules/flowable-idm-spring/pom.xml b/modules/flowable-idm-spring/pom.xml
index ec20ff22c4..5cc990ebaf 100644
--- a/modules/flowable-idm-spring/pom.xml
+++ b/modules/flowable-idm-spring/pom.xml
@@ -175,10 +175,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>error-logging</id>
diff --git a/modules/flowable-job-service/src/main/java/org/flowable/job/service/impl/asyncexecutor/DefaultJobManager.java b/modules/flowable-job-service/src/main/java/org/flowable/job/service/impl/asyncexecutor/DefaultJobManager.java
index 5cdd819c31..d28079e392 100644
--- a/modules/flowable-job-service/src/main/java/org/flowable/job/service/impl/asyncexecutor/DefaultJobManager.java
+++ b/modules/flowable-job-service/src/main/java/org/flowable/job/service/impl/asyncexecutor/DefaultJobManager.java
@@ -343,7 +343,12 @@ public class DefaultJobManager implements JobManager {
 
         if (job instanceof HistoryJob) {
 
-            HistoryJobEntity jobEntity = (HistoryJobEntity) job;
+            HistoryJobEntity jobEntity = jobServiceConfiguration.getHistoryJobEntityManager().findById(job.getId());
+            if (jobEntity == null) {
+                LOGGER.debug("History Job {} does not exist anymore and will not be unacquired. It has most likely been deleted "
+                        + "e.g. as part of another concurrent part of a process / case instance.", job.getId());
+                return;
+            }
 
             HistoryJobEntity newJobEntity = jobServiceConfiguration.getHistoryJobEntityManager().create();
             copyHistoryJobInfo(newJobEntity, jobEntity);
@@ -359,7 +364,13 @@ public class DefaultJobManager implements JobManager {
             // will avoid that the job is immediately is picked up again (for example
             // when doing lots of exclusive jobs for the same process instance)
 
-            JobEntity jobEntity = (JobEntity) job;
+            JobEntity jobEntity = jobServiceConfiguration.getJobEntityManager().findById(job.getId());
+
+            if (jobEntity == null) {
+                LOGGER.debug("Async Job {} does not exist anymore and will not be unacquired. It has most likely been deleted "
+                        + "e.g. as part of another concurrent part of a process / case instance.", job.getId());
+                return;
+            }
 
             JobEntity newJobEntity = jobServiceConfiguration.getJobEntityManager().create();
             copyJobInfo(newJobEntity, jobEntity);
@@ -374,7 +385,13 @@ public class DefaultJobManager implements JobManager {
             // as the chance of failure will be high.
 
         } else if (job instanceof ExternalWorkerJobEntity) {
-            ExternalWorkerJobEntity jobEntity = (ExternalWorkerJobEntity) job;
+            ExternalWorkerJobEntity jobEntity = jobServiceConfiguration.getExternalWorkerJobEntityManager().findById(job.getId());
+
+            if (jobEntity == null) {
+                LOGGER.debug("External Worker Job {} does not exist anymore and will not be unacquired. It has most likely been deleted "
+                        + "e.g. as part of another concurrent part of a process / case instance.", job.getId());
+                return;
+            }
 
             ExternalWorkerJobEntity newJobEntity = jobServiceConfiguration.getExternalWorkerJobEntityManager().create();
             copyJobInfo(newJobEntity, jobEntity);
diff --git a/modules/flowable-rest/pom.xml b/modules/flowable-rest/pom.xml
index 5098e7034e..4e23d8a0db 100644
--- a/modules/flowable-rest/pom.xml
+++ b/modules/flowable-rest/pom.xml
@@ -262,10 +262,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be 
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>error-logging</id>
diff --git a/modules/flowable-spring/pom.xml b/modules/flowable-spring/pom.xml
index a4f3a03871..711c9c1bba 100644
--- a/modules/flowable-spring/pom.xml
+++ b/modules/flowable-spring/pom.xml
@@ -233,10 +233,8 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <!-- only worked with this version, there might be
-                            a bug with antrun see http://jira.codehaus.org/browse/MANTRUN-109 -->
-                        <version>1.4</version>
                         <executions>
                             <execution>
                                 <id>error-logging</id>
@@ -265,6 +263,7 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
                         <executions>
                             <execution>
@@ -294,6 +293,7 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
                         <executions>
                             <execution>
diff --git a/modules/flowable5-engine/pom.xml b/modules/flowable5-engine/pom.xml
index 2524666e2c..0d64586f7d 100644
--- a/modules/flowable5-engine/pom.xml
+++ b/modules/flowable5-engine/pom.xml
@@ -331,10 +331,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<!-- only worked with this version, there might be a bug with antrun 
-							see http://jira.codehaus.org/browse/MANTRUN-109 -->
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
@@ -383,10 +381,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<!-- only worked with this version, there might be a bug with antrun 
-							see http://jira.codehaus.org/browse/MANTRUN-109 -->
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
@@ -436,10 +432,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<!-- only worked with this version, there might be a bug with antrun 
-							see http://jira.codehaus.org/browse/MANTRUN-109 -->
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
@@ -470,10 +464,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<!-- only worked with this version, there might be a bug with antrun 
-							see http://jira.codehaus.org/browse/MANTRUN-109 -->
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>configExecution</id>
@@ -537,10 +529,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<!-- only worked with this version, there might be a bug with antrun 
-							see http://jira.codehaus.org/browse/MANTRUN-109 -->
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>configExecution</id>
@@ -607,8 +597,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
@@ -650,10 +640,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<!-- only worked with this version, there might be a bug with antrun 
-							see http://jira.codehaus.org/browse/MANTRUN-109 -->
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
@@ -701,8 +689,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
@@ -745,8 +733,8 @@
 			<build>
 				<plugins>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
@@ -805,8 +793,8 @@
 						</configuration>
 					</plugin>
 					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
 						<artifactId>maven-antrun-plugin</artifactId>
-						<version>1.4</version>
 						<executions>
 							<execution>
 								<id>database-test-create-schema</id>
diff --git a/modules/flowable5-spring-test/pom.xml b/modules/flowable5-spring-test/pom.xml
index 7533071485..270f00aa56 100644
--- a/modules/flowable5-spring-test/pom.xml
+++ b/modules/flowable5-spring-test/pom.xml
@@ -193,6 +193,7 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
                         <executions>
                             <execution>
@@ -222,6 +223,7 @@
             <build>
                 <plugins>
                     <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-antrun-plugin</artifactId>
                         <executions>
                             <execution>
diff --git a/modules/flowable5-test/pom.xml b/modules/flowable5-test/pom.xml
index f3e184654c..3910cd659f 100755
--- a/modules/flowable5-test/pom.xml
+++ b/modules/flowable5-test/pom.xml
@@ -191,12 +191,8 @@
 	      <build>
 	        <plugins>
 	          <plugin>
+				  <groupId>org.apache.maven.plugins</groupId>
 	            <artifactId>maven-antrun-plugin</artifactId>
-	            <!--
-	              only worked with this version, there might be a bug with antrun
-	              see http://jira.codehaus.org/browse/MANTRUN-109
-	            -->
-	            <version>1.4</version>
 	            <executions>
 	              <execution>
 	                <id>database-test-create-schema</id>
diff --git a/modules/flowable5-test/src/test/java/org/activiti/examples/mgmt/ManagementServiceTest.java b/modules/flowable5-test/src/test/java/org/activiti/examples/mgmt/ManagementServiceTest.java
index ae96c07465..226c682049 100644
--- a/modules/flowable5-test/src/test/java/org/activiti/examples/mgmt/ManagementServiceTest.java
+++ b/modules/flowable5-test/src/test/java/org/activiti/examples/mgmt/ManagementServiceTest.java
@@ -50,7 +50,7 @@ public class ManagementServiceTest extends PluggableFlowableTestCase {
 
         TableMetaData tableMetaData = managementService.getTableMetaData(tablePrefix + "ACT_RU_TASK");
         assertEquals(tableMetaData.getColumnNames().size(), tableMetaData.getColumnTypes().size());
-        assertEquals(30, tableMetaData.getColumnNames().size());
+        assertEquals(37, tableMetaData.getColumnNames().size());
 
         int assigneeIndex = tableMetaData.getColumnNames().indexOf("ASSIGNEE_");
         int createTimeIndex = tableMetaData.getColumnNames().indexOf("CREATE_TIME_");
diff --git a/pom.xml b/pom.xml
index 5afea01c0f..f5e35d6e3b 100644
--- a/pom.xml
+++ b/pom.xml
@@ -720,6 +720,11 @@
 					<artifactId>jib-maven-plugin</artifactId>
 					<version>${jib-maven-plugin.version}</version>
 				</plugin>
+				<plugin>
+					<groupId>org.apache.maven.plugins</groupId>
+					<artifactId>maven-antrun-plugin</artifactId>
+					<version>1.4</version>
+				</plugin>
 			</plugins>
 		</pluginManagement>
 	</build>
diff --git a/qa/dbclean/pom.xml b/qa/dbclean/pom.xml
index ff7504ef2a..c1c29a5cb5 100644
--- a/qa/dbclean/pom.xml
+++ b/qa/dbclean/pom.xml
@@ -61,6 +61,7 @@
   <build>
     <plugins>
       <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-antrun-plugin</artifactId>
         <version>1.4</version>
         <executions>
