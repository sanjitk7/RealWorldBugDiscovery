diff --git a/core/src/main/java/com/google/errorprone/bugpatterns/nullness/NullArgumentForNonNullParameter.java b/core/src/main/java/com/google/errorprone/bugpatterns/nullness/NullArgumentForNonNullParameter.java
index 74fff8e871..4354141414 100644
--- a/core/src/main/java/com/google/errorprone/bugpatterns/nullness/NullArgumentForNonNullParameter.java
+++ b/core/src/main/java/com/google/errorprone/bugpatterns/nullness/NullArgumentForNonNullParameter.java
@@ -248,7 +248,9 @@ public final class NullArgumentForNonNullParameter extends BugChecker
       if (hasAnnotation(sym, "com.google.protobuf.Internal$ProtoNonnullApi", state)) {
         return true;
       }
-      if (hasAnnotation(sym, "org.jspecify.annotations.NullMarked", state)
+      if ((hasAnnotation(sym, "org.jspecify.annotations.NullMarked", state)
+              // We break this string to avoid having it rewritten by Copybara.
+              || hasAnnotation(sym, "org.jspecify.null" + "ness.NullMarked", state))
           && weTrustNullMarkedOn(sym, state)) {
         return true;
       }
diff --git a/core/src/main/java/com/google/errorprone/bugpatterns/nullness/NullnessUtils.java b/core/src/main/java/com/google/errorprone/bugpatterns/nullness/NullnessUtils.java
index 3782c14554..e1dbc7e815 100644
--- a/core/src/main/java/com/google/errorprone/bugpatterns/nullness/NullnessUtils.java
+++ b/core/src/main/java/com/google/errorprone/bugpatterns/nullness/NullnessUtils.java
@@ -129,7 +129,9 @@ class NullnessUtils {
 
   static boolean isInNullMarkedScope(Symbol sym, VisitorState state) {
     for (; sym != null; sym = sym.getEnclosingElement()) {
-      if (hasAnnotation(sym, "org.jspecify.annotations.NullMarked", state)) {
+      if (hasAnnotation(sym, "org.jspecify.annotations.NullMarked", state)
+          // We break this string to avoid having it rewritten by Copybara.
+          || hasAnnotation(sym, "org.jspecify.null" + "ness.NullMarked", state)) {
         return true;
       }
     }
@@ -381,8 +383,9 @@ class NullnessUtils {
       case "org.checkerframework.checker.nullness.qual.Nullable":
       case "org.jspecify.annotations.NonNull":
       case "org.jspecify.annotations.Nullable":
-      case "org.jspecify.annotations.NonNull":
-      case "org.jspecify.annotations.Nullable":
+        // We break these strings to avoid having them rewritten by Copybara.
+      case "org.jspecify.null" + "ness.NonNull":
+      case "org.jspecify.null" + "ness.Nullable":
         return true;
       default:
         // TODO(cpovirk): Detect type-use-ness from the class symbol if it's available?
diff --git a/pom.xml b/pom.xml
index 248c8b26c2..c6501498e5 100644
--- a/pom.xml
+++ b/pom.xml
@@ -45,7 +45,7 @@
     <nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
     <protobuf.version>3.19.6</protobuf.version>
     <grpc.version>1.43.3</grpc.version>
-    <jspecify.version>0.2.0</jspecify.version>
+    <jspecify.version>0.3.0</jspecify.version>
     <guice.version>5.1.0</guice.version>
   </properties>
 
