diff --git a/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvokerTest.java b/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvokerTest.java
index c24913122..247a719ad 100644
--- a/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvokerTest.java
+++ b/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvokerTest.java
@@ -51,7 +51,6 @@ import static org.mockito.Mockito.mock;
 
 /**
  * AbstractClusterInvokerTest
- *
  */
 @SuppressWarnings("rawtypes")
 public class AbstractClusterInvokerTest {
@@ -161,14 +160,16 @@ public class AbstractClusterInvokerTest {
 
     @Test
     public void testSelect_Invokersize0() throws Exception {
+        LoadBalance l = cluster.initLoadBalance(invokers, invocation);
+        Assert.assertNotNull("cluster.initLoadBalance returns null!", l);
         {
-            Invoker invoker = cluster.select(null, null, null, null);
+            Invoker invoker = cluster.select(l, null, null, null);
             Assert.assertEquals(null, invoker);
         }
         {
             invokers.clear();
             selectedInvokers.clear();
-            Invoker invoker = cluster.select(null, null, invokers, null);
+            Invoker invoker = cluster.select(l, null, invokers, null);
             Assert.assertEquals(null, invoker);
         }
     }
@@ -177,7 +178,9 @@ public class AbstractClusterInvokerTest {
     public void testSelect_Invokersize1() throws Exception {
         invokers.clear();
         invokers.add(invoker1);
-        Invoker invoker = cluster.select(null, null, invokers, null);
+        LoadBalance l = cluster.initLoadBalance(invokers, invocation);
+        Assert.assertNotNull("cluster.initLoadBalance returns null!", l);
+        Invoker invoker = cluster.select(l, null, invokers, null);
         Assert.assertEquals(invoker1, invoker);
     }
 
@@ -186,16 +189,18 @@ public class AbstractClusterInvokerTest {
         invokers.clear();
         invokers.add(invoker2);
         invokers.add(invoker4);
+        LoadBalance l = cluster.initLoadBalance(invokers, invocation);
+        Assert.assertNotNull("cluster.initLoadBalance returns null!", l);
         {
             selectedInvokers.clear();
             selectedInvokers.add(invoker4);
-            Invoker invoker = cluster.select(null, invocation, invokers, selectedInvokers);
+            Invoker invoker = cluster.select(l, invocation, invokers, selectedInvokers);
             Assert.assertEquals(invoker2, invoker);
         }
         {
             selectedInvokers.clear();
             selectedInvokers.add(invoker2);
-            Invoker invoker = cluster.select(null, invocation, invokers, selectedInvokers);
+            Invoker invoker = cluster.select(l, invocation, invokers, selectedInvokers);
             Assert.assertEquals(invoker4, invoker);
         }
     }
