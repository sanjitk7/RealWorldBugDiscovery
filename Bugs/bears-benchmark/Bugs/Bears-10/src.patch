diff --git a/release-notes/VERSION b/release-notes/VERSION
index 65ed24b7a..310d4f8b3 100644
--- a/release-notes/VERSION
+++ b/release-notes/VERSION
@@ -9,8 +9,6 @@ Project: jackson-databind
 #1533: `AsPropertyTypeDeserializer` ignores `DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT`
 #1543: JsonFormat.Shape.NUMBER_INT does not work when defined on enum type in 2.8
  (reported by Alex P)
-#1570: `Enum` key for `Map` ignores `SerializationFeature.WRITE_ENUMS_USING_INDEX`
- (reported by SolaKun@github)
 #1575: Problem with `@JsonIgnoreProperties` on recursive property (regression in 2.8)
  (reported by anujkumar04@github)
 - Minor fix to creation of `PropertyMetadata`, had one path that could lead to NPE
diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java
index fceba528f..b708a02d9 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java
@@ -31,15 +31,12 @@ public class StdKeySerializer extends StdSerializer<Object>
         } else if (cls.isEnum()) {
             // 24-Sep-2015, tatu: Minor improvement over older (2.6.2 and before) code: at least
             //     use name/toString() variation for as per configuration
+            Enum<?> en = (Enum<?>) value;
+
             if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) {
-                str = value.toString();
+                str = en.toString();
             } else {
-                Enum<?> en = (Enum<?>) value;
-                if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) {
-                    str = String.valueOf(en.ordinal());
-                } else {
-                    str = en.name();
-                }
+                str = en.name();
             }
         } else if (value instanceof Date) {
             provider.defaultSerializeDateKey((Date) value, g);
diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java
index 2462f2eba..fd6c99b0b 100644
--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java
+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java
@@ -144,19 +144,9 @@ public class StdKeySerializers
                 break;
             case TYPE_ENUM:
                 {
-                    String key;
-
-                    if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) {
-                        key = value.toString();
-                    } else {
-                        Enum<?> e = (Enum<?>) value;
-                        if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_INDEX)) {
-                            key = String.valueOf(e.ordinal());
-                        } else {
-                            key = e.name();
-                        }
-                    }
-                    g.writeFieldName(key);
+                    String str = provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)
+                            ? value.toString() : ((Enum<?>) value).name();
+                    g.writeFieldName(str);
                 }
                 break;
             case TYPE_TO_STRING:
@@ -260,10 +250,6 @@ public class StdKeySerializers
                 return;
             }
             Enum<?> en = (Enum<?>) value;
-            if (serializers.isEnabled(SerializationFeature.WRITE_ENUMS_USING_INDEX)) {
-                g.writeFieldName(String.valueOf(en.ordinal()));
-                return;
-            }
             g.writeFieldName(_values.serializedValueFor(en));
         }
     }
diff --git a/src/test/java/com/fasterxml/jackson/databind/ser/TestEnumSerialization.java b/src/test/java/com/fasterxml/jackson/databind/ser/TestEnumSerialization.java
index d2120b934..feda08005 100644
--- a/src/test/java/com/fasterxml/jackson/databind/ser/TestEnumSerialization.java
+++ b/src/test/java/com/fasterxml/jackson/databind/ser/TestEnumSerialization.java
@@ -281,17 +281,11 @@ public class TestEnumSerialization
         String json = MAPPER.writeValueAsString(bean);
         assertEquals("{\"map\":{\"B\":3}}", json);
 
+        ObjectMapper m2 = new ObjectMapper();
         // but can change
-        json = MAPPER.writer()
-                .with(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)
-                .writeValueAsString(bean);
+        m2.enable(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);
+        json = m2.writeValueAsString(bean);
         assertEquals("{\"map\":{\"b\":3}}", json);
-
-        // [databind#1570]
-        json = MAPPER.writer()
-                .with(SerializationFeature.WRITE_ENUMS_USING_INDEX)
-                .writeValueAsString(bean);
-        assertEquals(aposToQuotes("{'map':{'"+TestEnum.B.ordinal()+"':3}}"), json);
     }
 
     public void testAsIndex() throws Exception
