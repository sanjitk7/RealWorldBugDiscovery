diff --git a/src/org/traccar/protocol/H02FrameDecoder.java b/src/org/traccar/protocol/H02FrameDecoder.java
index a22252a..b2da648 100644
--- a/src/org/traccar/protocol/H02FrameDecoder.java
+++ b/src/org/traccar/protocol/H02FrameDecoder.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2013 - 2016 Anton Tananaev (anton@traccar.org)
+ * Copyright 2013 - 2017 Anton Tananaev (anton@traccar.org)
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -37,7 +37,7 @@ public class H02FrameDecoder extends FrameDecoder {
 
         char marker = (char) buf.getByte(buf.readerIndex());
 
-        while (marker != '*' && marker != '$' && buf.readableBytes() > 0) {
+        while (marker != '*' && marker != '$' && marker != 'X' && buf.readableBytes() > 0) {
             buf.skipBytes(1);
             if (buf.readableBytes() > 0) {
                 marker = (char) buf.getByte(buf.readerIndex());
@@ -66,6 +66,12 @@ public class H02FrameDecoder extends FrameDecoder {
                 return buf.readBytes(messageLength);
             }
 
+        } else if (marker == 'X') {
+
+            if (buf.readableBytes() >= MESSAGE_SHORT) {
+                return buf.readBytes(MESSAGE_SHORT);
+            }
+
         }
 
         return null;
diff --git a/src/org/traccar/protocol/H02ProtocolDecoder.java b/src/org/traccar/protocol/H02ProtocolDecoder.java
index 431dd5c..c2a3b2b 100644
--- a/src/org/traccar/protocol/H02ProtocolDecoder.java
+++ b/src/org/traccar/protocol/H02ProtocolDecoder.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2012 - 2016 Anton Tananaev (anton@traccar.org)
+ * Copyright 2012 - 2017 Anton Tananaev (anton@traccar.org)
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -305,8 +305,6 @@ public class H02ProtocolDecoder extends BaseProtocolDecoder {
         ChannelBuffer buf = (ChannelBuffer) msg;
         String marker = buf.toString(0, 1, StandardCharsets.US_ASCII);
 
-        // handle X mode?
-
         if (marker.equals("*")) {
             String sentence = buf.toString(StandardCharsets.US_ASCII);
             if (sentence.contains(",NBR,")) {
@@ -316,6 +314,8 @@ public class H02ProtocolDecoder extends BaseProtocolDecoder {
             }
         } else if (marker.equals("$")) {
             return decodeBinary(buf, channel, remoteAddress);
+        } else if (marker.equals("X")) {
+            return null; // X mode
         }
 
         return null;
