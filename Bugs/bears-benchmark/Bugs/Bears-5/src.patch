diff --git a/release-notes/VERSION b/release-notes/VERSION
index a081f9494..079720dff 100644
--- a/release-notes/VERSION
+++ b/release-notes/VERSION
@@ -5,8 +5,7 @@ Project: jackson-databind
 
 2.8.7 (not yet released)
 
-#935: `@JsonProperty(access = Access.READ_ONLY)` - unexpected behaviour
-#1317: '@JsonIgnore' annotation not working with creator properties, serializatio
+#1317: '@JsonIgnore' annotation not working with creator properties, serialization
 
 2.8.6 (12-Jan-2017)
 
diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java
index fd6a613e6..f542d84f3 100644
--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java
@@ -4,7 +4,6 @@ import java.lang.reflect.Modifier;
 import java.util.*;
 
 import com.fasterxml.jackson.annotation.JsonAnySetter;
-import com.fasterxml.jackson.annotation.JsonProperty.Access;
 import com.fasterxml.jackson.databind.*;
 import com.fasterxml.jackson.databind.cfg.HandlerInstantiator;
 import com.fasterxml.jackson.databind.cfg.MapperConfig;
@@ -728,14 +727,10 @@ public class POJOPropertiesCollector
 
         while (it.hasNext()) {
             POJOPropertyBuilder prop = it.next();
-            // 26-Jan-2017, tatu: [databind#935]: need to denote removal of
-            Access acc = prop.removeNonVisible(inferMutators);
-            if (!_forSerialization && (acc == Access.READ_ONLY)) {
-                _collectIgnorals(prop.getName());
-            }
+            prop.removeNonVisible(inferMutators);
         }
     }
-
+        
     /**
      * Helper method called to add explicitly ignored properties to a list
      * of known ignored properties; this helps in proper reporting of
diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java
index b9a403c13..954f5dd46 100644
--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java
+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java
@@ -641,7 +641,7 @@ public class POJOPropertyBuilder
      * @param inferMutators Whether mutators can be "pulled in" by visible
      *    accessors or not. 
      */
-    public JsonProperty.Access removeNonVisible(boolean inferMutators)
+    public void removeNonVisible(boolean inferMutators)
     {
         /* 07-Jun-2015, tatu: With 2.6, we will allow optional definition
          *  of explicit access type for property; if not "AUTO", it will
@@ -680,7 +680,6 @@ public class POJOPropertyBuilder
                 _setters = _removeNonVisible(_setters);
             }
         }
-        return acc;
     }
 
     /**
diff --git a/src/test/java/com/fasterxml/jackson/databind/deser/ReadOrWriteOnlyTest.java b/src/test/java/com/fasterxml/jackson/failing/ReadWriteOnlyProp935Test.java
similarity index 92%
rename from src/test/java/com/fasterxml/jackson/databind/deser/ReadOrWriteOnlyTest.java
rename to src/test/java/com/fasterxml/jackson/failing/ReadWriteOnlyProp935Test.java
index 78d54bcc9..b241e7374 100644
--- a/src/test/java/com/fasterxml/jackson/databind/deser/ReadOrWriteOnlyTest.java
+++ b/src/test/java/com/fasterxml/jackson/failing/ReadWriteOnlyProp935Test.java
@@ -1,9 +1,9 @@
-package com.fasterxml.jackson.databind.deser;
+package com.fasterxml.jackson.failing;
 
 import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.databind.*;
 
-public class ReadOrWriteOnlyTest extends BaseMapTest
+public class ReadWriteOnlyProp935Test extends BaseMapTest
 {
     // for [databind#935], verify read/write-only cases
     static class ReadXWriteY {
@@ -56,7 +56,7 @@ public class ReadOrWriteOnlyTest extends BaseMapTest
      */
 
     private final ObjectMapper MAPPER = new ObjectMapper();
-
+    
     // [databind#935]
     public void testReadOnlyAndWriteOnly() throws Exception
     {
@@ -69,7 +69,7 @@ public class ReadOrWriteOnlyTest extends BaseMapTest
         assertEquals(6, result.y);
     }
 
-    public void testReadOnly935() throws Exception
+    public void testReadOnl935() throws Exception
     {
         String json = MAPPER.writeValueAsString(new Pojo935());
         Pojo935 result = MAPPER.readValue(json, Pojo935.class);
