diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java
index c3ad93ef8..3c65723aa 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java
@@ -165,7 +165,7 @@ public class EnumDeserializer
         name = name.trim();
         if (name.length() == 0) {
             if (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)) {
-                return getEmptyValue(ctxt);
+                return null;
             }
         } else if (!ctxt.isEnabled(DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS)) {
             // [databind#149]: Allow use of 'String' indexes as well -- unless prohibited (as per above)
@@ -195,8 +195,15 @@ public class EnumDeserializer
     protected Object _deserializeOther(JsonParser p, DeserializationContext ctxt) throws IOException
     {
         // [databind#381]
-        if (p.hasToken(JsonToken.START_ARRAY)) {
-            return _deserializeFromArray(p, ctxt);
+        if (ctxt.isEnabled(DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS)
+                && p.isExpectedStartArrayToken()) {
+            p.nextToken();
+            final Object parsed = deserialize(p, ctxt);
+            JsonToken curr = p.nextToken();
+            if (curr != JsonToken.END_ARRAY) {
+                handleMissingEndArrayForSingle(p, ctxt);
+            }
+            return parsed;
         }
         return ctxt.handleUnexpectedToken(_enumClass(), p);
     }
diff --git a/src/test/java/com/fasterxml/jackson/databind/struct/EmptyArrayAsNullTest.java b/src/test/java/com/fasterxml/jackson/databind/struct/EmptyArrayAsNullTest.java
index 5199545a5..7eb64fffb 100644
--- a/src/test/java/com/fasterxml/jackson/databind/struct/EmptyArrayAsNullTest.java
+++ b/src/test/java/com/fasterxml/jackson/databind/struct/EmptyArrayAsNullTest.java
@@ -125,10 +125,6 @@ public class EmptyArrayAsNullTest extends BaseMapTest
         _testNullWrapper(String.class);
     }
 
-    public void testNullEnumFromEmptyArray() throws Exception {
-        _testNullWrapper(ABC.class);
-    }
-
     public void testStdJdkTypesFromEmptyArray() throws Exception
     {
         _testNullWrapper(BigInteger.class);
