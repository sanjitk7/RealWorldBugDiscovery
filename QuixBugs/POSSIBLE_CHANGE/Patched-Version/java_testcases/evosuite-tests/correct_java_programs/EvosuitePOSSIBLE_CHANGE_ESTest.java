/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 07:50:41 GMT 2024
 */

package correct_java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import correct_java_programs.POSSIBLE_CHANGE;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EvosuitePOSSIBLE_CHANGE_ESTest extends EvosuitePOSSIBLE_CHANGE_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      POSSIBLE_CHANGE.possible_change(intArray0, 4789);
      POSSIBLE_CHANGE.possible_change(intArray0, 280);
      POSSIBLE_CHANGE.possible_change(intArray0, 415);
      int int1 = POSSIBLE_CHANGE.possible_change(intArray0, 280);
      assertFalse(int1 == int0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-1217);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      POSSIBLE_CHANGE.possible_change(intArray0, (-1217));
      POSSIBLE_CHANGE.possible_change(intArray0, (-2421));
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, (-1723));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[] intArray0 = null;
      int int0 = 1226;
      // Undeclared exception!
      try { 
        POSSIBLE_CHANGE.possible_change((int[]) null, 1226);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[2];
      intArray0[0] = 839;
      intArray0[1] = 1253;
      POSSIBLE_CHANGE.possible_change(intArray0, 0);
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, 1253);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, (-198));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int int0 = POSSIBLE_CHANGE.possible_change((int[]) null, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
      int[] intArray0 = new int[2];
      intArray0[0] = 839;
      intArray0[1] = 1253;
      POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, 1253);
      assertEquals(1, int0);
  }
}
