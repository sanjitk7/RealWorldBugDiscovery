import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RandoopRegressionTestNEXT_PALINDROMEPatched12 {

    public static boolean debug = false;

    @Test
    public void test6001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6001");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass84 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 115, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 54, 1]" + "'", str22, "[32, 54, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 55, 1]" + "'", str23, "[32, 55, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 56, 1]" + "'", str24, "[32, 56, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 57, 1]" + "'", str25, "[32, 57, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 58, 1]" + "'", str26, "[32, 58, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 59, 1]" + "'", str27, "[32, 59, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 60, 1]" + "'", str28, "[32, 60, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 61, 1]" + "'", str29, "[32, 61, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 62, 1]" + "'", str30, "[32, 62, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 63, 1]" + "'", str31, "[32, 63, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 64, 1]" + "'", str32, "[32, 64, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 65, 1]" + "'", str33, "[32, 65, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 66, 1]" + "'", str34, "[32, 66, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 67, 1]" + "'", str35, "[32, 67, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 68, 1]" + "'", str36, "[32, 68, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 69, 1]" + "'", str37, "[32, 69, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 70, 1]" + "'", str38, "[32, 70, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 71, 1]" + "'", str39, "[32, 71, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 72, 1]" + "'", str40, "[32, 72, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[32, 73, 1]" + "'", str41, "[32, 73, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[32, 74, 1]" + "'", str42, "[32, 74, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[32, 75, 1]" + "'", str43, "[32, 75, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[32, 76, 1]" + "'", str44, "[32, 76, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[32, 77, 1]" + "'", str45, "[32, 77, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[32, 78, 1]" + "'", str46, "[32, 78, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[32, 79, 1]" + "'", str47, "[32, 79, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[32, 80, 1]" + "'", str48, "[32, 80, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[32, 81, 1]" + "'", str49, "[32, 81, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[32, 82, 1]" + "'", str50, "[32, 82, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[32, 83, 1]" + "'", str51, "[32, 83, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[32, 84, 1]" + "'", str52, "[32, 84, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[32, 85, 1]" + "'", str53, "[32, 85, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[32, 86, 1]" + "'", str54, "[32, 86, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[32, 87, 1]" + "'", str55, "[32, 87, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[32, 88, 1]" + "'", str56, "[32, 88, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[32, 89, 1]" + "'", str57, "[32, 89, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[32, 90, 1]" + "'", str58, "[32, 90, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[32, 91, 1]" + "'", str59, "[32, 91, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[32, 92, 1]" + "'", str60, "[32, 92, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[32, 93, 1]" + "'", str61, "[32, 93, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[32, 94, 1]" + "'", str62, "[32, 94, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[32, 95, 1]" + "'", str63, "[32, 95, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[32, 96, 1]" + "'", str64, "[32, 96, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[32, 97, 1]" + "'", str65, "[32, 97, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[32, 98, 1]" + "'", str66, "[32, 98, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[32, 99, 1]" + "'", str67, "[32, 99, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[32, 100, 1]" + "'", str68, "[32, 100, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[32, 101, 1]" + "'", str69, "[32, 101, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[32, 102, 1]" + "'", str70, "[32, 102, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[32, 103, 1]" + "'", str71, "[32, 103, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[32, 104, 1]" + "'", str72, "[32, 104, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[32, 105, 1]" + "'", str73, "[32, 105, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[32, 106, 1]" + "'", str74, "[32, 106, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[32, 107, 1]" + "'", str75, "[32, 107, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[32, 108, 1]" + "'", str76, "[32, 108, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[32, 109, 1]" + "'", str77, "[32, 109, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[32, 110, 1]" + "'", str78, "[32, 110, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[32, 111, 1]" + "'", str79, "[32, 111, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[32, 112, 1]" + "'", str80, "[32, 112, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[32, 113, 1]" + "'", str81, "[32, 113, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[32, 114, 1]" + "'", str82, "[32, 114, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[32, 115, 1]" + "'", str83, "[32, 115, 1]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test6002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6002");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass78 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 82, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 52, 17, -1, 1]" + "'", str12, "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 52, 18, -1, 1]" + "'", str13, "[97, 52, 18, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 52, 19, -1, 1]" + "'", str14, "[97, 52, 19, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 52, 20, -1, 1]" + "'", str15, "[97, 52, 20, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 52, 21, -1, 1]" + "'", str16, "[97, 52, 21, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 52, 22, -1, 1]" + "'", str17, "[97, 52, 22, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 52, 23, -1, 1]" + "'", str18, "[97, 52, 23, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 52, 24, -1, 1]" + "'", str19, "[97, 52, 24, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 52, 25, -1, 1]" + "'", str20, "[97, 52, 25, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 52, 26, -1, 1]" + "'", str21, "[97, 52, 26, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 52, 27, -1, 1]" + "'", str22, "[97, 52, 27, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 52, 28, -1, 1]" + "'", str23, "[97, 52, 28, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 52, 29, -1, 1]" + "'", str24, "[97, 52, 29, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 52, 30, -1, 1]" + "'", str25, "[97, 52, 30, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 52, 31, -1, 1]" + "'", str26, "[97, 52, 31, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 52, 32, -1, 1]" + "'", str27, "[97, 52, 32, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 52, 33, -1, 1]" + "'", str28, "[97, 52, 33, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 52, 34, -1, 1]" + "'", str29, "[97, 52, 34, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 52, 35, -1, 1]" + "'", str30, "[97, 52, 35, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 52, 36, -1, 1]" + "'", str31, "[97, 52, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 52, 37, -1, 1]" + "'", str32, "[97, 52, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 52, 38, -1, 1]" + "'", str33, "[97, 52, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 52, 39, -1, 1]" + "'", str34, "[97, 52, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 52, 40, -1, 1]" + "'", str35, "[97, 52, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 52, 41, -1, 1]" + "'", str36, "[97, 52, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 52, 42, -1, 1]" + "'", str37, "[97, 52, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 52, 43, -1, 1]" + "'", str38, "[97, 52, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 52, 44, -1, 1]" + "'", str39, "[97, 52, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 52, 45, -1, 1]" + "'", str40, "[97, 52, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 52, 46, -1, 1]" + "'", str41, "[97, 52, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 52, 47, -1, 1]" + "'", str42, "[97, 52, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 52, 48, -1, 1]" + "'", str43, "[97, 52, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 52, 49, -1, 1]" + "'", str44, "[97, 52, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 52, 50, -1, 1]" + "'", str45, "[97, 52, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 51, -1, 1]" + "'", str46, "[97, 52, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 52, 52, -1, 1]" + "'", str47, "[97, 52, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 52, 53, -1, 1]" + "'", str48, "[97, 52, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 52, 54, -1, 1]" + "'", str49, "[97, 52, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 52, 55, -1, 1]" + "'", str50, "[97, 52, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 52, 56, -1, 1]" + "'", str51, "[97, 52, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 52, 57, -1, 1]" + "'", str52, "[97, 52, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 52, 58, -1, 1]" + "'", str53, "[97, 52, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 52, 59, -1, 1]" + "'", str54, "[97, 52, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 52, 60, -1, 1]" + "'", str55, "[97, 52, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 52, 61, -1, 1]" + "'", str56, "[97, 52, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 52, 62, -1, 1]" + "'", str57, "[97, 52, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 52, 63, -1, 1]" + "'", str58, "[97, 52, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 52, 64, -1, 1]" + "'", str59, "[97, 52, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 52, 65, -1, 1]" + "'", str60, "[97, 52, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 52, 66, -1, 1]" + "'", str61, "[97, 52, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 52, 67, -1, 1]" + "'", str62, "[97, 52, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 52, 68, -1, 1]" + "'", str63, "[97, 52, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 52, 69, -1, 1]" + "'", str64, "[97, 52, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 52, 70, -1, 1]" + "'", str65, "[97, 52, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 52, 71, -1, 1]" + "'", str66, "[97, 52, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 52, 72, -1, 1]" + "'", str67, "[97, 52, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 52, 73, -1, 1]" + "'", str68, "[97, 52, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 52, 74, -1, 1]" + "'", str69, "[97, 52, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 52, 75, -1, 1]" + "'", str70, "[97, 52, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 52, 76, -1, 1]" + "'", str71, "[97, 52, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 52, 77, -1, 1]" + "'", str72, "[97, 52, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 52, 78, -1, 1]" + "'", str73, "[97, 52, 78, -1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 52, 79, -1, 1]" + "'", str74, "[97, 52, 79, -1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 52, 80, -1, 1]" + "'", str75, "[97, 52, 80, -1, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 52, 81, -1, 1]" + "'", str76, "[97, 52, 81, -1, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 52, 82, -1, 1]" + "'", str77, "[97, 52, 82, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test6003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6003");
        int[] intArray6 = new int[] { ' ', (byte) 0, ' ', (byte) 0, (-1), (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass83 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 7, 6, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 33, 1, -1, 1]" + "'", str7, "[32, 0, 33, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 34, 2, -1, 1]" + "'", str8, "[32, 0, 34, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 35, 3, -1, 1]" + "'", str9, "[32, 0, 35, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 36, 4, -1, 1]" + "'", str10, "[32, 0, 36, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 37, 5, -1, 1]" + "'", str11, "[32, 0, 37, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 38, 6, -1, 1]" + "'", str12, "[32, 0, 38, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 39, 7, -1, 1]" + "'", str13, "[32, 0, 39, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 0, 40, 8, -1, 1]" + "'", str14, "[32, 0, 40, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 0, 41, 9, -1, 1]" + "'", str15, "[32, 0, 41, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 0, 0, 0, 1]" + "'", str16, "[32, 1, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 1, 1, 0, 1]" + "'", str17, "[32, 1, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 2, 2, 0, 1]" + "'", str18, "[32, 1, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 3, 3, 0, 1]" + "'", str19, "[32, 1, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 4, 4, 0, 1]" + "'", str20, "[32, 1, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 5, 5, 0, 1]" + "'", str21, "[32, 1, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 6, 6, 0, 1]" + "'", str22, "[32, 1, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 7, 7, 0, 1]" + "'", str23, "[32, 1, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 1, 8, 8, 0, 1]" + "'", str24, "[32, 1, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 1, 9, 9, 0, 1]" + "'", str25, "[32, 1, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 2, 0, 0, 1, 1]" + "'", str26, "[32, 2, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 2, 1, 1, 1, 1]" + "'", str27, "[32, 2, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 2, 2, 2, 1, 1]" + "'", str28, "[32, 2, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 2, 3, 3, 1, 1]" + "'", str29, "[32, 2, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 2, 4, 4, 1, 1]" + "'", str30, "[32, 2, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 2, 5, 5, 1, 1]" + "'", str31, "[32, 2, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 2, 6, 6, 1, 1]" + "'", str32, "[32, 2, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 2, 7, 7, 1, 1]" + "'", str33, "[32, 2, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 2, 8, 8, 1, 1]" + "'", str34, "[32, 2, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 2, 9, 9, 1, 1]" + "'", str35, "[32, 2, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 3, 0, 0, 2, 1]" + "'", str36, "[32, 3, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 3, 1, 1, 2, 1]" + "'", str37, "[32, 3, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 3, 2, 2, 2, 1]" + "'", str38, "[32, 3, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 3, 3, 3, 2, 1]" + "'", str39, "[32, 3, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 3, 4, 4, 2, 1]" + "'", str40, "[32, 3, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[32, 3, 5, 5, 2, 1]" + "'", str41, "[32, 3, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[32, 3, 6, 6, 2, 1]" + "'", str42, "[32, 3, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[32, 3, 7, 7, 2, 1]" + "'", str43, "[32, 3, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[32, 3, 8, 8, 2, 1]" + "'", str44, "[32, 3, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[32, 3, 9, 9, 2, 1]" + "'", str45, "[32, 3, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[32, 4, 0, 0, 3, 1]" + "'", str46, "[32, 4, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[32, 4, 1, 1, 3, 1]" + "'", str47, "[32, 4, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[32, 4, 2, 2, 3, 1]" + "'", str48, "[32, 4, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[32, 4, 3, 3, 3, 1]" + "'", str49, "[32, 4, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[32, 4, 4, 4, 3, 1]" + "'", str50, "[32, 4, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[32, 4, 5, 5, 3, 1]" + "'", str51, "[32, 4, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[32, 4, 6, 6, 3, 1]" + "'", str52, "[32, 4, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[32, 4, 7, 7, 3, 1]" + "'", str53, "[32, 4, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[32, 4, 8, 8, 3, 1]" + "'", str54, "[32, 4, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[32, 4, 9, 9, 3, 1]" + "'", str55, "[32, 4, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[32, 5, 0, 0, 4, 1]" + "'", str56, "[32, 5, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[32, 5, 1, 1, 4, 1]" + "'", str57, "[32, 5, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[32, 5, 2, 2, 4, 1]" + "'", str58, "[32, 5, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[32, 5, 3, 3, 4, 1]" + "'", str59, "[32, 5, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[32, 5, 4, 4, 4, 1]" + "'", str60, "[32, 5, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[32, 5, 5, 5, 4, 1]" + "'", str61, "[32, 5, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[32, 5, 6, 6, 4, 1]" + "'", str62, "[32, 5, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[32, 5, 7, 7, 4, 1]" + "'", str63, "[32, 5, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[32, 5, 8, 8, 4, 1]" + "'", str64, "[32, 5, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[32, 5, 9, 9, 4, 1]" + "'", str65, "[32, 5, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[32, 6, 0, 0, 5, 1]" + "'", str66, "[32, 6, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[32, 6, 1, 1, 5, 1]" + "'", str67, "[32, 6, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[32, 6, 2, 2, 5, 1]" + "'", str68, "[32, 6, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[32, 6, 3, 3, 5, 1]" + "'", str69, "[32, 6, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[32, 6, 4, 4, 5, 1]" + "'", str70, "[32, 6, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[32, 6, 5, 5, 5, 1]" + "'", str71, "[32, 6, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[32, 6, 6, 6, 5, 1]" + "'", str72, "[32, 6, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[32, 6, 7, 7, 5, 1]" + "'", str73, "[32, 6, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[32, 6, 8, 8, 5, 1]" + "'", str74, "[32, 6, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[32, 6, 9, 9, 5, 1]" + "'", str75, "[32, 6, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[32, 7, 0, 0, 6, 1]" + "'", str76, "[32, 7, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[32, 7, 1, 1, 6, 1]" + "'", str77, "[32, 7, 1, 1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[32, 7, 2, 2, 6, 1]" + "'", str78, "[32, 7, 2, 2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[32, 7, 3, 3, 6, 1]" + "'", str79, "[32, 7, 3, 3, 6, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[32, 7, 4, 4, 6, 1]" + "'", str80, "[32, 7, 4, 4, 6, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[32, 7, 5, 5, 6, 1]" + "'", str81, "[32, 7, 5, 5, 6, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[32, 7, 6, 6, 6, 1]" + "'", str82, "[32, 7, 6, 6, 6, 1]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test6004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6004");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass77 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 81, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 52, 17, -1, 1]" + "'", str12, "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 52, 18, -1, 1]" + "'", str13, "[97, 52, 18, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 52, 19, -1, 1]" + "'", str14, "[97, 52, 19, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 52, 20, -1, 1]" + "'", str15, "[97, 52, 20, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 52, 21, -1, 1]" + "'", str16, "[97, 52, 21, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 52, 22, -1, 1]" + "'", str17, "[97, 52, 22, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 52, 23, -1, 1]" + "'", str18, "[97, 52, 23, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 52, 24, -1, 1]" + "'", str19, "[97, 52, 24, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 52, 25, -1, 1]" + "'", str20, "[97, 52, 25, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 52, 26, -1, 1]" + "'", str21, "[97, 52, 26, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 52, 27, -1, 1]" + "'", str22, "[97, 52, 27, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 52, 28, -1, 1]" + "'", str23, "[97, 52, 28, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 52, 29, -1, 1]" + "'", str24, "[97, 52, 29, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 52, 30, -1, 1]" + "'", str25, "[97, 52, 30, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 52, 31, -1, 1]" + "'", str26, "[97, 52, 31, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 52, 32, -1, 1]" + "'", str27, "[97, 52, 32, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 52, 33, -1, 1]" + "'", str28, "[97, 52, 33, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 52, 34, -1, 1]" + "'", str29, "[97, 52, 34, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 52, 35, -1, 1]" + "'", str30, "[97, 52, 35, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 52, 36, -1, 1]" + "'", str31, "[97, 52, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 52, 37, -1, 1]" + "'", str32, "[97, 52, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 52, 38, -1, 1]" + "'", str33, "[97, 52, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 52, 39, -1, 1]" + "'", str34, "[97, 52, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 52, 40, -1, 1]" + "'", str35, "[97, 52, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 52, 41, -1, 1]" + "'", str36, "[97, 52, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 52, 42, -1, 1]" + "'", str37, "[97, 52, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 52, 43, -1, 1]" + "'", str38, "[97, 52, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 52, 44, -1, 1]" + "'", str39, "[97, 52, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 52, 45, -1, 1]" + "'", str40, "[97, 52, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 52, 46, -1, 1]" + "'", str41, "[97, 52, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 52, 47, -1, 1]" + "'", str42, "[97, 52, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 52, 48, -1, 1]" + "'", str43, "[97, 52, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 52, 49, -1, 1]" + "'", str44, "[97, 52, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 52, 50, -1, 1]" + "'", str45, "[97, 52, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 51, -1, 1]" + "'", str46, "[97, 52, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 52, 52, -1, 1]" + "'", str47, "[97, 52, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 52, 53, -1, 1]" + "'", str48, "[97, 52, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 52, 54, -1, 1]" + "'", str49, "[97, 52, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 52, 55, -1, 1]" + "'", str50, "[97, 52, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 52, 56, -1, 1]" + "'", str51, "[97, 52, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 52, 57, -1, 1]" + "'", str52, "[97, 52, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 52, 58, -1, 1]" + "'", str53, "[97, 52, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 52, 59, -1, 1]" + "'", str54, "[97, 52, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 52, 60, -1, 1]" + "'", str55, "[97, 52, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 52, 61, -1, 1]" + "'", str56, "[97, 52, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 52, 62, -1, 1]" + "'", str57, "[97, 52, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 52, 63, -1, 1]" + "'", str58, "[97, 52, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 52, 64, -1, 1]" + "'", str59, "[97, 52, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 52, 65, -1, 1]" + "'", str60, "[97, 52, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 52, 66, -1, 1]" + "'", str61, "[97, 52, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 52, 67, -1, 1]" + "'", str62, "[97, 52, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 52, 68, -1, 1]" + "'", str63, "[97, 52, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 52, 69, -1, 1]" + "'", str64, "[97, 52, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 52, 70, -1, 1]" + "'", str65, "[97, 52, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 52, 71, -1, 1]" + "'", str66, "[97, 52, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 52, 72, -1, 1]" + "'", str67, "[97, 52, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 52, 73, -1, 1]" + "'", str68, "[97, 52, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 52, 74, -1, 1]" + "'", str69, "[97, 52, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 52, 75, -1, 1]" + "'", str70, "[97, 52, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 52, 76, -1, 1]" + "'", str71, "[97, 52, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 52, 77, -1, 1]" + "'", str72, "[97, 52, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 52, 78, -1, 1]" + "'", str73, "[97, 52, 78, -1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 52, 79, -1, 1]" + "'", str74, "[97, 52, 79, -1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 52, 80, -1, 1]" + "'", str75, "[97, 52, 80, -1, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 52, 81, -1, 1]" + "'", str76, "[97, 52, 81, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test6005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6005");
        int[] intArray6 = new int[] { ' ', (byte) 0, ' ', (byte) 0, (-1), (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass84 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 7, 7, 7, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 33, 1, -1, 1]" + "'", str7, "[32, 0, 33, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 34, 2, -1, 1]" + "'", str8, "[32, 0, 34, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 35, 3, -1, 1]" + "'", str9, "[32, 0, 35, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 36, 4, -1, 1]" + "'", str10, "[32, 0, 36, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 37, 5, -1, 1]" + "'", str11, "[32, 0, 37, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 38, 6, -1, 1]" + "'", str12, "[32, 0, 38, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 39, 7, -1, 1]" + "'", str13, "[32, 0, 39, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 0, 40, 8, -1, 1]" + "'", str14, "[32, 0, 40, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 0, 41, 9, -1, 1]" + "'", str15, "[32, 0, 41, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 0, 0, 0, 1]" + "'", str16, "[32, 1, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 1, 1, 0, 1]" + "'", str17, "[32, 1, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 2, 2, 0, 1]" + "'", str18, "[32, 1, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 3, 3, 0, 1]" + "'", str19, "[32, 1, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 4, 4, 0, 1]" + "'", str20, "[32, 1, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 5, 5, 0, 1]" + "'", str21, "[32, 1, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 6, 6, 0, 1]" + "'", str22, "[32, 1, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 7, 7, 0, 1]" + "'", str23, "[32, 1, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 1, 8, 8, 0, 1]" + "'", str24, "[32, 1, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 1, 9, 9, 0, 1]" + "'", str25, "[32, 1, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 2, 0, 0, 1, 1]" + "'", str26, "[32, 2, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 2, 1, 1, 1, 1]" + "'", str27, "[32, 2, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 2, 2, 2, 1, 1]" + "'", str28, "[32, 2, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 2, 3, 3, 1, 1]" + "'", str29, "[32, 2, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 2, 4, 4, 1, 1]" + "'", str30, "[32, 2, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 2, 5, 5, 1, 1]" + "'", str31, "[32, 2, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 2, 6, 6, 1, 1]" + "'", str32, "[32, 2, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 2, 7, 7, 1, 1]" + "'", str33, "[32, 2, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 2, 8, 8, 1, 1]" + "'", str34, "[32, 2, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 2, 9, 9, 1, 1]" + "'", str35, "[32, 2, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 3, 0, 0, 2, 1]" + "'", str36, "[32, 3, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 3, 1, 1, 2, 1]" + "'", str37, "[32, 3, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 3, 2, 2, 2, 1]" + "'", str38, "[32, 3, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 3, 3, 3, 2, 1]" + "'", str39, "[32, 3, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 3, 4, 4, 2, 1]" + "'", str40, "[32, 3, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[32, 3, 5, 5, 2, 1]" + "'", str41, "[32, 3, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[32, 3, 6, 6, 2, 1]" + "'", str42, "[32, 3, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[32, 3, 7, 7, 2, 1]" + "'", str43, "[32, 3, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[32, 3, 8, 8, 2, 1]" + "'", str44, "[32, 3, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[32, 3, 9, 9, 2, 1]" + "'", str45, "[32, 3, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[32, 4, 0, 0, 3, 1]" + "'", str46, "[32, 4, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[32, 4, 1, 1, 3, 1]" + "'", str47, "[32, 4, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[32, 4, 2, 2, 3, 1]" + "'", str48, "[32, 4, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[32, 4, 3, 3, 3, 1]" + "'", str49, "[32, 4, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[32, 4, 4, 4, 3, 1]" + "'", str50, "[32, 4, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[32, 4, 5, 5, 3, 1]" + "'", str51, "[32, 4, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[32, 4, 6, 6, 3, 1]" + "'", str52, "[32, 4, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[32, 4, 7, 7, 3, 1]" + "'", str53, "[32, 4, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[32, 4, 8, 8, 3, 1]" + "'", str54, "[32, 4, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[32, 4, 9, 9, 3, 1]" + "'", str55, "[32, 4, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[32, 5, 0, 0, 4, 1]" + "'", str56, "[32, 5, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[32, 5, 1, 1, 4, 1]" + "'", str57, "[32, 5, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[32, 5, 2, 2, 4, 1]" + "'", str58, "[32, 5, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[32, 5, 3, 3, 4, 1]" + "'", str59, "[32, 5, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[32, 5, 4, 4, 4, 1]" + "'", str60, "[32, 5, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[32, 5, 5, 5, 4, 1]" + "'", str61, "[32, 5, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[32, 5, 6, 6, 4, 1]" + "'", str62, "[32, 5, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[32, 5, 7, 7, 4, 1]" + "'", str63, "[32, 5, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[32, 5, 8, 8, 4, 1]" + "'", str64, "[32, 5, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[32, 5, 9, 9, 4, 1]" + "'", str65, "[32, 5, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[32, 6, 0, 0, 5, 1]" + "'", str66, "[32, 6, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[32, 6, 1, 1, 5, 1]" + "'", str67, "[32, 6, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[32, 6, 2, 2, 5, 1]" + "'", str68, "[32, 6, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[32, 6, 3, 3, 5, 1]" + "'", str69, "[32, 6, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[32, 6, 4, 4, 5, 1]" + "'", str70, "[32, 6, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[32, 6, 5, 5, 5, 1]" + "'", str71, "[32, 6, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[32, 6, 6, 6, 5, 1]" + "'", str72, "[32, 6, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[32, 6, 7, 7, 5, 1]" + "'", str73, "[32, 6, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[32, 6, 8, 8, 5, 1]" + "'", str74, "[32, 6, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[32, 6, 9, 9, 5, 1]" + "'", str75, "[32, 6, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[32, 7, 0, 0, 6, 1]" + "'", str76, "[32, 7, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[32, 7, 1, 1, 6, 1]" + "'", str77, "[32, 7, 1, 1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[32, 7, 2, 2, 6, 1]" + "'", str78, "[32, 7, 2, 2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[32, 7, 3, 3, 6, 1]" + "'", str79, "[32, 7, 3, 3, 6, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[32, 7, 4, 4, 6, 1]" + "'", str80, "[32, 7, 4, 4, 6, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[32, 7, 5, 5, 6, 1]" + "'", str81, "[32, 7, 5, 5, 6, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[32, 7, 6, 6, 6, 1]" + "'", str82, "[32, 7, 6, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[32, 7, 7, 7, 6, 1]" + "'", str83, "[32, 7, 7, 7, 6, 1]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test6006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6006");
        int[] intArray4 = new int[] { '4', (-1), (byte) 10, 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass72 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 66, 77, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 11, 1]" + "'", str5, "[52, 0, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 12, 1]" + "'", str6, "[52, 1, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 13, 1]" + "'", str7, "[52, 2, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 14, 1]" + "'", str8, "[52, 3, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 15, 1]" + "'", str9, "[52, 4, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 16, 1]" + "'", str10, "[52, 5, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 17, 1]" + "'", str11, "[52, 6, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 18, 1]" + "'", str12, "[52, 7, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 19, 1]" + "'", str13, "[52, 8, 19, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 20, 1]" + "'", str14, "[52, 9, 20, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 21, 1]" + "'", str15, "[52, 10, 21, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 22, 1]" + "'", str16, "[52, 11, 22, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 23, 1]" + "'", str17, "[52, 12, 23, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 24, 1]" + "'", str18, "[52, 13, 24, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 25, 1]" + "'", str19, "[52, 14, 25, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 26, 1]" + "'", str20, "[52, 15, 26, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 27, 1]" + "'", str21, "[52, 16, 27, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 28, 1]" + "'", str22, "[52, 17, 28, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 29, 1]" + "'", str23, "[52, 18, 29, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 30, 1]" + "'", str24, "[52, 19, 30, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 31, 1]" + "'", str25, "[52, 20, 31, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 32, 1]" + "'", str26, "[52, 21, 32, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 33, 1]" + "'", str27, "[52, 22, 33, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 34, 1]" + "'", str28, "[52, 23, 34, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 35, 1]" + "'", str29, "[52, 24, 35, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 36, 1]" + "'", str30, "[52, 25, 36, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 37, 1]" + "'", str31, "[52, 26, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 38, 1]" + "'", str32, "[52, 27, 38, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 39, 1]" + "'", str33, "[52, 28, 39, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 40, 1]" + "'", str34, "[52, 29, 40, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 41, 1]" + "'", str35, "[52, 30, 41, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 42, 1]" + "'", str36, "[52, 31, 42, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 43, 1]" + "'", str37, "[52, 32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 44, 1]" + "'", str38, "[52, 33, 44, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 45, 1]" + "'", str39, "[52, 34, 45, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 46, 1]" + "'", str40, "[52, 35, 46, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 47, 1]" + "'", str41, "[52, 36, 47, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 48, 1]" + "'", str42, "[52, 37, 48, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 49, 1]" + "'", str43, "[52, 38, 49, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 50, 1]" + "'", str44, "[52, 39, 50, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 51, 1]" + "'", str45, "[52, 40, 51, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 52, 1]" + "'", str46, "[52, 41, 52, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 53, 1]" + "'", str47, "[52, 42, 53, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 54, 1]" + "'", str48, "[52, 43, 54, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 55, 1]" + "'", str49, "[52, 44, 55, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 56, 1]" + "'", str50, "[52, 45, 56, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 57, 1]" + "'", str51, "[52, 46, 57, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 58, 1]" + "'", str52, "[52, 47, 58, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 59, 1]" + "'", str53, "[52, 48, 59, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 60, 1]" + "'", str54, "[52, 49, 60, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 61, 1]" + "'", str55, "[52, 50, 61, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 62, 1]" + "'", str56, "[52, 51, 62, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 63, 1]" + "'", str57, "[52, 52, 63, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 64, 1]" + "'", str58, "[52, 53, 64, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[52, 54, 65, 1]" + "'", str59, "[52, 54, 65, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[52, 55, 66, 1]" + "'", str60, "[52, 55, 66, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[52, 56, 67, 1]" + "'", str61, "[52, 56, 67, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[52, 57, 68, 1]" + "'", str62, "[52, 57, 68, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[52, 58, 69, 1]" + "'", str63, "[52, 58, 69, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[52, 59, 70, 1]" + "'", str64, "[52, 59, 70, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[52, 60, 71, 1]" + "'", str65, "[52, 60, 71, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[52, 61, 72, 1]" + "'", str66, "[52, 61, 72, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[52, 62, 73, 1]" + "'", str67, "[52, 62, 73, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[52, 63, 74, 1]" + "'", str68, "[52, 63, 74, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[52, 64, 75, 1]" + "'", str69, "[52, 64, 75, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[52, 65, 76, 1]" + "'", str70, "[52, 65, 76, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[52, 66, 77, 1]" + "'", str71, "[52, 66, 77, 1]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test6007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6007");
        int[] intArray2 = new int[] { (short) 0, 100 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass38 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[35, 135]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 101]" + "'", str3, "[1, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 102]" + "'", str4, "[2, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 103]" + "'", str5, "[3, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 104]" + "'", str6, "[4, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 105]" + "'", str7, "[5, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 106]" + "'", str8, "[6, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 107]" + "'", str9, "[7, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 108]" + "'", str10, "[8, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9, 109]" + "'", str11, "[9, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 110]" + "'", str12, "[10, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 111]" + "'", str13, "[11, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[12, 112]" + "'", str14, "[12, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[13, 113]" + "'", str15, "[13, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[14, 114]" + "'", str16, "[14, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[15, 115]" + "'", str17, "[15, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[16, 116]" + "'", str18, "[16, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[17, 117]" + "'", str19, "[17, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[18, 118]" + "'", str20, "[18, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[19, 119]" + "'", str21, "[19, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[20, 120]" + "'", str22, "[20, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[21, 121]" + "'", str23, "[21, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[22, 122]" + "'", str24, "[22, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[23, 123]" + "'", str25, "[23, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[24, 124]" + "'", str26, "[24, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[25, 125]" + "'", str27, "[25, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[26, 126]" + "'", str28, "[26, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[27, 127]" + "'", str29, "[27, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[28, 128]" + "'", str30, "[28, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[29, 129]" + "'", str31, "[29, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[30, 130]" + "'", str32, "[30, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[31, 131]" + "'", str33, "[31, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 132]" + "'", str34, "[32, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[33, 133]" + "'", str35, "[33, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[34, 134]" + "'", str36, "[34, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 135]" + "'", str37, "[35, 135]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test6008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6008");
        int[] intArray5 = new int[] { ' ', ' ', 1, (byte) 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass14 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 32, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 32, 2, 0, 1]" + "'", str6, "[32, 32, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 32, 3, 0, 1]" + "'", str7, "[32, 32, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 32, 4, 0, 1]" + "'", str8, "[32, 32, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 32, 5, 0, 1]" + "'", str9, "[32, 32, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 32, 6, 0, 1]" + "'", str10, "[32, 32, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 32, 7, 0, 1]" + "'", str11, "[32, 32, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 32, 8, 0, 1]" + "'", str12, "[32, 32, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 32, 9, 0, 1]" + "'", str13, "[32, 32, 9, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test6009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6009");
        int[] intArray4 = new int[] { (byte) -1, 0, (byte) -1, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass24 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 0, 52]" + "'", str5, "[-1, 1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 1, 52]" + "'", str6, "[-1, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 3, 2, 52]" + "'", str7, "[-1, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 4, 3, 52]" + "'", str8, "[-1, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 5, 4, 52]" + "'", str9, "[-1, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 6, 5, 52]" + "'", str10, "[-1, 6, 5, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 7, 6, 52]" + "'", str11, "[-1, 7, 6, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 8, 7, 52]" + "'", str12, "[-1, 8, 7, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 9, 8, 52]" + "'", str13, "[-1, 9, 8, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 9, 52]" + "'", str14, "[-1, 10, 9, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 0, 0, 53]" + "'", str15, "[0, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 1, 53]" + "'", str16, "[0, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 53]" + "'", str17, "[0, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 3, 3, 53]" + "'", str18, "[0, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 4, 4, 53]" + "'", str19, "[0, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 5, 5, 53]" + "'", str20, "[0, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 6, 6, 53]" + "'", str21, "[0, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 7, 7, 53]" + "'", str22, "[0, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 8, 8, 53]" + "'", str23, "[0, 8, 8, 53]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test6010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6010");
        int[] intArray4 = new int[] { (byte) -1, 0, (byte) -1, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass23 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 0, 52]" + "'", str5, "[-1, 1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 1, 52]" + "'", str6, "[-1, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 3, 2, 52]" + "'", str7, "[-1, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 4, 3, 52]" + "'", str8, "[-1, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 5, 4, 52]" + "'", str9, "[-1, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 6, 5, 52]" + "'", str10, "[-1, 6, 5, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 7, 6, 52]" + "'", str11, "[-1, 7, 6, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 8, 7, 52]" + "'", str12, "[-1, 8, 7, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 9, 8, 52]" + "'", str13, "[-1, 9, 8, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 9, 52]" + "'", str14, "[-1, 10, 9, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 0, 0, 53]" + "'", str15, "[0, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 1, 53]" + "'", str16, "[0, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 53]" + "'", str17, "[0, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 3, 3, 53]" + "'", str18, "[0, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 4, 4, 53]" + "'", str19, "[0, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 5, 5, 53]" + "'", str20, "[0, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 6, 6, 53]" + "'", str21, "[0, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 7, 7, 53]" + "'", str22, "[0, 7, 7, 53]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test6011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6011");
        int[] intArray3 = new int[] { 1, (byte) 0, (byte) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass67 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[7, 3, 6]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 5]" + "'", str60, "[6, 7, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 5]" + "'", str61, "[6, 8, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 5]" + "'", str62, "[6, 9, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 6]" + "'", str63, "[7, 0, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 6]" + "'", str64, "[7, 1, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 6]" + "'", str65, "[7, 2, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 6]" + "'", str66, "[7, 3, 6]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test6012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6012");
        int[] intArray5 = new int[] { (byte) 1, (byte) -1, (short) 1, (byte) 1, 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass22 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 7, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, -1, 2, 1, 10]" + "'", str6, "[1, -1, 2, 1, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, -1, 3, 1, 10]" + "'", str7, "[1, -1, 3, 1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, -1, 4, 1, 10]" + "'", str8, "[1, -1, 4, 1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, -1, 5, 1, 10]" + "'", str9, "[1, -1, 5, 1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, -1, 6, 1, 10]" + "'", str10, "[1, -1, 6, 1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, -1, 7, 1, 10]" + "'", str11, "[1, -1, 7, 1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, -1, 8, 1, 10]" + "'", str12, "[1, -1, 8, 1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, -1, 9, 1, 10]" + "'", str13, "[1, -1, 9, 1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 0, 2, 10]" + "'", str14, "[1, 0, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 1, 2, 10]" + "'", str15, "[1, 0, 1, 2, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 2, 2, 10]" + "'", str16, "[1, 0, 2, 2, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 3, 2, 10]" + "'", str17, "[1, 0, 3, 2, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 4, 2, 10]" + "'", str18, "[1, 0, 4, 2, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 5, 2, 10]" + "'", str19, "[1, 0, 5, 2, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 6, 2, 10]" + "'", str20, "[1, 0, 6, 2, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 7, 2, 10]" + "'", str21, "[1, 0, 7, 2, 10]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6013");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass22 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6014");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass81 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 112, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 54, 1]" + "'", str22, "[32, 54, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 55, 1]" + "'", str23, "[32, 55, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 56, 1]" + "'", str24, "[32, 56, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 57, 1]" + "'", str25, "[32, 57, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 58, 1]" + "'", str26, "[32, 58, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 59, 1]" + "'", str27, "[32, 59, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 60, 1]" + "'", str28, "[32, 60, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 61, 1]" + "'", str29, "[32, 61, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 62, 1]" + "'", str30, "[32, 62, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 63, 1]" + "'", str31, "[32, 63, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 64, 1]" + "'", str32, "[32, 64, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 65, 1]" + "'", str33, "[32, 65, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 66, 1]" + "'", str34, "[32, 66, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 67, 1]" + "'", str35, "[32, 67, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 68, 1]" + "'", str36, "[32, 68, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 69, 1]" + "'", str37, "[32, 69, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 70, 1]" + "'", str38, "[32, 70, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 71, 1]" + "'", str39, "[32, 71, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 72, 1]" + "'", str40, "[32, 72, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[32, 73, 1]" + "'", str41, "[32, 73, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[32, 74, 1]" + "'", str42, "[32, 74, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[32, 75, 1]" + "'", str43, "[32, 75, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[32, 76, 1]" + "'", str44, "[32, 76, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[32, 77, 1]" + "'", str45, "[32, 77, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[32, 78, 1]" + "'", str46, "[32, 78, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[32, 79, 1]" + "'", str47, "[32, 79, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[32, 80, 1]" + "'", str48, "[32, 80, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[32, 81, 1]" + "'", str49, "[32, 81, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[32, 82, 1]" + "'", str50, "[32, 82, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[32, 83, 1]" + "'", str51, "[32, 83, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[32, 84, 1]" + "'", str52, "[32, 84, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[32, 85, 1]" + "'", str53, "[32, 85, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[32, 86, 1]" + "'", str54, "[32, 86, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[32, 87, 1]" + "'", str55, "[32, 87, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[32, 88, 1]" + "'", str56, "[32, 88, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[32, 89, 1]" + "'", str57, "[32, 89, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[32, 90, 1]" + "'", str58, "[32, 90, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[32, 91, 1]" + "'", str59, "[32, 91, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[32, 92, 1]" + "'", str60, "[32, 92, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[32, 93, 1]" + "'", str61, "[32, 93, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[32, 94, 1]" + "'", str62, "[32, 94, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[32, 95, 1]" + "'", str63, "[32, 95, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[32, 96, 1]" + "'", str64, "[32, 96, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[32, 97, 1]" + "'", str65, "[32, 97, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[32, 98, 1]" + "'", str66, "[32, 98, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[32, 99, 1]" + "'", str67, "[32, 99, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[32, 100, 1]" + "'", str68, "[32, 100, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[32, 101, 1]" + "'", str69, "[32, 101, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[32, 102, 1]" + "'", str70, "[32, 102, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[32, 103, 1]" + "'", str71, "[32, 103, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[32, 104, 1]" + "'", str72, "[32, 104, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[32, 105, 1]" + "'", str73, "[32, 105, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[32, 106, 1]" + "'", str74, "[32, 106, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[32, 107, 1]" + "'", str75, "[32, 107, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[32, 108, 1]" + "'", str76, "[32, 108, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[32, 109, 1]" + "'", str77, "[32, 109, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[32, 110, 1]" + "'", str78, "[32, 110, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[32, 111, 1]" + "'", str79, "[32, 111, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[32, 112, 1]" + "'", str80, "[32, 112, 1]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test6015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6015");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass88 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 108, 2, 2, 7, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 7, 7, 1, 0]" + "'", str32, "[0, 102, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 8, 8, 1, 0]" + "'", str33, "[0, 102, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 9, 9, 1, 0]" + "'", str34, "[0, 102, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 103, 0, 0, 2, 0]" + "'", str35, "[0, 103, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 103, 1, 1, 2, 0]" + "'", str36, "[0, 103, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 2, 2, 2, 0]" + "'", str37, "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 3, 3, 2, 0]" + "'", str38, "[0, 103, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 4, 4, 2, 0]" + "'", str39, "[0, 103, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 5, 5, 2, 0]" + "'", str40, "[0, 103, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 6, 6, 2, 0]" + "'", str41, "[0, 103, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 7, 7, 2, 0]" + "'", str42, "[0, 103, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 8, 8, 2, 0]" + "'", str43, "[0, 103, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 9, 9, 2, 0]" + "'", str44, "[0, 103, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 104, 0, 0, 3, 0]" + "'", str45, "[0, 104, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 104, 1, 1, 3, 0]" + "'", str46, "[0, 104, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 2, 2, 3, 0]" + "'", str47, "[0, 104, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 3, 3, 3, 0]" + "'", str48, "[0, 104, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 4, 4, 3, 0]" + "'", str49, "[0, 104, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 5, 5, 3, 0]" + "'", str50, "[0, 104, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 6, 6, 3, 0]" + "'", str51, "[0, 104, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 7, 7, 3, 0]" + "'", str52, "[0, 104, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 8, 8, 3, 0]" + "'", str53, "[0, 104, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 9, 9, 3, 0]" + "'", str54, "[0, 104, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 105, 0, 0, 4, 0]" + "'", str55, "[0, 105, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 105, 1, 1, 4, 0]" + "'", str56, "[0, 105, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 2, 2, 4, 0]" + "'", str57, "[0, 105, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 3, 3, 4, 0]" + "'", str58, "[0, 105, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 4, 4, 4, 0]" + "'", str59, "[0, 105, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 105, 5, 5, 4, 0]" + "'", str60, "[0, 105, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 105, 6, 6, 4, 0]" + "'", str61, "[0, 105, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 105, 7, 7, 4, 0]" + "'", str62, "[0, 105, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 105, 8, 8, 4, 0]" + "'", str63, "[0, 105, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 105, 9, 9, 4, 0]" + "'", str64, "[0, 105, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 106, 0, 0, 5, 0]" + "'", str65, "[0, 106, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 106, 1, 1, 5, 0]" + "'", str66, "[0, 106, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 106, 2, 2, 5, 0]" + "'", str67, "[0, 106, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 106, 3, 3, 5, 0]" + "'", str68, "[0, 106, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 106, 4, 4, 5, 0]" + "'", str69, "[0, 106, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 106, 5, 5, 5, 0]" + "'", str70, "[0, 106, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 106, 6, 6, 5, 0]" + "'", str71, "[0, 106, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 106, 7, 7, 5, 0]" + "'", str72, "[0, 106, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 106, 8, 8, 5, 0]" + "'", str73, "[0, 106, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[0, 106, 9, 9, 5, 0]" + "'", str74, "[0, 106, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[0, 107, 0, 0, 6, 0]" + "'", str75, "[0, 107, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[0, 107, 1, 1, 6, 0]" + "'", str76, "[0, 107, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[0, 107, 2, 2, 6, 0]" + "'", str77, "[0, 107, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[0, 107, 3, 3, 6, 0]" + "'", str78, "[0, 107, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[0, 107, 4, 4, 6, 0]" + "'", str79, "[0, 107, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[0, 107, 5, 5, 6, 0]" + "'", str80, "[0, 107, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[0, 107, 6, 6, 6, 0]" + "'", str81, "[0, 107, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[0, 107, 7, 7, 6, 0]" + "'", str82, "[0, 107, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[0, 107, 8, 8, 6, 0]" + "'", str83, "[0, 107, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[0, 107, 9, 9, 6, 0]" + "'", str84, "[0, 107, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[0, 108, 0, 0, 7, 0]" + "'", str85, "[0, 108, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[0, 108, 1, 1, 7, 0]" + "'", str86, "[0, 108, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[0, 108, 2, 2, 7, 0]" + "'", str87, "[0, 108, 2, 2, 7, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test6016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6016");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass82 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 7, 5, 5, 8, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 16, 6, 1, 0]" + "'", str12, "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 17, 7, 1, 0]" + "'", str13, "[100, 0, 17, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 18, 8, 1, 0]" + "'", str14, "[100, 0, 18, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 0, 19, 9, 1, 0]" + "'", str15, "[100, 0, 19, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 1, 0, 0, 2, 0]" + "'", str16, "[100, 1, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 1, 1, 1, 2, 0]" + "'", str17, "[100, 1, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 1, 2, 2, 2, 0]" + "'", str18, "[100, 1, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 1, 3, 3, 2, 0]" + "'", str19, "[100, 1, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 1, 4, 4, 2, 0]" + "'", str20, "[100, 1, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 1, 5, 5, 2, 0]" + "'", str21, "[100, 1, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 1, 6, 6, 2, 0]" + "'", str22, "[100, 1, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 1, 7, 7, 2, 0]" + "'", str23, "[100, 1, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 1, 8, 8, 2, 0]" + "'", str24, "[100, 1, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 1, 9, 9, 2, 0]" + "'", str25, "[100, 1, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 2, 0, 0, 3, 0]" + "'", str26, "[100, 2, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 2, 1, 1, 3, 0]" + "'", str27, "[100, 2, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 2, 2, 2, 3, 0]" + "'", str28, "[100, 2, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 2, 3, 3, 3, 0]" + "'", str29, "[100, 2, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 2, 4, 4, 3, 0]" + "'", str30, "[100, 2, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 2, 5, 5, 3, 0]" + "'", str31, "[100, 2, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 2, 6, 6, 3, 0]" + "'", str32, "[100, 2, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 2, 7, 7, 3, 0]" + "'", str33, "[100, 2, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 2, 8, 8, 3, 0]" + "'", str34, "[100, 2, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 2, 9, 9, 3, 0]" + "'", str35, "[100, 2, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 3, 0, 0, 4, 0]" + "'", str36, "[100, 3, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 1, 1, 4, 0]" + "'", str37, "[100, 3, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 2, 2, 4, 0]" + "'", str38, "[100, 3, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 3, 3, 3, 4, 0]" + "'", str39, "[100, 3, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 3, 4, 4, 4, 0]" + "'", str40, "[100, 3, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 3, 5, 5, 4, 0]" + "'", str41, "[100, 3, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 3, 6, 6, 4, 0]" + "'", str42, "[100, 3, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 3, 7, 7, 4, 0]" + "'", str43, "[100, 3, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 3, 8, 8, 4, 0]" + "'", str44, "[100, 3, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 3, 9, 9, 4, 0]" + "'", str45, "[100, 3, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 4, 0, 0, 5, 0]" + "'", str46, "[100, 4, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 4, 1, 1, 5, 0]" + "'", str47, "[100, 4, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 4, 2, 2, 5, 0]" + "'", str48, "[100, 4, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 4, 3, 3, 5, 0]" + "'", str49, "[100, 4, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 4, 4, 4, 5, 0]" + "'", str50, "[100, 4, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 4, 5, 5, 5, 0]" + "'", str51, "[100, 4, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 4, 6, 6, 5, 0]" + "'", str52, "[100, 4, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 4, 7, 7, 5, 0]" + "'", str53, "[100, 4, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 4, 8, 8, 5, 0]" + "'", str54, "[100, 4, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 4, 9, 9, 5, 0]" + "'", str55, "[100, 4, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 5, 0, 0, 6, 0]" + "'", str56, "[100, 5, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 5, 1, 1, 6, 0]" + "'", str57, "[100, 5, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 5, 2, 2, 6, 0]" + "'", str58, "[100, 5, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 5, 3, 3, 6, 0]" + "'", str59, "[100, 5, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 5, 4, 4, 6, 0]" + "'", str60, "[100, 5, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 5, 5, 5, 6, 0]" + "'", str61, "[100, 5, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 5, 6, 6, 6, 0]" + "'", str62, "[100, 5, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 5, 7, 7, 6, 0]" + "'", str63, "[100, 5, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 5, 8, 8, 6, 0]" + "'", str64, "[100, 5, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 5, 9, 9, 6, 0]" + "'", str65, "[100, 5, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 6, 0, 0, 7, 0]" + "'", str66, "[100, 6, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 6, 1, 1, 7, 0]" + "'", str67, "[100, 6, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 6, 2, 2, 7, 0]" + "'", str68, "[100, 6, 2, 2, 7, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 6, 3, 3, 7, 0]" + "'", str69, "[100, 6, 3, 3, 7, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 6, 4, 4, 7, 0]" + "'", str70, "[100, 6, 4, 4, 7, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 6, 5, 5, 7, 0]" + "'", str71, "[100, 6, 5, 5, 7, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 6, 6, 6, 7, 0]" + "'", str72, "[100, 6, 6, 6, 7, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 6, 7, 7, 7, 0]" + "'", str73, "[100, 6, 7, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 6, 8, 8, 7, 0]" + "'", str74, "[100, 6, 8, 8, 7, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 6, 9, 9, 7, 0]" + "'", str75, "[100, 6, 9, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 7, 0, 0, 8, 0]" + "'", str76, "[100, 7, 0, 0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 7, 1, 1, 8, 0]" + "'", str77, "[100, 7, 1, 1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 7, 2, 2, 8, 0]" + "'", str78, "[100, 7, 2, 2, 8, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 7, 3, 3, 8, 0]" + "'", str79, "[100, 7, 3, 3, 8, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 7, 4, 4, 8, 0]" + "'", str80, "[100, 7, 4, 4, 8, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 7, 5, 5, 8, 0]" + "'", str81, "[100, 7, 5, 5, 8, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test6017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6017");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass79 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 83, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 52, 17, -1, 1]" + "'", str12, "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 52, 18, -1, 1]" + "'", str13, "[97, 52, 18, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 52, 19, -1, 1]" + "'", str14, "[97, 52, 19, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 52, 20, -1, 1]" + "'", str15, "[97, 52, 20, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 52, 21, -1, 1]" + "'", str16, "[97, 52, 21, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 52, 22, -1, 1]" + "'", str17, "[97, 52, 22, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 52, 23, -1, 1]" + "'", str18, "[97, 52, 23, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 52, 24, -1, 1]" + "'", str19, "[97, 52, 24, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 52, 25, -1, 1]" + "'", str20, "[97, 52, 25, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 52, 26, -1, 1]" + "'", str21, "[97, 52, 26, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 52, 27, -1, 1]" + "'", str22, "[97, 52, 27, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 52, 28, -1, 1]" + "'", str23, "[97, 52, 28, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 52, 29, -1, 1]" + "'", str24, "[97, 52, 29, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 52, 30, -1, 1]" + "'", str25, "[97, 52, 30, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 52, 31, -1, 1]" + "'", str26, "[97, 52, 31, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 52, 32, -1, 1]" + "'", str27, "[97, 52, 32, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 52, 33, -1, 1]" + "'", str28, "[97, 52, 33, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 52, 34, -1, 1]" + "'", str29, "[97, 52, 34, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 52, 35, -1, 1]" + "'", str30, "[97, 52, 35, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 52, 36, -1, 1]" + "'", str31, "[97, 52, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 52, 37, -1, 1]" + "'", str32, "[97, 52, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 52, 38, -1, 1]" + "'", str33, "[97, 52, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 52, 39, -1, 1]" + "'", str34, "[97, 52, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 52, 40, -1, 1]" + "'", str35, "[97, 52, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 52, 41, -1, 1]" + "'", str36, "[97, 52, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 52, 42, -1, 1]" + "'", str37, "[97, 52, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 52, 43, -1, 1]" + "'", str38, "[97, 52, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 52, 44, -1, 1]" + "'", str39, "[97, 52, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 52, 45, -1, 1]" + "'", str40, "[97, 52, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 52, 46, -1, 1]" + "'", str41, "[97, 52, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 52, 47, -1, 1]" + "'", str42, "[97, 52, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 52, 48, -1, 1]" + "'", str43, "[97, 52, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 52, 49, -1, 1]" + "'", str44, "[97, 52, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 52, 50, -1, 1]" + "'", str45, "[97, 52, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 51, -1, 1]" + "'", str46, "[97, 52, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 52, 52, -1, 1]" + "'", str47, "[97, 52, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 52, 53, -1, 1]" + "'", str48, "[97, 52, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 52, 54, -1, 1]" + "'", str49, "[97, 52, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 52, 55, -1, 1]" + "'", str50, "[97, 52, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 52, 56, -1, 1]" + "'", str51, "[97, 52, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 52, 57, -1, 1]" + "'", str52, "[97, 52, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 52, 58, -1, 1]" + "'", str53, "[97, 52, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 52, 59, -1, 1]" + "'", str54, "[97, 52, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 52, 60, -1, 1]" + "'", str55, "[97, 52, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 52, 61, -1, 1]" + "'", str56, "[97, 52, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 52, 62, -1, 1]" + "'", str57, "[97, 52, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 52, 63, -1, 1]" + "'", str58, "[97, 52, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 52, 64, -1, 1]" + "'", str59, "[97, 52, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 52, 65, -1, 1]" + "'", str60, "[97, 52, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 52, 66, -1, 1]" + "'", str61, "[97, 52, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 52, 67, -1, 1]" + "'", str62, "[97, 52, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 52, 68, -1, 1]" + "'", str63, "[97, 52, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 52, 69, -1, 1]" + "'", str64, "[97, 52, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 52, 70, -1, 1]" + "'", str65, "[97, 52, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 52, 71, -1, 1]" + "'", str66, "[97, 52, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 52, 72, -1, 1]" + "'", str67, "[97, 52, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 52, 73, -1, 1]" + "'", str68, "[97, 52, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 52, 74, -1, 1]" + "'", str69, "[97, 52, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 52, 75, -1, 1]" + "'", str70, "[97, 52, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 52, 76, -1, 1]" + "'", str71, "[97, 52, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 52, 77, -1, 1]" + "'", str72, "[97, 52, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 52, 78, -1, 1]" + "'", str73, "[97, 52, 78, -1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 52, 79, -1, 1]" + "'", str74, "[97, 52, 79, -1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 52, 80, -1, 1]" + "'", str75, "[97, 52, 80, -1, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 52, 81, -1, 1]" + "'", str76, "[97, 52, 81, -1, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 52, 82, -1, 1]" + "'", str77, "[97, 52, 82, -1, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 52, 83, -1, 1]" + "'", str78, "[97, 52, 83, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test6018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6018");
        int[] intArray5 = new int[] { (short) -1, (byte) 100, (byte) 10, (short) 100, ' ' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass63 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 67, 100, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 100, 11, 100, 32]" + "'", str6, "[-1, 100, 11, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 12, 100, 32]" + "'", str7, "[-1, 100, 12, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 13, 100, 32]" + "'", str8, "[-1, 100, 13, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 14, 100, 32]" + "'", str9, "[-1, 100, 14, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 15, 100, 32]" + "'", str10, "[-1, 100, 15, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 16, 100, 32]" + "'", str11, "[-1, 100, 16, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 17, 100, 32]" + "'", str12, "[-1, 100, 17, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 18, 100, 32]" + "'", str13, "[-1, 100, 18, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 19, 100, 32]" + "'", str14, "[-1, 100, 19, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 20, 100, 32]" + "'", str15, "[-1, 100, 20, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 21, 100, 32]" + "'", str16, "[-1, 100, 21, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 22, 100, 32]" + "'", str17, "[-1, 100, 22, 100, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 23, 100, 32]" + "'", str18, "[-1, 100, 23, 100, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 24, 100, 32]" + "'", str19, "[-1, 100, 24, 100, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 25, 100, 32]" + "'", str20, "[-1, 100, 25, 100, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 26, 100, 32]" + "'", str21, "[-1, 100, 26, 100, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 27, 100, 32]" + "'", str22, "[-1, 100, 27, 100, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 28, 100, 32]" + "'", str23, "[-1, 100, 28, 100, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 29, 100, 32]" + "'", str24, "[-1, 100, 29, 100, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 30, 100, 32]" + "'", str25, "[-1, 100, 30, 100, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 31, 100, 32]" + "'", str26, "[-1, 100, 31, 100, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 32, 100, 32]" + "'", str27, "[-1, 100, 32, 100, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 33, 100, 32]" + "'", str28, "[-1, 100, 33, 100, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 34, 100, 32]" + "'", str29, "[-1, 100, 34, 100, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 35, 100, 32]" + "'", str30, "[-1, 100, 35, 100, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 36, 100, 32]" + "'", str31, "[-1, 100, 36, 100, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 37, 100, 32]" + "'", str32, "[-1, 100, 37, 100, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 38, 100, 32]" + "'", str33, "[-1, 100, 38, 100, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 39, 100, 32]" + "'", str34, "[-1, 100, 39, 100, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 40, 100, 32]" + "'", str35, "[-1, 100, 40, 100, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 41, 100, 32]" + "'", str36, "[-1, 100, 41, 100, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 42, 100, 32]" + "'", str37, "[-1, 100, 42, 100, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 100, 43, 100, 32]" + "'", str38, "[-1, 100, 43, 100, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 100, 44, 100, 32]" + "'", str39, "[-1, 100, 44, 100, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 100, 45, 100, 32]" + "'", str40, "[-1, 100, 45, 100, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 100, 46, 100, 32]" + "'", str41, "[-1, 100, 46, 100, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 100, 47, 100, 32]" + "'", str42, "[-1, 100, 47, 100, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 100, 48, 100, 32]" + "'", str43, "[-1, 100, 48, 100, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 100, 49, 100, 32]" + "'", str44, "[-1, 100, 49, 100, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 100, 50, 100, 32]" + "'", str45, "[-1, 100, 50, 100, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 100, 51, 100, 32]" + "'", str46, "[-1, 100, 51, 100, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 100, 52, 100, 32]" + "'", str47, "[-1, 100, 52, 100, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 100, 53, 100, 32]" + "'", str48, "[-1, 100, 53, 100, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 100, 54, 100, 32]" + "'", str49, "[-1, 100, 54, 100, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 100, 55, 100, 32]" + "'", str50, "[-1, 100, 55, 100, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 100, 56, 100, 32]" + "'", str51, "[-1, 100, 56, 100, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 57, 100, 32]" + "'", str52, "[-1, 100, 57, 100, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 100, 58, 100, 32]" + "'", str53, "[-1, 100, 58, 100, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 100, 59, 100, 32]" + "'", str54, "[-1, 100, 59, 100, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 100, 60, 100, 32]" + "'", str55, "[-1, 100, 60, 100, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 100, 61, 100, 32]" + "'", str56, "[-1, 100, 61, 100, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 100, 62, 100, 32]" + "'", str57, "[-1, 100, 62, 100, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 100, 63, 100, 32]" + "'", str58, "[-1, 100, 63, 100, 32]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 100, 64, 100, 32]" + "'", str59, "[-1, 100, 64, 100, 32]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 100, 65, 100, 32]" + "'", str60, "[-1, 100, 65, 100, 32]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 100, 66, 100, 32]" + "'", str61, "[-1, 100, 66, 100, 32]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 100, 67, 100, 32]" + "'", str62, "[-1, 100, 67, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test6019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6019");
        int[] intArray6 = new int[] { 0, (short) -1, 'a', '#', (byte) 0, 100 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass63 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 153, 91, 0, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 98, 36, 0, 100]" + "'", str7, "[0, -1, 98, 36, 0, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 99, 37, 0, 100]" + "'", str8, "[0, -1, 99, 37, 0, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 100, 38, 0, 100]" + "'", str9, "[0, -1, 100, 38, 0, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 101, 39, 0, 100]" + "'", str10, "[0, -1, 101, 39, 0, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 102, 40, 0, 100]" + "'", str11, "[0, -1, 102, 40, 0, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 103, 41, 0, 100]" + "'", str12, "[0, -1, 103, 41, 0, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 104, 42, 0, 100]" + "'", str13, "[0, -1, 104, 42, 0, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 105, 43, 0, 100]" + "'", str14, "[0, -1, 105, 43, 0, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 106, 44, 0, 100]" + "'", str15, "[0, -1, 106, 44, 0, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 107, 45, 0, 100]" + "'", str16, "[0, -1, 107, 45, 0, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 108, 46, 0, 100]" + "'", str17, "[0, -1, 108, 46, 0, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 109, 47, 0, 100]" + "'", str18, "[0, -1, 109, 47, 0, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 110, 48, 0, 100]" + "'", str19, "[0, -1, 110, 48, 0, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 111, 49, 0, 100]" + "'", str20, "[0, -1, 111, 49, 0, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 112, 50, 0, 100]" + "'", str21, "[0, -1, 112, 50, 0, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 113, 51, 0, 100]" + "'", str22, "[0, -1, 113, 51, 0, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 114, 52, 0, 100]" + "'", str23, "[0, -1, 114, 52, 0, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 115, 53, 0, 100]" + "'", str24, "[0, -1, 115, 53, 0, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 116, 54, 0, 100]" + "'", str25, "[0, -1, 116, 54, 0, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 117, 55, 0, 100]" + "'", str26, "[0, -1, 117, 55, 0, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 118, 56, 0, 100]" + "'", str27, "[0, -1, 118, 56, 0, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 119, 57, 0, 100]" + "'", str28, "[0, -1, 119, 57, 0, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 120, 58, 0, 100]" + "'", str29, "[0, -1, 120, 58, 0, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 121, 59, 0, 100]" + "'", str30, "[0, -1, 121, 59, 0, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 122, 60, 0, 100]" + "'", str31, "[0, -1, 122, 60, 0, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 123, 61, 0, 100]" + "'", str32, "[0, -1, 123, 61, 0, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 124, 62, 0, 100]" + "'", str33, "[0, -1, 124, 62, 0, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 125, 63, 0, 100]" + "'", str34, "[0, -1, 125, 63, 0, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 126, 64, 0, 100]" + "'", str35, "[0, -1, 126, 64, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 127, 65, 0, 100]" + "'", str36, "[0, -1, 127, 65, 0, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 128, 66, 0, 100]" + "'", str37, "[0, -1, 128, 66, 0, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 129, 67, 0, 100]" + "'", str38, "[0, -1, 129, 67, 0, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 130, 68, 0, 100]" + "'", str39, "[0, -1, 130, 68, 0, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 131, 69, 0, 100]" + "'", str40, "[0, -1, 131, 69, 0, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 132, 70, 0, 100]" + "'", str41, "[0, -1, 132, 70, 0, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 133, 71, 0, 100]" + "'", str42, "[0, -1, 133, 71, 0, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 134, 72, 0, 100]" + "'", str43, "[0, -1, 134, 72, 0, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, -1, 135, 73, 0, 100]" + "'", str44, "[0, -1, 135, 73, 0, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, -1, 136, 74, 0, 100]" + "'", str45, "[0, -1, 136, 74, 0, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, -1, 137, 75, 0, 100]" + "'", str46, "[0, -1, 137, 75, 0, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, -1, 138, 76, 0, 100]" + "'", str47, "[0, -1, 138, 76, 0, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, -1, 139, 77, 0, 100]" + "'", str48, "[0, -1, 139, 77, 0, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, -1, 140, 78, 0, 100]" + "'", str49, "[0, -1, 140, 78, 0, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, -1, 141, 79, 0, 100]" + "'", str50, "[0, -1, 141, 79, 0, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, -1, 142, 80, 0, 100]" + "'", str51, "[0, -1, 142, 80, 0, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, -1, 143, 81, 0, 100]" + "'", str52, "[0, -1, 143, 81, 0, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, -1, 144, 82, 0, 100]" + "'", str53, "[0, -1, 144, 82, 0, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, -1, 145, 83, 0, 100]" + "'", str54, "[0, -1, 145, 83, 0, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, -1, 146, 84, 0, 100]" + "'", str55, "[0, -1, 146, 84, 0, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, -1, 147, 85, 0, 100]" + "'", str56, "[0, -1, 147, 85, 0, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, -1, 148, 86, 0, 100]" + "'", str57, "[0, -1, 148, 86, 0, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, -1, 149, 87, 0, 100]" + "'", str58, "[0, -1, 149, 87, 0, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, -1, 150, 88, 0, 100]" + "'", str59, "[0, -1, 150, 88, 0, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, -1, 151, 89, 0, 100]" + "'", str60, "[0, -1, 151, 89, 0, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, -1, 152, 90, 0, 100]" + "'", str61, "[0, -1, 152, 90, 0, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, -1, 153, 91, 0, 100]" + "'", str62, "[0, -1, 153, 91, 0, 100]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test6020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6020");
        int[] intArray5 = new int[] { (short) 100, (short) 100, (byte) 1, 100, (byte) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass58 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 105, 3, 105, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, 100, 10]" + "'", str6, "[100, 100, 2, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, 100, 10]" + "'", str7, "[100, 100, 3, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, 100, 10]" + "'", str8, "[100, 100, 4, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, 100, 10]" + "'", str9, "[100, 100, 5, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, 100, 10]" + "'", str10, "[100, 100, 6, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, 100, 10]" + "'", str11, "[100, 100, 7, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, 100, 10]" + "'", str12, "[100, 100, 8, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, 100, 10]" + "'", str13, "[100, 100, 9, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 101, 10]" + "'", str14, "[100, 101, 0, 101, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 101, 10]" + "'", str15, "[100, 101, 1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 101, 10]" + "'", str16, "[100, 101, 2, 101, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 101, 10]" + "'", str17, "[100, 101, 3, 101, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 101, 10]" + "'", str18, "[100, 101, 4, 101, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 101, 10]" + "'", str19, "[100, 101, 5, 101, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 101, 10]" + "'", str20, "[100, 101, 6, 101, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 101, 10]" + "'", str21, "[100, 101, 7, 101, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 101, 10]" + "'", str22, "[100, 101, 8, 101, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 101, 10]" + "'", str23, "[100, 101, 9, 101, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 102, 10]" + "'", str24, "[100, 102, 0, 102, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 102, 10]" + "'", str25, "[100, 102, 1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 102, 10]" + "'", str26, "[100, 102, 2, 102, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 102, 10]" + "'", str27, "[100, 102, 3, 102, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 102, 10]" + "'", str28, "[100, 102, 4, 102, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 102, 10]" + "'", str29, "[100, 102, 5, 102, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 102, 10]" + "'", str30, "[100, 102, 6, 102, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 102, 10]" + "'", str31, "[100, 102, 7, 102, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 102, 10]" + "'", str32, "[100, 102, 8, 102, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 102, 10]" + "'", str33, "[100, 102, 9, 102, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 103, 10]" + "'", str34, "[100, 103, 0, 103, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 103, 10]" + "'", str35, "[100, 103, 1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 103, 10]" + "'", str36, "[100, 103, 2, 103, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 103, 10]" + "'", str37, "[100, 103, 3, 103, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 103, 10]" + "'", str38, "[100, 103, 4, 103, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 103, 10]" + "'", str39, "[100, 103, 5, 103, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 103, 10]" + "'", str40, "[100, 103, 6, 103, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 103, 10]" + "'", str41, "[100, 103, 7, 103, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 103, 8, 103, 10]" + "'", str42, "[100, 103, 8, 103, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 103, 9, 103, 10]" + "'", str43, "[100, 103, 9, 103, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 104, 0, 104, 10]" + "'", str44, "[100, 104, 0, 104, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 104, 1, 104, 10]" + "'", str45, "[100, 104, 1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 104, 2, 104, 10]" + "'", str46, "[100, 104, 2, 104, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 104, 3, 104, 10]" + "'", str47, "[100, 104, 3, 104, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 104, 4, 104, 10]" + "'", str48, "[100, 104, 4, 104, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 104, 5, 104, 10]" + "'", str49, "[100, 104, 5, 104, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 104, 6, 104, 10]" + "'", str50, "[100, 104, 6, 104, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 104, 7, 104, 10]" + "'", str51, "[100, 104, 7, 104, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 104, 8, 104, 10]" + "'", str52, "[100, 104, 8, 104, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 104, 9, 104, 10]" + "'", str53, "[100, 104, 9, 104, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 105, 0, 105, 10]" + "'", str54, "[100, 105, 0, 105, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 105, 1, 105, 10]" + "'", str55, "[100, 105, 1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 105, 2, 105, 10]" + "'", str56, "[100, 105, 2, 105, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 105, 3, 105, 10]" + "'", str57, "[100, 105, 3, 105, 10]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test6021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6021");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass75 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 169, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 52, 0]" + "'", str29, "[1, 0, 124, 52, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 52, 0]" + "'", str30, "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 52, 0]" + "'", str31, "[1, 0, 126, 52, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 52, 0]" + "'", str32, "[1, 0, 127, 52, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 52, 0]" + "'", str33, "[1, 0, 128, 52, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 52, 0]" + "'", str34, "[1, 0, 129, 52, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 52, 0]" + "'", str35, "[1, 0, 130, 52, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 52, 0]" + "'", str36, "[1, 0, 131, 52, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 52, 0]" + "'", str37, "[1, 0, 132, 52, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 52, 0]" + "'", str38, "[1, 0, 133, 52, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 52, 0]" + "'", str39, "[1, 0, 134, 52, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 52, 0]" + "'", str40, "[1, 0, 135, 52, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 52, 0]" + "'", str41, "[1, 0, 136, 52, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 52, 0]" + "'", str42, "[1, 0, 137, 52, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 52, 0]" + "'", str43, "[1, 0, 138, 52, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 52, 0]" + "'", str44, "[1, 0, 139, 52, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 52, 0]" + "'", str45, "[1, 0, 140, 52, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 52, 0]" + "'", str46, "[1, 0, 141, 52, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 52, 0]" + "'", str47, "[1, 0, 142, 52, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 52, 0]" + "'", str48, "[1, 0, 143, 52, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 52, 0]" + "'", str49, "[1, 0, 144, 52, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 52, 0]" + "'", str50, "[1, 0, 145, 52, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 52, 0]" + "'", str51, "[1, 0, 146, 52, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 52, 0]" + "'", str52, "[1, 0, 147, 52, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 52, 0]" + "'", str53, "[1, 0, 148, 52, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 52, 0]" + "'", str54, "[1, 0, 149, 52, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 52, 0]" + "'", str55, "[1, 0, 150, 52, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 52, 0]" + "'", str56, "[1, 0, 151, 52, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 52, 0]" + "'", str57, "[1, 0, 152, 52, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 52, 0]" + "'", str58, "[1, 0, 153, 52, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 52, 0]" + "'", str59, "[1, 0, 154, 52, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 52, 0]" + "'", str60, "[1, 0, 155, 52, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 52, 0]" + "'", str61, "[1, 0, 156, 52, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 52, 0]" + "'", str62, "[1, 0, 157, 52, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 52, 0]" + "'", str63, "[1, 0, 158, 52, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 52, 0]" + "'", str64, "[1, 0, 159, 52, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 52, 0]" + "'", str65, "[1, 0, 160, 52, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 52, 0]" + "'", str66, "[1, 0, 161, 52, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 52, 0]" + "'", str67, "[1, 0, 162, 52, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 52, 0]" + "'", str68, "[1, 0, 163, 52, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 52, 0]" + "'", str69, "[1, 0, 164, 52, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 52, 0]" + "'", str70, "[1, 0, 165, 52, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 52, 0]" + "'", str71, "[1, 0, 166, 52, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 52, 0]" + "'", str72, "[1, 0, 167, 52, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 52, 0]" + "'", str73, "[1, 0, 168, 52, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 52, 0]" + "'", str74, "[1, 0, 169, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test6022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6022");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass88 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 8, 3, 40, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 8, 32, 1]" + "'", str12, "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 9, 32, 1]" + "'", str13, "[32, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 1, 0, 33, 1]" + "'", str14, "[32, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 1, 1, 33, 1]" + "'", str15, "[32, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 2, 33, 1]" + "'", str16, "[32, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 3, 33, 1]" + "'", str17, "[32, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 4, 33, 1]" + "'", str18, "[32, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 5, 33, 1]" + "'", str19, "[32, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 6, 33, 1]" + "'", str20, "[32, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 7, 33, 1]" + "'", str21, "[32, 1, 7, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 8, 33, 1]" + "'", str22, "[32, 1, 8, 33, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 9, 33, 1]" + "'", str23, "[32, 1, 9, 33, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 2, 0, 34, 1]" + "'", str24, "[32, 2, 0, 34, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 2, 1, 34, 1]" + "'", str25, "[32, 2, 1, 34, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 2, 2, 34, 1]" + "'", str26, "[32, 2, 2, 34, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 2, 3, 34, 1]" + "'", str27, "[32, 2, 3, 34, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 2, 4, 34, 1]" + "'", str28, "[32, 2, 4, 34, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 2, 5, 34, 1]" + "'", str29, "[32, 2, 5, 34, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 2, 6, 34, 1]" + "'", str30, "[32, 2, 6, 34, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 2, 7, 34, 1]" + "'", str31, "[32, 2, 7, 34, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 2, 8, 34, 1]" + "'", str32, "[32, 2, 8, 34, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 2, 9, 34, 1]" + "'", str33, "[32, 2, 9, 34, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 3, 0, 35, 1]" + "'", str34, "[32, 3, 0, 35, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 3, 1, 35, 1]" + "'", str35, "[32, 3, 1, 35, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 3, 2, 35, 1]" + "'", str36, "[32, 3, 2, 35, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 3, 3, 35, 1]" + "'", str37, "[32, 3, 3, 35, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 3, 4, 35, 1]" + "'", str38, "[32, 3, 4, 35, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 3, 5, 35, 1]" + "'", str39, "[32, 3, 5, 35, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 3, 6, 35, 1]" + "'", str40, "[32, 3, 6, 35, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[32, 3, 7, 35, 1]" + "'", str41, "[32, 3, 7, 35, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[32, 3, 8, 35, 1]" + "'", str42, "[32, 3, 8, 35, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[32, 3, 9, 35, 1]" + "'", str43, "[32, 3, 9, 35, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[32, 4, 0, 36, 1]" + "'", str44, "[32, 4, 0, 36, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[32, 4, 1, 36, 1]" + "'", str45, "[32, 4, 1, 36, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[32, 4, 2, 36, 1]" + "'", str46, "[32, 4, 2, 36, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[32, 4, 3, 36, 1]" + "'", str47, "[32, 4, 3, 36, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[32, 4, 4, 36, 1]" + "'", str48, "[32, 4, 4, 36, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[32, 4, 5, 36, 1]" + "'", str49, "[32, 4, 5, 36, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[32, 4, 6, 36, 1]" + "'", str50, "[32, 4, 6, 36, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[32, 4, 7, 36, 1]" + "'", str51, "[32, 4, 7, 36, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[32, 4, 8, 36, 1]" + "'", str52, "[32, 4, 8, 36, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[32, 4, 9, 36, 1]" + "'", str53, "[32, 4, 9, 36, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[32, 5, 0, 37, 1]" + "'", str54, "[32, 5, 0, 37, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[32, 5, 1, 37, 1]" + "'", str55, "[32, 5, 1, 37, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[32, 5, 2, 37, 1]" + "'", str56, "[32, 5, 2, 37, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[32, 5, 3, 37, 1]" + "'", str57, "[32, 5, 3, 37, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[32, 5, 4, 37, 1]" + "'", str58, "[32, 5, 4, 37, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[32, 5, 5, 37, 1]" + "'", str59, "[32, 5, 5, 37, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[32, 5, 6, 37, 1]" + "'", str60, "[32, 5, 6, 37, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[32, 5, 7, 37, 1]" + "'", str61, "[32, 5, 7, 37, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[32, 5, 8, 37, 1]" + "'", str62, "[32, 5, 8, 37, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[32, 5, 9, 37, 1]" + "'", str63, "[32, 5, 9, 37, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[32, 6, 0, 38, 1]" + "'", str64, "[32, 6, 0, 38, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[32, 6, 1, 38, 1]" + "'", str65, "[32, 6, 1, 38, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[32, 6, 2, 38, 1]" + "'", str66, "[32, 6, 2, 38, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[32, 6, 3, 38, 1]" + "'", str67, "[32, 6, 3, 38, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[32, 6, 4, 38, 1]" + "'", str68, "[32, 6, 4, 38, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[32, 6, 5, 38, 1]" + "'", str69, "[32, 6, 5, 38, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[32, 6, 6, 38, 1]" + "'", str70, "[32, 6, 6, 38, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[32, 6, 7, 38, 1]" + "'", str71, "[32, 6, 7, 38, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[32, 6, 8, 38, 1]" + "'", str72, "[32, 6, 8, 38, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[32, 6, 9, 38, 1]" + "'", str73, "[32, 6, 9, 38, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[32, 7, 0, 39, 1]" + "'", str74, "[32, 7, 0, 39, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[32, 7, 1, 39, 1]" + "'", str75, "[32, 7, 1, 39, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[32, 7, 2, 39, 1]" + "'", str76, "[32, 7, 2, 39, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[32, 7, 3, 39, 1]" + "'", str77, "[32, 7, 3, 39, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[32, 7, 4, 39, 1]" + "'", str78, "[32, 7, 4, 39, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[32, 7, 5, 39, 1]" + "'", str79, "[32, 7, 5, 39, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[32, 7, 6, 39, 1]" + "'", str80, "[32, 7, 6, 39, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[32, 7, 7, 39, 1]" + "'", str81, "[32, 7, 7, 39, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[32, 7, 8, 39, 1]" + "'", str82, "[32, 7, 8, 39, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[32, 7, 9, 39, 1]" + "'", str83, "[32, 7, 9, 39, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[32, 8, 0, 40, 1]" + "'", str84, "[32, 8, 0, 40, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[32, 8, 1, 40, 1]" + "'", str85, "[32, 8, 1, 40, 1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[32, 8, 2, 40, 1]" + "'", str86, "[32, 8, 2, 40, 1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[32, 8, 3, 40, 1]" + "'", str87, "[32, 8, 3, 40, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test6023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6023");
        int[] intArray5 = new int[] { (byte) 10, (short) 10, (short) -1, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass15 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 10, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 10, 0, 0, 1]" + "'", str6, "[10, 10, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 1, 0, 1]" + "'", str7, "[10, 10, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 2, 0, 1]" + "'", str8, "[10, 10, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 3, 0, 1]" + "'", str9, "[10, 10, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 4, 0, 1]" + "'", str10, "[10, 10, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 5, 0, 1]" + "'", str11, "[10, 10, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 6, 0, 1]" + "'", str12, "[10, 10, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 7, 0, 1]" + "'", str13, "[10, 10, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 8, 0, 1]" + "'", str14, "[10, 10, 8, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test6024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6024");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass24 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test6025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6025");
        int[] intArray5 = new int[] { (byte) 1, (byte) -1, (short) 1, (byte) 1, 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass20 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 5, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, -1, 2, 1, 10]" + "'", str6, "[1, -1, 2, 1, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, -1, 3, 1, 10]" + "'", str7, "[1, -1, 3, 1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, -1, 4, 1, 10]" + "'", str8, "[1, -1, 4, 1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, -1, 5, 1, 10]" + "'", str9, "[1, -1, 5, 1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, -1, 6, 1, 10]" + "'", str10, "[1, -1, 6, 1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, -1, 7, 1, 10]" + "'", str11, "[1, -1, 7, 1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, -1, 8, 1, 10]" + "'", str12, "[1, -1, 8, 1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, -1, 9, 1, 10]" + "'", str13, "[1, -1, 9, 1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 0, 2, 10]" + "'", str14, "[1, 0, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 1, 2, 10]" + "'", str15, "[1, 0, 1, 2, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 2, 2, 10]" + "'", str16, "[1, 0, 2, 2, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 3, 2, 10]" + "'", str17, "[1, 0, 3, 2, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 4, 2, 10]" + "'", str18, "[1, 0, 4, 2, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 5, 2, 10]" + "'", str19, "[1, 0, 5, 2, 10]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6026");
        int[] intArray5 = new int[] { 1, (byte) 0, (-1), ' ', 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass19 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 0, 32, 1]" + "'", str6, "[1, 0, 0, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 32, 1]" + "'", str7, "[1, 0, 1, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 32, 1]" + "'", str8, "[1, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 32, 1]" + "'", str9, "[1, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 32, 1]" + "'", str10, "[1, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 32, 1]" + "'", str11, "[1, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 32, 1]" + "'", str12, "[1, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 32, 1]" + "'", str13, "[1, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 32, 1]" + "'", str14, "[1, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 32, 1]" + "'", str15, "[1, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 0, 33, 1]" + "'", str16, "[1, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 1, 33, 1]" + "'", str17, "[1, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 2, 33, 1]" + "'", str18, "[1, 1, 2, 33, 1]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test6027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6027");
        int[] intArray5 = new int[] { (byte) 0, (short) -1, ' ', (short) 10, (-1) };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass67 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 33, 10, -1]" + "'", str6, "[0, -1, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 34, 10, -1]" + "'", str7, "[0, -1, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 35, 10, -1]" + "'", str8, "[0, -1, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 36, 10, -1]" + "'", str9, "[0, -1, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 37, 10, -1]" + "'", str10, "[0, -1, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 38, 10, -1]" + "'", str11, "[0, -1, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 39, 10, -1]" + "'", str12, "[0, -1, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 40, 10, -1]" + "'", str13, "[0, -1, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 41, 10, -1]" + "'", str14, "[0, -1, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 42, 10, -1]" + "'", str15, "[0, -1, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 43, 10, -1]" + "'", str16, "[0, -1, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 44, 10, -1]" + "'", str17, "[0, -1, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 45, 10, -1]" + "'", str18, "[0, -1, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 46, 10, -1]" + "'", str19, "[0, -1, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 47, 10, -1]" + "'", str20, "[0, -1, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 48, 10, -1]" + "'", str21, "[0, -1, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 49, 10, -1]" + "'", str22, "[0, -1, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 50, 10, -1]" + "'", str23, "[0, -1, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 51, 10, -1]" + "'", str24, "[0, -1, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 52, 10, -1]" + "'", str25, "[0, -1, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 53, 10, -1]" + "'", str26, "[0, -1, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 54, 10, -1]" + "'", str27, "[0, -1, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 55, 10, -1]" + "'", str28, "[0, -1, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 56, 10, -1]" + "'", str29, "[0, -1, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 57, 10, -1]" + "'", str30, "[0, -1, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 58, 10, -1]" + "'", str31, "[0, -1, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 59, 10, -1]" + "'", str32, "[0, -1, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 60, 10, -1]" + "'", str33, "[0, -1, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 61, 10, -1]" + "'", str34, "[0, -1, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 62, 10, -1]" + "'", str35, "[0, -1, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 63, 10, -1]" + "'", str36, "[0, -1, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 64, 10, -1]" + "'", str37, "[0, -1, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 65, 10, -1]" + "'", str38, "[0, -1, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 66, 10, -1]" + "'", str39, "[0, -1, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 67, 10, -1]" + "'", str40, "[0, -1, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 68, 10, -1]" + "'", str41, "[0, -1, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 69, 10, -1]" + "'", str42, "[0, -1, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 70, 10, -1]" + "'", str43, "[0, -1, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, -1, 71, 10, -1]" + "'", str44, "[0, -1, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, -1, 72, 10, -1]" + "'", str45, "[0, -1, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, -1, 73, 10, -1]" + "'", str46, "[0, -1, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, -1, 74, 10, -1]" + "'", str47, "[0, -1, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, -1, 75, 10, -1]" + "'", str48, "[0, -1, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, -1, 76, 10, -1]" + "'", str49, "[0, -1, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, -1, 77, 10, -1]" + "'", str50, "[0, -1, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, -1, 78, 10, -1]" + "'", str51, "[0, -1, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, -1, 79, 10, -1]" + "'", str52, "[0, -1, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, -1, 80, 10, -1]" + "'", str53, "[0, -1, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, -1, 81, 10, -1]" + "'", str54, "[0, -1, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, -1, 82, 10, -1]" + "'", str55, "[0, -1, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, -1, 83, 10, -1]" + "'", str56, "[0, -1, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, -1, 84, 10, -1]" + "'", str57, "[0, -1, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, -1, 85, 10, -1]" + "'", str58, "[0, -1, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, -1, 86, 10, -1]" + "'", str59, "[0, -1, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, -1, 87, 10, -1]" + "'", str60, "[0, -1, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, -1, 88, 10, -1]" + "'", str61, "[0, -1, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, -1, 89, 10, -1]" + "'", str62, "[0, -1, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, -1, 90, 10, -1]" + "'", str63, "[0, -1, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, -1, 91, 10, -1]" + "'", str64, "[0, -1, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, -1, 92, 10, -1]" + "'", str65, "[0, -1, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, -1, 93, 10, -1]" + "'", str66, "[0, -1, 93, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test6028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6028");
        int[] intArray4 = new int[] { (byte) 1, (byte) 100, (short) 100, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass67 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 162, 162, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 101, 101, 0]" + "'", str5, "[1, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 102, 102, 0]" + "'", str6, "[1, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 103, 103, 0]" + "'", str7, "[1, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 104, 104, 0]" + "'", str8, "[1, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 105, 105, 0]" + "'", str9, "[1, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 106, 106, 0]" + "'", str10, "[1, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 107, 107, 0]" + "'", str11, "[1, 107, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 108, 108, 0]" + "'", str12, "[1, 108, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 109, 109, 0]" + "'", str13, "[1, 109, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 110, 110, 0]" + "'", str14, "[1, 110, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 111, 111, 0]" + "'", str15, "[1, 111, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 112, 112, 0]" + "'", str16, "[1, 112, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 113, 113, 0]" + "'", str17, "[1, 113, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 114, 114, 0]" + "'", str18, "[1, 114, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 115, 115, 0]" + "'", str19, "[1, 115, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 116, 116, 0]" + "'", str20, "[1, 116, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 117, 117, 0]" + "'", str21, "[1, 117, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 118, 118, 0]" + "'", str22, "[1, 118, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 119, 119, 0]" + "'", str23, "[1, 119, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 120, 120, 0]" + "'", str24, "[1, 120, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 121, 121, 0]" + "'", str25, "[1, 121, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 122, 122, 0]" + "'", str26, "[1, 122, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 123, 123, 0]" + "'", str27, "[1, 123, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 124, 124, 0]" + "'", str28, "[1, 124, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 125, 125, 0]" + "'", str29, "[1, 125, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 126, 126, 0]" + "'", str30, "[1, 126, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 127, 127, 0]" + "'", str31, "[1, 127, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 128, 128, 0]" + "'", str32, "[1, 128, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 129, 129, 0]" + "'", str33, "[1, 129, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 130, 130, 0]" + "'", str34, "[1, 130, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 131, 131, 0]" + "'", str35, "[1, 131, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 132, 132, 0]" + "'", str36, "[1, 132, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 133, 133, 0]" + "'", str37, "[1, 133, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 134, 134, 0]" + "'", str38, "[1, 134, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 135, 135, 0]" + "'", str39, "[1, 135, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 136, 136, 0]" + "'", str40, "[1, 136, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 137, 137, 0]" + "'", str41, "[1, 137, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 138, 138, 0]" + "'", str42, "[1, 138, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 139, 139, 0]" + "'", str43, "[1, 139, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 140, 140, 0]" + "'", str44, "[1, 140, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 141, 141, 0]" + "'", str45, "[1, 141, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 142, 142, 0]" + "'", str46, "[1, 142, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 143, 143, 0]" + "'", str47, "[1, 143, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 144, 144, 0]" + "'", str48, "[1, 144, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 145, 145, 0]" + "'", str49, "[1, 145, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 146, 146, 0]" + "'", str50, "[1, 146, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 147, 147, 0]" + "'", str51, "[1, 147, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 148, 148, 0]" + "'", str52, "[1, 148, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 149, 149, 0]" + "'", str53, "[1, 149, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 150, 150, 0]" + "'", str54, "[1, 150, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 151, 151, 0]" + "'", str55, "[1, 151, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 152, 152, 0]" + "'", str56, "[1, 152, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 153, 153, 0]" + "'", str57, "[1, 153, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 154, 154, 0]" + "'", str58, "[1, 154, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 155, 155, 0]" + "'", str59, "[1, 155, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 156, 156, 0]" + "'", str60, "[1, 156, 156, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 157, 157, 0]" + "'", str61, "[1, 157, 157, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 158, 158, 0]" + "'", str62, "[1, 158, 158, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 159, 159, 0]" + "'", str63, "[1, 159, 159, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 160, 160, 0]" + "'", str64, "[1, 160, 160, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 161, 161, 0]" + "'", str65, "[1, 161, 161, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 162, 162, 0]" + "'", str66, "[1, 162, 162, 0]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test6029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6029");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass79 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 173, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 104, -1, 1]" + "'", str9, "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 105, -1, 1]" + "'", str10, "[97, 0, 105, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 0, 106, -1, 1]" + "'", str11, "[97, 0, 106, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 0, 107, -1, 1]" + "'", str12, "[97, 0, 107, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 0, 108, -1, 1]" + "'", str13, "[97, 0, 108, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 0, 109, -1, 1]" + "'", str14, "[97, 0, 109, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 0, 110, -1, 1]" + "'", str15, "[97, 0, 110, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 0, 111, -1, 1]" + "'", str16, "[97, 0, 111, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 0, 112, -1, 1]" + "'", str17, "[97, 0, 112, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 0, 113, -1, 1]" + "'", str18, "[97, 0, 113, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 0, 114, -1, 1]" + "'", str19, "[97, 0, 114, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 0, 115, -1, 1]" + "'", str20, "[97, 0, 115, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 0, 116, -1, 1]" + "'", str21, "[97, 0, 116, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 0, 117, -1, 1]" + "'", str22, "[97, 0, 117, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 0, 118, -1, 1]" + "'", str23, "[97, 0, 118, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 0, 119, -1, 1]" + "'", str24, "[97, 0, 119, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 0, 120, -1, 1]" + "'", str25, "[97, 0, 120, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 0, 121, -1, 1]" + "'", str26, "[97, 0, 121, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 0, 122, -1, 1]" + "'", str27, "[97, 0, 122, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 0, 123, -1, 1]" + "'", str28, "[97, 0, 123, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 0, 124, -1, 1]" + "'", str29, "[97, 0, 124, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 0, 125, -1, 1]" + "'", str30, "[97, 0, 125, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 0, 126, -1, 1]" + "'", str31, "[97, 0, 126, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 0, 127, -1, 1]" + "'", str32, "[97, 0, 127, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 0, 128, -1, 1]" + "'", str33, "[97, 0, 128, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 0, 129, -1, 1]" + "'", str34, "[97, 0, 129, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 0, 130, -1, 1]" + "'", str35, "[97, 0, 130, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 0, 131, -1, 1]" + "'", str36, "[97, 0, 131, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 0, 132, -1, 1]" + "'", str37, "[97, 0, 132, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 0, 133, -1, 1]" + "'", str38, "[97, 0, 133, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 0, 134, -1, 1]" + "'", str39, "[97, 0, 134, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 0, 135, -1, 1]" + "'", str40, "[97, 0, 135, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 0, 136, -1, 1]" + "'", str41, "[97, 0, 136, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 0, 137, -1, 1]" + "'", str42, "[97, 0, 137, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 0, 138, -1, 1]" + "'", str43, "[97, 0, 138, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 0, 139, -1, 1]" + "'", str44, "[97, 0, 139, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 0, 140, -1, 1]" + "'", str45, "[97, 0, 140, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 0, 141, -1, 1]" + "'", str46, "[97, 0, 141, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 0, 142, -1, 1]" + "'", str47, "[97, 0, 142, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 0, 143, -1, 1]" + "'", str48, "[97, 0, 143, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 0, 144, -1, 1]" + "'", str49, "[97, 0, 144, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 0, 145, -1, 1]" + "'", str50, "[97, 0, 145, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 0, 146, -1, 1]" + "'", str51, "[97, 0, 146, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 0, 147, -1, 1]" + "'", str52, "[97, 0, 147, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 0, 148, -1, 1]" + "'", str53, "[97, 0, 148, -1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 0, 149, -1, 1]" + "'", str54, "[97, 0, 149, -1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 0, 150, -1, 1]" + "'", str55, "[97, 0, 150, -1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 0, 151, -1, 1]" + "'", str56, "[97, 0, 151, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 0, 152, -1, 1]" + "'", str57, "[97, 0, 152, -1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 0, 153, -1, 1]" + "'", str58, "[97, 0, 153, -1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 0, 154, -1, 1]" + "'", str59, "[97, 0, 154, -1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 0, 155, -1, 1]" + "'", str60, "[97, 0, 155, -1, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 0, 156, -1, 1]" + "'", str61, "[97, 0, 156, -1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 0, 157, -1, 1]" + "'", str62, "[97, 0, 157, -1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 0, 158, -1, 1]" + "'", str63, "[97, 0, 158, -1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 0, 159, -1, 1]" + "'", str64, "[97, 0, 159, -1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 0, 160, -1, 1]" + "'", str65, "[97, 0, 160, -1, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 0, 161, -1, 1]" + "'", str66, "[97, 0, 161, -1, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 0, 162, -1, 1]" + "'", str67, "[97, 0, 162, -1, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 0, 163, -1, 1]" + "'", str68, "[97, 0, 163, -1, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 0, 164, -1, 1]" + "'", str69, "[97, 0, 164, -1, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 0, 165, -1, 1]" + "'", str70, "[97, 0, 165, -1, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 0, 166, -1, 1]" + "'", str71, "[97, 0, 166, -1, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 0, 167, -1, 1]" + "'", str72, "[97, 0, 167, -1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 0, 168, -1, 1]" + "'", str73, "[97, 0, 168, -1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 0, 169, -1, 1]" + "'", str74, "[97, 0, 169, -1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 0, 170, -1, 1]" + "'", str75, "[97, 0, 170, -1, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 0, 171, -1, 1]" + "'", str76, "[97, 0, 171, -1, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 0, 172, -1, 1]" + "'", str77, "[97, 0, 172, -1, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 0, 173, -1, 1]" + "'", str78, "[97, 0, 173, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test6030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6030");
        int[] intArray2 = new int[] { (short) 0, 100 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass39 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[36, 136]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 101]" + "'", str3, "[1, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 102]" + "'", str4, "[2, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 103]" + "'", str5, "[3, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 104]" + "'", str6, "[4, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 105]" + "'", str7, "[5, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 106]" + "'", str8, "[6, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 107]" + "'", str9, "[7, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 108]" + "'", str10, "[8, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9, 109]" + "'", str11, "[9, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 110]" + "'", str12, "[10, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 111]" + "'", str13, "[11, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[12, 112]" + "'", str14, "[12, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[13, 113]" + "'", str15, "[13, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[14, 114]" + "'", str16, "[14, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[15, 115]" + "'", str17, "[15, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[16, 116]" + "'", str18, "[16, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[17, 117]" + "'", str19, "[17, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[18, 118]" + "'", str20, "[18, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[19, 119]" + "'", str21, "[19, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[20, 120]" + "'", str22, "[20, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[21, 121]" + "'", str23, "[21, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[22, 122]" + "'", str24, "[22, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[23, 123]" + "'", str25, "[23, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[24, 124]" + "'", str26, "[24, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[25, 125]" + "'", str27, "[25, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[26, 126]" + "'", str28, "[26, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[27, 127]" + "'", str29, "[27, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[28, 128]" + "'", str30, "[28, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[29, 129]" + "'", str31, "[29, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[30, 130]" + "'", str32, "[30, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[31, 131]" + "'", str33, "[31, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 132]" + "'", str34, "[32, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[33, 133]" + "'", str35, "[33, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[34, 134]" + "'", str36, "[34, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 135]" + "'", str37, "[35, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[36, 136]" + "'", str38, "[36, 136]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test6031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6031");
        int[] intArray1 = new int[] { (byte) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass17 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6032");
        int[] intArray5 = new int[] { (-1), '4', '4', (byte) -1, (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass12 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 52, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 52, 53, -1, 0]" + "'", str6, "[-1, 52, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 52, 54, -1, 0]" + "'", str7, "[-1, 52, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 52, 55, -1, 0]" + "'", str8, "[-1, 52, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 52, 56, -1, 0]" + "'", str9, "[-1, 52, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 52, 57, -1, 0]" + "'", str10, "[-1, 52, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 52, 58, -1, 0]" + "'", str11, "[-1, 52, 58, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test6033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6033");
        int[] intArray3 = new int[] { ' ', (short) 0, (byte) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass26 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[34, 2, 12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 1, 10]" + "'", str4, "[32, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 2, 10]" + "'", str5, "[32, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 3, 10]" + "'", str6, "[32, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 4, 10]" + "'", str7, "[32, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 5, 10]" + "'", str8, "[32, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 6, 10]" + "'", str9, "[32, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 7, 10]" + "'", str10, "[32, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 8, 10]" + "'", str11, "[32, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 9, 10]" + "'", str12, "[32, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 0, 11]" + "'", str13, "[33, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 1, 11]" + "'", str14, "[33, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 2, 11]" + "'", str15, "[33, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 3, 11]" + "'", str16, "[33, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 4, 11]" + "'", str17, "[33, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 5, 11]" + "'", str18, "[33, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 6, 11]" + "'", str19, "[33, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 7, 11]" + "'", str20, "[33, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 8, 11]" + "'", str21, "[33, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 9, 11]" + "'", str22, "[33, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 0, 12]" + "'", str23, "[34, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 1, 12]" + "'", str24, "[34, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 2, 12]" + "'", str25, "[34, 2, 12]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test6034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6034");
        int[] intArray2 = new int[] { (short) 1, (short) 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass15 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[3, 3]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 2]" + "'", str3, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 3]" + "'", str4, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 4]" + "'", str5, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 5]" + "'", str6, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 6]" + "'", str7, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 7]" + "'", str8, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 8]" + "'", str9, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 9]" + "'", str10, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test6035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6035");
        int[] intArray6 = new int[] { (byte) 100, (short) 100, (short) 100, '4', (short) 100, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass32 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 100, 125, 77, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 101, 53, 100, -1]" + "'", str7, "[100, 100, 101, 53, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 102, 54, 100, -1]" + "'", str8, "[100, 100, 102, 54, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 103, 55, 100, -1]" + "'", str9, "[100, 100, 103, 55, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 104, 56, 100, -1]" + "'", str10, "[100, 100, 104, 56, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 105, 57, 100, -1]" + "'", str11, "[100, 100, 105, 57, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 106, 58, 100, -1]" + "'", str12, "[100, 100, 106, 58, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 107, 59, 100, -1]" + "'", str13, "[100, 100, 107, 59, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 100, 108, 60, 100, -1]" + "'", str14, "[100, 100, 108, 60, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 100, 109, 61, 100, -1]" + "'", str15, "[100, 100, 109, 61, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 100, 110, 62, 100, -1]" + "'", str16, "[100, 100, 110, 62, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 100, 111, 63, 100, -1]" + "'", str17, "[100, 100, 111, 63, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 100, 112, 64, 100, -1]" + "'", str18, "[100, 100, 112, 64, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 100, 113, 65, 100, -1]" + "'", str19, "[100, 100, 113, 65, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 100, 114, 66, 100, -1]" + "'", str20, "[100, 100, 114, 66, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 100, 115, 67, 100, -1]" + "'", str21, "[100, 100, 115, 67, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 100, 116, 68, 100, -1]" + "'", str22, "[100, 100, 116, 68, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 100, 117, 69, 100, -1]" + "'", str23, "[100, 100, 117, 69, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 100, 118, 70, 100, -1]" + "'", str24, "[100, 100, 118, 70, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 100, 119, 71, 100, -1]" + "'", str25, "[100, 100, 119, 71, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 100, 120, 72, 100, -1]" + "'", str26, "[100, 100, 120, 72, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 100, 121, 73, 100, -1]" + "'", str27, "[100, 100, 121, 73, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 100, 122, 74, 100, -1]" + "'", str28, "[100, 100, 122, 74, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 100, 123, 75, 100, -1]" + "'", str29, "[100, 100, 123, 75, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 100, 124, 76, 100, -1]" + "'", str30, "[100, 100, 124, 76, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 100, 125, 77, 100, -1]" + "'", str31, "[100, 100, 125, 77, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test6036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6036");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass86 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 108, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 7, 7, 1, 0]" + "'", str32, "[0, 102, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 8, 8, 1, 0]" + "'", str33, "[0, 102, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 9, 9, 1, 0]" + "'", str34, "[0, 102, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 103, 0, 0, 2, 0]" + "'", str35, "[0, 103, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 103, 1, 1, 2, 0]" + "'", str36, "[0, 103, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 2, 2, 2, 0]" + "'", str37, "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 3, 3, 2, 0]" + "'", str38, "[0, 103, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 4, 4, 2, 0]" + "'", str39, "[0, 103, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 5, 5, 2, 0]" + "'", str40, "[0, 103, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 6, 6, 2, 0]" + "'", str41, "[0, 103, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 7, 7, 2, 0]" + "'", str42, "[0, 103, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 8, 8, 2, 0]" + "'", str43, "[0, 103, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 9, 9, 2, 0]" + "'", str44, "[0, 103, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 104, 0, 0, 3, 0]" + "'", str45, "[0, 104, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 104, 1, 1, 3, 0]" + "'", str46, "[0, 104, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 2, 2, 3, 0]" + "'", str47, "[0, 104, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 3, 3, 3, 0]" + "'", str48, "[0, 104, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 4, 4, 3, 0]" + "'", str49, "[0, 104, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 5, 5, 3, 0]" + "'", str50, "[0, 104, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 6, 6, 3, 0]" + "'", str51, "[0, 104, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 7, 7, 3, 0]" + "'", str52, "[0, 104, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 8, 8, 3, 0]" + "'", str53, "[0, 104, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 9, 9, 3, 0]" + "'", str54, "[0, 104, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 105, 0, 0, 4, 0]" + "'", str55, "[0, 105, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 105, 1, 1, 4, 0]" + "'", str56, "[0, 105, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 2, 2, 4, 0]" + "'", str57, "[0, 105, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 3, 3, 4, 0]" + "'", str58, "[0, 105, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 4, 4, 4, 0]" + "'", str59, "[0, 105, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 105, 5, 5, 4, 0]" + "'", str60, "[0, 105, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 105, 6, 6, 4, 0]" + "'", str61, "[0, 105, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 105, 7, 7, 4, 0]" + "'", str62, "[0, 105, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 105, 8, 8, 4, 0]" + "'", str63, "[0, 105, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 105, 9, 9, 4, 0]" + "'", str64, "[0, 105, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 106, 0, 0, 5, 0]" + "'", str65, "[0, 106, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 106, 1, 1, 5, 0]" + "'", str66, "[0, 106, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 106, 2, 2, 5, 0]" + "'", str67, "[0, 106, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 106, 3, 3, 5, 0]" + "'", str68, "[0, 106, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 106, 4, 4, 5, 0]" + "'", str69, "[0, 106, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 106, 5, 5, 5, 0]" + "'", str70, "[0, 106, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 106, 6, 6, 5, 0]" + "'", str71, "[0, 106, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 106, 7, 7, 5, 0]" + "'", str72, "[0, 106, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 106, 8, 8, 5, 0]" + "'", str73, "[0, 106, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[0, 106, 9, 9, 5, 0]" + "'", str74, "[0, 106, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[0, 107, 0, 0, 6, 0]" + "'", str75, "[0, 107, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[0, 107, 1, 1, 6, 0]" + "'", str76, "[0, 107, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[0, 107, 2, 2, 6, 0]" + "'", str77, "[0, 107, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[0, 107, 3, 3, 6, 0]" + "'", str78, "[0, 107, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[0, 107, 4, 4, 6, 0]" + "'", str79, "[0, 107, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[0, 107, 5, 5, 6, 0]" + "'", str80, "[0, 107, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[0, 107, 6, 6, 6, 0]" + "'", str81, "[0, 107, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[0, 107, 7, 7, 6, 0]" + "'", str82, "[0, 107, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[0, 107, 8, 8, 6, 0]" + "'", str83, "[0, 107, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[0, 107, 9, 9, 6, 0]" + "'", str84, "[0, 107, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[0, 108, 0, 0, 7, 0]" + "'", str85, "[0, 108, 0, 0, 7, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test6037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6037");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass69 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 163, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 100, 103, 10, 1]" + "'", str8, "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 100, 104, 10, 1]" + "'", str9, "[1, 100, 104, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 100, 105, 10, 1]" + "'", str10, "[1, 100, 105, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 100, 106, 10, 1]" + "'", str11, "[1, 100, 106, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 100, 107, 10, 1]" + "'", str12, "[1, 100, 107, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 100, 108, 10, 1]" + "'", str13, "[1, 100, 108, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 100, 109, 10, 1]" + "'", str14, "[1, 100, 109, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 100, 110, 10, 1]" + "'", str15, "[1, 100, 110, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 100, 111, 10, 1]" + "'", str16, "[1, 100, 111, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 100, 112, 10, 1]" + "'", str17, "[1, 100, 112, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 100, 113, 10, 1]" + "'", str18, "[1, 100, 113, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 100, 114, 10, 1]" + "'", str19, "[1, 100, 114, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 100, 115, 10, 1]" + "'", str20, "[1, 100, 115, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 100, 116, 10, 1]" + "'", str21, "[1, 100, 116, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 100, 117, 10, 1]" + "'", str22, "[1, 100, 117, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 100, 118, 10, 1]" + "'", str23, "[1, 100, 118, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 100, 119, 10, 1]" + "'", str24, "[1, 100, 119, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 100, 120, 10, 1]" + "'", str25, "[1, 100, 120, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 100, 121, 10, 1]" + "'", str26, "[1, 100, 121, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 100, 122, 10, 1]" + "'", str27, "[1, 100, 122, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 100, 123, 10, 1]" + "'", str28, "[1, 100, 123, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 100, 124, 10, 1]" + "'", str29, "[1, 100, 124, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 100, 125, 10, 1]" + "'", str30, "[1, 100, 125, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 100, 126, 10, 1]" + "'", str31, "[1, 100, 126, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 100, 127, 10, 1]" + "'", str32, "[1, 100, 127, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 100, 128, 10, 1]" + "'", str33, "[1, 100, 128, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 100, 129, 10, 1]" + "'", str34, "[1, 100, 129, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 100, 130, 10, 1]" + "'", str35, "[1, 100, 130, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 100, 131, 10, 1]" + "'", str36, "[1, 100, 131, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 100, 132, 10, 1]" + "'", str37, "[1, 100, 132, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 100, 133, 10, 1]" + "'", str38, "[1, 100, 133, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 100, 134, 10, 1]" + "'", str39, "[1, 100, 134, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 100, 135, 10, 1]" + "'", str40, "[1, 100, 135, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 100, 136, 10, 1]" + "'", str41, "[1, 100, 136, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 100, 137, 10, 1]" + "'", str42, "[1, 100, 137, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 100, 138, 10, 1]" + "'", str43, "[1, 100, 138, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 100, 139, 10, 1]" + "'", str44, "[1, 100, 139, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 100, 140, 10, 1]" + "'", str45, "[1, 100, 140, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 100, 141, 10, 1]" + "'", str46, "[1, 100, 141, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 100, 142, 10, 1]" + "'", str47, "[1, 100, 142, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 100, 143, 10, 1]" + "'", str48, "[1, 100, 143, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 100, 144, 10, 1]" + "'", str49, "[1, 100, 144, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 100, 145, 10, 1]" + "'", str50, "[1, 100, 145, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 100, 146, 10, 1]" + "'", str51, "[1, 100, 146, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 100, 147, 10, 1]" + "'", str52, "[1, 100, 147, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 100, 148, 10, 1]" + "'", str53, "[1, 100, 148, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 100, 149, 10, 1]" + "'", str54, "[1, 100, 149, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 100, 150, 10, 1]" + "'", str55, "[1, 100, 150, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 100, 151, 10, 1]" + "'", str56, "[1, 100, 151, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 100, 152, 10, 1]" + "'", str57, "[1, 100, 152, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 100, 153, 10, 1]" + "'", str58, "[1, 100, 153, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 100, 154, 10, 1]" + "'", str59, "[1, 100, 154, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 100, 155, 10, 1]" + "'", str60, "[1, 100, 155, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 100, 156, 10, 1]" + "'", str61, "[1, 100, 156, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 100, 157, 10, 1]" + "'", str62, "[1, 100, 157, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 100, 158, 10, 1]" + "'", str63, "[1, 100, 158, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 100, 159, 10, 1]" + "'", str64, "[1, 100, 159, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 100, 160, 10, 1]" + "'", str65, "[1, 100, 160, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 100, 161, 10, 1]" + "'", str66, "[1, 100, 161, 10, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 100, 162, 10, 1]" + "'", str67, "[1, 100, 162, 10, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 100, 163, 10, 1]" + "'", str68, "[1, 100, 163, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test6038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6038");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass90 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1]" + "'", str73, "[1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2]" + "'", str74, "[2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[3]" + "'", str75, "[3]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[4]" + "'", str76, "[4]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[5]" + "'", str77, "[5]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6]" + "'", str78, "[6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7]" + "'", str79, "[7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8]" + "'", str80, "[8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[9]" + "'", str81, "[9]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1]" + "'", str82, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1]" + "'", str83, "[1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[2]" + "'", str84, "[2]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[3]" + "'", str85, "[3]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[4]" + "'", str86, "[4]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[5]" + "'", str87, "[5]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[6]" + "'", str88, "[6]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7]" + "'", str89, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test6039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6039");
        int[] intArray5 = new int[] { (short) 0, ' ', (short) 10, (byte) 0, (short) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass49 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 32, 53, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 32, 11, 0, 10]" + "'", str6, "[0, 32, 11, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 32, 12, 0, 10]" + "'", str7, "[0, 32, 12, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 32, 13, 0, 10]" + "'", str8, "[0, 32, 13, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 32, 14, 0, 10]" + "'", str9, "[0, 32, 14, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 32, 15, 0, 10]" + "'", str10, "[0, 32, 15, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 32, 16, 0, 10]" + "'", str11, "[0, 32, 16, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 32, 17, 0, 10]" + "'", str12, "[0, 32, 17, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 32, 18, 0, 10]" + "'", str13, "[0, 32, 18, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 32, 19, 0, 10]" + "'", str14, "[0, 32, 19, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 32, 20, 0, 10]" + "'", str15, "[0, 32, 20, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 32, 21, 0, 10]" + "'", str16, "[0, 32, 21, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 32, 22, 0, 10]" + "'", str17, "[0, 32, 22, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 32, 23, 0, 10]" + "'", str18, "[0, 32, 23, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 32, 24, 0, 10]" + "'", str19, "[0, 32, 24, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 32, 25, 0, 10]" + "'", str20, "[0, 32, 25, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 32, 26, 0, 10]" + "'", str21, "[0, 32, 26, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 32, 27, 0, 10]" + "'", str22, "[0, 32, 27, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 32, 28, 0, 10]" + "'", str23, "[0, 32, 28, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 32, 29, 0, 10]" + "'", str24, "[0, 32, 29, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 32, 30, 0, 10]" + "'", str25, "[0, 32, 30, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 31, 0, 10]" + "'", str26, "[0, 32, 31, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 32, 32, 0, 10]" + "'", str27, "[0, 32, 32, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 32, 33, 0, 10]" + "'", str28, "[0, 32, 33, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 32, 34, 0, 10]" + "'", str29, "[0, 32, 34, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 32, 35, 0, 10]" + "'", str30, "[0, 32, 35, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 32, 36, 0, 10]" + "'", str31, "[0, 32, 36, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 32, 37, 0, 10]" + "'", str32, "[0, 32, 37, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 32, 38, 0, 10]" + "'", str33, "[0, 32, 38, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 32, 39, 0, 10]" + "'", str34, "[0, 32, 39, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 32, 40, 0, 10]" + "'", str35, "[0, 32, 40, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 32, 41, 0, 10]" + "'", str36, "[0, 32, 41, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 32, 42, 0, 10]" + "'", str37, "[0, 32, 42, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 32, 43, 0, 10]" + "'", str38, "[0, 32, 43, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 32, 44, 0, 10]" + "'", str39, "[0, 32, 44, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 32, 45, 0, 10]" + "'", str40, "[0, 32, 45, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 32, 46, 0, 10]" + "'", str41, "[0, 32, 46, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 32, 47, 0, 10]" + "'", str42, "[0, 32, 47, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 32, 48, 0, 10]" + "'", str43, "[0, 32, 48, 0, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 32, 49, 0, 10]" + "'", str44, "[0, 32, 49, 0, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 32, 50, 0, 10]" + "'", str45, "[0, 32, 50, 0, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 32, 51, 0, 10]" + "'", str46, "[0, 32, 51, 0, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 32, 52, 0, 10]" + "'", str47, "[0, 32, 52, 0, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 32, 53, 0, 10]" + "'", str48, "[0, 32, 53, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test6040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6040");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass67 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 161, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 100, 103, 10, 1]" + "'", str8, "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 100, 104, 10, 1]" + "'", str9, "[1, 100, 104, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 100, 105, 10, 1]" + "'", str10, "[1, 100, 105, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 100, 106, 10, 1]" + "'", str11, "[1, 100, 106, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 100, 107, 10, 1]" + "'", str12, "[1, 100, 107, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 100, 108, 10, 1]" + "'", str13, "[1, 100, 108, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 100, 109, 10, 1]" + "'", str14, "[1, 100, 109, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 100, 110, 10, 1]" + "'", str15, "[1, 100, 110, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 100, 111, 10, 1]" + "'", str16, "[1, 100, 111, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 100, 112, 10, 1]" + "'", str17, "[1, 100, 112, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 100, 113, 10, 1]" + "'", str18, "[1, 100, 113, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 100, 114, 10, 1]" + "'", str19, "[1, 100, 114, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 100, 115, 10, 1]" + "'", str20, "[1, 100, 115, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 100, 116, 10, 1]" + "'", str21, "[1, 100, 116, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 100, 117, 10, 1]" + "'", str22, "[1, 100, 117, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 100, 118, 10, 1]" + "'", str23, "[1, 100, 118, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 100, 119, 10, 1]" + "'", str24, "[1, 100, 119, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 100, 120, 10, 1]" + "'", str25, "[1, 100, 120, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 100, 121, 10, 1]" + "'", str26, "[1, 100, 121, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 100, 122, 10, 1]" + "'", str27, "[1, 100, 122, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 100, 123, 10, 1]" + "'", str28, "[1, 100, 123, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 100, 124, 10, 1]" + "'", str29, "[1, 100, 124, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 100, 125, 10, 1]" + "'", str30, "[1, 100, 125, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 100, 126, 10, 1]" + "'", str31, "[1, 100, 126, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 100, 127, 10, 1]" + "'", str32, "[1, 100, 127, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 100, 128, 10, 1]" + "'", str33, "[1, 100, 128, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 100, 129, 10, 1]" + "'", str34, "[1, 100, 129, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 100, 130, 10, 1]" + "'", str35, "[1, 100, 130, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 100, 131, 10, 1]" + "'", str36, "[1, 100, 131, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 100, 132, 10, 1]" + "'", str37, "[1, 100, 132, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 100, 133, 10, 1]" + "'", str38, "[1, 100, 133, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 100, 134, 10, 1]" + "'", str39, "[1, 100, 134, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 100, 135, 10, 1]" + "'", str40, "[1, 100, 135, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 100, 136, 10, 1]" + "'", str41, "[1, 100, 136, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 100, 137, 10, 1]" + "'", str42, "[1, 100, 137, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 100, 138, 10, 1]" + "'", str43, "[1, 100, 138, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 100, 139, 10, 1]" + "'", str44, "[1, 100, 139, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 100, 140, 10, 1]" + "'", str45, "[1, 100, 140, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 100, 141, 10, 1]" + "'", str46, "[1, 100, 141, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 100, 142, 10, 1]" + "'", str47, "[1, 100, 142, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 100, 143, 10, 1]" + "'", str48, "[1, 100, 143, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 100, 144, 10, 1]" + "'", str49, "[1, 100, 144, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 100, 145, 10, 1]" + "'", str50, "[1, 100, 145, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 100, 146, 10, 1]" + "'", str51, "[1, 100, 146, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 100, 147, 10, 1]" + "'", str52, "[1, 100, 147, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 100, 148, 10, 1]" + "'", str53, "[1, 100, 148, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 100, 149, 10, 1]" + "'", str54, "[1, 100, 149, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 100, 150, 10, 1]" + "'", str55, "[1, 100, 150, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 100, 151, 10, 1]" + "'", str56, "[1, 100, 151, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 100, 152, 10, 1]" + "'", str57, "[1, 100, 152, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 100, 153, 10, 1]" + "'", str58, "[1, 100, 153, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 100, 154, 10, 1]" + "'", str59, "[1, 100, 154, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 100, 155, 10, 1]" + "'", str60, "[1, 100, 155, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 100, 156, 10, 1]" + "'", str61, "[1, 100, 156, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 100, 157, 10, 1]" + "'", str62, "[1, 100, 157, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 100, 158, 10, 1]" + "'", str63, "[1, 100, 158, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 100, 159, 10, 1]" + "'", str64, "[1, 100, 159, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 100, 160, 10, 1]" + "'", str65, "[1, 100, 160, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 100, 161, 10, 1]" + "'", str66, "[1, 100, 161, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test6041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6041");
        int[] intArray2 = new int[] { '#', (short) 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass42 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[74, 49]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[36, 11]" + "'", str3, "[36, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[37, 12]" + "'", str4, "[37, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[38, 13]" + "'", str5, "[38, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[39, 14]" + "'", str6, "[39, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[40, 15]" + "'", str7, "[40, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[41, 16]" + "'", str8, "[41, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[42, 17]" + "'", str9, "[42, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[43, 18]" + "'", str10, "[43, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[44, 19]" + "'", str11, "[44, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[45, 20]" + "'", str12, "[45, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[46, 21]" + "'", str13, "[46, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[47, 22]" + "'", str14, "[47, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[48, 23]" + "'", str15, "[48, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[49, 24]" + "'", str16, "[49, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[50, 25]" + "'", str17, "[50, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[51, 26]" + "'", str18, "[51, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 27]" + "'", str19, "[52, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 28]" + "'", str20, "[53, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[54, 29]" + "'", str21, "[54, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[55, 30]" + "'", str22, "[55, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[56, 31]" + "'", str23, "[56, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[57, 32]" + "'", str24, "[57, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[58, 33]" + "'", str25, "[58, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[59, 34]" + "'", str26, "[59, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[60, 35]" + "'", str27, "[60, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[61, 36]" + "'", str28, "[61, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[62, 37]" + "'", str29, "[62, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[63, 38]" + "'", str30, "[63, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[64, 39]" + "'", str31, "[64, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[65, 40]" + "'", str32, "[65, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[66, 41]" + "'", str33, "[66, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[67, 42]" + "'", str34, "[67, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[68, 43]" + "'", str35, "[68, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[69, 44]" + "'", str36, "[69, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[70, 45]" + "'", str37, "[70, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[71, 46]" + "'", str38, "[71, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[72, 47]" + "'", str39, "[72, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[73, 48]" + "'", str40, "[73, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[74, 49]" + "'", str41, "[74, 49]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test6042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6042");
        int[] intArray5 = new int[] { (byte) 10, (byte) -1, '#', (byte) 100, (short) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass15 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, -1, 36, 100, -1]" + "'", str6, "[10, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, -1, 37, 100, -1]" + "'", str7, "[10, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, -1, 38, 100, -1]" + "'", str8, "[10, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, -1, 39, 100, -1]" + "'", str9, "[10, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, -1, 40, 100, -1]" + "'", str10, "[10, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, -1, 41, 100, -1]" + "'", str11, "[10, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, -1, 42, 100, -1]" + "'", str12, "[10, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, -1, 43, 100, -1]" + "'", str13, "[10, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, -1, 44, 100, -1]" + "'", str14, "[10, -1, 44, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test6043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6043");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass54 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[4, 9, 104]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 100]" + "'", str6, "[0, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100]" + "'", str7, "[0, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 100]" + "'", str8, "[0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 100]" + "'", str9, "[0, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 100]" + "'", str10, "[0, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 100]" + "'", str11, "[0, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 100]" + "'", str12, "[0, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 100]" + "'", str13, "[0, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 101]" + "'", str14, "[1, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 101]" + "'", str15, "[1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 101]" + "'", str16, "[1, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 101]" + "'", str17, "[1, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 101]" + "'", str18, "[1, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 101]" + "'", str19, "[1, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 101]" + "'", str20, "[1, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 101]" + "'", str21, "[1, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 101]" + "'", str22, "[1, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 101]" + "'", str23, "[1, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 102]" + "'", str24, "[2, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 102]" + "'", str25, "[2, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 102]" + "'", str26, "[2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 102]" + "'", str27, "[2, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 102]" + "'", str28, "[2, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 102]" + "'", str29, "[2, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 102]" + "'", str30, "[2, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 102]" + "'", str31, "[2, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 102]" + "'", str32, "[2, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 102]" + "'", str33, "[2, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 103]" + "'", str34, "[3, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 103]" + "'", str35, "[3, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 103]" + "'", str36, "[3, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 103]" + "'", str37, "[3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 103]" + "'", str38, "[3, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 103]" + "'", str39, "[3, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 103]" + "'", str40, "[3, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 103]" + "'", str41, "[3, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 103]" + "'", str42, "[3, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 103]" + "'", str43, "[3, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 104]" + "'", str44, "[4, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 104]" + "'", str45, "[4, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 104]" + "'", str46, "[4, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 104]" + "'", str47, "[4, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 104]" + "'", str48, "[4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 104]" + "'", str49, "[4, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 104]" + "'", str50, "[4, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 104]" + "'", str51, "[4, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 104]" + "'", str52, "[4, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 9, 104]" + "'", str53, "[4, 9, 104]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test6044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6044");
        int[] intArray3 = new int[] { 1, (byte) 0, (byte) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass69 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[7, 5, 6]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 5]" + "'", str60, "[6, 7, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 5]" + "'", str61, "[6, 8, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 5]" + "'", str62, "[6, 9, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 6]" + "'", str63, "[7, 0, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 6]" + "'", str64, "[7, 1, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 6]" + "'", str65, "[7, 2, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 6]" + "'", str66, "[7, 3, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 6]" + "'", str67, "[7, 4, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 5, 6]" + "'", str68, "[7, 5, 6]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test6045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6045");
        int[] intArray3 = new int[] { (short) 1, '4', '#' };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass42 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 90, 35]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 53, 35]" + "'", str4, "[1, 53, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 54, 35]" + "'", str5, "[1, 54, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 55, 35]" + "'", str6, "[1, 55, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 56, 35]" + "'", str7, "[1, 56, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 57, 35]" + "'", str8, "[1, 57, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 58, 35]" + "'", str9, "[1, 58, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 59, 35]" + "'", str10, "[1, 59, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 60, 35]" + "'", str11, "[1, 60, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 61, 35]" + "'", str12, "[1, 61, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 62, 35]" + "'", str13, "[1, 62, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 63, 35]" + "'", str14, "[1, 63, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 64, 35]" + "'", str15, "[1, 64, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 65, 35]" + "'", str16, "[1, 65, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 66, 35]" + "'", str17, "[1, 66, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 67, 35]" + "'", str18, "[1, 67, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 68, 35]" + "'", str19, "[1, 68, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 69, 35]" + "'", str20, "[1, 69, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 70, 35]" + "'", str21, "[1, 70, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 71, 35]" + "'", str22, "[1, 71, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 72, 35]" + "'", str23, "[1, 72, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 73, 35]" + "'", str24, "[1, 73, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 74, 35]" + "'", str25, "[1, 74, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 75, 35]" + "'", str26, "[1, 75, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 76, 35]" + "'", str27, "[1, 76, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 77, 35]" + "'", str28, "[1, 77, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 78, 35]" + "'", str29, "[1, 78, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 79, 35]" + "'", str30, "[1, 79, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 80, 35]" + "'", str31, "[1, 80, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 81, 35]" + "'", str32, "[1, 81, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 82, 35]" + "'", str33, "[1, 82, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 83, 35]" + "'", str34, "[1, 83, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 84, 35]" + "'", str35, "[1, 84, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 85, 35]" + "'", str36, "[1, 85, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 86, 35]" + "'", str37, "[1, 86, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 87, 35]" + "'", str38, "[1, 87, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 88, 35]" + "'", str39, "[1, 88, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 89, 35]" + "'", str40, "[1, 89, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 90, 35]" + "'", str41, "[1, 90, 35]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test6046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6046");
        int[] intArray3 = new int[] { ' ', (short) 0, (byte) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass25 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[34, 1, 12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 1, 10]" + "'", str4, "[32, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 2, 10]" + "'", str5, "[32, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 3, 10]" + "'", str6, "[32, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 4, 10]" + "'", str7, "[32, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 5, 10]" + "'", str8, "[32, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 6, 10]" + "'", str9, "[32, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 7, 10]" + "'", str10, "[32, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 8, 10]" + "'", str11, "[32, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 9, 10]" + "'", str12, "[32, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 0, 11]" + "'", str13, "[33, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 1, 11]" + "'", str14, "[33, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 2, 11]" + "'", str15, "[33, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 3, 11]" + "'", str16, "[33, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 4, 11]" + "'", str17, "[33, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 5, 11]" + "'", str18, "[33, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 6, 11]" + "'", str19, "[33, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 7, 11]" + "'", str20, "[33, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 8, 11]" + "'", str21, "[33, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 9, 11]" + "'", str22, "[33, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 0, 12]" + "'", str23, "[34, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 1, 12]" + "'", str24, "[34, 1, 12]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test6047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6047");
        int[] intArray5 = new int[] { (byte) -1, '#', 10, (-1), 100 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass53 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 35, 57, -1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 35, 11, -1, 100]" + "'", str6, "[-1, 35, 11, -1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 35, 12, -1, 100]" + "'", str7, "[-1, 35, 12, -1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 35, 13, -1, 100]" + "'", str8, "[-1, 35, 13, -1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 35, 14, -1, 100]" + "'", str9, "[-1, 35, 14, -1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 35, 15, -1, 100]" + "'", str10, "[-1, 35, 15, -1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 35, 16, -1, 100]" + "'", str11, "[-1, 35, 16, -1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 35, 17, -1, 100]" + "'", str12, "[-1, 35, 17, -1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 35, 18, -1, 100]" + "'", str13, "[-1, 35, 18, -1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 35, 19, -1, 100]" + "'", str14, "[-1, 35, 19, -1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 35, 20, -1, 100]" + "'", str15, "[-1, 35, 20, -1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 35, 21, -1, 100]" + "'", str16, "[-1, 35, 21, -1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 35, 22, -1, 100]" + "'", str17, "[-1, 35, 22, -1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 35, 23, -1, 100]" + "'", str18, "[-1, 35, 23, -1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 35, 24, -1, 100]" + "'", str19, "[-1, 35, 24, -1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 35, 25, -1, 100]" + "'", str20, "[-1, 35, 25, -1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 35, 26, -1, 100]" + "'", str21, "[-1, 35, 26, -1, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 35, 27, -1, 100]" + "'", str22, "[-1, 35, 27, -1, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 35, 28, -1, 100]" + "'", str23, "[-1, 35, 28, -1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 35, 29, -1, 100]" + "'", str24, "[-1, 35, 29, -1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 35, 30, -1, 100]" + "'", str25, "[-1, 35, 30, -1, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 35, 31, -1, 100]" + "'", str26, "[-1, 35, 31, -1, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 35, 32, -1, 100]" + "'", str27, "[-1, 35, 32, -1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 35, 33, -1, 100]" + "'", str28, "[-1, 35, 33, -1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 35, 34, -1, 100]" + "'", str29, "[-1, 35, 34, -1, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 35, 35, -1, 100]" + "'", str30, "[-1, 35, 35, -1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 35, 36, -1, 100]" + "'", str31, "[-1, 35, 36, -1, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 35, 37, -1, 100]" + "'", str32, "[-1, 35, 37, -1, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 35, 38, -1, 100]" + "'", str33, "[-1, 35, 38, -1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 35, 39, -1, 100]" + "'", str34, "[-1, 35, 39, -1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 35, 40, -1, 100]" + "'", str35, "[-1, 35, 40, -1, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 35, 41, -1, 100]" + "'", str36, "[-1, 35, 41, -1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 35, 42, -1, 100]" + "'", str37, "[-1, 35, 42, -1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 43, -1, 100]" + "'", str38, "[-1, 35, 43, -1, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 35, 44, -1, 100]" + "'", str39, "[-1, 35, 44, -1, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 35, 45, -1, 100]" + "'", str40, "[-1, 35, 45, -1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 35, 46, -1, 100]" + "'", str41, "[-1, 35, 46, -1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 35, 47, -1, 100]" + "'", str42, "[-1, 35, 47, -1, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 35, 48, -1, 100]" + "'", str43, "[-1, 35, 48, -1, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 35, 49, -1, 100]" + "'", str44, "[-1, 35, 49, -1, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 35, 50, -1, 100]" + "'", str45, "[-1, 35, 50, -1, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 35, 51, -1, 100]" + "'", str46, "[-1, 35, 51, -1, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 35, 52, -1, 100]" + "'", str47, "[-1, 35, 52, -1, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 35, 53, -1, 100]" + "'", str48, "[-1, 35, 53, -1, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 35, 54, -1, 100]" + "'", str49, "[-1, 35, 54, -1, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 35, 55, -1, 100]" + "'", str50, "[-1, 35, 55, -1, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 35, 56, -1, 100]" + "'", str51, "[-1, 35, 56, -1, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 35, 57, -1, 100]" + "'", str52, "[-1, 35, 57, -1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test6048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6048");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass88 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[60, 4, 4, 18]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[54, 1, 1, 12]" + "'", str24, "[54, 1, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 2, 2, 12]" + "'", str25, "[54, 2, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 3, 3, 12]" + "'", str26, "[54, 3, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[54, 4, 4, 12]" + "'", str27, "[54, 4, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[54, 5, 5, 12]" + "'", str28, "[54, 5, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[54, 6, 6, 12]" + "'", str29, "[54, 6, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[54, 7, 7, 12]" + "'", str30, "[54, 7, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[54, 8, 8, 12]" + "'", str31, "[54, 8, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[54, 9, 9, 12]" + "'", str32, "[54, 9, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[55, 0, 0, 13]" + "'", str33, "[55, 0, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[55, 1, 1, 13]" + "'", str34, "[55, 1, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[55, 2, 2, 13]" + "'", str35, "[55, 2, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[55, 3, 3, 13]" + "'", str36, "[55, 3, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[55, 4, 4, 13]" + "'", str37, "[55, 4, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[55, 5, 5, 13]" + "'", str38, "[55, 5, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[55, 6, 6, 13]" + "'", str39, "[55, 6, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[55, 7, 7, 13]" + "'", str40, "[55, 7, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[55, 8, 8, 13]" + "'", str41, "[55, 8, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[55, 9, 9, 13]" + "'", str42, "[55, 9, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[56, 0, 0, 14]" + "'", str43, "[56, 0, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[56, 1, 1, 14]" + "'", str44, "[56, 1, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[56, 2, 2, 14]" + "'", str45, "[56, 2, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[56, 3, 3, 14]" + "'", str46, "[56, 3, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56, 4, 4, 14]" + "'", str47, "[56, 4, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 5, 5, 14]" + "'", str48, "[56, 5, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[56, 6, 6, 14]" + "'", str49, "[56, 6, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[56, 7, 7, 14]" + "'", str50, "[56, 7, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[56, 8, 8, 14]" + "'", str51, "[56, 8, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[56, 9, 9, 14]" + "'", str52, "[56, 9, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[57, 0, 0, 15]" + "'", str53, "[57, 0, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[57, 1, 1, 15]" + "'", str54, "[57, 1, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[57, 2, 2, 15]" + "'", str55, "[57, 2, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[57, 3, 3, 15]" + "'", str56, "[57, 3, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[57, 4, 4, 15]" + "'", str57, "[57, 4, 4, 15]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[57, 5, 5, 15]" + "'", str58, "[57, 5, 5, 15]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[57, 6, 6, 15]" + "'", str59, "[57, 6, 6, 15]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[57, 7, 7, 15]" + "'", str60, "[57, 7, 7, 15]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[57, 8, 8, 15]" + "'", str61, "[57, 8, 8, 15]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[57, 9, 9, 15]" + "'", str62, "[57, 9, 9, 15]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[58, 0, 0, 16]" + "'", str63, "[58, 0, 0, 16]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[58, 1, 1, 16]" + "'", str64, "[58, 1, 1, 16]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[58, 2, 2, 16]" + "'", str65, "[58, 2, 2, 16]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[58, 3, 3, 16]" + "'", str66, "[58, 3, 3, 16]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[58, 4, 4, 16]" + "'", str67, "[58, 4, 4, 16]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[58, 5, 5, 16]" + "'", str68, "[58, 5, 5, 16]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[58, 6, 6, 16]" + "'", str69, "[58, 6, 6, 16]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[58, 7, 7, 16]" + "'", str70, "[58, 7, 7, 16]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[58, 8, 8, 16]" + "'", str71, "[58, 8, 8, 16]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[58, 9, 9, 16]" + "'", str72, "[58, 9, 9, 16]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[59, 0, 0, 17]" + "'", str73, "[59, 0, 0, 17]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[59, 1, 1, 17]" + "'", str74, "[59, 1, 1, 17]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[59, 2, 2, 17]" + "'", str75, "[59, 2, 2, 17]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[59, 3, 3, 17]" + "'", str76, "[59, 3, 3, 17]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[59, 4, 4, 17]" + "'", str77, "[59, 4, 4, 17]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[59, 5, 5, 17]" + "'", str78, "[59, 5, 5, 17]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[59, 6, 6, 17]" + "'", str79, "[59, 6, 6, 17]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[59, 7, 7, 17]" + "'", str80, "[59, 7, 7, 17]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[59, 8, 8, 17]" + "'", str81, "[59, 8, 8, 17]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[59, 9, 9, 17]" + "'", str82, "[59, 9, 9, 17]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[60, 0, 0, 18]" + "'", str83, "[60, 0, 0, 18]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[60, 1, 1, 18]" + "'", str84, "[60, 1, 1, 18]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[60, 2, 2, 18]" + "'", str85, "[60, 2, 2, 18]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[60, 3, 3, 18]" + "'", str86, "[60, 3, 3, 18]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[60, 4, 4, 18]" + "'", str87, "[60, 4, 4, 18]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test6049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6049");
        int[] intArray1 = new int[] { '4' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass51 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[101]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[53]" + "'", str2, "[53]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[54]" + "'", str3, "[54]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[55]" + "'", str4, "[55]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[56]" + "'", str5, "[56]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[57]" + "'", str6, "[57]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[58]" + "'", str7, "[58]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[59]" + "'", str8, "[59]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[60]" + "'", str9, "[60]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[61]" + "'", str10, "[61]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[62]" + "'", str11, "[62]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[63]" + "'", str12, "[63]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[64]" + "'", str13, "[64]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[65]" + "'", str14, "[65]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[66]" + "'", str15, "[66]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[67]" + "'", str16, "[67]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[68]" + "'", str17, "[68]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[69]" + "'", str18, "[69]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[70]" + "'", str19, "[70]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[71]" + "'", str20, "[71]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[72]" + "'", str21, "[72]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[73]" + "'", str22, "[73]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[74]" + "'", str23, "[74]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[75]" + "'", str24, "[75]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[76]" + "'", str25, "[76]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[77]" + "'", str26, "[77]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[78]" + "'", str27, "[78]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[79]" + "'", str28, "[79]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[80]" + "'", str29, "[80]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[81]" + "'", str30, "[81]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[82]" + "'", str31, "[82]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[83]" + "'", str32, "[83]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[84]" + "'", str33, "[84]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[85]" + "'", str34, "[85]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[86]" + "'", str35, "[86]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[87]" + "'", str36, "[87]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[88]" + "'", str37, "[88]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[89]" + "'", str38, "[89]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[90]" + "'", str39, "[90]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[91]" + "'", str40, "[91]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[92]" + "'", str41, "[92]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[93]" + "'", str42, "[93]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[94]" + "'", str43, "[94]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[95]" + "'", str44, "[95]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[96]" + "'", str45, "[96]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97]" + "'", str46, "[97]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[98]" + "'", str47, "[98]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[99]" + "'", str48, "[99]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100]" + "'", str49, "[100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101]" + "'", str50, "[101]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test6050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6050");
        int[] intArray5 = new int[] { (byte) 1, (byte) -1, (short) 1, (byte) 1, 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass21 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 6, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, -1, 2, 1, 10]" + "'", str6, "[1, -1, 2, 1, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, -1, 3, 1, 10]" + "'", str7, "[1, -1, 3, 1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, -1, 4, 1, 10]" + "'", str8, "[1, -1, 4, 1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, -1, 5, 1, 10]" + "'", str9, "[1, -1, 5, 1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, -1, 6, 1, 10]" + "'", str10, "[1, -1, 6, 1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, -1, 7, 1, 10]" + "'", str11, "[1, -1, 7, 1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, -1, 8, 1, 10]" + "'", str12, "[1, -1, 8, 1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, -1, 9, 1, 10]" + "'", str13, "[1, -1, 9, 1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 0, 2, 10]" + "'", str14, "[1, 0, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 1, 2, 10]" + "'", str15, "[1, 0, 1, 2, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 2, 2, 10]" + "'", str16, "[1, 0, 2, 2, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 3, 2, 10]" + "'", str17, "[1, 0, 3, 2, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 4, 2, 10]" + "'", str18, "[1, 0, 4, 2, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 5, 2, 10]" + "'", str19, "[1, 0, 5, 2, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 6, 2, 10]" + "'", str20, "[1, 0, 6, 2, 10]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test6051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6051");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass56 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[5, 1, 105]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 100]" + "'", str6, "[0, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100]" + "'", str7, "[0, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 100]" + "'", str8, "[0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 100]" + "'", str9, "[0, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 100]" + "'", str10, "[0, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 100]" + "'", str11, "[0, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 100]" + "'", str12, "[0, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 100]" + "'", str13, "[0, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 101]" + "'", str14, "[1, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 101]" + "'", str15, "[1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 101]" + "'", str16, "[1, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 101]" + "'", str17, "[1, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 101]" + "'", str18, "[1, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 101]" + "'", str19, "[1, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 101]" + "'", str20, "[1, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 101]" + "'", str21, "[1, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 101]" + "'", str22, "[1, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 101]" + "'", str23, "[1, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 102]" + "'", str24, "[2, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 102]" + "'", str25, "[2, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 102]" + "'", str26, "[2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 102]" + "'", str27, "[2, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 102]" + "'", str28, "[2, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 102]" + "'", str29, "[2, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 102]" + "'", str30, "[2, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 102]" + "'", str31, "[2, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 102]" + "'", str32, "[2, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 102]" + "'", str33, "[2, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 103]" + "'", str34, "[3, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 103]" + "'", str35, "[3, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 103]" + "'", str36, "[3, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 103]" + "'", str37, "[3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 103]" + "'", str38, "[3, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 103]" + "'", str39, "[3, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 103]" + "'", str40, "[3, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 103]" + "'", str41, "[3, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 103]" + "'", str42, "[3, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 103]" + "'", str43, "[3, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 104]" + "'", str44, "[4, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 104]" + "'", str45, "[4, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 104]" + "'", str46, "[4, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 104]" + "'", str47, "[4, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 104]" + "'", str48, "[4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 104]" + "'", str49, "[4, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 104]" + "'", str50, "[4, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 104]" + "'", str51, "[4, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 104]" + "'", str52, "[4, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 9, 104]" + "'", str53, "[4, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 0, 105]" + "'", str54, "[5, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 1, 105]" + "'", str55, "[5, 1, 105]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test6052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6052");
        int[] intArray4 = new int[] { (byte) 100, '#', (byte) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass17 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 47, 22, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 36, 11, -1]" + "'", str5, "[100, 36, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 37, 12, -1]" + "'", str6, "[100, 37, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 38, 13, -1]" + "'", str7, "[100, 38, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 39, 14, -1]" + "'", str8, "[100, 39, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 40, 15, -1]" + "'", str9, "[100, 40, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 41, 16, -1]" + "'", str10, "[100, 41, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 42, 17, -1]" + "'", str11, "[100, 42, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 43, 18, -1]" + "'", str12, "[100, 43, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 44, 19, -1]" + "'", str13, "[100, 44, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 45, 20, -1]" + "'", str14, "[100, 45, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 46, 21, -1]" + "'", str15, "[100, 46, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 47, 22, -1]" + "'", str16, "[100, 47, 22, -1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6053");
        int[] intArray6 = new int[] { 0, (short) -1, 'a', '#', (byte) 0, 100 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass64 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 154, 92, 0, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 98, 36, 0, 100]" + "'", str7, "[0, -1, 98, 36, 0, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 99, 37, 0, 100]" + "'", str8, "[0, -1, 99, 37, 0, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 100, 38, 0, 100]" + "'", str9, "[0, -1, 100, 38, 0, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 101, 39, 0, 100]" + "'", str10, "[0, -1, 101, 39, 0, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 102, 40, 0, 100]" + "'", str11, "[0, -1, 102, 40, 0, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 103, 41, 0, 100]" + "'", str12, "[0, -1, 103, 41, 0, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 104, 42, 0, 100]" + "'", str13, "[0, -1, 104, 42, 0, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 105, 43, 0, 100]" + "'", str14, "[0, -1, 105, 43, 0, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 106, 44, 0, 100]" + "'", str15, "[0, -1, 106, 44, 0, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 107, 45, 0, 100]" + "'", str16, "[0, -1, 107, 45, 0, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 108, 46, 0, 100]" + "'", str17, "[0, -1, 108, 46, 0, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 109, 47, 0, 100]" + "'", str18, "[0, -1, 109, 47, 0, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 110, 48, 0, 100]" + "'", str19, "[0, -1, 110, 48, 0, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 111, 49, 0, 100]" + "'", str20, "[0, -1, 111, 49, 0, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 112, 50, 0, 100]" + "'", str21, "[0, -1, 112, 50, 0, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 113, 51, 0, 100]" + "'", str22, "[0, -1, 113, 51, 0, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 114, 52, 0, 100]" + "'", str23, "[0, -1, 114, 52, 0, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 115, 53, 0, 100]" + "'", str24, "[0, -1, 115, 53, 0, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 116, 54, 0, 100]" + "'", str25, "[0, -1, 116, 54, 0, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 117, 55, 0, 100]" + "'", str26, "[0, -1, 117, 55, 0, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 118, 56, 0, 100]" + "'", str27, "[0, -1, 118, 56, 0, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 119, 57, 0, 100]" + "'", str28, "[0, -1, 119, 57, 0, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 120, 58, 0, 100]" + "'", str29, "[0, -1, 120, 58, 0, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 121, 59, 0, 100]" + "'", str30, "[0, -1, 121, 59, 0, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 122, 60, 0, 100]" + "'", str31, "[0, -1, 122, 60, 0, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 123, 61, 0, 100]" + "'", str32, "[0, -1, 123, 61, 0, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 124, 62, 0, 100]" + "'", str33, "[0, -1, 124, 62, 0, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 125, 63, 0, 100]" + "'", str34, "[0, -1, 125, 63, 0, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 126, 64, 0, 100]" + "'", str35, "[0, -1, 126, 64, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 127, 65, 0, 100]" + "'", str36, "[0, -1, 127, 65, 0, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 128, 66, 0, 100]" + "'", str37, "[0, -1, 128, 66, 0, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 129, 67, 0, 100]" + "'", str38, "[0, -1, 129, 67, 0, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 130, 68, 0, 100]" + "'", str39, "[0, -1, 130, 68, 0, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 131, 69, 0, 100]" + "'", str40, "[0, -1, 131, 69, 0, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 132, 70, 0, 100]" + "'", str41, "[0, -1, 132, 70, 0, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 133, 71, 0, 100]" + "'", str42, "[0, -1, 133, 71, 0, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 134, 72, 0, 100]" + "'", str43, "[0, -1, 134, 72, 0, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, -1, 135, 73, 0, 100]" + "'", str44, "[0, -1, 135, 73, 0, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, -1, 136, 74, 0, 100]" + "'", str45, "[0, -1, 136, 74, 0, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, -1, 137, 75, 0, 100]" + "'", str46, "[0, -1, 137, 75, 0, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, -1, 138, 76, 0, 100]" + "'", str47, "[0, -1, 138, 76, 0, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, -1, 139, 77, 0, 100]" + "'", str48, "[0, -1, 139, 77, 0, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, -1, 140, 78, 0, 100]" + "'", str49, "[0, -1, 140, 78, 0, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, -1, 141, 79, 0, 100]" + "'", str50, "[0, -1, 141, 79, 0, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, -1, 142, 80, 0, 100]" + "'", str51, "[0, -1, 142, 80, 0, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, -1, 143, 81, 0, 100]" + "'", str52, "[0, -1, 143, 81, 0, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, -1, 144, 82, 0, 100]" + "'", str53, "[0, -1, 144, 82, 0, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, -1, 145, 83, 0, 100]" + "'", str54, "[0, -1, 145, 83, 0, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, -1, 146, 84, 0, 100]" + "'", str55, "[0, -1, 146, 84, 0, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, -1, 147, 85, 0, 100]" + "'", str56, "[0, -1, 147, 85, 0, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, -1, 148, 86, 0, 100]" + "'", str57, "[0, -1, 148, 86, 0, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, -1, 149, 87, 0, 100]" + "'", str58, "[0, -1, 149, 87, 0, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, -1, 150, 88, 0, 100]" + "'", str59, "[0, -1, 150, 88, 0, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, -1, 151, 89, 0, 100]" + "'", str60, "[0, -1, 151, 89, 0, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, -1, 152, 90, 0, 100]" + "'", str61, "[0, -1, 152, 90, 0, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, -1, 153, 91, 0, 100]" + "'", str62, "[0, -1, 153, 91, 0, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, -1, 154, 92, 0, 100]" + "'", str63, "[0, -1, 154, 92, 0, 100]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test6054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6054");
        int[] intArray1 = new int[] { (byte) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass16 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[5]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test6055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6055");
        int[] intArray6 = new int[] { (short) 0, (byte) 1, (-1), (byte) 0, (short) 0, 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass31 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 3, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 0, 1, 0, 1]" + "'", str7, "[0, 1, 0, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 1, 2, 0, 1]" + "'", str8, "[0, 1, 1, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 2, 3, 0, 1]" + "'", str9, "[0, 1, 2, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 3, 4, 0, 1]" + "'", str10, "[0, 1, 3, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 4, 5, 0, 1]" + "'", str11, "[0, 1, 4, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 5, 6, 0, 1]" + "'", str12, "[0, 1, 5, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 6, 7, 0, 1]" + "'", str13, "[0, 1, 6, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 7, 8, 0, 1]" + "'", str14, "[0, 1, 7, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 8, 9, 0, 1]" + "'", str15, "[0, 1, 8, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 0, 0, 1, 1]" + "'", str16, "[0, 2, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 1, 1, 1, 1]" + "'", str17, "[0, 2, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 2, 2, 2, 1, 1]" + "'", str18, "[0, 2, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 2, 3, 3, 1, 1]" + "'", str19, "[0, 2, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 2, 4, 4, 1, 1]" + "'", str20, "[0, 2, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 2, 5, 5, 1, 1]" + "'", str21, "[0, 2, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 2, 6, 6, 1, 1]" + "'", str22, "[0, 2, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 2, 7, 7, 1, 1]" + "'", str23, "[0, 2, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 2, 8, 8, 1, 1]" + "'", str24, "[0, 2, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 2, 9, 9, 1, 1]" + "'", str25, "[0, 2, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 3, 0, 0, 2, 1]" + "'", str26, "[0, 3, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 3, 1, 1, 2, 1]" + "'", str27, "[0, 3, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 3, 2, 2, 2, 1]" + "'", str28, "[0, 3, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 3, 3, 3, 2, 1]" + "'", str29, "[0, 3, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 3, 4, 4, 2, 1]" + "'", str30, "[0, 3, 4, 4, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test6056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6056");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass25 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test6057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6057");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass57 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[5, 2, 105]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 100]" + "'", str6, "[0, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100]" + "'", str7, "[0, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 100]" + "'", str8, "[0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 100]" + "'", str9, "[0, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 100]" + "'", str10, "[0, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 100]" + "'", str11, "[0, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 100]" + "'", str12, "[0, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 100]" + "'", str13, "[0, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 101]" + "'", str14, "[1, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 101]" + "'", str15, "[1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 101]" + "'", str16, "[1, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 101]" + "'", str17, "[1, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 101]" + "'", str18, "[1, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 101]" + "'", str19, "[1, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 101]" + "'", str20, "[1, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 101]" + "'", str21, "[1, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 101]" + "'", str22, "[1, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 101]" + "'", str23, "[1, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 102]" + "'", str24, "[2, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 102]" + "'", str25, "[2, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 102]" + "'", str26, "[2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 102]" + "'", str27, "[2, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 102]" + "'", str28, "[2, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 102]" + "'", str29, "[2, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 102]" + "'", str30, "[2, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 102]" + "'", str31, "[2, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 102]" + "'", str32, "[2, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 102]" + "'", str33, "[2, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 103]" + "'", str34, "[3, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 103]" + "'", str35, "[3, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 103]" + "'", str36, "[3, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 103]" + "'", str37, "[3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 103]" + "'", str38, "[3, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 103]" + "'", str39, "[3, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 103]" + "'", str40, "[3, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 103]" + "'", str41, "[3, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 103]" + "'", str42, "[3, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 103]" + "'", str43, "[3, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 104]" + "'", str44, "[4, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 104]" + "'", str45, "[4, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 104]" + "'", str46, "[4, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 104]" + "'", str47, "[4, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 104]" + "'", str48, "[4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 104]" + "'", str49, "[4, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 104]" + "'", str50, "[4, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 104]" + "'", str51, "[4, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 104]" + "'", str52, "[4, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 9, 104]" + "'", str53, "[4, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 0, 105]" + "'", str54, "[5, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 1, 105]" + "'", str55, "[5, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 2, 105]" + "'", str56, "[5, 2, 105]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test6058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6058");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass55 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[5, 0, 105]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 100]" + "'", str6, "[0, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100]" + "'", str7, "[0, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 100]" + "'", str8, "[0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 100]" + "'", str9, "[0, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 100]" + "'", str10, "[0, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 100]" + "'", str11, "[0, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 100]" + "'", str12, "[0, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 100]" + "'", str13, "[0, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 101]" + "'", str14, "[1, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 101]" + "'", str15, "[1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 101]" + "'", str16, "[1, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 101]" + "'", str17, "[1, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 101]" + "'", str18, "[1, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 101]" + "'", str19, "[1, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 101]" + "'", str20, "[1, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 101]" + "'", str21, "[1, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 101]" + "'", str22, "[1, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 101]" + "'", str23, "[1, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 102]" + "'", str24, "[2, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 102]" + "'", str25, "[2, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 102]" + "'", str26, "[2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 102]" + "'", str27, "[2, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 102]" + "'", str28, "[2, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 102]" + "'", str29, "[2, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 102]" + "'", str30, "[2, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 102]" + "'", str31, "[2, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 102]" + "'", str32, "[2, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 102]" + "'", str33, "[2, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 103]" + "'", str34, "[3, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 103]" + "'", str35, "[3, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 103]" + "'", str36, "[3, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 103]" + "'", str37, "[3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 103]" + "'", str38, "[3, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 103]" + "'", str39, "[3, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 103]" + "'", str40, "[3, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 103]" + "'", str41, "[3, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 103]" + "'", str42, "[3, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 103]" + "'", str43, "[3, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 104]" + "'", str44, "[4, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 104]" + "'", str45, "[4, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 104]" + "'", str46, "[4, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 104]" + "'", str47, "[4, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 104]" + "'", str48, "[4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 104]" + "'", str49, "[4, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 104]" + "'", str50, "[4, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 104]" + "'", str51, "[4, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 104]" + "'", str52, "[4, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 9, 104]" + "'", str53, "[4, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 0, 105]" + "'", str54, "[5, 0, 105]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test6059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6059");
        int[] intArray5 = new int[] { (short) -1, (byte) 100, (byte) 10, (short) 100, ' ' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass64 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 68, 100, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 100, 11, 100, 32]" + "'", str6, "[-1, 100, 11, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 12, 100, 32]" + "'", str7, "[-1, 100, 12, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 13, 100, 32]" + "'", str8, "[-1, 100, 13, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 14, 100, 32]" + "'", str9, "[-1, 100, 14, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 15, 100, 32]" + "'", str10, "[-1, 100, 15, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 16, 100, 32]" + "'", str11, "[-1, 100, 16, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 17, 100, 32]" + "'", str12, "[-1, 100, 17, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 18, 100, 32]" + "'", str13, "[-1, 100, 18, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 19, 100, 32]" + "'", str14, "[-1, 100, 19, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 20, 100, 32]" + "'", str15, "[-1, 100, 20, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 21, 100, 32]" + "'", str16, "[-1, 100, 21, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 22, 100, 32]" + "'", str17, "[-1, 100, 22, 100, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 23, 100, 32]" + "'", str18, "[-1, 100, 23, 100, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 24, 100, 32]" + "'", str19, "[-1, 100, 24, 100, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 25, 100, 32]" + "'", str20, "[-1, 100, 25, 100, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 26, 100, 32]" + "'", str21, "[-1, 100, 26, 100, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 27, 100, 32]" + "'", str22, "[-1, 100, 27, 100, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 28, 100, 32]" + "'", str23, "[-1, 100, 28, 100, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 29, 100, 32]" + "'", str24, "[-1, 100, 29, 100, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 30, 100, 32]" + "'", str25, "[-1, 100, 30, 100, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 31, 100, 32]" + "'", str26, "[-1, 100, 31, 100, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 32, 100, 32]" + "'", str27, "[-1, 100, 32, 100, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 33, 100, 32]" + "'", str28, "[-1, 100, 33, 100, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 34, 100, 32]" + "'", str29, "[-1, 100, 34, 100, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 35, 100, 32]" + "'", str30, "[-1, 100, 35, 100, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 36, 100, 32]" + "'", str31, "[-1, 100, 36, 100, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 37, 100, 32]" + "'", str32, "[-1, 100, 37, 100, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 38, 100, 32]" + "'", str33, "[-1, 100, 38, 100, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 39, 100, 32]" + "'", str34, "[-1, 100, 39, 100, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 40, 100, 32]" + "'", str35, "[-1, 100, 40, 100, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 41, 100, 32]" + "'", str36, "[-1, 100, 41, 100, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 42, 100, 32]" + "'", str37, "[-1, 100, 42, 100, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 100, 43, 100, 32]" + "'", str38, "[-1, 100, 43, 100, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 100, 44, 100, 32]" + "'", str39, "[-1, 100, 44, 100, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 100, 45, 100, 32]" + "'", str40, "[-1, 100, 45, 100, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 100, 46, 100, 32]" + "'", str41, "[-1, 100, 46, 100, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 100, 47, 100, 32]" + "'", str42, "[-1, 100, 47, 100, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 100, 48, 100, 32]" + "'", str43, "[-1, 100, 48, 100, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 100, 49, 100, 32]" + "'", str44, "[-1, 100, 49, 100, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 100, 50, 100, 32]" + "'", str45, "[-1, 100, 50, 100, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 100, 51, 100, 32]" + "'", str46, "[-1, 100, 51, 100, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 100, 52, 100, 32]" + "'", str47, "[-1, 100, 52, 100, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 100, 53, 100, 32]" + "'", str48, "[-1, 100, 53, 100, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 100, 54, 100, 32]" + "'", str49, "[-1, 100, 54, 100, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 100, 55, 100, 32]" + "'", str50, "[-1, 100, 55, 100, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 100, 56, 100, 32]" + "'", str51, "[-1, 100, 56, 100, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 57, 100, 32]" + "'", str52, "[-1, 100, 57, 100, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 100, 58, 100, 32]" + "'", str53, "[-1, 100, 58, 100, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 100, 59, 100, 32]" + "'", str54, "[-1, 100, 59, 100, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 100, 60, 100, 32]" + "'", str55, "[-1, 100, 60, 100, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 100, 61, 100, 32]" + "'", str56, "[-1, 100, 61, 100, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 100, 62, 100, 32]" + "'", str57, "[-1, 100, 62, 100, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 100, 63, 100, 32]" + "'", str58, "[-1, 100, 63, 100, 32]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 100, 64, 100, 32]" + "'", str59, "[-1, 100, 64, 100, 32]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 100, 65, 100, 32]" + "'", str60, "[-1, 100, 65, 100, 32]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 100, 66, 100, 32]" + "'", str61, "[-1, 100, 66, 100, 32]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 100, 67, 100, 32]" + "'", str62, "[-1, 100, 67, 100, 32]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 100, 68, 100, 32]" + "'", str63, "[-1, 100, 68, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test6060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6060");
        int[] intArray4 = new int[] { '4', (-1), (byte) 10, 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass74 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 68, 79, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 11, 1]" + "'", str5, "[52, 0, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 12, 1]" + "'", str6, "[52, 1, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 13, 1]" + "'", str7, "[52, 2, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 14, 1]" + "'", str8, "[52, 3, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 15, 1]" + "'", str9, "[52, 4, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 16, 1]" + "'", str10, "[52, 5, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 17, 1]" + "'", str11, "[52, 6, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 18, 1]" + "'", str12, "[52, 7, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 19, 1]" + "'", str13, "[52, 8, 19, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 20, 1]" + "'", str14, "[52, 9, 20, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 21, 1]" + "'", str15, "[52, 10, 21, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 22, 1]" + "'", str16, "[52, 11, 22, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 23, 1]" + "'", str17, "[52, 12, 23, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 24, 1]" + "'", str18, "[52, 13, 24, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 25, 1]" + "'", str19, "[52, 14, 25, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 26, 1]" + "'", str20, "[52, 15, 26, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 27, 1]" + "'", str21, "[52, 16, 27, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 28, 1]" + "'", str22, "[52, 17, 28, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 29, 1]" + "'", str23, "[52, 18, 29, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 30, 1]" + "'", str24, "[52, 19, 30, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 31, 1]" + "'", str25, "[52, 20, 31, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 32, 1]" + "'", str26, "[52, 21, 32, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 33, 1]" + "'", str27, "[52, 22, 33, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 34, 1]" + "'", str28, "[52, 23, 34, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 35, 1]" + "'", str29, "[52, 24, 35, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 36, 1]" + "'", str30, "[52, 25, 36, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 37, 1]" + "'", str31, "[52, 26, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 38, 1]" + "'", str32, "[52, 27, 38, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 39, 1]" + "'", str33, "[52, 28, 39, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 40, 1]" + "'", str34, "[52, 29, 40, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 41, 1]" + "'", str35, "[52, 30, 41, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 42, 1]" + "'", str36, "[52, 31, 42, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 43, 1]" + "'", str37, "[52, 32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 44, 1]" + "'", str38, "[52, 33, 44, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 45, 1]" + "'", str39, "[52, 34, 45, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 46, 1]" + "'", str40, "[52, 35, 46, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 47, 1]" + "'", str41, "[52, 36, 47, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 48, 1]" + "'", str42, "[52, 37, 48, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 49, 1]" + "'", str43, "[52, 38, 49, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 50, 1]" + "'", str44, "[52, 39, 50, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 51, 1]" + "'", str45, "[52, 40, 51, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 52, 1]" + "'", str46, "[52, 41, 52, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 53, 1]" + "'", str47, "[52, 42, 53, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 54, 1]" + "'", str48, "[52, 43, 54, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 55, 1]" + "'", str49, "[52, 44, 55, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 56, 1]" + "'", str50, "[52, 45, 56, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 57, 1]" + "'", str51, "[52, 46, 57, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 58, 1]" + "'", str52, "[52, 47, 58, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 59, 1]" + "'", str53, "[52, 48, 59, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 60, 1]" + "'", str54, "[52, 49, 60, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 61, 1]" + "'", str55, "[52, 50, 61, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 62, 1]" + "'", str56, "[52, 51, 62, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 63, 1]" + "'", str57, "[52, 52, 63, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 64, 1]" + "'", str58, "[52, 53, 64, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[52, 54, 65, 1]" + "'", str59, "[52, 54, 65, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[52, 55, 66, 1]" + "'", str60, "[52, 55, 66, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[52, 56, 67, 1]" + "'", str61, "[52, 56, 67, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[52, 57, 68, 1]" + "'", str62, "[52, 57, 68, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[52, 58, 69, 1]" + "'", str63, "[52, 58, 69, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[52, 59, 70, 1]" + "'", str64, "[52, 59, 70, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[52, 60, 71, 1]" + "'", str65, "[52, 60, 71, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[52, 61, 72, 1]" + "'", str66, "[52, 61, 72, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[52, 62, 73, 1]" + "'", str67, "[52, 62, 73, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[52, 63, 74, 1]" + "'", str68, "[52, 63, 74, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[52, 64, 75, 1]" + "'", str69, "[52, 64, 75, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[52, 65, 76, 1]" + "'", str70, "[52, 65, 76, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[52, 66, 77, 1]" + "'", str71, "[52, 66, 77, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[52, 67, 78, 1]" + "'", str72, "[52, 67, 78, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[52, 68, 79, 1]" + "'", str73, "[52, 68, 79, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test6061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6061");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str97 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str98 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str99 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[98, 194]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 125]" + "'", str30, "[29, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 126]" + "'", str31, "[30, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 127]" + "'", str32, "[31, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 128]" + "'", str33, "[32, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 129]" + "'", str34, "[33, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 130]" + "'", str35, "[34, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 131]" + "'", str36, "[35, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[36, 132]" + "'", str37, "[36, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[37, 133]" + "'", str38, "[37, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 134]" + "'", str39, "[38, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[39, 135]" + "'", str40, "[39, 135]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[40, 136]" + "'", str41, "[40, 136]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[41, 137]" + "'", str42, "[41, 137]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[42, 138]" + "'", str43, "[42, 138]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[43, 139]" + "'", str44, "[43, 139]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[44, 140]" + "'", str45, "[44, 140]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[45, 141]" + "'", str46, "[45, 141]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[46, 142]" + "'", str47, "[46, 142]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[47, 143]" + "'", str48, "[47, 143]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[48, 144]" + "'", str49, "[48, 144]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[49, 145]" + "'", str50, "[49, 145]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[50, 146]" + "'", str51, "[50, 146]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[51, 147]" + "'", str52, "[51, 147]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 148]" + "'", str53, "[52, 148]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[53, 149]" + "'", str54, "[53, 149]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[54, 150]" + "'", str55, "[54, 150]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[55, 151]" + "'", str56, "[55, 151]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[56, 152]" + "'", str57, "[56, 152]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[57, 153]" + "'", str58, "[57, 153]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[58, 154]" + "'", str59, "[58, 154]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[59, 155]" + "'", str60, "[59, 155]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[60, 156]" + "'", str61, "[60, 156]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[61, 157]" + "'", str62, "[61, 157]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[62, 158]" + "'", str63, "[62, 158]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[63, 159]" + "'", str64, "[63, 159]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[64, 160]" + "'", str65, "[64, 160]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[65, 161]" + "'", str66, "[65, 161]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[66, 162]" + "'", str67, "[66, 162]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[67, 163]" + "'", str68, "[67, 163]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[68, 164]" + "'", str69, "[68, 164]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[69, 165]" + "'", str70, "[69, 165]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[70, 166]" + "'", str71, "[70, 166]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[71, 167]" + "'", str72, "[71, 167]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[72, 168]" + "'", str73, "[72, 168]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[73, 169]" + "'", str74, "[73, 169]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[74, 170]" + "'", str75, "[74, 170]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[75, 171]" + "'", str76, "[75, 171]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[76, 172]" + "'", str77, "[76, 172]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[77, 173]" + "'", str78, "[77, 173]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[78, 174]" + "'", str79, "[78, 174]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[79, 175]" + "'", str80, "[79, 175]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[80, 176]" + "'", str81, "[80, 176]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[81, 177]" + "'", str82, "[81, 177]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[82, 178]" + "'", str83, "[82, 178]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[83, 179]" + "'", str84, "[83, 179]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[84, 180]" + "'", str85, "[84, 180]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[85, 181]" + "'", str86, "[85, 181]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[86, 182]" + "'", str87, "[86, 182]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[87, 183]" + "'", str88, "[87, 183]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[88, 184]" + "'", str89, "[88, 184]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[89, 185]" + "'", str90, "[89, 185]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[90, 186]" + "'", str91, "[90, 186]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[91, 187]" + "'", str92, "[91, 187]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[92, 188]" + "'", str93, "[92, 188]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[93, 189]" + "'", str94, "[93, 189]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[94, 190]" + "'", str95, "[94, 190]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[95, 191]" + "'", str96, "[95, 191]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[96, 192]" + "'", str97, "[96, 192]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[97, 193]" + "'", str98, "[97, 193]");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[98, 194]" + "'", str99, "[98, 194]");
    }

    @Test
    public void test6062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6062");
        int[] intArray4 = new int[] { (byte) -1, 0, (byte) -1, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass26 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 0, 52]" + "'", str5, "[-1, 1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 1, 52]" + "'", str6, "[-1, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 3, 2, 52]" + "'", str7, "[-1, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 4, 3, 52]" + "'", str8, "[-1, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 5, 4, 52]" + "'", str9, "[-1, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 6, 5, 52]" + "'", str10, "[-1, 6, 5, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 7, 6, 52]" + "'", str11, "[-1, 7, 6, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 8, 7, 52]" + "'", str12, "[-1, 8, 7, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 9, 8, 52]" + "'", str13, "[-1, 9, 8, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 9, 52]" + "'", str14, "[-1, 10, 9, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 0, 0, 53]" + "'", str15, "[0, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 1, 53]" + "'", str16, "[0, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 53]" + "'", str17, "[0, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 3, 3, 53]" + "'", str18, "[0, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 4, 4, 53]" + "'", str19, "[0, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 5, 5, 53]" + "'", str20, "[0, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 6, 6, 53]" + "'", str21, "[0, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 7, 7, 53]" + "'", str22, "[0, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 8, 8, 53]" + "'", str23, "[0, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 9, 9, 53]" + "'", str24, "[0, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 0, 54]" + "'", str25, "[1, 0, 0, 54]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test6063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6063");
        int[] intArray5 = new int[] { (byte) 10, (short) 10, (short) -1, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 10, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 10, 0, 0, 1]" + "'", str6, "[10, 10, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 1, 0, 1]" + "'", str7, "[10, 10, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 2, 0, 1]" + "'", str8, "[10, 10, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 3, 0, 1]" + "'", str9, "[10, 10, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 4, 0, 1]" + "'", str10, "[10, 10, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 5, 0, 1]" + "'", str11, "[10, 10, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 6, 0, 1]" + "'", str12, "[10, 10, 6, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test6064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6064");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass76 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 80, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 52, 17, -1, 1]" + "'", str12, "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 52, 18, -1, 1]" + "'", str13, "[97, 52, 18, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 52, 19, -1, 1]" + "'", str14, "[97, 52, 19, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 52, 20, -1, 1]" + "'", str15, "[97, 52, 20, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 52, 21, -1, 1]" + "'", str16, "[97, 52, 21, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 52, 22, -1, 1]" + "'", str17, "[97, 52, 22, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 52, 23, -1, 1]" + "'", str18, "[97, 52, 23, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 52, 24, -1, 1]" + "'", str19, "[97, 52, 24, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 52, 25, -1, 1]" + "'", str20, "[97, 52, 25, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 52, 26, -1, 1]" + "'", str21, "[97, 52, 26, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 52, 27, -1, 1]" + "'", str22, "[97, 52, 27, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 52, 28, -1, 1]" + "'", str23, "[97, 52, 28, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 52, 29, -1, 1]" + "'", str24, "[97, 52, 29, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 52, 30, -1, 1]" + "'", str25, "[97, 52, 30, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 52, 31, -1, 1]" + "'", str26, "[97, 52, 31, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 52, 32, -1, 1]" + "'", str27, "[97, 52, 32, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 52, 33, -1, 1]" + "'", str28, "[97, 52, 33, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 52, 34, -1, 1]" + "'", str29, "[97, 52, 34, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 52, 35, -1, 1]" + "'", str30, "[97, 52, 35, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 52, 36, -1, 1]" + "'", str31, "[97, 52, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 52, 37, -1, 1]" + "'", str32, "[97, 52, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 52, 38, -1, 1]" + "'", str33, "[97, 52, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 52, 39, -1, 1]" + "'", str34, "[97, 52, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 52, 40, -1, 1]" + "'", str35, "[97, 52, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 52, 41, -1, 1]" + "'", str36, "[97, 52, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 52, 42, -1, 1]" + "'", str37, "[97, 52, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 52, 43, -1, 1]" + "'", str38, "[97, 52, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 52, 44, -1, 1]" + "'", str39, "[97, 52, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 52, 45, -1, 1]" + "'", str40, "[97, 52, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 52, 46, -1, 1]" + "'", str41, "[97, 52, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 52, 47, -1, 1]" + "'", str42, "[97, 52, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 52, 48, -1, 1]" + "'", str43, "[97, 52, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 52, 49, -1, 1]" + "'", str44, "[97, 52, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 52, 50, -1, 1]" + "'", str45, "[97, 52, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 51, -1, 1]" + "'", str46, "[97, 52, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 52, 52, -1, 1]" + "'", str47, "[97, 52, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 52, 53, -1, 1]" + "'", str48, "[97, 52, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 52, 54, -1, 1]" + "'", str49, "[97, 52, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 52, 55, -1, 1]" + "'", str50, "[97, 52, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 52, 56, -1, 1]" + "'", str51, "[97, 52, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 52, 57, -1, 1]" + "'", str52, "[97, 52, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 52, 58, -1, 1]" + "'", str53, "[97, 52, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 52, 59, -1, 1]" + "'", str54, "[97, 52, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 52, 60, -1, 1]" + "'", str55, "[97, 52, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 52, 61, -1, 1]" + "'", str56, "[97, 52, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 52, 62, -1, 1]" + "'", str57, "[97, 52, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 52, 63, -1, 1]" + "'", str58, "[97, 52, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 52, 64, -1, 1]" + "'", str59, "[97, 52, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 52, 65, -1, 1]" + "'", str60, "[97, 52, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 52, 66, -1, 1]" + "'", str61, "[97, 52, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 52, 67, -1, 1]" + "'", str62, "[97, 52, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 52, 68, -1, 1]" + "'", str63, "[97, 52, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 52, 69, -1, 1]" + "'", str64, "[97, 52, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 52, 70, -1, 1]" + "'", str65, "[97, 52, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 52, 71, -1, 1]" + "'", str66, "[97, 52, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 52, 72, -1, 1]" + "'", str67, "[97, 52, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 52, 73, -1, 1]" + "'", str68, "[97, 52, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 52, 74, -1, 1]" + "'", str69, "[97, 52, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 52, 75, -1, 1]" + "'", str70, "[97, 52, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 52, 76, -1, 1]" + "'", str71, "[97, 52, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 52, 77, -1, 1]" + "'", str72, "[97, 52, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 52, 78, -1, 1]" + "'", str73, "[97, 52, 78, -1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 52, 79, -1, 1]" + "'", str74, "[97, 52, 79, -1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 52, 80, -1, 1]" + "'", str75, "[97, 52, 80, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test6065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6065");
        int[] intArray2 = new int[] { '#', (short) 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass44 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[76, 51]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[36, 11]" + "'", str3, "[36, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[37, 12]" + "'", str4, "[37, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[38, 13]" + "'", str5, "[38, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[39, 14]" + "'", str6, "[39, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[40, 15]" + "'", str7, "[40, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[41, 16]" + "'", str8, "[41, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[42, 17]" + "'", str9, "[42, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[43, 18]" + "'", str10, "[43, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[44, 19]" + "'", str11, "[44, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[45, 20]" + "'", str12, "[45, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[46, 21]" + "'", str13, "[46, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[47, 22]" + "'", str14, "[47, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[48, 23]" + "'", str15, "[48, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[49, 24]" + "'", str16, "[49, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[50, 25]" + "'", str17, "[50, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[51, 26]" + "'", str18, "[51, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 27]" + "'", str19, "[52, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 28]" + "'", str20, "[53, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[54, 29]" + "'", str21, "[54, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[55, 30]" + "'", str22, "[55, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[56, 31]" + "'", str23, "[56, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[57, 32]" + "'", str24, "[57, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[58, 33]" + "'", str25, "[58, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[59, 34]" + "'", str26, "[59, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[60, 35]" + "'", str27, "[60, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[61, 36]" + "'", str28, "[61, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[62, 37]" + "'", str29, "[62, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[63, 38]" + "'", str30, "[63, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[64, 39]" + "'", str31, "[64, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[65, 40]" + "'", str32, "[65, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[66, 41]" + "'", str33, "[66, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[67, 42]" + "'", str34, "[67, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[68, 43]" + "'", str35, "[68, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[69, 44]" + "'", str36, "[69, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[70, 45]" + "'", str37, "[70, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[71, 46]" + "'", str38, "[71, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[72, 47]" + "'", str39, "[72, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[73, 48]" + "'", str40, "[73, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[74, 49]" + "'", str41, "[74, 49]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[75, 50]" + "'", str42, "[75, 50]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[76, 51]" + "'", str43, "[76, 51]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test6066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6066");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass89 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 108, 3, 3, 7, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 7, 7, 1, 0]" + "'", str32, "[0, 102, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 8, 8, 1, 0]" + "'", str33, "[0, 102, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 9, 9, 1, 0]" + "'", str34, "[0, 102, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 103, 0, 0, 2, 0]" + "'", str35, "[0, 103, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 103, 1, 1, 2, 0]" + "'", str36, "[0, 103, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 2, 2, 2, 0]" + "'", str37, "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 3, 3, 2, 0]" + "'", str38, "[0, 103, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 4, 4, 2, 0]" + "'", str39, "[0, 103, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 5, 5, 2, 0]" + "'", str40, "[0, 103, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 6, 6, 2, 0]" + "'", str41, "[0, 103, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 7, 7, 2, 0]" + "'", str42, "[0, 103, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 8, 8, 2, 0]" + "'", str43, "[0, 103, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 9, 9, 2, 0]" + "'", str44, "[0, 103, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 104, 0, 0, 3, 0]" + "'", str45, "[0, 104, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 104, 1, 1, 3, 0]" + "'", str46, "[0, 104, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 2, 2, 3, 0]" + "'", str47, "[0, 104, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 3, 3, 3, 0]" + "'", str48, "[0, 104, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 4, 4, 3, 0]" + "'", str49, "[0, 104, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 5, 5, 3, 0]" + "'", str50, "[0, 104, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 6, 6, 3, 0]" + "'", str51, "[0, 104, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 7, 7, 3, 0]" + "'", str52, "[0, 104, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 8, 8, 3, 0]" + "'", str53, "[0, 104, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 9, 9, 3, 0]" + "'", str54, "[0, 104, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 105, 0, 0, 4, 0]" + "'", str55, "[0, 105, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 105, 1, 1, 4, 0]" + "'", str56, "[0, 105, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 2, 2, 4, 0]" + "'", str57, "[0, 105, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 3, 3, 4, 0]" + "'", str58, "[0, 105, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 4, 4, 4, 0]" + "'", str59, "[0, 105, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 105, 5, 5, 4, 0]" + "'", str60, "[0, 105, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 105, 6, 6, 4, 0]" + "'", str61, "[0, 105, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 105, 7, 7, 4, 0]" + "'", str62, "[0, 105, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 105, 8, 8, 4, 0]" + "'", str63, "[0, 105, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 105, 9, 9, 4, 0]" + "'", str64, "[0, 105, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 106, 0, 0, 5, 0]" + "'", str65, "[0, 106, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 106, 1, 1, 5, 0]" + "'", str66, "[0, 106, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 106, 2, 2, 5, 0]" + "'", str67, "[0, 106, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 106, 3, 3, 5, 0]" + "'", str68, "[0, 106, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 106, 4, 4, 5, 0]" + "'", str69, "[0, 106, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 106, 5, 5, 5, 0]" + "'", str70, "[0, 106, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 106, 6, 6, 5, 0]" + "'", str71, "[0, 106, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 106, 7, 7, 5, 0]" + "'", str72, "[0, 106, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 106, 8, 8, 5, 0]" + "'", str73, "[0, 106, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[0, 106, 9, 9, 5, 0]" + "'", str74, "[0, 106, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[0, 107, 0, 0, 6, 0]" + "'", str75, "[0, 107, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[0, 107, 1, 1, 6, 0]" + "'", str76, "[0, 107, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[0, 107, 2, 2, 6, 0]" + "'", str77, "[0, 107, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[0, 107, 3, 3, 6, 0]" + "'", str78, "[0, 107, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[0, 107, 4, 4, 6, 0]" + "'", str79, "[0, 107, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[0, 107, 5, 5, 6, 0]" + "'", str80, "[0, 107, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[0, 107, 6, 6, 6, 0]" + "'", str81, "[0, 107, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[0, 107, 7, 7, 6, 0]" + "'", str82, "[0, 107, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[0, 107, 8, 8, 6, 0]" + "'", str83, "[0, 107, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[0, 107, 9, 9, 6, 0]" + "'", str84, "[0, 107, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[0, 108, 0, 0, 7, 0]" + "'", str85, "[0, 108, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[0, 108, 1, 1, 7, 0]" + "'", str86, "[0, 108, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[0, 108, 2, 2, 7, 0]" + "'", str87, "[0, 108, 2, 2, 7, 0]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[0, 108, 3, 3, 7, 0]" + "'", str88, "[0, 108, 3, 3, 7, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test6067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6067");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass89 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 8, 4, 40, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 8, 32, 1]" + "'", str12, "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 9, 32, 1]" + "'", str13, "[32, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 1, 0, 33, 1]" + "'", str14, "[32, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 1, 1, 33, 1]" + "'", str15, "[32, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 2, 33, 1]" + "'", str16, "[32, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 3, 33, 1]" + "'", str17, "[32, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 4, 33, 1]" + "'", str18, "[32, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 5, 33, 1]" + "'", str19, "[32, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 6, 33, 1]" + "'", str20, "[32, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 7, 33, 1]" + "'", str21, "[32, 1, 7, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 8, 33, 1]" + "'", str22, "[32, 1, 8, 33, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 9, 33, 1]" + "'", str23, "[32, 1, 9, 33, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 2, 0, 34, 1]" + "'", str24, "[32, 2, 0, 34, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 2, 1, 34, 1]" + "'", str25, "[32, 2, 1, 34, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 2, 2, 34, 1]" + "'", str26, "[32, 2, 2, 34, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 2, 3, 34, 1]" + "'", str27, "[32, 2, 3, 34, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 2, 4, 34, 1]" + "'", str28, "[32, 2, 4, 34, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 2, 5, 34, 1]" + "'", str29, "[32, 2, 5, 34, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 2, 6, 34, 1]" + "'", str30, "[32, 2, 6, 34, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 2, 7, 34, 1]" + "'", str31, "[32, 2, 7, 34, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 2, 8, 34, 1]" + "'", str32, "[32, 2, 8, 34, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 2, 9, 34, 1]" + "'", str33, "[32, 2, 9, 34, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 3, 0, 35, 1]" + "'", str34, "[32, 3, 0, 35, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 3, 1, 35, 1]" + "'", str35, "[32, 3, 1, 35, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 3, 2, 35, 1]" + "'", str36, "[32, 3, 2, 35, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 3, 3, 35, 1]" + "'", str37, "[32, 3, 3, 35, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 3, 4, 35, 1]" + "'", str38, "[32, 3, 4, 35, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 3, 5, 35, 1]" + "'", str39, "[32, 3, 5, 35, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 3, 6, 35, 1]" + "'", str40, "[32, 3, 6, 35, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[32, 3, 7, 35, 1]" + "'", str41, "[32, 3, 7, 35, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[32, 3, 8, 35, 1]" + "'", str42, "[32, 3, 8, 35, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[32, 3, 9, 35, 1]" + "'", str43, "[32, 3, 9, 35, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[32, 4, 0, 36, 1]" + "'", str44, "[32, 4, 0, 36, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[32, 4, 1, 36, 1]" + "'", str45, "[32, 4, 1, 36, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[32, 4, 2, 36, 1]" + "'", str46, "[32, 4, 2, 36, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[32, 4, 3, 36, 1]" + "'", str47, "[32, 4, 3, 36, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[32, 4, 4, 36, 1]" + "'", str48, "[32, 4, 4, 36, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[32, 4, 5, 36, 1]" + "'", str49, "[32, 4, 5, 36, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[32, 4, 6, 36, 1]" + "'", str50, "[32, 4, 6, 36, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[32, 4, 7, 36, 1]" + "'", str51, "[32, 4, 7, 36, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[32, 4, 8, 36, 1]" + "'", str52, "[32, 4, 8, 36, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[32, 4, 9, 36, 1]" + "'", str53, "[32, 4, 9, 36, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[32, 5, 0, 37, 1]" + "'", str54, "[32, 5, 0, 37, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[32, 5, 1, 37, 1]" + "'", str55, "[32, 5, 1, 37, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[32, 5, 2, 37, 1]" + "'", str56, "[32, 5, 2, 37, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[32, 5, 3, 37, 1]" + "'", str57, "[32, 5, 3, 37, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[32, 5, 4, 37, 1]" + "'", str58, "[32, 5, 4, 37, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[32, 5, 5, 37, 1]" + "'", str59, "[32, 5, 5, 37, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[32, 5, 6, 37, 1]" + "'", str60, "[32, 5, 6, 37, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[32, 5, 7, 37, 1]" + "'", str61, "[32, 5, 7, 37, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[32, 5, 8, 37, 1]" + "'", str62, "[32, 5, 8, 37, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[32, 5, 9, 37, 1]" + "'", str63, "[32, 5, 9, 37, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[32, 6, 0, 38, 1]" + "'", str64, "[32, 6, 0, 38, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[32, 6, 1, 38, 1]" + "'", str65, "[32, 6, 1, 38, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[32, 6, 2, 38, 1]" + "'", str66, "[32, 6, 2, 38, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[32, 6, 3, 38, 1]" + "'", str67, "[32, 6, 3, 38, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[32, 6, 4, 38, 1]" + "'", str68, "[32, 6, 4, 38, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[32, 6, 5, 38, 1]" + "'", str69, "[32, 6, 5, 38, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[32, 6, 6, 38, 1]" + "'", str70, "[32, 6, 6, 38, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[32, 6, 7, 38, 1]" + "'", str71, "[32, 6, 7, 38, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[32, 6, 8, 38, 1]" + "'", str72, "[32, 6, 8, 38, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[32, 6, 9, 38, 1]" + "'", str73, "[32, 6, 9, 38, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[32, 7, 0, 39, 1]" + "'", str74, "[32, 7, 0, 39, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[32, 7, 1, 39, 1]" + "'", str75, "[32, 7, 1, 39, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[32, 7, 2, 39, 1]" + "'", str76, "[32, 7, 2, 39, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[32, 7, 3, 39, 1]" + "'", str77, "[32, 7, 3, 39, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[32, 7, 4, 39, 1]" + "'", str78, "[32, 7, 4, 39, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[32, 7, 5, 39, 1]" + "'", str79, "[32, 7, 5, 39, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[32, 7, 6, 39, 1]" + "'", str80, "[32, 7, 6, 39, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[32, 7, 7, 39, 1]" + "'", str81, "[32, 7, 7, 39, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[32, 7, 8, 39, 1]" + "'", str82, "[32, 7, 8, 39, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[32, 7, 9, 39, 1]" + "'", str83, "[32, 7, 9, 39, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[32, 8, 0, 40, 1]" + "'", str84, "[32, 8, 0, 40, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[32, 8, 1, 40, 1]" + "'", str85, "[32, 8, 1, 40, 1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[32, 8, 2, 40, 1]" + "'", str86, "[32, 8, 2, 40, 1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[32, 8, 3, 40, 1]" + "'", str87, "[32, 8, 3, 40, 1]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[32, 8, 4, 40, 1]" + "'", str88, "[32, 8, 4, 40, 1]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test6068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6068");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass96 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 3]" + "'", str34, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 4]" + "'", str35, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5, 5]" + "'", str36, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6, 6]" + "'", str37, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7, 7]" + "'", str38, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8, 8]" + "'", str39, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9, 9]" + "'", str40, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 2]" + "'", str43, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 3]" + "'", str44, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 4]" + "'", str45, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 5]" + "'", str46, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6, 6]" + "'", str47, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7, 7]" + "'", str48, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8, 8]" + "'", str49, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9, 9]" + "'", str50, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2, 2]" + "'", str53, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3, 3]" + "'", str54, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 4]" + "'", str55, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 5]" + "'", str56, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 6]" + "'", str57, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7, 7]" + "'", str58, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8, 8]" + "'", str59, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9, 9]" + "'", str60, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 1]" + "'", str61, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[2, 2]" + "'", str63, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[3, 3]" + "'", str64, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[4, 4]" + "'", str65, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 5]" + "'", str66, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 6]" + "'", str67, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 7]" + "'", str68, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[8, 8]" + "'", str69, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[9, 9]" + "'", str70, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 1]" + "'", str71, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[2, 2]" + "'", str73, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[3, 3]" + "'", str74, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[4, 4]" + "'", str75, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[5, 5]" + "'", str76, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 6]" + "'", str77, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7, 7]" + "'", str78, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 8]" + "'", str79, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[9, 9]" + "'", str80, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 1]" + "'", str81, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1]" + "'", str82, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[2, 2]" + "'", str83, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[3, 3]" + "'", str84, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[4, 4]" + "'", str85, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[5, 5]" + "'", str86, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[6, 6]" + "'", str87, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[7, 7]" + "'", str88, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[8, 8]" + "'", str89, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[9, 9]" + "'", str90, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[1, 0, 1]" + "'", str91, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 1]" + "'", str92, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[2, 2]" + "'", str93, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[3, 3]" + "'", str94, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[4, 4]" + "'", str95, "[4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test6069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6069");
        int[] intArray4 = new int[] { (byte) 1, (byte) 100, (short) 100, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass66 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 161, 161, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 101, 101, 0]" + "'", str5, "[1, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 102, 102, 0]" + "'", str6, "[1, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 103, 103, 0]" + "'", str7, "[1, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 104, 104, 0]" + "'", str8, "[1, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 105, 105, 0]" + "'", str9, "[1, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 106, 106, 0]" + "'", str10, "[1, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 107, 107, 0]" + "'", str11, "[1, 107, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 108, 108, 0]" + "'", str12, "[1, 108, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 109, 109, 0]" + "'", str13, "[1, 109, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 110, 110, 0]" + "'", str14, "[1, 110, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 111, 111, 0]" + "'", str15, "[1, 111, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 112, 112, 0]" + "'", str16, "[1, 112, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 113, 113, 0]" + "'", str17, "[1, 113, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 114, 114, 0]" + "'", str18, "[1, 114, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 115, 115, 0]" + "'", str19, "[1, 115, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 116, 116, 0]" + "'", str20, "[1, 116, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 117, 117, 0]" + "'", str21, "[1, 117, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 118, 118, 0]" + "'", str22, "[1, 118, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 119, 119, 0]" + "'", str23, "[1, 119, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 120, 120, 0]" + "'", str24, "[1, 120, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 121, 121, 0]" + "'", str25, "[1, 121, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 122, 122, 0]" + "'", str26, "[1, 122, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 123, 123, 0]" + "'", str27, "[1, 123, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 124, 124, 0]" + "'", str28, "[1, 124, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 125, 125, 0]" + "'", str29, "[1, 125, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 126, 126, 0]" + "'", str30, "[1, 126, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 127, 127, 0]" + "'", str31, "[1, 127, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 128, 128, 0]" + "'", str32, "[1, 128, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 129, 129, 0]" + "'", str33, "[1, 129, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 130, 130, 0]" + "'", str34, "[1, 130, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 131, 131, 0]" + "'", str35, "[1, 131, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 132, 132, 0]" + "'", str36, "[1, 132, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 133, 133, 0]" + "'", str37, "[1, 133, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 134, 134, 0]" + "'", str38, "[1, 134, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 135, 135, 0]" + "'", str39, "[1, 135, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 136, 136, 0]" + "'", str40, "[1, 136, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 137, 137, 0]" + "'", str41, "[1, 137, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 138, 138, 0]" + "'", str42, "[1, 138, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 139, 139, 0]" + "'", str43, "[1, 139, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 140, 140, 0]" + "'", str44, "[1, 140, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 141, 141, 0]" + "'", str45, "[1, 141, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 142, 142, 0]" + "'", str46, "[1, 142, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 143, 143, 0]" + "'", str47, "[1, 143, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 144, 144, 0]" + "'", str48, "[1, 144, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 145, 145, 0]" + "'", str49, "[1, 145, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 146, 146, 0]" + "'", str50, "[1, 146, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 147, 147, 0]" + "'", str51, "[1, 147, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 148, 148, 0]" + "'", str52, "[1, 148, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 149, 149, 0]" + "'", str53, "[1, 149, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 150, 150, 0]" + "'", str54, "[1, 150, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 151, 151, 0]" + "'", str55, "[1, 151, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 152, 152, 0]" + "'", str56, "[1, 152, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 153, 153, 0]" + "'", str57, "[1, 153, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 154, 154, 0]" + "'", str58, "[1, 154, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 155, 155, 0]" + "'", str59, "[1, 155, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 156, 156, 0]" + "'", str60, "[1, 156, 156, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 157, 157, 0]" + "'", str61, "[1, 157, 157, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 158, 158, 0]" + "'", str62, "[1, 158, 158, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 159, 159, 0]" + "'", str63, "[1, 159, 159, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 160, 160, 0]" + "'", str64, "[1, 160, 160, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 161, 161, 0]" + "'", str65, "[1, 161, 161, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test6070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6070");
        int[] intArray2 = new int[] { (short) 1, (short) 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass16 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 2]" + "'", str3, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 3]" + "'", str4, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 4]" + "'", str5, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 5]" + "'", str6, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 6]" + "'", str7, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 7]" + "'", str8, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 8]" + "'", str9, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 9]" + "'", str10, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test6071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6071");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass70 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 164, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 100, 103, 10, 1]" + "'", str8, "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 100, 104, 10, 1]" + "'", str9, "[1, 100, 104, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 100, 105, 10, 1]" + "'", str10, "[1, 100, 105, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 100, 106, 10, 1]" + "'", str11, "[1, 100, 106, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 100, 107, 10, 1]" + "'", str12, "[1, 100, 107, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 100, 108, 10, 1]" + "'", str13, "[1, 100, 108, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 100, 109, 10, 1]" + "'", str14, "[1, 100, 109, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 100, 110, 10, 1]" + "'", str15, "[1, 100, 110, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 100, 111, 10, 1]" + "'", str16, "[1, 100, 111, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 100, 112, 10, 1]" + "'", str17, "[1, 100, 112, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 100, 113, 10, 1]" + "'", str18, "[1, 100, 113, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 100, 114, 10, 1]" + "'", str19, "[1, 100, 114, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 100, 115, 10, 1]" + "'", str20, "[1, 100, 115, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 100, 116, 10, 1]" + "'", str21, "[1, 100, 116, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 100, 117, 10, 1]" + "'", str22, "[1, 100, 117, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 100, 118, 10, 1]" + "'", str23, "[1, 100, 118, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 100, 119, 10, 1]" + "'", str24, "[1, 100, 119, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 100, 120, 10, 1]" + "'", str25, "[1, 100, 120, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 100, 121, 10, 1]" + "'", str26, "[1, 100, 121, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 100, 122, 10, 1]" + "'", str27, "[1, 100, 122, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 100, 123, 10, 1]" + "'", str28, "[1, 100, 123, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 100, 124, 10, 1]" + "'", str29, "[1, 100, 124, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 100, 125, 10, 1]" + "'", str30, "[1, 100, 125, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 100, 126, 10, 1]" + "'", str31, "[1, 100, 126, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 100, 127, 10, 1]" + "'", str32, "[1, 100, 127, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 100, 128, 10, 1]" + "'", str33, "[1, 100, 128, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 100, 129, 10, 1]" + "'", str34, "[1, 100, 129, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 100, 130, 10, 1]" + "'", str35, "[1, 100, 130, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 100, 131, 10, 1]" + "'", str36, "[1, 100, 131, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 100, 132, 10, 1]" + "'", str37, "[1, 100, 132, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 100, 133, 10, 1]" + "'", str38, "[1, 100, 133, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 100, 134, 10, 1]" + "'", str39, "[1, 100, 134, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 100, 135, 10, 1]" + "'", str40, "[1, 100, 135, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 100, 136, 10, 1]" + "'", str41, "[1, 100, 136, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 100, 137, 10, 1]" + "'", str42, "[1, 100, 137, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 100, 138, 10, 1]" + "'", str43, "[1, 100, 138, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 100, 139, 10, 1]" + "'", str44, "[1, 100, 139, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 100, 140, 10, 1]" + "'", str45, "[1, 100, 140, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 100, 141, 10, 1]" + "'", str46, "[1, 100, 141, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 100, 142, 10, 1]" + "'", str47, "[1, 100, 142, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 100, 143, 10, 1]" + "'", str48, "[1, 100, 143, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 100, 144, 10, 1]" + "'", str49, "[1, 100, 144, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 100, 145, 10, 1]" + "'", str50, "[1, 100, 145, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 100, 146, 10, 1]" + "'", str51, "[1, 100, 146, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 100, 147, 10, 1]" + "'", str52, "[1, 100, 147, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 100, 148, 10, 1]" + "'", str53, "[1, 100, 148, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 100, 149, 10, 1]" + "'", str54, "[1, 100, 149, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 100, 150, 10, 1]" + "'", str55, "[1, 100, 150, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 100, 151, 10, 1]" + "'", str56, "[1, 100, 151, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 100, 152, 10, 1]" + "'", str57, "[1, 100, 152, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 100, 153, 10, 1]" + "'", str58, "[1, 100, 153, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 100, 154, 10, 1]" + "'", str59, "[1, 100, 154, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 100, 155, 10, 1]" + "'", str60, "[1, 100, 155, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 100, 156, 10, 1]" + "'", str61, "[1, 100, 156, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 100, 157, 10, 1]" + "'", str62, "[1, 100, 157, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 100, 158, 10, 1]" + "'", str63, "[1, 100, 158, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 100, 159, 10, 1]" + "'", str64, "[1, 100, 159, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 100, 160, 10, 1]" + "'", str65, "[1, 100, 160, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 100, 161, 10, 1]" + "'", str66, "[1, 100, 161, 10, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 100, 162, 10, 1]" + "'", str67, "[1, 100, 162, 10, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 100, 163, 10, 1]" + "'", str68, "[1, 100, 163, 10, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 100, 164, 10, 1]" + "'", str69, "[1, 100, 164, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test6072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6072");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass78 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 172, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 104, -1, 1]" + "'", str9, "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 105, -1, 1]" + "'", str10, "[97, 0, 105, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 0, 106, -1, 1]" + "'", str11, "[97, 0, 106, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 0, 107, -1, 1]" + "'", str12, "[97, 0, 107, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 0, 108, -1, 1]" + "'", str13, "[97, 0, 108, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 0, 109, -1, 1]" + "'", str14, "[97, 0, 109, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 0, 110, -1, 1]" + "'", str15, "[97, 0, 110, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 0, 111, -1, 1]" + "'", str16, "[97, 0, 111, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 0, 112, -1, 1]" + "'", str17, "[97, 0, 112, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 0, 113, -1, 1]" + "'", str18, "[97, 0, 113, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 0, 114, -1, 1]" + "'", str19, "[97, 0, 114, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 0, 115, -1, 1]" + "'", str20, "[97, 0, 115, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 0, 116, -1, 1]" + "'", str21, "[97, 0, 116, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 0, 117, -1, 1]" + "'", str22, "[97, 0, 117, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 0, 118, -1, 1]" + "'", str23, "[97, 0, 118, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 0, 119, -1, 1]" + "'", str24, "[97, 0, 119, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 0, 120, -1, 1]" + "'", str25, "[97, 0, 120, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 0, 121, -1, 1]" + "'", str26, "[97, 0, 121, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 0, 122, -1, 1]" + "'", str27, "[97, 0, 122, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 0, 123, -1, 1]" + "'", str28, "[97, 0, 123, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 0, 124, -1, 1]" + "'", str29, "[97, 0, 124, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 0, 125, -1, 1]" + "'", str30, "[97, 0, 125, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 0, 126, -1, 1]" + "'", str31, "[97, 0, 126, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 0, 127, -1, 1]" + "'", str32, "[97, 0, 127, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 0, 128, -1, 1]" + "'", str33, "[97, 0, 128, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 0, 129, -1, 1]" + "'", str34, "[97, 0, 129, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 0, 130, -1, 1]" + "'", str35, "[97, 0, 130, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 0, 131, -1, 1]" + "'", str36, "[97, 0, 131, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 0, 132, -1, 1]" + "'", str37, "[97, 0, 132, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 0, 133, -1, 1]" + "'", str38, "[97, 0, 133, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 0, 134, -1, 1]" + "'", str39, "[97, 0, 134, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 0, 135, -1, 1]" + "'", str40, "[97, 0, 135, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 0, 136, -1, 1]" + "'", str41, "[97, 0, 136, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 0, 137, -1, 1]" + "'", str42, "[97, 0, 137, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 0, 138, -1, 1]" + "'", str43, "[97, 0, 138, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 0, 139, -1, 1]" + "'", str44, "[97, 0, 139, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 0, 140, -1, 1]" + "'", str45, "[97, 0, 140, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 0, 141, -1, 1]" + "'", str46, "[97, 0, 141, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 0, 142, -1, 1]" + "'", str47, "[97, 0, 142, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 0, 143, -1, 1]" + "'", str48, "[97, 0, 143, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 0, 144, -1, 1]" + "'", str49, "[97, 0, 144, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 0, 145, -1, 1]" + "'", str50, "[97, 0, 145, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 0, 146, -1, 1]" + "'", str51, "[97, 0, 146, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 0, 147, -1, 1]" + "'", str52, "[97, 0, 147, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 0, 148, -1, 1]" + "'", str53, "[97, 0, 148, -1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 0, 149, -1, 1]" + "'", str54, "[97, 0, 149, -1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 0, 150, -1, 1]" + "'", str55, "[97, 0, 150, -1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 0, 151, -1, 1]" + "'", str56, "[97, 0, 151, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 0, 152, -1, 1]" + "'", str57, "[97, 0, 152, -1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 0, 153, -1, 1]" + "'", str58, "[97, 0, 153, -1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 0, 154, -1, 1]" + "'", str59, "[97, 0, 154, -1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 0, 155, -1, 1]" + "'", str60, "[97, 0, 155, -1, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 0, 156, -1, 1]" + "'", str61, "[97, 0, 156, -1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 0, 157, -1, 1]" + "'", str62, "[97, 0, 157, -1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 0, 158, -1, 1]" + "'", str63, "[97, 0, 158, -1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 0, 159, -1, 1]" + "'", str64, "[97, 0, 159, -1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 0, 160, -1, 1]" + "'", str65, "[97, 0, 160, -1, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 0, 161, -1, 1]" + "'", str66, "[97, 0, 161, -1, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 0, 162, -1, 1]" + "'", str67, "[97, 0, 162, -1, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 0, 163, -1, 1]" + "'", str68, "[97, 0, 163, -1, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 0, 164, -1, 1]" + "'", str69, "[97, 0, 164, -1, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 0, 165, -1, 1]" + "'", str70, "[97, 0, 165, -1, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 0, 166, -1, 1]" + "'", str71, "[97, 0, 166, -1, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 0, 167, -1, 1]" + "'", str72, "[97, 0, 167, -1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 0, 168, -1, 1]" + "'", str73, "[97, 0, 168, -1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 0, 169, -1, 1]" + "'", str74, "[97, 0, 169, -1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 0, 170, -1, 1]" + "'", str75, "[97, 0, 170, -1, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 0, 171, -1, 1]" + "'", str76, "[97, 0, 171, -1, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 0, 172, -1, 1]" + "'", str77, "[97, 0, 172, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test6073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6073");
        int[] intArray5 = new int[] { (byte) 1, (byte) -1, (short) 1, (byte) 1, 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass23 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 8, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, -1, 2, 1, 10]" + "'", str6, "[1, -1, 2, 1, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, -1, 3, 1, 10]" + "'", str7, "[1, -1, 3, 1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, -1, 4, 1, 10]" + "'", str8, "[1, -1, 4, 1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, -1, 5, 1, 10]" + "'", str9, "[1, -1, 5, 1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, -1, 6, 1, 10]" + "'", str10, "[1, -1, 6, 1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, -1, 7, 1, 10]" + "'", str11, "[1, -1, 7, 1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, -1, 8, 1, 10]" + "'", str12, "[1, -1, 8, 1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, -1, 9, 1, 10]" + "'", str13, "[1, -1, 9, 1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 0, 2, 10]" + "'", str14, "[1, 0, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 1, 2, 10]" + "'", str15, "[1, 0, 1, 2, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 2, 2, 10]" + "'", str16, "[1, 0, 2, 2, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 3, 2, 10]" + "'", str17, "[1, 0, 3, 2, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 4, 2, 10]" + "'", str18, "[1, 0, 4, 2, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 5, 2, 10]" + "'", str19, "[1, 0, 5, 2, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 6, 2, 10]" + "'", str20, "[1, 0, 6, 2, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 7, 2, 10]" + "'", str21, "[1, 0, 7, 2, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 8, 2, 10]" + "'", str22, "[1, 0, 8, 2, 10]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test6074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6074");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass86 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[60, 2, 2, 18]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[54, 1, 1, 12]" + "'", str24, "[54, 1, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 2, 2, 12]" + "'", str25, "[54, 2, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 3, 3, 12]" + "'", str26, "[54, 3, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[54, 4, 4, 12]" + "'", str27, "[54, 4, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[54, 5, 5, 12]" + "'", str28, "[54, 5, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[54, 6, 6, 12]" + "'", str29, "[54, 6, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[54, 7, 7, 12]" + "'", str30, "[54, 7, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[54, 8, 8, 12]" + "'", str31, "[54, 8, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[54, 9, 9, 12]" + "'", str32, "[54, 9, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[55, 0, 0, 13]" + "'", str33, "[55, 0, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[55, 1, 1, 13]" + "'", str34, "[55, 1, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[55, 2, 2, 13]" + "'", str35, "[55, 2, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[55, 3, 3, 13]" + "'", str36, "[55, 3, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[55, 4, 4, 13]" + "'", str37, "[55, 4, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[55, 5, 5, 13]" + "'", str38, "[55, 5, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[55, 6, 6, 13]" + "'", str39, "[55, 6, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[55, 7, 7, 13]" + "'", str40, "[55, 7, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[55, 8, 8, 13]" + "'", str41, "[55, 8, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[55, 9, 9, 13]" + "'", str42, "[55, 9, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[56, 0, 0, 14]" + "'", str43, "[56, 0, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[56, 1, 1, 14]" + "'", str44, "[56, 1, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[56, 2, 2, 14]" + "'", str45, "[56, 2, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[56, 3, 3, 14]" + "'", str46, "[56, 3, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56, 4, 4, 14]" + "'", str47, "[56, 4, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 5, 5, 14]" + "'", str48, "[56, 5, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[56, 6, 6, 14]" + "'", str49, "[56, 6, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[56, 7, 7, 14]" + "'", str50, "[56, 7, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[56, 8, 8, 14]" + "'", str51, "[56, 8, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[56, 9, 9, 14]" + "'", str52, "[56, 9, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[57, 0, 0, 15]" + "'", str53, "[57, 0, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[57, 1, 1, 15]" + "'", str54, "[57, 1, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[57, 2, 2, 15]" + "'", str55, "[57, 2, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[57, 3, 3, 15]" + "'", str56, "[57, 3, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[57, 4, 4, 15]" + "'", str57, "[57, 4, 4, 15]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[57, 5, 5, 15]" + "'", str58, "[57, 5, 5, 15]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[57, 6, 6, 15]" + "'", str59, "[57, 6, 6, 15]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[57, 7, 7, 15]" + "'", str60, "[57, 7, 7, 15]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[57, 8, 8, 15]" + "'", str61, "[57, 8, 8, 15]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[57, 9, 9, 15]" + "'", str62, "[57, 9, 9, 15]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[58, 0, 0, 16]" + "'", str63, "[58, 0, 0, 16]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[58, 1, 1, 16]" + "'", str64, "[58, 1, 1, 16]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[58, 2, 2, 16]" + "'", str65, "[58, 2, 2, 16]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[58, 3, 3, 16]" + "'", str66, "[58, 3, 3, 16]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[58, 4, 4, 16]" + "'", str67, "[58, 4, 4, 16]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[58, 5, 5, 16]" + "'", str68, "[58, 5, 5, 16]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[58, 6, 6, 16]" + "'", str69, "[58, 6, 6, 16]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[58, 7, 7, 16]" + "'", str70, "[58, 7, 7, 16]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[58, 8, 8, 16]" + "'", str71, "[58, 8, 8, 16]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[58, 9, 9, 16]" + "'", str72, "[58, 9, 9, 16]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[59, 0, 0, 17]" + "'", str73, "[59, 0, 0, 17]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[59, 1, 1, 17]" + "'", str74, "[59, 1, 1, 17]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[59, 2, 2, 17]" + "'", str75, "[59, 2, 2, 17]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[59, 3, 3, 17]" + "'", str76, "[59, 3, 3, 17]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[59, 4, 4, 17]" + "'", str77, "[59, 4, 4, 17]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[59, 5, 5, 17]" + "'", str78, "[59, 5, 5, 17]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[59, 6, 6, 17]" + "'", str79, "[59, 6, 6, 17]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[59, 7, 7, 17]" + "'", str80, "[59, 7, 7, 17]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[59, 8, 8, 17]" + "'", str81, "[59, 8, 8, 17]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[59, 9, 9, 17]" + "'", str82, "[59, 9, 9, 17]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[60, 0, 0, 18]" + "'", str83, "[60, 0, 0, 18]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[60, 1, 1, 18]" + "'", str84, "[60, 1, 1, 18]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[60, 2, 2, 18]" + "'", str85, "[60, 2, 2, 18]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test6075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6075");
        int[] intArray5 = new int[] { (short) -1, (byte) 100, (byte) 10, (short) 100, ' ' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass65 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 69, 100, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 100, 11, 100, 32]" + "'", str6, "[-1, 100, 11, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 12, 100, 32]" + "'", str7, "[-1, 100, 12, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 13, 100, 32]" + "'", str8, "[-1, 100, 13, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 14, 100, 32]" + "'", str9, "[-1, 100, 14, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 15, 100, 32]" + "'", str10, "[-1, 100, 15, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 16, 100, 32]" + "'", str11, "[-1, 100, 16, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 17, 100, 32]" + "'", str12, "[-1, 100, 17, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 18, 100, 32]" + "'", str13, "[-1, 100, 18, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 19, 100, 32]" + "'", str14, "[-1, 100, 19, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 20, 100, 32]" + "'", str15, "[-1, 100, 20, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 21, 100, 32]" + "'", str16, "[-1, 100, 21, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 22, 100, 32]" + "'", str17, "[-1, 100, 22, 100, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 23, 100, 32]" + "'", str18, "[-1, 100, 23, 100, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 24, 100, 32]" + "'", str19, "[-1, 100, 24, 100, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 25, 100, 32]" + "'", str20, "[-1, 100, 25, 100, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 26, 100, 32]" + "'", str21, "[-1, 100, 26, 100, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 27, 100, 32]" + "'", str22, "[-1, 100, 27, 100, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 28, 100, 32]" + "'", str23, "[-1, 100, 28, 100, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 29, 100, 32]" + "'", str24, "[-1, 100, 29, 100, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 30, 100, 32]" + "'", str25, "[-1, 100, 30, 100, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 31, 100, 32]" + "'", str26, "[-1, 100, 31, 100, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 32, 100, 32]" + "'", str27, "[-1, 100, 32, 100, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 33, 100, 32]" + "'", str28, "[-1, 100, 33, 100, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 34, 100, 32]" + "'", str29, "[-1, 100, 34, 100, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 35, 100, 32]" + "'", str30, "[-1, 100, 35, 100, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 36, 100, 32]" + "'", str31, "[-1, 100, 36, 100, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 37, 100, 32]" + "'", str32, "[-1, 100, 37, 100, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 38, 100, 32]" + "'", str33, "[-1, 100, 38, 100, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 39, 100, 32]" + "'", str34, "[-1, 100, 39, 100, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 40, 100, 32]" + "'", str35, "[-1, 100, 40, 100, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 41, 100, 32]" + "'", str36, "[-1, 100, 41, 100, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 42, 100, 32]" + "'", str37, "[-1, 100, 42, 100, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 100, 43, 100, 32]" + "'", str38, "[-1, 100, 43, 100, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 100, 44, 100, 32]" + "'", str39, "[-1, 100, 44, 100, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 100, 45, 100, 32]" + "'", str40, "[-1, 100, 45, 100, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 100, 46, 100, 32]" + "'", str41, "[-1, 100, 46, 100, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 100, 47, 100, 32]" + "'", str42, "[-1, 100, 47, 100, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 100, 48, 100, 32]" + "'", str43, "[-1, 100, 48, 100, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 100, 49, 100, 32]" + "'", str44, "[-1, 100, 49, 100, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 100, 50, 100, 32]" + "'", str45, "[-1, 100, 50, 100, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 100, 51, 100, 32]" + "'", str46, "[-1, 100, 51, 100, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 100, 52, 100, 32]" + "'", str47, "[-1, 100, 52, 100, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 100, 53, 100, 32]" + "'", str48, "[-1, 100, 53, 100, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 100, 54, 100, 32]" + "'", str49, "[-1, 100, 54, 100, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 100, 55, 100, 32]" + "'", str50, "[-1, 100, 55, 100, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 100, 56, 100, 32]" + "'", str51, "[-1, 100, 56, 100, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 57, 100, 32]" + "'", str52, "[-1, 100, 57, 100, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 100, 58, 100, 32]" + "'", str53, "[-1, 100, 58, 100, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 100, 59, 100, 32]" + "'", str54, "[-1, 100, 59, 100, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 100, 60, 100, 32]" + "'", str55, "[-1, 100, 60, 100, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 100, 61, 100, 32]" + "'", str56, "[-1, 100, 61, 100, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 100, 62, 100, 32]" + "'", str57, "[-1, 100, 62, 100, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 100, 63, 100, 32]" + "'", str58, "[-1, 100, 63, 100, 32]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 100, 64, 100, 32]" + "'", str59, "[-1, 100, 64, 100, 32]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 100, 65, 100, 32]" + "'", str60, "[-1, 100, 65, 100, 32]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 100, 66, 100, 32]" + "'", str61, "[-1, 100, 66, 100, 32]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 100, 67, 100, 32]" + "'", str62, "[-1, 100, 67, 100, 32]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 100, 68, 100, 32]" + "'", str63, "[-1, 100, 68, 100, 32]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[-1, 100, 69, 100, 32]" + "'", str64, "[-1, 100, 69, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test6076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6076");
        int[] intArray3 = new int[] { (short) 1, '4', '#' };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass41 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 89, 35]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 53, 35]" + "'", str4, "[1, 53, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 54, 35]" + "'", str5, "[1, 54, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 55, 35]" + "'", str6, "[1, 55, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 56, 35]" + "'", str7, "[1, 56, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 57, 35]" + "'", str8, "[1, 57, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 58, 35]" + "'", str9, "[1, 58, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 59, 35]" + "'", str10, "[1, 59, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 60, 35]" + "'", str11, "[1, 60, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 61, 35]" + "'", str12, "[1, 61, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 62, 35]" + "'", str13, "[1, 62, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 63, 35]" + "'", str14, "[1, 63, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 64, 35]" + "'", str15, "[1, 64, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 65, 35]" + "'", str16, "[1, 65, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 66, 35]" + "'", str17, "[1, 66, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 67, 35]" + "'", str18, "[1, 67, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 68, 35]" + "'", str19, "[1, 68, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 69, 35]" + "'", str20, "[1, 69, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 70, 35]" + "'", str21, "[1, 70, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 71, 35]" + "'", str22, "[1, 71, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 72, 35]" + "'", str23, "[1, 72, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 73, 35]" + "'", str24, "[1, 73, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 74, 35]" + "'", str25, "[1, 74, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 75, 35]" + "'", str26, "[1, 75, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 76, 35]" + "'", str27, "[1, 76, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 77, 35]" + "'", str28, "[1, 77, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 78, 35]" + "'", str29, "[1, 78, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 79, 35]" + "'", str30, "[1, 79, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 80, 35]" + "'", str31, "[1, 80, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 81, 35]" + "'", str32, "[1, 81, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 82, 35]" + "'", str33, "[1, 82, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 83, 35]" + "'", str34, "[1, 83, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 84, 35]" + "'", str35, "[1, 84, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 85, 35]" + "'", str36, "[1, 85, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 86, 35]" + "'", str37, "[1, 86, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 87, 35]" + "'", str38, "[1, 87, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 88, 35]" + "'", str39, "[1, 88, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 89, 35]" + "'", str40, "[1, 89, 35]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test6077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6077");
        int[] intArray4 = new int[] { (byte) -1, 0, (byte) -1, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass25 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 0, 52]" + "'", str5, "[-1, 1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 1, 52]" + "'", str6, "[-1, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 3, 2, 52]" + "'", str7, "[-1, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 4, 3, 52]" + "'", str8, "[-1, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 5, 4, 52]" + "'", str9, "[-1, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 6, 5, 52]" + "'", str10, "[-1, 6, 5, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 7, 6, 52]" + "'", str11, "[-1, 7, 6, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 8, 7, 52]" + "'", str12, "[-1, 8, 7, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 9, 8, 52]" + "'", str13, "[-1, 9, 8, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 9, 52]" + "'", str14, "[-1, 10, 9, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 0, 0, 53]" + "'", str15, "[0, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 1, 53]" + "'", str16, "[0, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 53]" + "'", str17, "[0, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 3, 3, 53]" + "'", str18, "[0, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 4, 4, 53]" + "'", str19, "[0, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 5, 5, 53]" + "'", str20, "[0, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 6, 6, 53]" + "'", str21, "[0, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 7, 7, 53]" + "'", str22, "[0, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 8, 8, 53]" + "'", str23, "[0, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 9, 9, 53]" + "'", str24, "[0, 9, 9, 53]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test6078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6078");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass91 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1]" + "'", str73, "[1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2]" + "'", str74, "[2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[3]" + "'", str75, "[3]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[4]" + "'", str76, "[4]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[5]" + "'", str77, "[5]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6]" + "'", str78, "[6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7]" + "'", str79, "[7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8]" + "'", str80, "[8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[9]" + "'", str81, "[9]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1]" + "'", str82, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1]" + "'", str83, "[1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[2]" + "'", str84, "[2]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[3]" + "'", str85, "[3]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[4]" + "'", str86, "[4]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[5]" + "'", str87, "[5]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[6]" + "'", str88, "[6]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7]" + "'", str89, "[7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8]" + "'", str90, "[8]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test6079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6079");
        int[] intArray5 = new int[] { (short) 100, (short) 100, (byte) 1, 100, (byte) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass59 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 105, 4, 105, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, 100, 10]" + "'", str6, "[100, 100, 2, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, 100, 10]" + "'", str7, "[100, 100, 3, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, 100, 10]" + "'", str8, "[100, 100, 4, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, 100, 10]" + "'", str9, "[100, 100, 5, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, 100, 10]" + "'", str10, "[100, 100, 6, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, 100, 10]" + "'", str11, "[100, 100, 7, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, 100, 10]" + "'", str12, "[100, 100, 8, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, 100, 10]" + "'", str13, "[100, 100, 9, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 101, 10]" + "'", str14, "[100, 101, 0, 101, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 101, 10]" + "'", str15, "[100, 101, 1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 101, 10]" + "'", str16, "[100, 101, 2, 101, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 101, 10]" + "'", str17, "[100, 101, 3, 101, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 101, 10]" + "'", str18, "[100, 101, 4, 101, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 101, 10]" + "'", str19, "[100, 101, 5, 101, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 101, 10]" + "'", str20, "[100, 101, 6, 101, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 101, 10]" + "'", str21, "[100, 101, 7, 101, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 101, 10]" + "'", str22, "[100, 101, 8, 101, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 101, 10]" + "'", str23, "[100, 101, 9, 101, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 102, 10]" + "'", str24, "[100, 102, 0, 102, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 102, 10]" + "'", str25, "[100, 102, 1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 102, 10]" + "'", str26, "[100, 102, 2, 102, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 102, 10]" + "'", str27, "[100, 102, 3, 102, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 102, 10]" + "'", str28, "[100, 102, 4, 102, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 102, 10]" + "'", str29, "[100, 102, 5, 102, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 102, 10]" + "'", str30, "[100, 102, 6, 102, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 102, 10]" + "'", str31, "[100, 102, 7, 102, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 102, 10]" + "'", str32, "[100, 102, 8, 102, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 102, 10]" + "'", str33, "[100, 102, 9, 102, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 103, 10]" + "'", str34, "[100, 103, 0, 103, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 103, 10]" + "'", str35, "[100, 103, 1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 103, 10]" + "'", str36, "[100, 103, 2, 103, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 103, 10]" + "'", str37, "[100, 103, 3, 103, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 103, 10]" + "'", str38, "[100, 103, 4, 103, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 103, 10]" + "'", str39, "[100, 103, 5, 103, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 103, 10]" + "'", str40, "[100, 103, 6, 103, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 103, 10]" + "'", str41, "[100, 103, 7, 103, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 103, 8, 103, 10]" + "'", str42, "[100, 103, 8, 103, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 103, 9, 103, 10]" + "'", str43, "[100, 103, 9, 103, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 104, 0, 104, 10]" + "'", str44, "[100, 104, 0, 104, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 104, 1, 104, 10]" + "'", str45, "[100, 104, 1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 104, 2, 104, 10]" + "'", str46, "[100, 104, 2, 104, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 104, 3, 104, 10]" + "'", str47, "[100, 104, 3, 104, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 104, 4, 104, 10]" + "'", str48, "[100, 104, 4, 104, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 104, 5, 104, 10]" + "'", str49, "[100, 104, 5, 104, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 104, 6, 104, 10]" + "'", str50, "[100, 104, 6, 104, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 104, 7, 104, 10]" + "'", str51, "[100, 104, 7, 104, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 104, 8, 104, 10]" + "'", str52, "[100, 104, 8, 104, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 104, 9, 104, 10]" + "'", str53, "[100, 104, 9, 104, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 105, 0, 105, 10]" + "'", str54, "[100, 105, 0, 105, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 105, 1, 105, 10]" + "'", str55, "[100, 105, 1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 105, 2, 105, 10]" + "'", str56, "[100, 105, 2, 105, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 105, 3, 105, 10]" + "'", str57, "[100, 105, 3, 105, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 105, 4, 105, 10]" + "'", str58, "[100, 105, 4, 105, 10]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test6080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6080");
        int[] intArray5 = new int[] { (-1), '4', '4', (byte) -1, (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass14 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 52, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 52, 53, -1, 0]" + "'", str6, "[-1, 52, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 52, 54, -1, 0]" + "'", str7, "[-1, 52, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 52, 55, -1, 0]" + "'", str8, "[-1, 52, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 52, 56, -1, 0]" + "'", str9, "[-1, 52, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 52, 57, -1, 0]" + "'", str10, "[-1, 52, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 52, 58, -1, 0]" + "'", str11, "[-1, 52, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 52, 59, -1, 0]" + "'", str12, "[-1, 52, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 52, 60, -1, 0]" + "'", str13, "[-1, 52, 60, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test6081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6081");
        int[] intArray5 = new int[] { 1, (byte) 0, (-1), ' ', 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass20 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 0, 32, 1]" + "'", str6, "[1, 0, 0, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 32, 1]" + "'", str7, "[1, 0, 1, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 32, 1]" + "'", str8, "[1, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 32, 1]" + "'", str9, "[1, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 32, 1]" + "'", str10, "[1, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 32, 1]" + "'", str11, "[1, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 32, 1]" + "'", str12, "[1, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 32, 1]" + "'", str13, "[1, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 32, 1]" + "'", str14, "[1, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 32, 1]" + "'", str15, "[1, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 0, 33, 1]" + "'", str16, "[1, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 1, 33, 1]" + "'", str17, "[1, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 2, 33, 1]" + "'", str18, "[1, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 3, 33, 1]" + "'", str19, "[1, 1, 3, 33, 1]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6082");
        int[] intArray2 = new int[] { (byte) -1, (short) 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass29 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 2]" + "'", str3, "[0, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 3]" + "'", str4, "[1, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 4]" + "'", str5, "[2, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 5]" + "'", str6, "[3, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 6]" + "'", str7, "[4, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 7]" + "'", str8, "[5, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 8]" + "'", str9, "[6, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 9]" + "'", str10, "[7, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test6083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6083");
        int[] intArray5 = new int[] { (short) 100, (short) 100, (byte) 1, 100, (byte) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass55 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 105, 0, 105, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, 100, 10]" + "'", str6, "[100, 100, 2, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, 100, 10]" + "'", str7, "[100, 100, 3, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, 100, 10]" + "'", str8, "[100, 100, 4, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, 100, 10]" + "'", str9, "[100, 100, 5, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, 100, 10]" + "'", str10, "[100, 100, 6, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, 100, 10]" + "'", str11, "[100, 100, 7, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, 100, 10]" + "'", str12, "[100, 100, 8, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, 100, 10]" + "'", str13, "[100, 100, 9, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 101, 10]" + "'", str14, "[100, 101, 0, 101, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 101, 10]" + "'", str15, "[100, 101, 1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 101, 10]" + "'", str16, "[100, 101, 2, 101, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 101, 10]" + "'", str17, "[100, 101, 3, 101, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 101, 10]" + "'", str18, "[100, 101, 4, 101, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 101, 10]" + "'", str19, "[100, 101, 5, 101, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 101, 10]" + "'", str20, "[100, 101, 6, 101, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 101, 10]" + "'", str21, "[100, 101, 7, 101, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 101, 10]" + "'", str22, "[100, 101, 8, 101, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 101, 10]" + "'", str23, "[100, 101, 9, 101, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 102, 10]" + "'", str24, "[100, 102, 0, 102, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 102, 10]" + "'", str25, "[100, 102, 1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 102, 10]" + "'", str26, "[100, 102, 2, 102, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 102, 10]" + "'", str27, "[100, 102, 3, 102, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 102, 10]" + "'", str28, "[100, 102, 4, 102, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 102, 10]" + "'", str29, "[100, 102, 5, 102, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 102, 10]" + "'", str30, "[100, 102, 6, 102, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 102, 10]" + "'", str31, "[100, 102, 7, 102, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 102, 10]" + "'", str32, "[100, 102, 8, 102, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 102, 10]" + "'", str33, "[100, 102, 9, 102, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 103, 10]" + "'", str34, "[100, 103, 0, 103, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 103, 10]" + "'", str35, "[100, 103, 1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 103, 10]" + "'", str36, "[100, 103, 2, 103, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 103, 10]" + "'", str37, "[100, 103, 3, 103, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 103, 10]" + "'", str38, "[100, 103, 4, 103, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 103, 10]" + "'", str39, "[100, 103, 5, 103, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 103, 10]" + "'", str40, "[100, 103, 6, 103, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 103, 10]" + "'", str41, "[100, 103, 7, 103, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 103, 8, 103, 10]" + "'", str42, "[100, 103, 8, 103, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 103, 9, 103, 10]" + "'", str43, "[100, 103, 9, 103, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 104, 0, 104, 10]" + "'", str44, "[100, 104, 0, 104, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 104, 1, 104, 10]" + "'", str45, "[100, 104, 1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 104, 2, 104, 10]" + "'", str46, "[100, 104, 2, 104, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 104, 3, 104, 10]" + "'", str47, "[100, 104, 3, 104, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 104, 4, 104, 10]" + "'", str48, "[100, 104, 4, 104, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 104, 5, 104, 10]" + "'", str49, "[100, 104, 5, 104, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 104, 6, 104, 10]" + "'", str50, "[100, 104, 6, 104, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 104, 7, 104, 10]" + "'", str51, "[100, 104, 7, 104, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 104, 8, 104, 10]" + "'", str52, "[100, 104, 8, 104, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 104, 9, 104, 10]" + "'", str53, "[100, 104, 9, 104, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 105, 0, 105, 10]" + "'", str54, "[100, 105, 0, 105, 10]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test6084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6084");
        int[] intArray5 = new int[] { 1, (byte) 0, (-1), ' ', 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass22 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 0, 32, 1]" + "'", str6, "[1, 0, 0, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 32, 1]" + "'", str7, "[1, 0, 1, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 32, 1]" + "'", str8, "[1, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 32, 1]" + "'", str9, "[1, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 32, 1]" + "'", str10, "[1, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 32, 1]" + "'", str11, "[1, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 32, 1]" + "'", str12, "[1, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 32, 1]" + "'", str13, "[1, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 32, 1]" + "'", str14, "[1, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 32, 1]" + "'", str15, "[1, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 0, 33, 1]" + "'", str16, "[1, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 1, 33, 1]" + "'", str17, "[1, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 2, 33, 1]" + "'", str18, "[1, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 3, 33, 1]" + "'", str19, "[1, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 4, 33, 1]" + "'", str20, "[1, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 5, 33, 1]" + "'", str21, "[1, 1, 5, 33, 1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6085");
        int[] intArray5 = new int[] { (short) 0, ' ', (short) 10, (byte) 0, (short) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass50 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 32, 54, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 32, 11, 0, 10]" + "'", str6, "[0, 32, 11, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 32, 12, 0, 10]" + "'", str7, "[0, 32, 12, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 32, 13, 0, 10]" + "'", str8, "[0, 32, 13, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 32, 14, 0, 10]" + "'", str9, "[0, 32, 14, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 32, 15, 0, 10]" + "'", str10, "[0, 32, 15, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 32, 16, 0, 10]" + "'", str11, "[0, 32, 16, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 32, 17, 0, 10]" + "'", str12, "[0, 32, 17, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 32, 18, 0, 10]" + "'", str13, "[0, 32, 18, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 32, 19, 0, 10]" + "'", str14, "[0, 32, 19, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 32, 20, 0, 10]" + "'", str15, "[0, 32, 20, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 32, 21, 0, 10]" + "'", str16, "[0, 32, 21, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 32, 22, 0, 10]" + "'", str17, "[0, 32, 22, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 32, 23, 0, 10]" + "'", str18, "[0, 32, 23, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 32, 24, 0, 10]" + "'", str19, "[0, 32, 24, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 32, 25, 0, 10]" + "'", str20, "[0, 32, 25, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 32, 26, 0, 10]" + "'", str21, "[0, 32, 26, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 32, 27, 0, 10]" + "'", str22, "[0, 32, 27, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 32, 28, 0, 10]" + "'", str23, "[0, 32, 28, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 32, 29, 0, 10]" + "'", str24, "[0, 32, 29, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 32, 30, 0, 10]" + "'", str25, "[0, 32, 30, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 31, 0, 10]" + "'", str26, "[0, 32, 31, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 32, 32, 0, 10]" + "'", str27, "[0, 32, 32, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 32, 33, 0, 10]" + "'", str28, "[0, 32, 33, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 32, 34, 0, 10]" + "'", str29, "[0, 32, 34, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 32, 35, 0, 10]" + "'", str30, "[0, 32, 35, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 32, 36, 0, 10]" + "'", str31, "[0, 32, 36, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 32, 37, 0, 10]" + "'", str32, "[0, 32, 37, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 32, 38, 0, 10]" + "'", str33, "[0, 32, 38, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 32, 39, 0, 10]" + "'", str34, "[0, 32, 39, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 32, 40, 0, 10]" + "'", str35, "[0, 32, 40, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 32, 41, 0, 10]" + "'", str36, "[0, 32, 41, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 32, 42, 0, 10]" + "'", str37, "[0, 32, 42, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 32, 43, 0, 10]" + "'", str38, "[0, 32, 43, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 32, 44, 0, 10]" + "'", str39, "[0, 32, 44, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 32, 45, 0, 10]" + "'", str40, "[0, 32, 45, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 32, 46, 0, 10]" + "'", str41, "[0, 32, 46, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 32, 47, 0, 10]" + "'", str42, "[0, 32, 47, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 32, 48, 0, 10]" + "'", str43, "[0, 32, 48, 0, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 32, 49, 0, 10]" + "'", str44, "[0, 32, 49, 0, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 32, 50, 0, 10]" + "'", str45, "[0, 32, 50, 0, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 32, 51, 0, 10]" + "'", str46, "[0, 32, 51, 0, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 32, 52, 0, 10]" + "'", str47, "[0, 32, 52, 0, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 32, 53, 0, 10]" + "'", str48, "[0, 32, 53, 0, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 32, 54, 0, 10]" + "'", str49, "[0, 32, 54, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test6086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6086");
        int[] intArray4 = new int[] { '4', (-1), (byte) 10, 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass75 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 69, 80, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 11, 1]" + "'", str5, "[52, 0, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 12, 1]" + "'", str6, "[52, 1, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 13, 1]" + "'", str7, "[52, 2, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 14, 1]" + "'", str8, "[52, 3, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 15, 1]" + "'", str9, "[52, 4, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 16, 1]" + "'", str10, "[52, 5, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 17, 1]" + "'", str11, "[52, 6, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 18, 1]" + "'", str12, "[52, 7, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 19, 1]" + "'", str13, "[52, 8, 19, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 20, 1]" + "'", str14, "[52, 9, 20, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 21, 1]" + "'", str15, "[52, 10, 21, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 22, 1]" + "'", str16, "[52, 11, 22, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 23, 1]" + "'", str17, "[52, 12, 23, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 24, 1]" + "'", str18, "[52, 13, 24, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 25, 1]" + "'", str19, "[52, 14, 25, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 26, 1]" + "'", str20, "[52, 15, 26, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 27, 1]" + "'", str21, "[52, 16, 27, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 28, 1]" + "'", str22, "[52, 17, 28, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 29, 1]" + "'", str23, "[52, 18, 29, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 30, 1]" + "'", str24, "[52, 19, 30, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 31, 1]" + "'", str25, "[52, 20, 31, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 32, 1]" + "'", str26, "[52, 21, 32, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 33, 1]" + "'", str27, "[52, 22, 33, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 34, 1]" + "'", str28, "[52, 23, 34, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 35, 1]" + "'", str29, "[52, 24, 35, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 36, 1]" + "'", str30, "[52, 25, 36, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 37, 1]" + "'", str31, "[52, 26, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 38, 1]" + "'", str32, "[52, 27, 38, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 39, 1]" + "'", str33, "[52, 28, 39, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 40, 1]" + "'", str34, "[52, 29, 40, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 41, 1]" + "'", str35, "[52, 30, 41, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 42, 1]" + "'", str36, "[52, 31, 42, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 43, 1]" + "'", str37, "[52, 32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 44, 1]" + "'", str38, "[52, 33, 44, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 45, 1]" + "'", str39, "[52, 34, 45, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 46, 1]" + "'", str40, "[52, 35, 46, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 47, 1]" + "'", str41, "[52, 36, 47, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 48, 1]" + "'", str42, "[52, 37, 48, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 49, 1]" + "'", str43, "[52, 38, 49, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 50, 1]" + "'", str44, "[52, 39, 50, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 51, 1]" + "'", str45, "[52, 40, 51, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 52, 1]" + "'", str46, "[52, 41, 52, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 53, 1]" + "'", str47, "[52, 42, 53, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 54, 1]" + "'", str48, "[52, 43, 54, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 55, 1]" + "'", str49, "[52, 44, 55, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 56, 1]" + "'", str50, "[52, 45, 56, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 57, 1]" + "'", str51, "[52, 46, 57, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 58, 1]" + "'", str52, "[52, 47, 58, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 59, 1]" + "'", str53, "[52, 48, 59, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 60, 1]" + "'", str54, "[52, 49, 60, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 61, 1]" + "'", str55, "[52, 50, 61, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 62, 1]" + "'", str56, "[52, 51, 62, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 63, 1]" + "'", str57, "[52, 52, 63, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 64, 1]" + "'", str58, "[52, 53, 64, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[52, 54, 65, 1]" + "'", str59, "[52, 54, 65, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[52, 55, 66, 1]" + "'", str60, "[52, 55, 66, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[52, 56, 67, 1]" + "'", str61, "[52, 56, 67, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[52, 57, 68, 1]" + "'", str62, "[52, 57, 68, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[52, 58, 69, 1]" + "'", str63, "[52, 58, 69, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[52, 59, 70, 1]" + "'", str64, "[52, 59, 70, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[52, 60, 71, 1]" + "'", str65, "[52, 60, 71, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[52, 61, 72, 1]" + "'", str66, "[52, 61, 72, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[52, 62, 73, 1]" + "'", str67, "[52, 62, 73, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[52, 63, 74, 1]" + "'", str68, "[52, 63, 74, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[52, 64, 75, 1]" + "'", str69, "[52, 64, 75, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[52, 65, 76, 1]" + "'", str70, "[52, 65, 76, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[52, 66, 77, 1]" + "'", str71, "[52, 66, 77, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[52, 67, 78, 1]" + "'", str72, "[52, 67, 78, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[52, 68, 79, 1]" + "'", str73, "[52, 68, 79, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[52, 69, 80, 1]" + "'", str74, "[52, 69, 80, 1]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test6087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6087");
        int[] intArray2 = new int[] { 0, '4' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass60 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[57, 109]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 53]" + "'", str3, "[1, 53]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 54]" + "'", str4, "[2, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 55]" + "'", str5, "[3, 55]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 56]" + "'", str6, "[4, 56]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 57]" + "'", str7, "[5, 57]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 58]" + "'", str8, "[6, 58]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 59]" + "'", str9, "[7, 59]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 60]" + "'", str10, "[8, 60]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9, 61]" + "'", str11, "[9, 61]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 62]" + "'", str12, "[10, 62]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 63]" + "'", str13, "[11, 63]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[12, 64]" + "'", str14, "[12, 64]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[13, 65]" + "'", str15, "[13, 65]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[14, 66]" + "'", str16, "[14, 66]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[15, 67]" + "'", str17, "[15, 67]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[16, 68]" + "'", str18, "[16, 68]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[17, 69]" + "'", str19, "[17, 69]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[18, 70]" + "'", str20, "[18, 70]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[19, 71]" + "'", str21, "[19, 71]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[20, 72]" + "'", str22, "[20, 72]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[21, 73]" + "'", str23, "[21, 73]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[22, 74]" + "'", str24, "[22, 74]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[23, 75]" + "'", str25, "[23, 75]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[24, 76]" + "'", str26, "[24, 76]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[25, 77]" + "'", str27, "[25, 77]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[26, 78]" + "'", str28, "[26, 78]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[27, 79]" + "'", str29, "[27, 79]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[28, 80]" + "'", str30, "[28, 80]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[29, 81]" + "'", str31, "[29, 81]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[30, 82]" + "'", str32, "[30, 82]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[31, 83]" + "'", str33, "[31, 83]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 84]" + "'", str34, "[32, 84]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[33, 85]" + "'", str35, "[33, 85]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[34, 86]" + "'", str36, "[34, 86]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 87]" + "'", str37, "[35, 87]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[36, 88]" + "'", str38, "[36, 88]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[37, 89]" + "'", str39, "[37, 89]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 90]" + "'", str40, "[38, 90]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[39, 91]" + "'", str41, "[39, 91]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[40, 92]" + "'", str42, "[40, 92]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[41, 93]" + "'", str43, "[41, 93]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[42, 94]" + "'", str44, "[42, 94]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[43, 95]" + "'", str45, "[43, 95]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[44, 96]" + "'", str46, "[44, 96]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[45, 97]" + "'", str47, "[45, 97]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[46, 98]" + "'", str48, "[46, 98]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[47, 99]" + "'", str49, "[47, 99]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[48, 100]" + "'", str50, "[48, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[49, 101]" + "'", str51, "[49, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[50, 102]" + "'", str52, "[50, 102]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[51, 103]" + "'", str53, "[51, 103]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 104]" + "'", str54, "[52, 104]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[53, 105]" + "'", str55, "[53, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[54, 106]" + "'", str56, "[54, 106]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[55, 107]" + "'", str57, "[55, 107]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[56, 108]" + "'", str58, "[56, 108]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[57, 109]" + "'", str59, "[57, 109]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test6088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6088");
        int[] intArray4 = new int[] { (short) 0, (byte) 0, 'a', (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass6 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 1, 98, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 98, 10]" + "'", str5, "[0, 1, 98, 10]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test6089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6089");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass58 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[5, 3, 105]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 100]" + "'", str6, "[0, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100]" + "'", str7, "[0, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 100]" + "'", str8, "[0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 100]" + "'", str9, "[0, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 100]" + "'", str10, "[0, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 100]" + "'", str11, "[0, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 100]" + "'", str12, "[0, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 100]" + "'", str13, "[0, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 101]" + "'", str14, "[1, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 101]" + "'", str15, "[1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 101]" + "'", str16, "[1, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 101]" + "'", str17, "[1, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 101]" + "'", str18, "[1, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 101]" + "'", str19, "[1, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 101]" + "'", str20, "[1, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 101]" + "'", str21, "[1, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 101]" + "'", str22, "[1, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 101]" + "'", str23, "[1, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 102]" + "'", str24, "[2, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 102]" + "'", str25, "[2, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 102]" + "'", str26, "[2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 102]" + "'", str27, "[2, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 102]" + "'", str28, "[2, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 102]" + "'", str29, "[2, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 102]" + "'", str30, "[2, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 102]" + "'", str31, "[2, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 102]" + "'", str32, "[2, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 102]" + "'", str33, "[2, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 103]" + "'", str34, "[3, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 103]" + "'", str35, "[3, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 103]" + "'", str36, "[3, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 103]" + "'", str37, "[3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 103]" + "'", str38, "[3, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 103]" + "'", str39, "[3, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 103]" + "'", str40, "[3, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 103]" + "'", str41, "[3, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 103]" + "'", str42, "[3, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 103]" + "'", str43, "[3, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 104]" + "'", str44, "[4, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 104]" + "'", str45, "[4, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 104]" + "'", str46, "[4, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 104]" + "'", str47, "[4, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 104]" + "'", str48, "[4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 104]" + "'", str49, "[4, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 104]" + "'", str50, "[4, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 104]" + "'", str51, "[4, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 104]" + "'", str52, "[4, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 9, 104]" + "'", str53, "[4, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 0, 105]" + "'", str54, "[5, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 1, 105]" + "'", str55, "[5, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 2, 105]" + "'", str56, "[5, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 3, 105]" + "'", str57, "[5, 3, 105]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test6090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6090");
        int[] intArray4 = new int[] { (byte) 100, '#', (byte) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass19 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 49, 24, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 36, 11, -1]" + "'", str5, "[100, 36, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 37, 12, -1]" + "'", str6, "[100, 37, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 38, 13, -1]" + "'", str7, "[100, 38, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 39, 14, -1]" + "'", str8, "[100, 39, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 40, 15, -1]" + "'", str9, "[100, 40, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 41, 16, -1]" + "'", str10, "[100, 41, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 42, 17, -1]" + "'", str11, "[100, 42, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 43, 18, -1]" + "'", str12, "[100, 43, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 44, 19, -1]" + "'", str13, "[100, 44, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 45, 20, -1]" + "'", str14, "[100, 45, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 46, 21, -1]" + "'", str15, "[100, 46, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 47, 22, -1]" + "'", str16, "[100, 47, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 48, 23, -1]" + "'", str17, "[100, 48, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 49, 24, -1]" + "'", str18, "[100, 49, 24, -1]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test6091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6091");
        int[] intArray3 = new int[] { (short) 10, '#', 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass35 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 66, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 36, 10]" + "'", str4, "[10, 36, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 37, 10]" + "'", str5, "[10, 37, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 38, 10]" + "'", str6, "[10, 38, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 39, 10]" + "'", str7, "[10, 39, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 40, 10]" + "'", str8, "[10, 40, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 41, 10]" + "'", str9, "[10, 41, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 42, 10]" + "'", str10, "[10, 42, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 43, 10]" + "'", str11, "[10, 43, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 44, 10]" + "'", str12, "[10, 44, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 45, 10]" + "'", str13, "[10, 45, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 46, 10]" + "'", str14, "[10, 46, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 47, 10]" + "'", str15, "[10, 47, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 48, 10]" + "'", str16, "[10, 48, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 49, 10]" + "'", str17, "[10, 49, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 50, 10]" + "'", str18, "[10, 50, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 51, 10]" + "'", str19, "[10, 51, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 52, 10]" + "'", str20, "[10, 52, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 53, 10]" + "'", str21, "[10, 53, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 54, 10]" + "'", str22, "[10, 54, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 55, 10]" + "'", str23, "[10, 55, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 56, 10]" + "'", str24, "[10, 56, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 57, 10]" + "'", str25, "[10, 57, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 58, 10]" + "'", str26, "[10, 58, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 59, 10]" + "'", str27, "[10, 59, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 60, 10]" + "'", str28, "[10, 60, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 61, 10]" + "'", str29, "[10, 61, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 62, 10]" + "'", str30, "[10, 62, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 63, 10]" + "'", str31, "[10, 63, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 64, 10]" + "'", str32, "[10, 64, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 65, 10]" + "'", str33, "[10, 65, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[10, 66, 10]" + "'", str34, "[10, 66, 10]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test6092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6092");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass68 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 162, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 100, 103, 10, 1]" + "'", str8, "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 100, 104, 10, 1]" + "'", str9, "[1, 100, 104, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 100, 105, 10, 1]" + "'", str10, "[1, 100, 105, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 100, 106, 10, 1]" + "'", str11, "[1, 100, 106, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 100, 107, 10, 1]" + "'", str12, "[1, 100, 107, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 100, 108, 10, 1]" + "'", str13, "[1, 100, 108, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 100, 109, 10, 1]" + "'", str14, "[1, 100, 109, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 100, 110, 10, 1]" + "'", str15, "[1, 100, 110, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 100, 111, 10, 1]" + "'", str16, "[1, 100, 111, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 100, 112, 10, 1]" + "'", str17, "[1, 100, 112, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 100, 113, 10, 1]" + "'", str18, "[1, 100, 113, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 100, 114, 10, 1]" + "'", str19, "[1, 100, 114, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 100, 115, 10, 1]" + "'", str20, "[1, 100, 115, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 100, 116, 10, 1]" + "'", str21, "[1, 100, 116, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 100, 117, 10, 1]" + "'", str22, "[1, 100, 117, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 100, 118, 10, 1]" + "'", str23, "[1, 100, 118, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 100, 119, 10, 1]" + "'", str24, "[1, 100, 119, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 100, 120, 10, 1]" + "'", str25, "[1, 100, 120, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 100, 121, 10, 1]" + "'", str26, "[1, 100, 121, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 100, 122, 10, 1]" + "'", str27, "[1, 100, 122, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 100, 123, 10, 1]" + "'", str28, "[1, 100, 123, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 100, 124, 10, 1]" + "'", str29, "[1, 100, 124, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 100, 125, 10, 1]" + "'", str30, "[1, 100, 125, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 100, 126, 10, 1]" + "'", str31, "[1, 100, 126, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 100, 127, 10, 1]" + "'", str32, "[1, 100, 127, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 100, 128, 10, 1]" + "'", str33, "[1, 100, 128, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 100, 129, 10, 1]" + "'", str34, "[1, 100, 129, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 100, 130, 10, 1]" + "'", str35, "[1, 100, 130, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 100, 131, 10, 1]" + "'", str36, "[1, 100, 131, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 100, 132, 10, 1]" + "'", str37, "[1, 100, 132, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 100, 133, 10, 1]" + "'", str38, "[1, 100, 133, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 100, 134, 10, 1]" + "'", str39, "[1, 100, 134, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 100, 135, 10, 1]" + "'", str40, "[1, 100, 135, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 100, 136, 10, 1]" + "'", str41, "[1, 100, 136, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 100, 137, 10, 1]" + "'", str42, "[1, 100, 137, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 100, 138, 10, 1]" + "'", str43, "[1, 100, 138, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 100, 139, 10, 1]" + "'", str44, "[1, 100, 139, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 100, 140, 10, 1]" + "'", str45, "[1, 100, 140, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 100, 141, 10, 1]" + "'", str46, "[1, 100, 141, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 100, 142, 10, 1]" + "'", str47, "[1, 100, 142, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 100, 143, 10, 1]" + "'", str48, "[1, 100, 143, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 100, 144, 10, 1]" + "'", str49, "[1, 100, 144, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 100, 145, 10, 1]" + "'", str50, "[1, 100, 145, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 100, 146, 10, 1]" + "'", str51, "[1, 100, 146, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 100, 147, 10, 1]" + "'", str52, "[1, 100, 147, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 100, 148, 10, 1]" + "'", str53, "[1, 100, 148, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 100, 149, 10, 1]" + "'", str54, "[1, 100, 149, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 100, 150, 10, 1]" + "'", str55, "[1, 100, 150, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 100, 151, 10, 1]" + "'", str56, "[1, 100, 151, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 100, 152, 10, 1]" + "'", str57, "[1, 100, 152, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 100, 153, 10, 1]" + "'", str58, "[1, 100, 153, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 100, 154, 10, 1]" + "'", str59, "[1, 100, 154, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 100, 155, 10, 1]" + "'", str60, "[1, 100, 155, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 100, 156, 10, 1]" + "'", str61, "[1, 100, 156, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 100, 157, 10, 1]" + "'", str62, "[1, 100, 157, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 100, 158, 10, 1]" + "'", str63, "[1, 100, 158, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 100, 159, 10, 1]" + "'", str64, "[1, 100, 159, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 100, 160, 10, 1]" + "'", str65, "[1, 100, 160, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 100, 161, 10, 1]" + "'", str66, "[1, 100, 161, 10, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 100, 162, 10, 1]" + "'", str67, "[1, 100, 162, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test6093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6093");
        int[] intArray3 = new int[] { 1, 0, (short) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass86 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[9, 2, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 5]" + "'", str60, "[6, 7, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 5]" + "'", str61, "[6, 8, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 5]" + "'", str62, "[6, 9, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 6]" + "'", str63, "[7, 0, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 6]" + "'", str64, "[7, 1, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 6]" + "'", str65, "[7, 2, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 6]" + "'", str66, "[7, 3, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 6]" + "'", str67, "[7, 4, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 5, 6]" + "'", str68, "[7, 5, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 6, 6]" + "'", str69, "[7, 6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7, 6]" + "'", str70, "[7, 7, 6]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 8, 6]" + "'", str71, "[7, 8, 6]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 9, 6]" + "'", str72, "[7, 9, 6]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[8, 0, 7]" + "'", str73, "[8, 0, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 1, 7]" + "'", str74, "[8, 1, 7]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 2, 7]" + "'", str75, "[8, 2, 7]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 3, 7]" + "'", str76, "[8, 3, 7]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 4, 7]" + "'", str77, "[8, 4, 7]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 5, 7]" + "'", str78, "[8, 5, 7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 6, 7]" + "'", str79, "[8, 6, 7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 7, 7]" + "'", str80, "[8, 7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8, 7]" + "'", str81, "[8, 8, 7]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 9, 7]" + "'", str82, "[8, 9, 7]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[9, 0, 8]" + "'", str83, "[9, 0, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 1, 8]" + "'", str84, "[9, 1, 8]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 2, 8]" + "'", str85, "[9, 2, 8]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test6094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6094");
        int[] intArray2 = new int[] { '#', (short) 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass45 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[77, 52]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[36, 11]" + "'", str3, "[36, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[37, 12]" + "'", str4, "[37, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[38, 13]" + "'", str5, "[38, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[39, 14]" + "'", str6, "[39, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[40, 15]" + "'", str7, "[40, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[41, 16]" + "'", str8, "[41, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[42, 17]" + "'", str9, "[42, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[43, 18]" + "'", str10, "[43, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[44, 19]" + "'", str11, "[44, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[45, 20]" + "'", str12, "[45, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[46, 21]" + "'", str13, "[46, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[47, 22]" + "'", str14, "[47, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[48, 23]" + "'", str15, "[48, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[49, 24]" + "'", str16, "[49, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[50, 25]" + "'", str17, "[50, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[51, 26]" + "'", str18, "[51, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 27]" + "'", str19, "[52, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 28]" + "'", str20, "[53, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[54, 29]" + "'", str21, "[54, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[55, 30]" + "'", str22, "[55, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[56, 31]" + "'", str23, "[56, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[57, 32]" + "'", str24, "[57, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[58, 33]" + "'", str25, "[58, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[59, 34]" + "'", str26, "[59, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[60, 35]" + "'", str27, "[60, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[61, 36]" + "'", str28, "[61, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[62, 37]" + "'", str29, "[62, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[63, 38]" + "'", str30, "[63, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[64, 39]" + "'", str31, "[64, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[65, 40]" + "'", str32, "[65, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[66, 41]" + "'", str33, "[66, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[67, 42]" + "'", str34, "[67, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[68, 43]" + "'", str35, "[68, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[69, 44]" + "'", str36, "[69, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[70, 45]" + "'", str37, "[70, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[71, 46]" + "'", str38, "[71, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[72, 47]" + "'", str39, "[72, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[73, 48]" + "'", str40, "[73, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[74, 49]" + "'", str41, "[74, 49]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[75, 50]" + "'", str42, "[75, 50]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[76, 51]" + "'", str43, "[76, 51]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[77, 52]" + "'", str44, "[77, 52]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test6095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6095");
        int[] intArray5 = new int[] { ' ', (byte) -1, (byte) 100, (byte) 0, (short) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass8 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, -1, 102, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, -1, 101, 0, 10]" + "'", str6, "[32, -1, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, -1, 102, 0, 10]" + "'", str7, "[32, -1, 102, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test6096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6096");
        int[] intArray2 = new int[] { 0, '4' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass61 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[58, 110]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 53]" + "'", str3, "[1, 53]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 54]" + "'", str4, "[2, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 55]" + "'", str5, "[3, 55]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 56]" + "'", str6, "[4, 56]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 57]" + "'", str7, "[5, 57]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 58]" + "'", str8, "[6, 58]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 59]" + "'", str9, "[7, 59]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 60]" + "'", str10, "[8, 60]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9, 61]" + "'", str11, "[9, 61]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 62]" + "'", str12, "[10, 62]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 63]" + "'", str13, "[11, 63]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[12, 64]" + "'", str14, "[12, 64]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[13, 65]" + "'", str15, "[13, 65]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[14, 66]" + "'", str16, "[14, 66]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[15, 67]" + "'", str17, "[15, 67]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[16, 68]" + "'", str18, "[16, 68]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[17, 69]" + "'", str19, "[17, 69]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[18, 70]" + "'", str20, "[18, 70]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[19, 71]" + "'", str21, "[19, 71]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[20, 72]" + "'", str22, "[20, 72]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[21, 73]" + "'", str23, "[21, 73]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[22, 74]" + "'", str24, "[22, 74]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[23, 75]" + "'", str25, "[23, 75]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[24, 76]" + "'", str26, "[24, 76]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[25, 77]" + "'", str27, "[25, 77]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[26, 78]" + "'", str28, "[26, 78]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[27, 79]" + "'", str29, "[27, 79]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[28, 80]" + "'", str30, "[28, 80]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[29, 81]" + "'", str31, "[29, 81]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[30, 82]" + "'", str32, "[30, 82]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[31, 83]" + "'", str33, "[31, 83]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 84]" + "'", str34, "[32, 84]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[33, 85]" + "'", str35, "[33, 85]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[34, 86]" + "'", str36, "[34, 86]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 87]" + "'", str37, "[35, 87]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[36, 88]" + "'", str38, "[36, 88]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[37, 89]" + "'", str39, "[37, 89]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 90]" + "'", str40, "[38, 90]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[39, 91]" + "'", str41, "[39, 91]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[40, 92]" + "'", str42, "[40, 92]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[41, 93]" + "'", str43, "[41, 93]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[42, 94]" + "'", str44, "[42, 94]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[43, 95]" + "'", str45, "[43, 95]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[44, 96]" + "'", str46, "[44, 96]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[45, 97]" + "'", str47, "[45, 97]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[46, 98]" + "'", str48, "[46, 98]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[47, 99]" + "'", str49, "[47, 99]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[48, 100]" + "'", str50, "[48, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[49, 101]" + "'", str51, "[49, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[50, 102]" + "'", str52, "[50, 102]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[51, 103]" + "'", str53, "[51, 103]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 104]" + "'", str54, "[52, 104]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[53, 105]" + "'", str55, "[53, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[54, 106]" + "'", str56, "[54, 106]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[55, 107]" + "'", str57, "[55, 107]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[56, 108]" + "'", str58, "[56, 108]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[57, 109]" + "'", str59, "[57, 109]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[58, 110]" + "'", str60, "[58, 110]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test6097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6097");
        int[] intArray5 = new int[] { (short) 1, (short) 1, (byte) 0, '4', '#' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass79 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 8, 3, 59, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 1, 52, 35]" + "'", str6, "[1, 1, 1, 52, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 2, 52, 35]" + "'", str7, "[1, 1, 2, 52, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 3, 52, 35]" + "'", str8, "[1, 1, 3, 52, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 4, 52, 35]" + "'", str9, "[1, 1, 4, 52, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 5, 52, 35]" + "'", str10, "[1, 1, 5, 52, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 6, 52, 35]" + "'", str11, "[1, 1, 6, 52, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 7, 52, 35]" + "'", str12, "[1, 1, 7, 52, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 8, 52, 35]" + "'", str13, "[1, 1, 8, 52, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 9, 52, 35]" + "'", str14, "[1, 1, 9, 52, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0, 53, 35]" + "'", str15, "[1, 2, 0, 53, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 1, 53, 35]" + "'", str16, "[1, 2, 1, 53, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 53, 35]" + "'", str17, "[1, 2, 2, 53, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 3, 53, 35]" + "'", str18, "[1, 2, 3, 53, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 4, 53, 35]" + "'", str19, "[1, 2, 4, 53, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 5, 53, 35]" + "'", str20, "[1, 2, 5, 53, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 6, 53, 35]" + "'", str21, "[1, 2, 6, 53, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 7, 53, 35]" + "'", str22, "[1, 2, 7, 53, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 8, 53, 35]" + "'", str23, "[1, 2, 8, 53, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 9, 53, 35]" + "'", str24, "[1, 2, 9, 53, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 0, 54, 35]" + "'", str25, "[1, 3, 0, 54, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 1, 54, 35]" + "'", str26, "[1, 3, 1, 54, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 2, 54, 35]" + "'", str27, "[1, 3, 2, 54, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 3, 54, 35]" + "'", str28, "[1, 3, 3, 54, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 3, 4, 54, 35]" + "'", str29, "[1, 3, 4, 54, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 3, 5, 54, 35]" + "'", str30, "[1, 3, 5, 54, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 3, 6, 54, 35]" + "'", str31, "[1, 3, 6, 54, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 3, 7, 54, 35]" + "'", str32, "[1, 3, 7, 54, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 3, 8, 54, 35]" + "'", str33, "[1, 3, 8, 54, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 3, 9, 54, 35]" + "'", str34, "[1, 3, 9, 54, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 4, 0, 55, 35]" + "'", str35, "[1, 4, 0, 55, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 4, 1, 55, 35]" + "'", str36, "[1, 4, 1, 55, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 4, 2, 55, 35]" + "'", str37, "[1, 4, 2, 55, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 4, 3, 55, 35]" + "'", str38, "[1, 4, 3, 55, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 4, 4, 55, 35]" + "'", str39, "[1, 4, 4, 55, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 4, 5, 55, 35]" + "'", str40, "[1, 4, 5, 55, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 4, 6, 55, 35]" + "'", str41, "[1, 4, 6, 55, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 4, 7, 55, 35]" + "'", str42, "[1, 4, 7, 55, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 4, 8, 55, 35]" + "'", str43, "[1, 4, 8, 55, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 4, 9, 55, 35]" + "'", str44, "[1, 4, 9, 55, 35]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 5, 0, 56, 35]" + "'", str45, "[1, 5, 0, 56, 35]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 5, 1, 56, 35]" + "'", str46, "[1, 5, 1, 56, 35]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 5, 2, 56, 35]" + "'", str47, "[1, 5, 2, 56, 35]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 5, 3, 56, 35]" + "'", str48, "[1, 5, 3, 56, 35]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 5, 4, 56, 35]" + "'", str49, "[1, 5, 4, 56, 35]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 5, 5, 56, 35]" + "'", str50, "[1, 5, 5, 56, 35]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 5, 6, 56, 35]" + "'", str51, "[1, 5, 6, 56, 35]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 5, 7, 56, 35]" + "'", str52, "[1, 5, 7, 56, 35]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 5, 8, 56, 35]" + "'", str53, "[1, 5, 8, 56, 35]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 5, 9, 56, 35]" + "'", str54, "[1, 5, 9, 56, 35]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 6, 0, 57, 35]" + "'", str55, "[1, 6, 0, 57, 35]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 6, 1, 57, 35]" + "'", str56, "[1, 6, 1, 57, 35]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 6, 2, 57, 35]" + "'", str57, "[1, 6, 2, 57, 35]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 6, 3, 57, 35]" + "'", str58, "[1, 6, 3, 57, 35]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 6, 4, 57, 35]" + "'", str59, "[1, 6, 4, 57, 35]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 6, 5, 57, 35]" + "'", str60, "[1, 6, 5, 57, 35]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 6, 6, 57, 35]" + "'", str61, "[1, 6, 6, 57, 35]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 6, 7, 57, 35]" + "'", str62, "[1, 6, 7, 57, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 6, 8, 57, 35]" + "'", str63, "[1, 6, 8, 57, 35]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 6, 9, 57, 35]" + "'", str64, "[1, 6, 9, 57, 35]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 7, 0, 58, 35]" + "'", str65, "[1, 7, 0, 58, 35]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 7, 1, 58, 35]" + "'", str66, "[1, 7, 1, 58, 35]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 7, 2, 58, 35]" + "'", str67, "[1, 7, 2, 58, 35]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 7, 3, 58, 35]" + "'", str68, "[1, 7, 3, 58, 35]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 7, 4, 58, 35]" + "'", str69, "[1, 7, 4, 58, 35]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 7, 5, 58, 35]" + "'", str70, "[1, 7, 5, 58, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 7, 6, 58, 35]" + "'", str71, "[1, 7, 6, 58, 35]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 7, 7, 58, 35]" + "'", str72, "[1, 7, 7, 58, 35]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 7, 8, 58, 35]" + "'", str73, "[1, 7, 8, 58, 35]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 7, 9, 58, 35]" + "'", str74, "[1, 7, 9, 58, 35]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 8, 0, 59, 35]" + "'", str75, "[1, 8, 0, 59, 35]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 8, 1, 59, 35]" + "'", str76, "[1, 8, 1, 59, 35]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 8, 2, 59, 35]" + "'", str77, "[1, 8, 2, 59, 35]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 8, 3, 59, 35]" + "'", str78, "[1, 8, 3, 59, 35]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test6098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6098");
        int[] intArray2 = new int[] { 0, '4' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass59 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[56, 108]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 53]" + "'", str3, "[1, 53]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 54]" + "'", str4, "[2, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 55]" + "'", str5, "[3, 55]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 56]" + "'", str6, "[4, 56]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 57]" + "'", str7, "[5, 57]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 58]" + "'", str8, "[6, 58]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 59]" + "'", str9, "[7, 59]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 60]" + "'", str10, "[8, 60]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9, 61]" + "'", str11, "[9, 61]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 62]" + "'", str12, "[10, 62]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 63]" + "'", str13, "[11, 63]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[12, 64]" + "'", str14, "[12, 64]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[13, 65]" + "'", str15, "[13, 65]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[14, 66]" + "'", str16, "[14, 66]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[15, 67]" + "'", str17, "[15, 67]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[16, 68]" + "'", str18, "[16, 68]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[17, 69]" + "'", str19, "[17, 69]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[18, 70]" + "'", str20, "[18, 70]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[19, 71]" + "'", str21, "[19, 71]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[20, 72]" + "'", str22, "[20, 72]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[21, 73]" + "'", str23, "[21, 73]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[22, 74]" + "'", str24, "[22, 74]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[23, 75]" + "'", str25, "[23, 75]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[24, 76]" + "'", str26, "[24, 76]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[25, 77]" + "'", str27, "[25, 77]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[26, 78]" + "'", str28, "[26, 78]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[27, 79]" + "'", str29, "[27, 79]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[28, 80]" + "'", str30, "[28, 80]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[29, 81]" + "'", str31, "[29, 81]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[30, 82]" + "'", str32, "[30, 82]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[31, 83]" + "'", str33, "[31, 83]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 84]" + "'", str34, "[32, 84]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[33, 85]" + "'", str35, "[33, 85]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[34, 86]" + "'", str36, "[34, 86]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 87]" + "'", str37, "[35, 87]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[36, 88]" + "'", str38, "[36, 88]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[37, 89]" + "'", str39, "[37, 89]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 90]" + "'", str40, "[38, 90]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[39, 91]" + "'", str41, "[39, 91]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[40, 92]" + "'", str42, "[40, 92]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[41, 93]" + "'", str43, "[41, 93]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[42, 94]" + "'", str44, "[42, 94]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[43, 95]" + "'", str45, "[43, 95]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[44, 96]" + "'", str46, "[44, 96]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[45, 97]" + "'", str47, "[45, 97]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[46, 98]" + "'", str48, "[46, 98]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[47, 99]" + "'", str49, "[47, 99]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[48, 100]" + "'", str50, "[48, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[49, 101]" + "'", str51, "[49, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[50, 102]" + "'", str52, "[50, 102]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[51, 103]" + "'", str53, "[51, 103]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 104]" + "'", str54, "[52, 104]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[53, 105]" + "'", str55, "[53, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[54, 106]" + "'", str56, "[54, 106]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[55, 107]" + "'", str57, "[55, 107]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[56, 108]" + "'", str58, "[56, 108]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test6099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6099");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass90 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 108, 4, 4, 7, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 7, 7, 1, 0]" + "'", str32, "[0, 102, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 8, 8, 1, 0]" + "'", str33, "[0, 102, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 9, 9, 1, 0]" + "'", str34, "[0, 102, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 103, 0, 0, 2, 0]" + "'", str35, "[0, 103, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 103, 1, 1, 2, 0]" + "'", str36, "[0, 103, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 2, 2, 2, 0]" + "'", str37, "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 3, 3, 2, 0]" + "'", str38, "[0, 103, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 4, 4, 2, 0]" + "'", str39, "[0, 103, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 5, 5, 2, 0]" + "'", str40, "[0, 103, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 6, 6, 2, 0]" + "'", str41, "[0, 103, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 7, 7, 2, 0]" + "'", str42, "[0, 103, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 8, 8, 2, 0]" + "'", str43, "[0, 103, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 9, 9, 2, 0]" + "'", str44, "[0, 103, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 104, 0, 0, 3, 0]" + "'", str45, "[0, 104, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 104, 1, 1, 3, 0]" + "'", str46, "[0, 104, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 2, 2, 3, 0]" + "'", str47, "[0, 104, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 3, 3, 3, 0]" + "'", str48, "[0, 104, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 4, 4, 3, 0]" + "'", str49, "[0, 104, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 5, 5, 3, 0]" + "'", str50, "[0, 104, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 6, 6, 3, 0]" + "'", str51, "[0, 104, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 7, 7, 3, 0]" + "'", str52, "[0, 104, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 8, 8, 3, 0]" + "'", str53, "[0, 104, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 9, 9, 3, 0]" + "'", str54, "[0, 104, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 105, 0, 0, 4, 0]" + "'", str55, "[0, 105, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 105, 1, 1, 4, 0]" + "'", str56, "[0, 105, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 2, 2, 4, 0]" + "'", str57, "[0, 105, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 3, 3, 4, 0]" + "'", str58, "[0, 105, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 4, 4, 4, 0]" + "'", str59, "[0, 105, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 105, 5, 5, 4, 0]" + "'", str60, "[0, 105, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 105, 6, 6, 4, 0]" + "'", str61, "[0, 105, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 105, 7, 7, 4, 0]" + "'", str62, "[0, 105, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 105, 8, 8, 4, 0]" + "'", str63, "[0, 105, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 105, 9, 9, 4, 0]" + "'", str64, "[0, 105, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 106, 0, 0, 5, 0]" + "'", str65, "[0, 106, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 106, 1, 1, 5, 0]" + "'", str66, "[0, 106, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 106, 2, 2, 5, 0]" + "'", str67, "[0, 106, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 106, 3, 3, 5, 0]" + "'", str68, "[0, 106, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 106, 4, 4, 5, 0]" + "'", str69, "[0, 106, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 106, 5, 5, 5, 0]" + "'", str70, "[0, 106, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 106, 6, 6, 5, 0]" + "'", str71, "[0, 106, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 106, 7, 7, 5, 0]" + "'", str72, "[0, 106, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 106, 8, 8, 5, 0]" + "'", str73, "[0, 106, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[0, 106, 9, 9, 5, 0]" + "'", str74, "[0, 106, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[0, 107, 0, 0, 6, 0]" + "'", str75, "[0, 107, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[0, 107, 1, 1, 6, 0]" + "'", str76, "[0, 107, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[0, 107, 2, 2, 6, 0]" + "'", str77, "[0, 107, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[0, 107, 3, 3, 6, 0]" + "'", str78, "[0, 107, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[0, 107, 4, 4, 6, 0]" + "'", str79, "[0, 107, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[0, 107, 5, 5, 6, 0]" + "'", str80, "[0, 107, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[0, 107, 6, 6, 6, 0]" + "'", str81, "[0, 107, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[0, 107, 7, 7, 6, 0]" + "'", str82, "[0, 107, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[0, 107, 8, 8, 6, 0]" + "'", str83, "[0, 107, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[0, 107, 9, 9, 6, 0]" + "'", str84, "[0, 107, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[0, 108, 0, 0, 7, 0]" + "'", str85, "[0, 108, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[0, 108, 1, 1, 7, 0]" + "'", str86, "[0, 108, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[0, 108, 2, 2, 7, 0]" + "'", str87, "[0, 108, 2, 2, 7, 0]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[0, 108, 3, 3, 7, 0]" + "'", str88, "[0, 108, 3, 3, 7, 0]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[0, 108, 4, 4, 7, 0]" + "'", str89, "[0, 108, 4, 4, 7, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test6100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6100");
        int[] intArray6 = new int[] { 100, (byte) 10, 'a', 'a', (byte) 100, ' ' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass76 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 10, 166, 166, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 98, 98, 100, 32]" + "'", str7, "[100, 10, 98, 98, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 99, 99, 100, 32]" + "'", str8, "[100, 10, 99, 99, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 100, 100, 100, 32]" + "'", str9, "[100, 10, 100, 100, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 101, 101, 100, 32]" + "'", str10, "[100, 10, 101, 101, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 102, 102, 100, 32]" + "'", str11, "[100, 10, 102, 102, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 103, 103, 100, 32]" + "'", str12, "[100, 10, 103, 103, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 104, 104, 100, 32]" + "'", str13, "[100, 10, 104, 104, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 105, 105, 100, 32]" + "'", str14, "[100, 10, 105, 105, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 106, 106, 100, 32]" + "'", str15, "[100, 10, 106, 106, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 107, 107, 100, 32]" + "'", str16, "[100, 10, 107, 107, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 108, 108, 100, 32]" + "'", str17, "[100, 10, 108, 108, 100, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 109, 109, 100, 32]" + "'", str18, "[100, 10, 109, 109, 100, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 110, 110, 100, 32]" + "'", str19, "[100, 10, 110, 110, 100, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 111, 111, 100, 32]" + "'", str20, "[100, 10, 111, 111, 100, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 112, 112, 100, 32]" + "'", str21, "[100, 10, 112, 112, 100, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 113, 113, 100, 32]" + "'", str22, "[100, 10, 113, 113, 100, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 114, 114, 100, 32]" + "'", str23, "[100, 10, 114, 114, 100, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 115, 115, 100, 32]" + "'", str24, "[100, 10, 115, 115, 100, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 116, 116, 100, 32]" + "'", str25, "[100, 10, 116, 116, 100, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 117, 117, 100, 32]" + "'", str26, "[100, 10, 117, 117, 100, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 118, 118, 100, 32]" + "'", str27, "[100, 10, 118, 118, 100, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 119, 119, 100, 32]" + "'", str28, "[100, 10, 119, 119, 100, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 120, 120, 100, 32]" + "'", str29, "[100, 10, 120, 120, 100, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 121, 121, 100, 32]" + "'", str30, "[100, 10, 121, 121, 100, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 122, 122, 100, 32]" + "'", str31, "[100, 10, 122, 122, 100, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 123, 123, 100, 32]" + "'", str32, "[100, 10, 123, 123, 100, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 124, 124, 100, 32]" + "'", str33, "[100, 10, 124, 124, 100, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 125, 125, 100, 32]" + "'", str34, "[100, 10, 125, 125, 100, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 126, 126, 100, 32]" + "'", str35, "[100, 10, 126, 126, 100, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 127, 127, 100, 32]" + "'", str36, "[100, 10, 127, 127, 100, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 128, 128, 100, 32]" + "'", str37, "[100, 10, 128, 128, 100, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 129, 129, 100, 32]" + "'", str38, "[100, 10, 129, 129, 100, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 130, 130, 100, 32]" + "'", str39, "[100, 10, 130, 130, 100, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 131, 131, 100, 32]" + "'", str40, "[100, 10, 131, 131, 100, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 132, 132, 100, 32]" + "'", str41, "[100, 10, 132, 132, 100, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 133, 133, 100, 32]" + "'", str42, "[100, 10, 133, 133, 100, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 134, 134, 100, 32]" + "'", str43, "[100, 10, 134, 134, 100, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 10, 135, 135, 100, 32]" + "'", str44, "[100, 10, 135, 135, 100, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 10, 136, 136, 100, 32]" + "'", str45, "[100, 10, 136, 136, 100, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 10, 137, 137, 100, 32]" + "'", str46, "[100, 10, 137, 137, 100, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 10, 138, 138, 100, 32]" + "'", str47, "[100, 10, 138, 138, 100, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 10, 139, 139, 100, 32]" + "'", str48, "[100, 10, 139, 139, 100, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 10, 140, 140, 100, 32]" + "'", str49, "[100, 10, 140, 140, 100, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 10, 141, 141, 100, 32]" + "'", str50, "[100, 10, 141, 141, 100, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 10, 142, 142, 100, 32]" + "'", str51, "[100, 10, 142, 142, 100, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 10, 143, 143, 100, 32]" + "'", str52, "[100, 10, 143, 143, 100, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 10, 144, 144, 100, 32]" + "'", str53, "[100, 10, 144, 144, 100, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 10, 145, 145, 100, 32]" + "'", str54, "[100, 10, 145, 145, 100, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 10, 146, 146, 100, 32]" + "'", str55, "[100, 10, 146, 146, 100, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 10, 147, 147, 100, 32]" + "'", str56, "[100, 10, 147, 147, 100, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 10, 148, 148, 100, 32]" + "'", str57, "[100, 10, 148, 148, 100, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 10, 149, 149, 100, 32]" + "'", str58, "[100, 10, 149, 149, 100, 32]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 10, 150, 150, 100, 32]" + "'", str59, "[100, 10, 150, 150, 100, 32]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 10, 151, 151, 100, 32]" + "'", str60, "[100, 10, 151, 151, 100, 32]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 10, 152, 152, 100, 32]" + "'", str61, "[100, 10, 152, 152, 100, 32]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 10, 153, 153, 100, 32]" + "'", str62, "[100, 10, 153, 153, 100, 32]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 10, 154, 154, 100, 32]" + "'", str63, "[100, 10, 154, 154, 100, 32]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 10, 155, 155, 100, 32]" + "'", str64, "[100, 10, 155, 155, 100, 32]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 10, 156, 156, 100, 32]" + "'", str65, "[100, 10, 156, 156, 100, 32]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 10, 157, 157, 100, 32]" + "'", str66, "[100, 10, 157, 157, 100, 32]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 10, 158, 158, 100, 32]" + "'", str67, "[100, 10, 158, 158, 100, 32]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 10, 159, 159, 100, 32]" + "'", str68, "[100, 10, 159, 159, 100, 32]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 10, 160, 160, 100, 32]" + "'", str69, "[100, 10, 160, 160, 100, 32]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 10, 161, 161, 100, 32]" + "'", str70, "[100, 10, 161, 161, 100, 32]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 10, 162, 162, 100, 32]" + "'", str71, "[100, 10, 162, 162, 100, 32]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 10, 163, 163, 100, 32]" + "'", str72, "[100, 10, 163, 163, 100, 32]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 10, 164, 164, 100, 32]" + "'", str73, "[100, 10, 164, 164, 100, 32]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 10, 165, 165, 100, 32]" + "'", str74, "[100, 10, 165, 165, 100, 32]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 10, 166, 166, 100, 32]" + "'", str75, "[100, 10, 166, 166, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test6101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6101");
        int[] intArray2 = new int[] { (byte) -1, (short) 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass31 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[9, 9]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 2]" + "'", str3, "[0, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 3]" + "'", str4, "[1, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 4]" + "'", str5, "[2, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 5]" + "'", str6, "[3, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 6]" + "'", str7, "[4, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 7]" + "'", str8, "[5, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 8]" + "'", str9, "[6, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 9]" + "'", str10, "[7, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test6102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6102");
        int[] intArray6 = new int[] { (byte) 10, (byte) 1, (short) 100, 0, (byte) 0, (byte) -1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass17 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 2, 0, 0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 1, 101, 1, 0, -1]" + "'", str7, "[10, 1, 101, 1, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 1, 102, 2, 0, -1]" + "'", str8, "[10, 1, 102, 2, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 1, 103, 3, 0, -1]" + "'", str9, "[10, 1, 103, 3, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 1, 104, 4, 0, -1]" + "'", str10, "[10, 1, 104, 4, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 1, 105, 5, 0, -1]" + "'", str11, "[10, 1, 105, 5, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 1, 106, 6, 0, -1]" + "'", str12, "[10, 1, 106, 6, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 1, 107, 7, 0, -1]" + "'", str13, "[10, 1, 107, 7, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 1, 108, 8, 0, -1]" + "'", str14, "[10, 1, 108, 8, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 1, 109, 9, 0, -1]" + "'", str15, "[10, 1, 109, 9, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 2, 0, 0, 1, -1]" + "'", str16, "[10, 2, 0, 0, 1, -1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6103");
        int[] intArray5 = new int[] { (short) -1, (byte) 100, (byte) 10, (short) 100, ' ' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass61 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 65, 100, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 100, 11, 100, 32]" + "'", str6, "[-1, 100, 11, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 12, 100, 32]" + "'", str7, "[-1, 100, 12, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 13, 100, 32]" + "'", str8, "[-1, 100, 13, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 14, 100, 32]" + "'", str9, "[-1, 100, 14, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 15, 100, 32]" + "'", str10, "[-1, 100, 15, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 16, 100, 32]" + "'", str11, "[-1, 100, 16, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 17, 100, 32]" + "'", str12, "[-1, 100, 17, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 18, 100, 32]" + "'", str13, "[-1, 100, 18, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 19, 100, 32]" + "'", str14, "[-1, 100, 19, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 20, 100, 32]" + "'", str15, "[-1, 100, 20, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 21, 100, 32]" + "'", str16, "[-1, 100, 21, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 22, 100, 32]" + "'", str17, "[-1, 100, 22, 100, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 23, 100, 32]" + "'", str18, "[-1, 100, 23, 100, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 24, 100, 32]" + "'", str19, "[-1, 100, 24, 100, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 25, 100, 32]" + "'", str20, "[-1, 100, 25, 100, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 26, 100, 32]" + "'", str21, "[-1, 100, 26, 100, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 27, 100, 32]" + "'", str22, "[-1, 100, 27, 100, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 28, 100, 32]" + "'", str23, "[-1, 100, 28, 100, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 29, 100, 32]" + "'", str24, "[-1, 100, 29, 100, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 30, 100, 32]" + "'", str25, "[-1, 100, 30, 100, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 31, 100, 32]" + "'", str26, "[-1, 100, 31, 100, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 32, 100, 32]" + "'", str27, "[-1, 100, 32, 100, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 33, 100, 32]" + "'", str28, "[-1, 100, 33, 100, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 34, 100, 32]" + "'", str29, "[-1, 100, 34, 100, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 35, 100, 32]" + "'", str30, "[-1, 100, 35, 100, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 36, 100, 32]" + "'", str31, "[-1, 100, 36, 100, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 37, 100, 32]" + "'", str32, "[-1, 100, 37, 100, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 38, 100, 32]" + "'", str33, "[-1, 100, 38, 100, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 39, 100, 32]" + "'", str34, "[-1, 100, 39, 100, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 40, 100, 32]" + "'", str35, "[-1, 100, 40, 100, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 41, 100, 32]" + "'", str36, "[-1, 100, 41, 100, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 42, 100, 32]" + "'", str37, "[-1, 100, 42, 100, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 100, 43, 100, 32]" + "'", str38, "[-1, 100, 43, 100, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 100, 44, 100, 32]" + "'", str39, "[-1, 100, 44, 100, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 100, 45, 100, 32]" + "'", str40, "[-1, 100, 45, 100, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 100, 46, 100, 32]" + "'", str41, "[-1, 100, 46, 100, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 100, 47, 100, 32]" + "'", str42, "[-1, 100, 47, 100, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 100, 48, 100, 32]" + "'", str43, "[-1, 100, 48, 100, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 100, 49, 100, 32]" + "'", str44, "[-1, 100, 49, 100, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 100, 50, 100, 32]" + "'", str45, "[-1, 100, 50, 100, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 100, 51, 100, 32]" + "'", str46, "[-1, 100, 51, 100, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 100, 52, 100, 32]" + "'", str47, "[-1, 100, 52, 100, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 100, 53, 100, 32]" + "'", str48, "[-1, 100, 53, 100, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 100, 54, 100, 32]" + "'", str49, "[-1, 100, 54, 100, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 100, 55, 100, 32]" + "'", str50, "[-1, 100, 55, 100, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 100, 56, 100, 32]" + "'", str51, "[-1, 100, 56, 100, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 57, 100, 32]" + "'", str52, "[-1, 100, 57, 100, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 100, 58, 100, 32]" + "'", str53, "[-1, 100, 58, 100, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 100, 59, 100, 32]" + "'", str54, "[-1, 100, 59, 100, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 100, 60, 100, 32]" + "'", str55, "[-1, 100, 60, 100, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 100, 61, 100, 32]" + "'", str56, "[-1, 100, 61, 100, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 100, 62, 100, 32]" + "'", str57, "[-1, 100, 62, 100, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 100, 63, 100, 32]" + "'", str58, "[-1, 100, 63, 100, 32]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 100, 64, 100, 32]" + "'", str59, "[-1, 100, 64, 100, 32]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 100, 65, 100, 32]" + "'", str60, "[-1, 100, 65, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test6104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6104");
        int[] intArray6 = new int[] { (byte) 10, (byte) 1, (short) 100, 0, (byte) 0, (byte) -1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass18 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 2, 1, 1, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 1, 101, 1, 0, -1]" + "'", str7, "[10, 1, 101, 1, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 1, 102, 2, 0, -1]" + "'", str8, "[10, 1, 102, 2, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 1, 103, 3, 0, -1]" + "'", str9, "[10, 1, 103, 3, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 1, 104, 4, 0, -1]" + "'", str10, "[10, 1, 104, 4, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 1, 105, 5, 0, -1]" + "'", str11, "[10, 1, 105, 5, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 1, 106, 6, 0, -1]" + "'", str12, "[10, 1, 106, 6, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 1, 107, 7, 0, -1]" + "'", str13, "[10, 1, 107, 7, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 1, 108, 8, 0, -1]" + "'", str14, "[10, 1, 108, 8, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 1, 109, 9, 0, -1]" + "'", str15, "[10, 1, 109, 9, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 2, 0, 0, 1, -1]" + "'", str16, "[10, 2, 0, 0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 2, 1, 1, 1, -1]" + "'", str17, "[10, 2, 1, 1, 1, -1]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test6105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6105");
        int[] intArray5 = new int[] { (-1), (-1), (-1), (byte) 10, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass38 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 2, 1, 13, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, -1, 0, 10, -1]" + "'", str6, "[-1, -1, 0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, -1, 1, 10, -1]" + "'", str7, "[-1, -1, 1, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, -1, 2, 10, -1]" + "'", str8, "[-1, -1, 2, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, -1, 3, 10, -1]" + "'", str9, "[-1, -1, 3, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, -1, 4, 10, -1]" + "'", str10, "[-1, -1, 4, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, -1, 5, 10, -1]" + "'", str11, "[-1, -1, 5, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, -1, 6, 10, -1]" + "'", str12, "[-1, -1, 6, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, -1, 7, 10, -1]" + "'", str13, "[-1, -1, 7, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, -1, 8, 10, -1]" + "'", str14, "[-1, -1, 8, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, -1, 9, 10, -1]" + "'", str15, "[-1, -1, 9, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 0, 0, 11, -1]" + "'", str16, "[-1, 0, 0, 11, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 0, 1, 11, -1]" + "'", str17, "[-1, 0, 1, 11, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 0, 2, 11, -1]" + "'", str18, "[-1, 0, 2, 11, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 0, 3, 11, -1]" + "'", str19, "[-1, 0, 3, 11, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 0, 4, 11, -1]" + "'", str20, "[-1, 0, 4, 11, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 0, 5, 11, -1]" + "'", str21, "[-1, 0, 5, 11, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 0, 6, 11, -1]" + "'", str22, "[-1, 0, 6, 11, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 0, 7, 11, -1]" + "'", str23, "[-1, 0, 7, 11, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 0, 8, 11, -1]" + "'", str24, "[-1, 0, 8, 11, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 0, 9, 11, -1]" + "'", str25, "[-1, 0, 9, 11, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 1, 0, 12, -1]" + "'", str26, "[-1, 1, 0, 12, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 1, 1, 12, -1]" + "'", str27, "[-1, 1, 1, 12, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 1, 2, 12, -1]" + "'", str28, "[-1, 1, 2, 12, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 1, 3, 12, -1]" + "'", str29, "[-1, 1, 3, 12, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 1, 4, 12, -1]" + "'", str30, "[-1, 1, 4, 12, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 1, 5, 12, -1]" + "'", str31, "[-1, 1, 5, 12, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 1, 6, 12, -1]" + "'", str32, "[-1, 1, 6, 12, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 1, 7, 12, -1]" + "'", str33, "[-1, 1, 7, 12, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 1, 8, 12, -1]" + "'", str34, "[-1, 1, 8, 12, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 1, 9, 12, -1]" + "'", str35, "[-1, 1, 9, 12, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 2, 0, 13, -1]" + "'", str36, "[-1, 2, 0, 13, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 2, 1, 13, -1]" + "'", str37, "[-1, 2, 1, 13, -1]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test6106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6106");
        int[] intArray5 = new int[] { 1, (byte) 0, (-1), ' ', 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass21 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 0, 32, 1]" + "'", str6, "[1, 0, 0, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 32, 1]" + "'", str7, "[1, 0, 1, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 32, 1]" + "'", str8, "[1, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 32, 1]" + "'", str9, "[1, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 32, 1]" + "'", str10, "[1, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 32, 1]" + "'", str11, "[1, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 32, 1]" + "'", str12, "[1, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 32, 1]" + "'", str13, "[1, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 32, 1]" + "'", str14, "[1, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 32, 1]" + "'", str15, "[1, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 0, 33, 1]" + "'", str16, "[1, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 1, 33, 1]" + "'", str17, "[1, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 2, 33, 1]" + "'", str18, "[1, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 3, 33, 1]" + "'", str19, "[1, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 4, 33, 1]" + "'", str20, "[1, 1, 4, 33, 1]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test6107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6107");
        int[] intArray1 = new int[] { (byte) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass18 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test6108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6108");
        int[] intArray5 = new int[] { (byte) 10, (short) 10, (short) -1, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass14 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 10, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 10, 0, 0, 1]" + "'", str6, "[10, 10, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 1, 0, 1]" + "'", str7, "[10, 10, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 2, 0, 1]" + "'", str8, "[10, 10, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 3, 0, 1]" + "'", str9, "[10, 10, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 4, 0, 1]" + "'", str10, "[10, 10, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 5, 0, 1]" + "'", str11, "[10, 10, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 6, 0, 1]" + "'", str12, "[10, 10, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 7, 0, 1]" + "'", str13, "[10, 10, 7, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test6109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6109");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass91 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 108, 5, 5, 7, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 7, 7, 1, 0]" + "'", str32, "[0, 102, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 8, 8, 1, 0]" + "'", str33, "[0, 102, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 9, 9, 1, 0]" + "'", str34, "[0, 102, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 103, 0, 0, 2, 0]" + "'", str35, "[0, 103, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 103, 1, 1, 2, 0]" + "'", str36, "[0, 103, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 2, 2, 2, 0]" + "'", str37, "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 3, 3, 2, 0]" + "'", str38, "[0, 103, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 4, 4, 2, 0]" + "'", str39, "[0, 103, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 5, 5, 2, 0]" + "'", str40, "[0, 103, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 6, 6, 2, 0]" + "'", str41, "[0, 103, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 7, 7, 2, 0]" + "'", str42, "[0, 103, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 8, 8, 2, 0]" + "'", str43, "[0, 103, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 9, 9, 2, 0]" + "'", str44, "[0, 103, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 104, 0, 0, 3, 0]" + "'", str45, "[0, 104, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 104, 1, 1, 3, 0]" + "'", str46, "[0, 104, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 2, 2, 3, 0]" + "'", str47, "[0, 104, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 3, 3, 3, 0]" + "'", str48, "[0, 104, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 4, 4, 3, 0]" + "'", str49, "[0, 104, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 5, 5, 3, 0]" + "'", str50, "[0, 104, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 6, 6, 3, 0]" + "'", str51, "[0, 104, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 7, 7, 3, 0]" + "'", str52, "[0, 104, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 8, 8, 3, 0]" + "'", str53, "[0, 104, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 9, 9, 3, 0]" + "'", str54, "[0, 104, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 105, 0, 0, 4, 0]" + "'", str55, "[0, 105, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 105, 1, 1, 4, 0]" + "'", str56, "[0, 105, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 2, 2, 4, 0]" + "'", str57, "[0, 105, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 3, 3, 4, 0]" + "'", str58, "[0, 105, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 4, 4, 4, 0]" + "'", str59, "[0, 105, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 105, 5, 5, 4, 0]" + "'", str60, "[0, 105, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 105, 6, 6, 4, 0]" + "'", str61, "[0, 105, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 105, 7, 7, 4, 0]" + "'", str62, "[0, 105, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 105, 8, 8, 4, 0]" + "'", str63, "[0, 105, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 105, 9, 9, 4, 0]" + "'", str64, "[0, 105, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 106, 0, 0, 5, 0]" + "'", str65, "[0, 106, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 106, 1, 1, 5, 0]" + "'", str66, "[0, 106, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 106, 2, 2, 5, 0]" + "'", str67, "[0, 106, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 106, 3, 3, 5, 0]" + "'", str68, "[0, 106, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 106, 4, 4, 5, 0]" + "'", str69, "[0, 106, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 106, 5, 5, 5, 0]" + "'", str70, "[0, 106, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 106, 6, 6, 5, 0]" + "'", str71, "[0, 106, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 106, 7, 7, 5, 0]" + "'", str72, "[0, 106, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 106, 8, 8, 5, 0]" + "'", str73, "[0, 106, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[0, 106, 9, 9, 5, 0]" + "'", str74, "[0, 106, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[0, 107, 0, 0, 6, 0]" + "'", str75, "[0, 107, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[0, 107, 1, 1, 6, 0]" + "'", str76, "[0, 107, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[0, 107, 2, 2, 6, 0]" + "'", str77, "[0, 107, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[0, 107, 3, 3, 6, 0]" + "'", str78, "[0, 107, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[0, 107, 4, 4, 6, 0]" + "'", str79, "[0, 107, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[0, 107, 5, 5, 6, 0]" + "'", str80, "[0, 107, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[0, 107, 6, 6, 6, 0]" + "'", str81, "[0, 107, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[0, 107, 7, 7, 6, 0]" + "'", str82, "[0, 107, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[0, 107, 8, 8, 6, 0]" + "'", str83, "[0, 107, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[0, 107, 9, 9, 6, 0]" + "'", str84, "[0, 107, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[0, 108, 0, 0, 7, 0]" + "'", str85, "[0, 108, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[0, 108, 1, 1, 7, 0]" + "'", str86, "[0, 108, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[0, 108, 2, 2, 7, 0]" + "'", str87, "[0, 108, 2, 2, 7, 0]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[0, 108, 3, 3, 7, 0]" + "'", str88, "[0, 108, 3, 3, 7, 0]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[0, 108, 4, 4, 7, 0]" + "'", str89, "[0, 108, 4, 4, 7, 0]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[0, 108, 5, 5, 7, 0]" + "'", str90, "[0, 108, 5, 5, 7, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test6110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6110");
        int[] intArray6 = new int[] { 0, (short) -1, 'a', '#', (byte) 0, 100 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass66 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 156, 94, 0, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 98, 36, 0, 100]" + "'", str7, "[0, -1, 98, 36, 0, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 99, 37, 0, 100]" + "'", str8, "[0, -1, 99, 37, 0, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 100, 38, 0, 100]" + "'", str9, "[0, -1, 100, 38, 0, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 101, 39, 0, 100]" + "'", str10, "[0, -1, 101, 39, 0, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 102, 40, 0, 100]" + "'", str11, "[0, -1, 102, 40, 0, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 103, 41, 0, 100]" + "'", str12, "[0, -1, 103, 41, 0, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 104, 42, 0, 100]" + "'", str13, "[0, -1, 104, 42, 0, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 105, 43, 0, 100]" + "'", str14, "[0, -1, 105, 43, 0, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 106, 44, 0, 100]" + "'", str15, "[0, -1, 106, 44, 0, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 107, 45, 0, 100]" + "'", str16, "[0, -1, 107, 45, 0, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 108, 46, 0, 100]" + "'", str17, "[0, -1, 108, 46, 0, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 109, 47, 0, 100]" + "'", str18, "[0, -1, 109, 47, 0, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 110, 48, 0, 100]" + "'", str19, "[0, -1, 110, 48, 0, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 111, 49, 0, 100]" + "'", str20, "[0, -1, 111, 49, 0, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 112, 50, 0, 100]" + "'", str21, "[0, -1, 112, 50, 0, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 113, 51, 0, 100]" + "'", str22, "[0, -1, 113, 51, 0, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 114, 52, 0, 100]" + "'", str23, "[0, -1, 114, 52, 0, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 115, 53, 0, 100]" + "'", str24, "[0, -1, 115, 53, 0, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 116, 54, 0, 100]" + "'", str25, "[0, -1, 116, 54, 0, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 117, 55, 0, 100]" + "'", str26, "[0, -1, 117, 55, 0, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 118, 56, 0, 100]" + "'", str27, "[0, -1, 118, 56, 0, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 119, 57, 0, 100]" + "'", str28, "[0, -1, 119, 57, 0, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 120, 58, 0, 100]" + "'", str29, "[0, -1, 120, 58, 0, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 121, 59, 0, 100]" + "'", str30, "[0, -1, 121, 59, 0, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 122, 60, 0, 100]" + "'", str31, "[0, -1, 122, 60, 0, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 123, 61, 0, 100]" + "'", str32, "[0, -1, 123, 61, 0, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 124, 62, 0, 100]" + "'", str33, "[0, -1, 124, 62, 0, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 125, 63, 0, 100]" + "'", str34, "[0, -1, 125, 63, 0, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 126, 64, 0, 100]" + "'", str35, "[0, -1, 126, 64, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 127, 65, 0, 100]" + "'", str36, "[0, -1, 127, 65, 0, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 128, 66, 0, 100]" + "'", str37, "[0, -1, 128, 66, 0, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 129, 67, 0, 100]" + "'", str38, "[0, -1, 129, 67, 0, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 130, 68, 0, 100]" + "'", str39, "[0, -1, 130, 68, 0, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 131, 69, 0, 100]" + "'", str40, "[0, -1, 131, 69, 0, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 132, 70, 0, 100]" + "'", str41, "[0, -1, 132, 70, 0, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 133, 71, 0, 100]" + "'", str42, "[0, -1, 133, 71, 0, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 134, 72, 0, 100]" + "'", str43, "[0, -1, 134, 72, 0, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, -1, 135, 73, 0, 100]" + "'", str44, "[0, -1, 135, 73, 0, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, -1, 136, 74, 0, 100]" + "'", str45, "[0, -1, 136, 74, 0, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, -1, 137, 75, 0, 100]" + "'", str46, "[0, -1, 137, 75, 0, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, -1, 138, 76, 0, 100]" + "'", str47, "[0, -1, 138, 76, 0, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, -1, 139, 77, 0, 100]" + "'", str48, "[0, -1, 139, 77, 0, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, -1, 140, 78, 0, 100]" + "'", str49, "[0, -1, 140, 78, 0, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, -1, 141, 79, 0, 100]" + "'", str50, "[0, -1, 141, 79, 0, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, -1, 142, 80, 0, 100]" + "'", str51, "[0, -1, 142, 80, 0, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, -1, 143, 81, 0, 100]" + "'", str52, "[0, -1, 143, 81, 0, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, -1, 144, 82, 0, 100]" + "'", str53, "[0, -1, 144, 82, 0, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, -1, 145, 83, 0, 100]" + "'", str54, "[0, -1, 145, 83, 0, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, -1, 146, 84, 0, 100]" + "'", str55, "[0, -1, 146, 84, 0, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, -1, 147, 85, 0, 100]" + "'", str56, "[0, -1, 147, 85, 0, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, -1, 148, 86, 0, 100]" + "'", str57, "[0, -1, 148, 86, 0, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, -1, 149, 87, 0, 100]" + "'", str58, "[0, -1, 149, 87, 0, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, -1, 150, 88, 0, 100]" + "'", str59, "[0, -1, 150, 88, 0, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, -1, 151, 89, 0, 100]" + "'", str60, "[0, -1, 151, 89, 0, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, -1, 152, 90, 0, 100]" + "'", str61, "[0, -1, 152, 90, 0, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, -1, 153, 91, 0, 100]" + "'", str62, "[0, -1, 153, 91, 0, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, -1, 154, 92, 0, 100]" + "'", str63, "[0, -1, 154, 92, 0, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, -1, 155, 93, 0, 100]" + "'", str64, "[0, -1, 155, 93, 0, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, -1, 156, 94, 0, 100]" + "'", str65, "[0, -1, 156, 94, 0, 100]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test6111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6111");
        int[] intArray4 = new int[] { (byte) 1, (byte) 100, (short) 100, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass69 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 164, 164, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 101, 101, 0]" + "'", str5, "[1, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 102, 102, 0]" + "'", str6, "[1, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 103, 103, 0]" + "'", str7, "[1, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 104, 104, 0]" + "'", str8, "[1, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 105, 105, 0]" + "'", str9, "[1, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 106, 106, 0]" + "'", str10, "[1, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 107, 107, 0]" + "'", str11, "[1, 107, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 108, 108, 0]" + "'", str12, "[1, 108, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 109, 109, 0]" + "'", str13, "[1, 109, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 110, 110, 0]" + "'", str14, "[1, 110, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 111, 111, 0]" + "'", str15, "[1, 111, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 112, 112, 0]" + "'", str16, "[1, 112, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 113, 113, 0]" + "'", str17, "[1, 113, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 114, 114, 0]" + "'", str18, "[1, 114, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 115, 115, 0]" + "'", str19, "[1, 115, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 116, 116, 0]" + "'", str20, "[1, 116, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 117, 117, 0]" + "'", str21, "[1, 117, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 118, 118, 0]" + "'", str22, "[1, 118, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 119, 119, 0]" + "'", str23, "[1, 119, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 120, 120, 0]" + "'", str24, "[1, 120, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 121, 121, 0]" + "'", str25, "[1, 121, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 122, 122, 0]" + "'", str26, "[1, 122, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 123, 123, 0]" + "'", str27, "[1, 123, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 124, 124, 0]" + "'", str28, "[1, 124, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 125, 125, 0]" + "'", str29, "[1, 125, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 126, 126, 0]" + "'", str30, "[1, 126, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 127, 127, 0]" + "'", str31, "[1, 127, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 128, 128, 0]" + "'", str32, "[1, 128, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 129, 129, 0]" + "'", str33, "[1, 129, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 130, 130, 0]" + "'", str34, "[1, 130, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 131, 131, 0]" + "'", str35, "[1, 131, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 132, 132, 0]" + "'", str36, "[1, 132, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 133, 133, 0]" + "'", str37, "[1, 133, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 134, 134, 0]" + "'", str38, "[1, 134, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 135, 135, 0]" + "'", str39, "[1, 135, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 136, 136, 0]" + "'", str40, "[1, 136, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 137, 137, 0]" + "'", str41, "[1, 137, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 138, 138, 0]" + "'", str42, "[1, 138, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 139, 139, 0]" + "'", str43, "[1, 139, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 140, 140, 0]" + "'", str44, "[1, 140, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 141, 141, 0]" + "'", str45, "[1, 141, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 142, 142, 0]" + "'", str46, "[1, 142, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 143, 143, 0]" + "'", str47, "[1, 143, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 144, 144, 0]" + "'", str48, "[1, 144, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 145, 145, 0]" + "'", str49, "[1, 145, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 146, 146, 0]" + "'", str50, "[1, 146, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 147, 147, 0]" + "'", str51, "[1, 147, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 148, 148, 0]" + "'", str52, "[1, 148, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 149, 149, 0]" + "'", str53, "[1, 149, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 150, 150, 0]" + "'", str54, "[1, 150, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 151, 151, 0]" + "'", str55, "[1, 151, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 152, 152, 0]" + "'", str56, "[1, 152, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 153, 153, 0]" + "'", str57, "[1, 153, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 154, 154, 0]" + "'", str58, "[1, 154, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 155, 155, 0]" + "'", str59, "[1, 155, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 156, 156, 0]" + "'", str60, "[1, 156, 156, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 157, 157, 0]" + "'", str61, "[1, 157, 157, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 158, 158, 0]" + "'", str62, "[1, 158, 158, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 159, 159, 0]" + "'", str63, "[1, 159, 159, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 160, 160, 0]" + "'", str64, "[1, 160, 160, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 161, 161, 0]" + "'", str65, "[1, 161, 161, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 162, 162, 0]" + "'", str66, "[1, 162, 162, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 163, 163, 0]" + "'", str67, "[1, 163, 163, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 164, 164, 0]" + "'", str68, "[1, 164, 164, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test6112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6112");
        int[] intArray6 = new int[] { (byte) 100, (short) 100, (short) 100, '4', (short) 100, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass34 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 100, 127, 79, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 101, 53, 100, -1]" + "'", str7, "[100, 100, 101, 53, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 102, 54, 100, -1]" + "'", str8, "[100, 100, 102, 54, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 103, 55, 100, -1]" + "'", str9, "[100, 100, 103, 55, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 104, 56, 100, -1]" + "'", str10, "[100, 100, 104, 56, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 105, 57, 100, -1]" + "'", str11, "[100, 100, 105, 57, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 106, 58, 100, -1]" + "'", str12, "[100, 100, 106, 58, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 107, 59, 100, -1]" + "'", str13, "[100, 100, 107, 59, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 100, 108, 60, 100, -1]" + "'", str14, "[100, 100, 108, 60, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 100, 109, 61, 100, -1]" + "'", str15, "[100, 100, 109, 61, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 100, 110, 62, 100, -1]" + "'", str16, "[100, 100, 110, 62, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 100, 111, 63, 100, -1]" + "'", str17, "[100, 100, 111, 63, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 100, 112, 64, 100, -1]" + "'", str18, "[100, 100, 112, 64, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 100, 113, 65, 100, -1]" + "'", str19, "[100, 100, 113, 65, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 100, 114, 66, 100, -1]" + "'", str20, "[100, 100, 114, 66, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 100, 115, 67, 100, -1]" + "'", str21, "[100, 100, 115, 67, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 100, 116, 68, 100, -1]" + "'", str22, "[100, 100, 116, 68, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 100, 117, 69, 100, -1]" + "'", str23, "[100, 100, 117, 69, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 100, 118, 70, 100, -1]" + "'", str24, "[100, 100, 118, 70, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 100, 119, 71, 100, -1]" + "'", str25, "[100, 100, 119, 71, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 100, 120, 72, 100, -1]" + "'", str26, "[100, 100, 120, 72, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 100, 121, 73, 100, -1]" + "'", str27, "[100, 100, 121, 73, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 100, 122, 74, 100, -1]" + "'", str28, "[100, 100, 122, 74, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 100, 123, 75, 100, -1]" + "'", str29, "[100, 100, 123, 75, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 100, 124, 76, 100, -1]" + "'", str30, "[100, 100, 124, 76, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 100, 125, 77, 100, -1]" + "'", str31, "[100, 100, 125, 77, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 100, 126, 78, 100, -1]" + "'", str32, "[100, 100, 126, 78, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 100, 127, 79, 100, -1]" + "'", str33, "[100, 100, 127, 79, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test6113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6113");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass78 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 172, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 52, 0]" + "'", str29, "[1, 0, 124, 52, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 52, 0]" + "'", str30, "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 52, 0]" + "'", str31, "[1, 0, 126, 52, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 52, 0]" + "'", str32, "[1, 0, 127, 52, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 52, 0]" + "'", str33, "[1, 0, 128, 52, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 52, 0]" + "'", str34, "[1, 0, 129, 52, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 52, 0]" + "'", str35, "[1, 0, 130, 52, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 52, 0]" + "'", str36, "[1, 0, 131, 52, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 52, 0]" + "'", str37, "[1, 0, 132, 52, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 52, 0]" + "'", str38, "[1, 0, 133, 52, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 52, 0]" + "'", str39, "[1, 0, 134, 52, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 52, 0]" + "'", str40, "[1, 0, 135, 52, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 52, 0]" + "'", str41, "[1, 0, 136, 52, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 52, 0]" + "'", str42, "[1, 0, 137, 52, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 52, 0]" + "'", str43, "[1, 0, 138, 52, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 52, 0]" + "'", str44, "[1, 0, 139, 52, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 52, 0]" + "'", str45, "[1, 0, 140, 52, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 52, 0]" + "'", str46, "[1, 0, 141, 52, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 52, 0]" + "'", str47, "[1, 0, 142, 52, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 52, 0]" + "'", str48, "[1, 0, 143, 52, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 52, 0]" + "'", str49, "[1, 0, 144, 52, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 52, 0]" + "'", str50, "[1, 0, 145, 52, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 52, 0]" + "'", str51, "[1, 0, 146, 52, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 52, 0]" + "'", str52, "[1, 0, 147, 52, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 52, 0]" + "'", str53, "[1, 0, 148, 52, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 52, 0]" + "'", str54, "[1, 0, 149, 52, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 52, 0]" + "'", str55, "[1, 0, 150, 52, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 52, 0]" + "'", str56, "[1, 0, 151, 52, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 52, 0]" + "'", str57, "[1, 0, 152, 52, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 52, 0]" + "'", str58, "[1, 0, 153, 52, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 52, 0]" + "'", str59, "[1, 0, 154, 52, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 52, 0]" + "'", str60, "[1, 0, 155, 52, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 52, 0]" + "'", str61, "[1, 0, 156, 52, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 52, 0]" + "'", str62, "[1, 0, 157, 52, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 52, 0]" + "'", str63, "[1, 0, 158, 52, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 52, 0]" + "'", str64, "[1, 0, 159, 52, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 52, 0]" + "'", str65, "[1, 0, 160, 52, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 52, 0]" + "'", str66, "[1, 0, 161, 52, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 52, 0]" + "'", str67, "[1, 0, 162, 52, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 52, 0]" + "'", str68, "[1, 0, 163, 52, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 52, 0]" + "'", str69, "[1, 0, 164, 52, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 52, 0]" + "'", str70, "[1, 0, 165, 52, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 52, 0]" + "'", str71, "[1, 0, 166, 52, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 52, 0]" + "'", str72, "[1, 0, 167, 52, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 52, 0]" + "'", str73, "[1, 0, 168, 52, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 52, 0]" + "'", str74, "[1, 0, 169, 52, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 52, 0]" + "'", str75, "[1, 0, 170, 52, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 52, 0]" + "'", str76, "[1, 0, 171, 52, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 0, 172, 52, 0]" + "'", str77, "[1, 0, 172, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test6114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6114");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass83 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 7, 6, 6, 8, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 16, 6, 1, 0]" + "'", str12, "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 17, 7, 1, 0]" + "'", str13, "[100, 0, 17, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 18, 8, 1, 0]" + "'", str14, "[100, 0, 18, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 0, 19, 9, 1, 0]" + "'", str15, "[100, 0, 19, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 1, 0, 0, 2, 0]" + "'", str16, "[100, 1, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 1, 1, 1, 2, 0]" + "'", str17, "[100, 1, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 1, 2, 2, 2, 0]" + "'", str18, "[100, 1, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 1, 3, 3, 2, 0]" + "'", str19, "[100, 1, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 1, 4, 4, 2, 0]" + "'", str20, "[100, 1, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 1, 5, 5, 2, 0]" + "'", str21, "[100, 1, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 1, 6, 6, 2, 0]" + "'", str22, "[100, 1, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 1, 7, 7, 2, 0]" + "'", str23, "[100, 1, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 1, 8, 8, 2, 0]" + "'", str24, "[100, 1, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 1, 9, 9, 2, 0]" + "'", str25, "[100, 1, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 2, 0, 0, 3, 0]" + "'", str26, "[100, 2, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 2, 1, 1, 3, 0]" + "'", str27, "[100, 2, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 2, 2, 2, 3, 0]" + "'", str28, "[100, 2, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 2, 3, 3, 3, 0]" + "'", str29, "[100, 2, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 2, 4, 4, 3, 0]" + "'", str30, "[100, 2, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 2, 5, 5, 3, 0]" + "'", str31, "[100, 2, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 2, 6, 6, 3, 0]" + "'", str32, "[100, 2, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 2, 7, 7, 3, 0]" + "'", str33, "[100, 2, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 2, 8, 8, 3, 0]" + "'", str34, "[100, 2, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 2, 9, 9, 3, 0]" + "'", str35, "[100, 2, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 3, 0, 0, 4, 0]" + "'", str36, "[100, 3, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 1, 1, 4, 0]" + "'", str37, "[100, 3, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 2, 2, 4, 0]" + "'", str38, "[100, 3, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 3, 3, 3, 4, 0]" + "'", str39, "[100, 3, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 3, 4, 4, 4, 0]" + "'", str40, "[100, 3, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 3, 5, 5, 4, 0]" + "'", str41, "[100, 3, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 3, 6, 6, 4, 0]" + "'", str42, "[100, 3, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 3, 7, 7, 4, 0]" + "'", str43, "[100, 3, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 3, 8, 8, 4, 0]" + "'", str44, "[100, 3, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 3, 9, 9, 4, 0]" + "'", str45, "[100, 3, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 4, 0, 0, 5, 0]" + "'", str46, "[100, 4, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 4, 1, 1, 5, 0]" + "'", str47, "[100, 4, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 4, 2, 2, 5, 0]" + "'", str48, "[100, 4, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 4, 3, 3, 5, 0]" + "'", str49, "[100, 4, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 4, 4, 4, 5, 0]" + "'", str50, "[100, 4, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 4, 5, 5, 5, 0]" + "'", str51, "[100, 4, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 4, 6, 6, 5, 0]" + "'", str52, "[100, 4, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 4, 7, 7, 5, 0]" + "'", str53, "[100, 4, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 4, 8, 8, 5, 0]" + "'", str54, "[100, 4, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 4, 9, 9, 5, 0]" + "'", str55, "[100, 4, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 5, 0, 0, 6, 0]" + "'", str56, "[100, 5, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 5, 1, 1, 6, 0]" + "'", str57, "[100, 5, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 5, 2, 2, 6, 0]" + "'", str58, "[100, 5, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 5, 3, 3, 6, 0]" + "'", str59, "[100, 5, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 5, 4, 4, 6, 0]" + "'", str60, "[100, 5, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 5, 5, 5, 6, 0]" + "'", str61, "[100, 5, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 5, 6, 6, 6, 0]" + "'", str62, "[100, 5, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 5, 7, 7, 6, 0]" + "'", str63, "[100, 5, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 5, 8, 8, 6, 0]" + "'", str64, "[100, 5, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 5, 9, 9, 6, 0]" + "'", str65, "[100, 5, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 6, 0, 0, 7, 0]" + "'", str66, "[100, 6, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 6, 1, 1, 7, 0]" + "'", str67, "[100, 6, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 6, 2, 2, 7, 0]" + "'", str68, "[100, 6, 2, 2, 7, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 6, 3, 3, 7, 0]" + "'", str69, "[100, 6, 3, 3, 7, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 6, 4, 4, 7, 0]" + "'", str70, "[100, 6, 4, 4, 7, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 6, 5, 5, 7, 0]" + "'", str71, "[100, 6, 5, 5, 7, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 6, 6, 6, 7, 0]" + "'", str72, "[100, 6, 6, 6, 7, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 6, 7, 7, 7, 0]" + "'", str73, "[100, 6, 7, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 6, 8, 8, 7, 0]" + "'", str74, "[100, 6, 8, 8, 7, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 6, 9, 9, 7, 0]" + "'", str75, "[100, 6, 9, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 7, 0, 0, 8, 0]" + "'", str76, "[100, 7, 0, 0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 7, 1, 1, 8, 0]" + "'", str77, "[100, 7, 1, 1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 7, 2, 2, 8, 0]" + "'", str78, "[100, 7, 2, 2, 8, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 7, 3, 3, 8, 0]" + "'", str79, "[100, 7, 3, 3, 8, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 7, 4, 4, 8, 0]" + "'", str80, "[100, 7, 4, 4, 8, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 7, 5, 5, 8, 0]" + "'", str81, "[100, 7, 5, 5, 8, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[100, 7, 6, 6, 8, 0]" + "'", str82, "[100, 7, 6, 6, 8, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test6115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6115");
        int[] intArray6 = new int[] { (byte) 10, ' ', (byte) -1, 0, (byte) 100, '#' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass23 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 33, 6, 6, 101, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 0, 1, 100, 35]" + "'", str7, "[10, 32, 0, 1, 100, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 1, 2, 100, 35]" + "'", str8, "[10, 32, 1, 2, 100, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 2, 3, 100, 35]" + "'", str9, "[10, 32, 2, 3, 100, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 3, 4, 100, 35]" + "'", str10, "[10, 32, 3, 4, 100, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 4, 5, 100, 35]" + "'", str11, "[10, 32, 4, 5, 100, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 5, 6, 100, 35]" + "'", str12, "[10, 32, 5, 6, 100, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 6, 7, 100, 35]" + "'", str13, "[10, 32, 6, 7, 100, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 7, 8, 100, 35]" + "'", str14, "[10, 32, 7, 8, 100, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 8, 9, 100, 35]" + "'", str15, "[10, 32, 8, 9, 100, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 33, 0, 0, 101, 35]" + "'", str16, "[10, 33, 0, 0, 101, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 33, 1, 1, 101, 35]" + "'", str17, "[10, 33, 1, 1, 101, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 33, 2, 2, 101, 35]" + "'", str18, "[10, 33, 2, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 33, 3, 3, 101, 35]" + "'", str19, "[10, 33, 3, 3, 101, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 33, 4, 4, 101, 35]" + "'", str20, "[10, 33, 4, 4, 101, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 33, 5, 5, 101, 35]" + "'", str21, "[10, 33, 5, 5, 101, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 33, 6, 6, 101, 35]" + "'", str22, "[10, 33, 6, 6, 101, 35]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test6116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6116");
        int[] intArray5 = new int[] { ' ', (byte) -1, (byte) 100, (byte) 0, (short) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass7 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, -1, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, -1, 101, 0, 10]" + "'", str6, "[32, -1, 101, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test6117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6117");
        int[] intArray4 = new int[] { '4', (-1), (byte) 10, 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass77 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 71, 82, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 11, 1]" + "'", str5, "[52, 0, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 12, 1]" + "'", str6, "[52, 1, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 13, 1]" + "'", str7, "[52, 2, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 14, 1]" + "'", str8, "[52, 3, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 15, 1]" + "'", str9, "[52, 4, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 16, 1]" + "'", str10, "[52, 5, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 17, 1]" + "'", str11, "[52, 6, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 18, 1]" + "'", str12, "[52, 7, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 19, 1]" + "'", str13, "[52, 8, 19, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 20, 1]" + "'", str14, "[52, 9, 20, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 21, 1]" + "'", str15, "[52, 10, 21, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 22, 1]" + "'", str16, "[52, 11, 22, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 23, 1]" + "'", str17, "[52, 12, 23, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 24, 1]" + "'", str18, "[52, 13, 24, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 25, 1]" + "'", str19, "[52, 14, 25, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 26, 1]" + "'", str20, "[52, 15, 26, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 27, 1]" + "'", str21, "[52, 16, 27, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 28, 1]" + "'", str22, "[52, 17, 28, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 29, 1]" + "'", str23, "[52, 18, 29, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 30, 1]" + "'", str24, "[52, 19, 30, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 31, 1]" + "'", str25, "[52, 20, 31, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 32, 1]" + "'", str26, "[52, 21, 32, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 33, 1]" + "'", str27, "[52, 22, 33, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 34, 1]" + "'", str28, "[52, 23, 34, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 35, 1]" + "'", str29, "[52, 24, 35, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 36, 1]" + "'", str30, "[52, 25, 36, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 37, 1]" + "'", str31, "[52, 26, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 38, 1]" + "'", str32, "[52, 27, 38, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 39, 1]" + "'", str33, "[52, 28, 39, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 40, 1]" + "'", str34, "[52, 29, 40, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 41, 1]" + "'", str35, "[52, 30, 41, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 42, 1]" + "'", str36, "[52, 31, 42, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 43, 1]" + "'", str37, "[52, 32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 44, 1]" + "'", str38, "[52, 33, 44, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 45, 1]" + "'", str39, "[52, 34, 45, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 46, 1]" + "'", str40, "[52, 35, 46, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 47, 1]" + "'", str41, "[52, 36, 47, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 48, 1]" + "'", str42, "[52, 37, 48, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 49, 1]" + "'", str43, "[52, 38, 49, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 50, 1]" + "'", str44, "[52, 39, 50, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 51, 1]" + "'", str45, "[52, 40, 51, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 52, 1]" + "'", str46, "[52, 41, 52, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 53, 1]" + "'", str47, "[52, 42, 53, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 54, 1]" + "'", str48, "[52, 43, 54, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 55, 1]" + "'", str49, "[52, 44, 55, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 56, 1]" + "'", str50, "[52, 45, 56, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 57, 1]" + "'", str51, "[52, 46, 57, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 58, 1]" + "'", str52, "[52, 47, 58, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 59, 1]" + "'", str53, "[52, 48, 59, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 60, 1]" + "'", str54, "[52, 49, 60, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 61, 1]" + "'", str55, "[52, 50, 61, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 62, 1]" + "'", str56, "[52, 51, 62, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 63, 1]" + "'", str57, "[52, 52, 63, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 64, 1]" + "'", str58, "[52, 53, 64, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[52, 54, 65, 1]" + "'", str59, "[52, 54, 65, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[52, 55, 66, 1]" + "'", str60, "[52, 55, 66, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[52, 56, 67, 1]" + "'", str61, "[52, 56, 67, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[52, 57, 68, 1]" + "'", str62, "[52, 57, 68, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[52, 58, 69, 1]" + "'", str63, "[52, 58, 69, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[52, 59, 70, 1]" + "'", str64, "[52, 59, 70, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[52, 60, 71, 1]" + "'", str65, "[52, 60, 71, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[52, 61, 72, 1]" + "'", str66, "[52, 61, 72, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[52, 62, 73, 1]" + "'", str67, "[52, 62, 73, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[52, 63, 74, 1]" + "'", str68, "[52, 63, 74, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[52, 64, 75, 1]" + "'", str69, "[52, 64, 75, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[52, 65, 76, 1]" + "'", str70, "[52, 65, 76, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[52, 66, 77, 1]" + "'", str71, "[52, 66, 77, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[52, 67, 78, 1]" + "'", str72, "[52, 67, 78, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[52, 68, 79, 1]" + "'", str73, "[52, 68, 79, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[52, 69, 80, 1]" + "'", str74, "[52, 69, 80, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[52, 70, 81, 1]" + "'", str75, "[52, 70, 81, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[52, 71, 82, 1]" + "'", str76, "[52, 71, 82, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test6118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6118");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass92 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1]" + "'", str73, "[1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2]" + "'", str74, "[2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[3]" + "'", str75, "[3]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[4]" + "'", str76, "[4]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[5]" + "'", str77, "[5]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6]" + "'", str78, "[6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7]" + "'", str79, "[7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8]" + "'", str80, "[8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[9]" + "'", str81, "[9]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1]" + "'", str82, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1]" + "'", str83, "[1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[2]" + "'", str84, "[2]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[3]" + "'", str85, "[3]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[4]" + "'", str86, "[4]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[5]" + "'", str87, "[5]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[6]" + "'", str88, "[6]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7]" + "'", str89, "[7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8]" + "'", str90, "[8]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9]" + "'", str91, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test6119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6119");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass71 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 165, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 100, 103, 10, 1]" + "'", str8, "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 100, 104, 10, 1]" + "'", str9, "[1, 100, 104, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 100, 105, 10, 1]" + "'", str10, "[1, 100, 105, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 100, 106, 10, 1]" + "'", str11, "[1, 100, 106, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 100, 107, 10, 1]" + "'", str12, "[1, 100, 107, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 100, 108, 10, 1]" + "'", str13, "[1, 100, 108, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 100, 109, 10, 1]" + "'", str14, "[1, 100, 109, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 100, 110, 10, 1]" + "'", str15, "[1, 100, 110, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 100, 111, 10, 1]" + "'", str16, "[1, 100, 111, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 100, 112, 10, 1]" + "'", str17, "[1, 100, 112, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 100, 113, 10, 1]" + "'", str18, "[1, 100, 113, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 100, 114, 10, 1]" + "'", str19, "[1, 100, 114, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 100, 115, 10, 1]" + "'", str20, "[1, 100, 115, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 100, 116, 10, 1]" + "'", str21, "[1, 100, 116, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 100, 117, 10, 1]" + "'", str22, "[1, 100, 117, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 100, 118, 10, 1]" + "'", str23, "[1, 100, 118, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 100, 119, 10, 1]" + "'", str24, "[1, 100, 119, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 100, 120, 10, 1]" + "'", str25, "[1, 100, 120, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 100, 121, 10, 1]" + "'", str26, "[1, 100, 121, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 100, 122, 10, 1]" + "'", str27, "[1, 100, 122, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 100, 123, 10, 1]" + "'", str28, "[1, 100, 123, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 100, 124, 10, 1]" + "'", str29, "[1, 100, 124, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 100, 125, 10, 1]" + "'", str30, "[1, 100, 125, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 100, 126, 10, 1]" + "'", str31, "[1, 100, 126, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 100, 127, 10, 1]" + "'", str32, "[1, 100, 127, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 100, 128, 10, 1]" + "'", str33, "[1, 100, 128, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 100, 129, 10, 1]" + "'", str34, "[1, 100, 129, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 100, 130, 10, 1]" + "'", str35, "[1, 100, 130, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 100, 131, 10, 1]" + "'", str36, "[1, 100, 131, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 100, 132, 10, 1]" + "'", str37, "[1, 100, 132, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 100, 133, 10, 1]" + "'", str38, "[1, 100, 133, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 100, 134, 10, 1]" + "'", str39, "[1, 100, 134, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 100, 135, 10, 1]" + "'", str40, "[1, 100, 135, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 100, 136, 10, 1]" + "'", str41, "[1, 100, 136, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 100, 137, 10, 1]" + "'", str42, "[1, 100, 137, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 100, 138, 10, 1]" + "'", str43, "[1, 100, 138, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 100, 139, 10, 1]" + "'", str44, "[1, 100, 139, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 100, 140, 10, 1]" + "'", str45, "[1, 100, 140, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 100, 141, 10, 1]" + "'", str46, "[1, 100, 141, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 100, 142, 10, 1]" + "'", str47, "[1, 100, 142, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 100, 143, 10, 1]" + "'", str48, "[1, 100, 143, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 100, 144, 10, 1]" + "'", str49, "[1, 100, 144, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 100, 145, 10, 1]" + "'", str50, "[1, 100, 145, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 100, 146, 10, 1]" + "'", str51, "[1, 100, 146, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 100, 147, 10, 1]" + "'", str52, "[1, 100, 147, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 100, 148, 10, 1]" + "'", str53, "[1, 100, 148, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 100, 149, 10, 1]" + "'", str54, "[1, 100, 149, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 100, 150, 10, 1]" + "'", str55, "[1, 100, 150, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 100, 151, 10, 1]" + "'", str56, "[1, 100, 151, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 100, 152, 10, 1]" + "'", str57, "[1, 100, 152, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 100, 153, 10, 1]" + "'", str58, "[1, 100, 153, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 100, 154, 10, 1]" + "'", str59, "[1, 100, 154, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 100, 155, 10, 1]" + "'", str60, "[1, 100, 155, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 100, 156, 10, 1]" + "'", str61, "[1, 100, 156, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 100, 157, 10, 1]" + "'", str62, "[1, 100, 157, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 100, 158, 10, 1]" + "'", str63, "[1, 100, 158, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 100, 159, 10, 1]" + "'", str64, "[1, 100, 159, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 100, 160, 10, 1]" + "'", str65, "[1, 100, 160, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 100, 161, 10, 1]" + "'", str66, "[1, 100, 161, 10, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 100, 162, 10, 1]" + "'", str67, "[1, 100, 162, 10, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 100, 163, 10, 1]" + "'", str68, "[1, 100, 163, 10, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 100, 164, 10, 1]" + "'", str69, "[1, 100, 164, 10, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 100, 165, 10, 1]" + "'", str70, "[1, 100, 165, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test6120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6120");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass77 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 171, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 52, 0]" + "'", str29, "[1, 0, 124, 52, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 52, 0]" + "'", str30, "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 52, 0]" + "'", str31, "[1, 0, 126, 52, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 52, 0]" + "'", str32, "[1, 0, 127, 52, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 52, 0]" + "'", str33, "[1, 0, 128, 52, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 52, 0]" + "'", str34, "[1, 0, 129, 52, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 52, 0]" + "'", str35, "[1, 0, 130, 52, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 52, 0]" + "'", str36, "[1, 0, 131, 52, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 52, 0]" + "'", str37, "[1, 0, 132, 52, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 52, 0]" + "'", str38, "[1, 0, 133, 52, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 52, 0]" + "'", str39, "[1, 0, 134, 52, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 52, 0]" + "'", str40, "[1, 0, 135, 52, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 52, 0]" + "'", str41, "[1, 0, 136, 52, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 52, 0]" + "'", str42, "[1, 0, 137, 52, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 52, 0]" + "'", str43, "[1, 0, 138, 52, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 52, 0]" + "'", str44, "[1, 0, 139, 52, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 52, 0]" + "'", str45, "[1, 0, 140, 52, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 52, 0]" + "'", str46, "[1, 0, 141, 52, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 52, 0]" + "'", str47, "[1, 0, 142, 52, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 52, 0]" + "'", str48, "[1, 0, 143, 52, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 52, 0]" + "'", str49, "[1, 0, 144, 52, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 52, 0]" + "'", str50, "[1, 0, 145, 52, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 52, 0]" + "'", str51, "[1, 0, 146, 52, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 52, 0]" + "'", str52, "[1, 0, 147, 52, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 52, 0]" + "'", str53, "[1, 0, 148, 52, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 52, 0]" + "'", str54, "[1, 0, 149, 52, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 52, 0]" + "'", str55, "[1, 0, 150, 52, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 52, 0]" + "'", str56, "[1, 0, 151, 52, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 52, 0]" + "'", str57, "[1, 0, 152, 52, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 52, 0]" + "'", str58, "[1, 0, 153, 52, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 52, 0]" + "'", str59, "[1, 0, 154, 52, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 52, 0]" + "'", str60, "[1, 0, 155, 52, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 52, 0]" + "'", str61, "[1, 0, 156, 52, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 52, 0]" + "'", str62, "[1, 0, 157, 52, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 52, 0]" + "'", str63, "[1, 0, 158, 52, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 52, 0]" + "'", str64, "[1, 0, 159, 52, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 52, 0]" + "'", str65, "[1, 0, 160, 52, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 52, 0]" + "'", str66, "[1, 0, 161, 52, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 52, 0]" + "'", str67, "[1, 0, 162, 52, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 52, 0]" + "'", str68, "[1, 0, 163, 52, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 52, 0]" + "'", str69, "[1, 0, 164, 52, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 52, 0]" + "'", str70, "[1, 0, 165, 52, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 52, 0]" + "'", str71, "[1, 0, 166, 52, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 52, 0]" + "'", str72, "[1, 0, 167, 52, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 52, 0]" + "'", str73, "[1, 0, 168, 52, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 52, 0]" + "'", str74, "[1, 0, 169, 52, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 52, 0]" + "'", str75, "[1, 0, 170, 52, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 52, 0]" + "'", str76, "[1, 0, 171, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test6121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6121");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass91 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 185, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 0, 1]" + "'", str29, "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 0, 1]" + "'", str30, "[1, 0, 125, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 0, 1]" + "'", str31, "[1, 0, 126, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 0, 1]" + "'", str32, "[1, 0, 127, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 0, 1]" + "'", str33, "[1, 0, 128, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 0, 1]" + "'", str34, "[1, 0, 129, 0, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 0, 1]" + "'", str35, "[1, 0, 130, 0, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 0, 1]" + "'", str36, "[1, 0, 131, 0, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 0, 1]" + "'", str37, "[1, 0, 132, 0, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 0, 1]" + "'", str38, "[1, 0, 133, 0, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 0, 1]" + "'", str39, "[1, 0, 134, 0, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 0, 1]" + "'", str40, "[1, 0, 135, 0, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 0, 1]" + "'", str41, "[1, 0, 136, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 0, 1]" + "'", str42, "[1, 0, 137, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 0, 1]" + "'", str43, "[1, 0, 138, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 0, 1]" + "'", str44, "[1, 0, 139, 0, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 0, 1]" + "'", str45, "[1, 0, 140, 0, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 0, 1]" + "'", str46, "[1, 0, 141, 0, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 0, 1]" + "'", str47, "[1, 0, 142, 0, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 0, 1]" + "'", str48, "[1, 0, 143, 0, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 0, 1]" + "'", str49, "[1, 0, 144, 0, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 0, 1]" + "'", str50, "[1, 0, 145, 0, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 0, 1]" + "'", str51, "[1, 0, 146, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 0, 1]" + "'", str52, "[1, 0, 147, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 0, 1]" + "'", str53, "[1, 0, 148, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 0, 1]" + "'", str54, "[1, 0, 149, 0, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 0, 1]" + "'", str55, "[1, 0, 150, 0, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 0, 1]" + "'", str56, "[1, 0, 151, 0, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 0, 1]" + "'", str57, "[1, 0, 152, 0, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 0, 1]" + "'", str58, "[1, 0, 153, 0, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 0, 1]" + "'", str59, "[1, 0, 154, 0, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 0, 1]" + "'", str60, "[1, 0, 155, 0, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 0, 1]" + "'", str61, "[1, 0, 156, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 0, 1]" + "'", str62, "[1, 0, 157, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 0, 1]" + "'", str63, "[1, 0, 158, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 0, 1]" + "'", str64, "[1, 0, 159, 0, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 0, 1]" + "'", str65, "[1, 0, 160, 0, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 0, 1]" + "'", str66, "[1, 0, 161, 0, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 0, 1]" + "'", str67, "[1, 0, 162, 0, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 0, 1]" + "'", str68, "[1, 0, 163, 0, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 0, 1]" + "'", str69, "[1, 0, 164, 0, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 0, 1]" + "'", str70, "[1, 0, 165, 0, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 0, 1]" + "'", str71, "[1, 0, 166, 0, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 0, 1]" + "'", str72, "[1, 0, 167, 0, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 0, 1]" + "'", str73, "[1, 0, 168, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 0, 1]" + "'", str74, "[1, 0, 169, 0, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 0, 1]" + "'", str75, "[1, 0, 170, 0, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 0, 1]" + "'", str76, "[1, 0, 171, 0, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 0, 172, 0, 1]" + "'", str77, "[1, 0, 172, 0, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 0, 173, 0, 1]" + "'", str78, "[1, 0, 173, 0, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 0, 174, 0, 1]" + "'", str79, "[1, 0, 174, 0, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 0, 175, 0, 1]" + "'", str80, "[1, 0, 175, 0, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 176, 0, 1]" + "'", str81, "[1, 0, 176, 0, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 0, 177, 0, 1]" + "'", str82, "[1, 0, 177, 0, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 178, 0, 1]" + "'", str83, "[1, 0, 178, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 0, 179, 0, 1]" + "'", str84, "[1, 0, 179, 0, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[1, 0, 180, 0, 1]" + "'", str85, "[1, 0, 180, 0, 1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[1, 0, 181, 0, 1]" + "'", str86, "[1, 0, 181, 0, 1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[1, 0, 182, 0, 1]" + "'", str87, "[1, 0, 182, 0, 1]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[1, 0, 183, 0, 1]" + "'", str88, "[1, 0, 183, 0, 1]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[1, 0, 184, 0, 1]" + "'", str89, "[1, 0, 184, 0, 1]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[1, 0, 185, 0, 1]" + "'", str90, "[1, 0, 185, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test6122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6122");
        int[] intArray6 = new int[] { (byte) 100, (short) 100, (short) 100, '4', (short) 100, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass33 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 100, 126, 78, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 101, 53, 100, -1]" + "'", str7, "[100, 100, 101, 53, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 102, 54, 100, -1]" + "'", str8, "[100, 100, 102, 54, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 103, 55, 100, -1]" + "'", str9, "[100, 100, 103, 55, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 104, 56, 100, -1]" + "'", str10, "[100, 100, 104, 56, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 105, 57, 100, -1]" + "'", str11, "[100, 100, 105, 57, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 106, 58, 100, -1]" + "'", str12, "[100, 100, 106, 58, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 107, 59, 100, -1]" + "'", str13, "[100, 100, 107, 59, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 100, 108, 60, 100, -1]" + "'", str14, "[100, 100, 108, 60, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 100, 109, 61, 100, -1]" + "'", str15, "[100, 100, 109, 61, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 100, 110, 62, 100, -1]" + "'", str16, "[100, 100, 110, 62, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 100, 111, 63, 100, -1]" + "'", str17, "[100, 100, 111, 63, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 100, 112, 64, 100, -1]" + "'", str18, "[100, 100, 112, 64, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 100, 113, 65, 100, -1]" + "'", str19, "[100, 100, 113, 65, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 100, 114, 66, 100, -1]" + "'", str20, "[100, 100, 114, 66, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 100, 115, 67, 100, -1]" + "'", str21, "[100, 100, 115, 67, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 100, 116, 68, 100, -1]" + "'", str22, "[100, 100, 116, 68, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 100, 117, 69, 100, -1]" + "'", str23, "[100, 100, 117, 69, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 100, 118, 70, 100, -1]" + "'", str24, "[100, 100, 118, 70, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 100, 119, 71, 100, -1]" + "'", str25, "[100, 100, 119, 71, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 100, 120, 72, 100, -1]" + "'", str26, "[100, 100, 120, 72, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 100, 121, 73, 100, -1]" + "'", str27, "[100, 100, 121, 73, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 100, 122, 74, 100, -1]" + "'", str28, "[100, 100, 122, 74, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 100, 123, 75, 100, -1]" + "'", str29, "[100, 100, 123, 75, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 100, 124, 76, 100, -1]" + "'", str30, "[100, 100, 124, 76, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 100, 125, 77, 100, -1]" + "'", str31, "[100, 100, 125, 77, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 100, 126, 78, 100, -1]" + "'", str32, "[100, 100, 126, 78, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test6123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6123");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass80 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 174, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 52, 0]" + "'", str29, "[1, 0, 124, 52, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 52, 0]" + "'", str30, "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 52, 0]" + "'", str31, "[1, 0, 126, 52, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 52, 0]" + "'", str32, "[1, 0, 127, 52, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 52, 0]" + "'", str33, "[1, 0, 128, 52, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 52, 0]" + "'", str34, "[1, 0, 129, 52, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 52, 0]" + "'", str35, "[1, 0, 130, 52, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 52, 0]" + "'", str36, "[1, 0, 131, 52, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 52, 0]" + "'", str37, "[1, 0, 132, 52, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 52, 0]" + "'", str38, "[1, 0, 133, 52, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 52, 0]" + "'", str39, "[1, 0, 134, 52, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 52, 0]" + "'", str40, "[1, 0, 135, 52, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 52, 0]" + "'", str41, "[1, 0, 136, 52, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 52, 0]" + "'", str42, "[1, 0, 137, 52, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 52, 0]" + "'", str43, "[1, 0, 138, 52, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 52, 0]" + "'", str44, "[1, 0, 139, 52, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 52, 0]" + "'", str45, "[1, 0, 140, 52, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 52, 0]" + "'", str46, "[1, 0, 141, 52, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 52, 0]" + "'", str47, "[1, 0, 142, 52, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 52, 0]" + "'", str48, "[1, 0, 143, 52, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 52, 0]" + "'", str49, "[1, 0, 144, 52, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 52, 0]" + "'", str50, "[1, 0, 145, 52, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 52, 0]" + "'", str51, "[1, 0, 146, 52, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 52, 0]" + "'", str52, "[1, 0, 147, 52, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 52, 0]" + "'", str53, "[1, 0, 148, 52, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 52, 0]" + "'", str54, "[1, 0, 149, 52, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 52, 0]" + "'", str55, "[1, 0, 150, 52, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 52, 0]" + "'", str56, "[1, 0, 151, 52, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 52, 0]" + "'", str57, "[1, 0, 152, 52, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 52, 0]" + "'", str58, "[1, 0, 153, 52, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 52, 0]" + "'", str59, "[1, 0, 154, 52, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 52, 0]" + "'", str60, "[1, 0, 155, 52, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 52, 0]" + "'", str61, "[1, 0, 156, 52, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 52, 0]" + "'", str62, "[1, 0, 157, 52, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 52, 0]" + "'", str63, "[1, 0, 158, 52, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 52, 0]" + "'", str64, "[1, 0, 159, 52, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 52, 0]" + "'", str65, "[1, 0, 160, 52, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 52, 0]" + "'", str66, "[1, 0, 161, 52, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 52, 0]" + "'", str67, "[1, 0, 162, 52, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 52, 0]" + "'", str68, "[1, 0, 163, 52, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 52, 0]" + "'", str69, "[1, 0, 164, 52, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 52, 0]" + "'", str70, "[1, 0, 165, 52, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 52, 0]" + "'", str71, "[1, 0, 166, 52, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 52, 0]" + "'", str72, "[1, 0, 167, 52, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 52, 0]" + "'", str73, "[1, 0, 168, 52, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 52, 0]" + "'", str74, "[1, 0, 169, 52, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 52, 0]" + "'", str75, "[1, 0, 170, 52, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 52, 0]" + "'", str76, "[1, 0, 171, 52, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 0, 172, 52, 0]" + "'", str77, "[1, 0, 172, 52, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 0, 173, 52, 0]" + "'", str78, "[1, 0, 173, 52, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 0, 174, 52, 0]" + "'", str79, "[1, 0, 174, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test6124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6124");
        int[] intArray3 = new int[] { 1, 0, (short) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass87 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[9, 3, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 5]" + "'", str60, "[6, 7, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 5]" + "'", str61, "[6, 8, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 5]" + "'", str62, "[6, 9, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 6]" + "'", str63, "[7, 0, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 6]" + "'", str64, "[7, 1, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 6]" + "'", str65, "[7, 2, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 6]" + "'", str66, "[7, 3, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 6]" + "'", str67, "[7, 4, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 5, 6]" + "'", str68, "[7, 5, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 6, 6]" + "'", str69, "[7, 6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7, 6]" + "'", str70, "[7, 7, 6]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 8, 6]" + "'", str71, "[7, 8, 6]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 9, 6]" + "'", str72, "[7, 9, 6]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[8, 0, 7]" + "'", str73, "[8, 0, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 1, 7]" + "'", str74, "[8, 1, 7]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 2, 7]" + "'", str75, "[8, 2, 7]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 3, 7]" + "'", str76, "[8, 3, 7]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 4, 7]" + "'", str77, "[8, 4, 7]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 5, 7]" + "'", str78, "[8, 5, 7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 6, 7]" + "'", str79, "[8, 6, 7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 7, 7]" + "'", str80, "[8, 7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8, 7]" + "'", str81, "[8, 8, 7]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 9, 7]" + "'", str82, "[8, 9, 7]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[9, 0, 8]" + "'", str83, "[9, 0, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 1, 8]" + "'", str84, "[9, 1, 8]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 2, 8]" + "'", str85, "[9, 2, 8]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[9, 3, 8]" + "'", str86, "[9, 3, 8]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test6125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6125");
        int[] intArray2 = new int[] { '4', (short) 0 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass4 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[53, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 1]" + "'", str3, "[53, 1]");
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test6126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6126");
        int[] intArray3 = new int[] { 1, (byte) 0, (byte) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass71 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[7, 7, 6]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 5]" + "'", str60, "[6, 7, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 5]" + "'", str61, "[6, 8, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 5]" + "'", str62, "[6, 9, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 6]" + "'", str63, "[7, 0, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 6]" + "'", str64, "[7, 1, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 6]" + "'", str65, "[7, 2, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 6]" + "'", str66, "[7, 3, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 6]" + "'", str67, "[7, 4, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 5, 6]" + "'", str68, "[7, 5, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 6, 6]" + "'", str69, "[7, 6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7, 6]" + "'", str70, "[7, 7, 6]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test6127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6127");
        int[] intArray3 = new int[] { 1, (byte) 0, (byte) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass68 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[7, 4, 6]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 5]" + "'", str60, "[6, 7, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 5]" + "'", str61, "[6, 8, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 5]" + "'", str62, "[6, 9, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 6]" + "'", str63, "[7, 0, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 6]" + "'", str64, "[7, 1, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 6]" + "'", str65, "[7, 2, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 6]" + "'", str66, "[7, 3, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 6]" + "'", str67, "[7, 4, 6]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test6128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6128");
        int[] intArray4 = new int[] { (byte) 1, (byte) 100, (short) 100, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass68 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 163, 163, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 101, 101, 0]" + "'", str5, "[1, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 102, 102, 0]" + "'", str6, "[1, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 103, 103, 0]" + "'", str7, "[1, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 104, 104, 0]" + "'", str8, "[1, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 105, 105, 0]" + "'", str9, "[1, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 106, 106, 0]" + "'", str10, "[1, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 107, 107, 0]" + "'", str11, "[1, 107, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 108, 108, 0]" + "'", str12, "[1, 108, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 109, 109, 0]" + "'", str13, "[1, 109, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 110, 110, 0]" + "'", str14, "[1, 110, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 111, 111, 0]" + "'", str15, "[1, 111, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 112, 112, 0]" + "'", str16, "[1, 112, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 113, 113, 0]" + "'", str17, "[1, 113, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 114, 114, 0]" + "'", str18, "[1, 114, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 115, 115, 0]" + "'", str19, "[1, 115, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 116, 116, 0]" + "'", str20, "[1, 116, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 117, 117, 0]" + "'", str21, "[1, 117, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 118, 118, 0]" + "'", str22, "[1, 118, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 119, 119, 0]" + "'", str23, "[1, 119, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 120, 120, 0]" + "'", str24, "[1, 120, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 121, 121, 0]" + "'", str25, "[1, 121, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 122, 122, 0]" + "'", str26, "[1, 122, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 123, 123, 0]" + "'", str27, "[1, 123, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 124, 124, 0]" + "'", str28, "[1, 124, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 125, 125, 0]" + "'", str29, "[1, 125, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 126, 126, 0]" + "'", str30, "[1, 126, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 127, 127, 0]" + "'", str31, "[1, 127, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 128, 128, 0]" + "'", str32, "[1, 128, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 129, 129, 0]" + "'", str33, "[1, 129, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 130, 130, 0]" + "'", str34, "[1, 130, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 131, 131, 0]" + "'", str35, "[1, 131, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 132, 132, 0]" + "'", str36, "[1, 132, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 133, 133, 0]" + "'", str37, "[1, 133, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 134, 134, 0]" + "'", str38, "[1, 134, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 135, 135, 0]" + "'", str39, "[1, 135, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 136, 136, 0]" + "'", str40, "[1, 136, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 137, 137, 0]" + "'", str41, "[1, 137, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 138, 138, 0]" + "'", str42, "[1, 138, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 139, 139, 0]" + "'", str43, "[1, 139, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 140, 140, 0]" + "'", str44, "[1, 140, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 141, 141, 0]" + "'", str45, "[1, 141, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 142, 142, 0]" + "'", str46, "[1, 142, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 143, 143, 0]" + "'", str47, "[1, 143, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 144, 144, 0]" + "'", str48, "[1, 144, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 145, 145, 0]" + "'", str49, "[1, 145, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 146, 146, 0]" + "'", str50, "[1, 146, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 147, 147, 0]" + "'", str51, "[1, 147, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 148, 148, 0]" + "'", str52, "[1, 148, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 149, 149, 0]" + "'", str53, "[1, 149, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 150, 150, 0]" + "'", str54, "[1, 150, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 151, 151, 0]" + "'", str55, "[1, 151, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 152, 152, 0]" + "'", str56, "[1, 152, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 153, 153, 0]" + "'", str57, "[1, 153, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 154, 154, 0]" + "'", str58, "[1, 154, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 155, 155, 0]" + "'", str59, "[1, 155, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 156, 156, 0]" + "'", str60, "[1, 156, 156, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 157, 157, 0]" + "'", str61, "[1, 157, 157, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 158, 158, 0]" + "'", str62, "[1, 158, 158, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 159, 159, 0]" + "'", str63, "[1, 159, 159, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 160, 160, 0]" + "'", str64, "[1, 160, 160, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 161, 161, 0]" + "'", str65, "[1, 161, 161, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 162, 162, 0]" + "'", str66, "[1, 162, 162, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 163, 163, 0]" + "'", str67, "[1, 163, 163, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test6129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6129");
        int[] intArray4 = new int[] { (byte) -1, 0, (byte) -1, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass29 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 0, 52]" + "'", str5, "[-1, 1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 1, 52]" + "'", str6, "[-1, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 3, 2, 52]" + "'", str7, "[-1, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 4, 3, 52]" + "'", str8, "[-1, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 5, 4, 52]" + "'", str9, "[-1, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 6, 5, 52]" + "'", str10, "[-1, 6, 5, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 7, 6, 52]" + "'", str11, "[-1, 7, 6, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 8, 7, 52]" + "'", str12, "[-1, 8, 7, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 9, 8, 52]" + "'", str13, "[-1, 9, 8, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 9, 52]" + "'", str14, "[-1, 10, 9, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 0, 0, 53]" + "'", str15, "[0, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 1, 53]" + "'", str16, "[0, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 53]" + "'", str17, "[0, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 3, 3, 53]" + "'", str18, "[0, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 4, 4, 53]" + "'", str19, "[0, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 5, 5, 53]" + "'", str20, "[0, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 6, 6, 53]" + "'", str21, "[0, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 7, 7, 53]" + "'", str22, "[0, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 8, 8, 53]" + "'", str23, "[0, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 9, 9, 53]" + "'", str24, "[0, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 0, 54]" + "'", str25, "[1, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 1, 54]" + "'", str26, "[1, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 2, 54]" + "'", str27, "[1, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 3, 54]" + "'", str28, "[1, 3, 3, 54]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test6130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6130");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass92 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 186, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 0, 1]" + "'", str29, "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 0, 1]" + "'", str30, "[1, 0, 125, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 0, 1]" + "'", str31, "[1, 0, 126, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 0, 1]" + "'", str32, "[1, 0, 127, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 0, 1]" + "'", str33, "[1, 0, 128, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 0, 1]" + "'", str34, "[1, 0, 129, 0, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 0, 1]" + "'", str35, "[1, 0, 130, 0, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 0, 1]" + "'", str36, "[1, 0, 131, 0, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 0, 1]" + "'", str37, "[1, 0, 132, 0, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 0, 1]" + "'", str38, "[1, 0, 133, 0, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 0, 1]" + "'", str39, "[1, 0, 134, 0, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 0, 1]" + "'", str40, "[1, 0, 135, 0, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 0, 1]" + "'", str41, "[1, 0, 136, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 0, 1]" + "'", str42, "[1, 0, 137, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 0, 1]" + "'", str43, "[1, 0, 138, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 0, 1]" + "'", str44, "[1, 0, 139, 0, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 0, 1]" + "'", str45, "[1, 0, 140, 0, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 0, 1]" + "'", str46, "[1, 0, 141, 0, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 0, 1]" + "'", str47, "[1, 0, 142, 0, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 0, 1]" + "'", str48, "[1, 0, 143, 0, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 0, 1]" + "'", str49, "[1, 0, 144, 0, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 0, 1]" + "'", str50, "[1, 0, 145, 0, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 0, 1]" + "'", str51, "[1, 0, 146, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 0, 1]" + "'", str52, "[1, 0, 147, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 0, 1]" + "'", str53, "[1, 0, 148, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 0, 1]" + "'", str54, "[1, 0, 149, 0, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 0, 1]" + "'", str55, "[1, 0, 150, 0, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 0, 1]" + "'", str56, "[1, 0, 151, 0, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 0, 1]" + "'", str57, "[1, 0, 152, 0, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 0, 1]" + "'", str58, "[1, 0, 153, 0, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 0, 1]" + "'", str59, "[1, 0, 154, 0, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 0, 1]" + "'", str60, "[1, 0, 155, 0, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 0, 1]" + "'", str61, "[1, 0, 156, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 0, 1]" + "'", str62, "[1, 0, 157, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 0, 1]" + "'", str63, "[1, 0, 158, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 0, 1]" + "'", str64, "[1, 0, 159, 0, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 0, 1]" + "'", str65, "[1, 0, 160, 0, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 0, 1]" + "'", str66, "[1, 0, 161, 0, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 0, 1]" + "'", str67, "[1, 0, 162, 0, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 0, 1]" + "'", str68, "[1, 0, 163, 0, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 0, 1]" + "'", str69, "[1, 0, 164, 0, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 0, 1]" + "'", str70, "[1, 0, 165, 0, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 0, 1]" + "'", str71, "[1, 0, 166, 0, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 0, 1]" + "'", str72, "[1, 0, 167, 0, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 0, 1]" + "'", str73, "[1, 0, 168, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 0, 1]" + "'", str74, "[1, 0, 169, 0, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 0, 1]" + "'", str75, "[1, 0, 170, 0, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 0, 1]" + "'", str76, "[1, 0, 171, 0, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 0, 172, 0, 1]" + "'", str77, "[1, 0, 172, 0, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 0, 173, 0, 1]" + "'", str78, "[1, 0, 173, 0, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 0, 174, 0, 1]" + "'", str79, "[1, 0, 174, 0, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 0, 175, 0, 1]" + "'", str80, "[1, 0, 175, 0, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 176, 0, 1]" + "'", str81, "[1, 0, 176, 0, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 0, 177, 0, 1]" + "'", str82, "[1, 0, 177, 0, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 178, 0, 1]" + "'", str83, "[1, 0, 178, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 0, 179, 0, 1]" + "'", str84, "[1, 0, 179, 0, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[1, 0, 180, 0, 1]" + "'", str85, "[1, 0, 180, 0, 1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[1, 0, 181, 0, 1]" + "'", str86, "[1, 0, 181, 0, 1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[1, 0, 182, 0, 1]" + "'", str87, "[1, 0, 182, 0, 1]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[1, 0, 183, 0, 1]" + "'", str88, "[1, 0, 183, 0, 1]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[1, 0, 184, 0, 1]" + "'", str89, "[1, 0, 184, 0, 1]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[1, 0, 185, 0, 1]" + "'", str90, "[1, 0, 185, 0, 1]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[1, 0, 186, 0, 1]" + "'", str91, "[1, 0, 186, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test6131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6131");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass76 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 170, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 52, 0]" + "'", str29, "[1, 0, 124, 52, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 52, 0]" + "'", str30, "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 52, 0]" + "'", str31, "[1, 0, 126, 52, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 52, 0]" + "'", str32, "[1, 0, 127, 52, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 52, 0]" + "'", str33, "[1, 0, 128, 52, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 52, 0]" + "'", str34, "[1, 0, 129, 52, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 52, 0]" + "'", str35, "[1, 0, 130, 52, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 52, 0]" + "'", str36, "[1, 0, 131, 52, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 52, 0]" + "'", str37, "[1, 0, 132, 52, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 52, 0]" + "'", str38, "[1, 0, 133, 52, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 52, 0]" + "'", str39, "[1, 0, 134, 52, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 52, 0]" + "'", str40, "[1, 0, 135, 52, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 52, 0]" + "'", str41, "[1, 0, 136, 52, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 52, 0]" + "'", str42, "[1, 0, 137, 52, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 52, 0]" + "'", str43, "[1, 0, 138, 52, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 52, 0]" + "'", str44, "[1, 0, 139, 52, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 52, 0]" + "'", str45, "[1, 0, 140, 52, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 52, 0]" + "'", str46, "[1, 0, 141, 52, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 52, 0]" + "'", str47, "[1, 0, 142, 52, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 52, 0]" + "'", str48, "[1, 0, 143, 52, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 52, 0]" + "'", str49, "[1, 0, 144, 52, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 52, 0]" + "'", str50, "[1, 0, 145, 52, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 52, 0]" + "'", str51, "[1, 0, 146, 52, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 52, 0]" + "'", str52, "[1, 0, 147, 52, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 52, 0]" + "'", str53, "[1, 0, 148, 52, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 52, 0]" + "'", str54, "[1, 0, 149, 52, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 52, 0]" + "'", str55, "[1, 0, 150, 52, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 52, 0]" + "'", str56, "[1, 0, 151, 52, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 52, 0]" + "'", str57, "[1, 0, 152, 52, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 52, 0]" + "'", str58, "[1, 0, 153, 52, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 52, 0]" + "'", str59, "[1, 0, 154, 52, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 52, 0]" + "'", str60, "[1, 0, 155, 52, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 52, 0]" + "'", str61, "[1, 0, 156, 52, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 52, 0]" + "'", str62, "[1, 0, 157, 52, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 52, 0]" + "'", str63, "[1, 0, 158, 52, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 52, 0]" + "'", str64, "[1, 0, 159, 52, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 52, 0]" + "'", str65, "[1, 0, 160, 52, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 52, 0]" + "'", str66, "[1, 0, 161, 52, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 52, 0]" + "'", str67, "[1, 0, 162, 52, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 52, 0]" + "'", str68, "[1, 0, 163, 52, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 52, 0]" + "'", str69, "[1, 0, 164, 52, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 52, 0]" + "'", str70, "[1, 0, 165, 52, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 52, 0]" + "'", str71, "[1, 0, 166, 52, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 52, 0]" + "'", str72, "[1, 0, 167, 52, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 52, 0]" + "'", str73, "[1, 0, 168, 52, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 52, 0]" + "'", str74, "[1, 0, 169, 52, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 52, 0]" + "'", str75, "[1, 0, 170, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test6132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6132");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass79 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 173, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 52, 0]" + "'", str29, "[1, 0, 124, 52, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 52, 0]" + "'", str30, "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 52, 0]" + "'", str31, "[1, 0, 126, 52, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 52, 0]" + "'", str32, "[1, 0, 127, 52, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 52, 0]" + "'", str33, "[1, 0, 128, 52, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 52, 0]" + "'", str34, "[1, 0, 129, 52, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 52, 0]" + "'", str35, "[1, 0, 130, 52, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 52, 0]" + "'", str36, "[1, 0, 131, 52, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 52, 0]" + "'", str37, "[1, 0, 132, 52, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 52, 0]" + "'", str38, "[1, 0, 133, 52, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 52, 0]" + "'", str39, "[1, 0, 134, 52, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 52, 0]" + "'", str40, "[1, 0, 135, 52, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 52, 0]" + "'", str41, "[1, 0, 136, 52, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 52, 0]" + "'", str42, "[1, 0, 137, 52, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 52, 0]" + "'", str43, "[1, 0, 138, 52, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 52, 0]" + "'", str44, "[1, 0, 139, 52, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 52, 0]" + "'", str45, "[1, 0, 140, 52, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 52, 0]" + "'", str46, "[1, 0, 141, 52, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 52, 0]" + "'", str47, "[1, 0, 142, 52, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 52, 0]" + "'", str48, "[1, 0, 143, 52, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 52, 0]" + "'", str49, "[1, 0, 144, 52, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 52, 0]" + "'", str50, "[1, 0, 145, 52, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 52, 0]" + "'", str51, "[1, 0, 146, 52, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 52, 0]" + "'", str52, "[1, 0, 147, 52, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 52, 0]" + "'", str53, "[1, 0, 148, 52, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 52, 0]" + "'", str54, "[1, 0, 149, 52, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 52, 0]" + "'", str55, "[1, 0, 150, 52, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 52, 0]" + "'", str56, "[1, 0, 151, 52, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 52, 0]" + "'", str57, "[1, 0, 152, 52, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 52, 0]" + "'", str58, "[1, 0, 153, 52, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 52, 0]" + "'", str59, "[1, 0, 154, 52, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 52, 0]" + "'", str60, "[1, 0, 155, 52, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 52, 0]" + "'", str61, "[1, 0, 156, 52, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 52, 0]" + "'", str62, "[1, 0, 157, 52, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 52, 0]" + "'", str63, "[1, 0, 158, 52, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 52, 0]" + "'", str64, "[1, 0, 159, 52, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 52, 0]" + "'", str65, "[1, 0, 160, 52, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 52, 0]" + "'", str66, "[1, 0, 161, 52, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 52, 0]" + "'", str67, "[1, 0, 162, 52, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 52, 0]" + "'", str68, "[1, 0, 163, 52, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 52, 0]" + "'", str69, "[1, 0, 164, 52, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 52, 0]" + "'", str70, "[1, 0, 165, 52, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 52, 0]" + "'", str71, "[1, 0, 166, 52, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 52, 0]" + "'", str72, "[1, 0, 167, 52, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 52, 0]" + "'", str73, "[1, 0, 168, 52, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 52, 0]" + "'", str74, "[1, 0, 169, 52, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 52, 0]" + "'", str75, "[1, 0, 170, 52, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 52, 0]" + "'", str76, "[1, 0, 171, 52, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 0, 172, 52, 0]" + "'", str77, "[1, 0, 172, 52, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 0, 173, 52, 0]" + "'", str78, "[1, 0, 173, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test6133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6133");
        int[] intArray6 = new int[] { ' ', (byte) 0, ' ', (byte) 0, (-1), (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass85 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 7, 8, 8, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 33, 1, -1, 1]" + "'", str7, "[32, 0, 33, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 34, 2, -1, 1]" + "'", str8, "[32, 0, 34, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 35, 3, -1, 1]" + "'", str9, "[32, 0, 35, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 36, 4, -1, 1]" + "'", str10, "[32, 0, 36, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 37, 5, -1, 1]" + "'", str11, "[32, 0, 37, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 38, 6, -1, 1]" + "'", str12, "[32, 0, 38, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 39, 7, -1, 1]" + "'", str13, "[32, 0, 39, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 0, 40, 8, -1, 1]" + "'", str14, "[32, 0, 40, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 0, 41, 9, -1, 1]" + "'", str15, "[32, 0, 41, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 0, 0, 0, 1]" + "'", str16, "[32, 1, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 1, 1, 0, 1]" + "'", str17, "[32, 1, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 2, 2, 0, 1]" + "'", str18, "[32, 1, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 3, 3, 0, 1]" + "'", str19, "[32, 1, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 4, 4, 0, 1]" + "'", str20, "[32, 1, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 5, 5, 0, 1]" + "'", str21, "[32, 1, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 6, 6, 0, 1]" + "'", str22, "[32, 1, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 7, 7, 0, 1]" + "'", str23, "[32, 1, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 1, 8, 8, 0, 1]" + "'", str24, "[32, 1, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 1, 9, 9, 0, 1]" + "'", str25, "[32, 1, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 2, 0, 0, 1, 1]" + "'", str26, "[32, 2, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 2, 1, 1, 1, 1]" + "'", str27, "[32, 2, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 2, 2, 2, 1, 1]" + "'", str28, "[32, 2, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 2, 3, 3, 1, 1]" + "'", str29, "[32, 2, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 2, 4, 4, 1, 1]" + "'", str30, "[32, 2, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 2, 5, 5, 1, 1]" + "'", str31, "[32, 2, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 2, 6, 6, 1, 1]" + "'", str32, "[32, 2, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 2, 7, 7, 1, 1]" + "'", str33, "[32, 2, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 2, 8, 8, 1, 1]" + "'", str34, "[32, 2, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 2, 9, 9, 1, 1]" + "'", str35, "[32, 2, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 3, 0, 0, 2, 1]" + "'", str36, "[32, 3, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 3, 1, 1, 2, 1]" + "'", str37, "[32, 3, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 3, 2, 2, 2, 1]" + "'", str38, "[32, 3, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 3, 3, 3, 2, 1]" + "'", str39, "[32, 3, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 3, 4, 4, 2, 1]" + "'", str40, "[32, 3, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[32, 3, 5, 5, 2, 1]" + "'", str41, "[32, 3, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[32, 3, 6, 6, 2, 1]" + "'", str42, "[32, 3, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[32, 3, 7, 7, 2, 1]" + "'", str43, "[32, 3, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[32, 3, 8, 8, 2, 1]" + "'", str44, "[32, 3, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[32, 3, 9, 9, 2, 1]" + "'", str45, "[32, 3, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[32, 4, 0, 0, 3, 1]" + "'", str46, "[32, 4, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[32, 4, 1, 1, 3, 1]" + "'", str47, "[32, 4, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[32, 4, 2, 2, 3, 1]" + "'", str48, "[32, 4, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[32, 4, 3, 3, 3, 1]" + "'", str49, "[32, 4, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[32, 4, 4, 4, 3, 1]" + "'", str50, "[32, 4, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[32, 4, 5, 5, 3, 1]" + "'", str51, "[32, 4, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[32, 4, 6, 6, 3, 1]" + "'", str52, "[32, 4, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[32, 4, 7, 7, 3, 1]" + "'", str53, "[32, 4, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[32, 4, 8, 8, 3, 1]" + "'", str54, "[32, 4, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[32, 4, 9, 9, 3, 1]" + "'", str55, "[32, 4, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[32, 5, 0, 0, 4, 1]" + "'", str56, "[32, 5, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[32, 5, 1, 1, 4, 1]" + "'", str57, "[32, 5, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[32, 5, 2, 2, 4, 1]" + "'", str58, "[32, 5, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[32, 5, 3, 3, 4, 1]" + "'", str59, "[32, 5, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[32, 5, 4, 4, 4, 1]" + "'", str60, "[32, 5, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[32, 5, 5, 5, 4, 1]" + "'", str61, "[32, 5, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[32, 5, 6, 6, 4, 1]" + "'", str62, "[32, 5, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[32, 5, 7, 7, 4, 1]" + "'", str63, "[32, 5, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[32, 5, 8, 8, 4, 1]" + "'", str64, "[32, 5, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[32, 5, 9, 9, 4, 1]" + "'", str65, "[32, 5, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[32, 6, 0, 0, 5, 1]" + "'", str66, "[32, 6, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[32, 6, 1, 1, 5, 1]" + "'", str67, "[32, 6, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[32, 6, 2, 2, 5, 1]" + "'", str68, "[32, 6, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[32, 6, 3, 3, 5, 1]" + "'", str69, "[32, 6, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[32, 6, 4, 4, 5, 1]" + "'", str70, "[32, 6, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[32, 6, 5, 5, 5, 1]" + "'", str71, "[32, 6, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[32, 6, 6, 6, 5, 1]" + "'", str72, "[32, 6, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[32, 6, 7, 7, 5, 1]" + "'", str73, "[32, 6, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[32, 6, 8, 8, 5, 1]" + "'", str74, "[32, 6, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[32, 6, 9, 9, 5, 1]" + "'", str75, "[32, 6, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[32, 7, 0, 0, 6, 1]" + "'", str76, "[32, 7, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[32, 7, 1, 1, 6, 1]" + "'", str77, "[32, 7, 1, 1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[32, 7, 2, 2, 6, 1]" + "'", str78, "[32, 7, 2, 2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[32, 7, 3, 3, 6, 1]" + "'", str79, "[32, 7, 3, 3, 6, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[32, 7, 4, 4, 6, 1]" + "'", str80, "[32, 7, 4, 4, 6, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[32, 7, 5, 5, 6, 1]" + "'", str81, "[32, 7, 5, 5, 6, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[32, 7, 6, 6, 6, 1]" + "'", str82, "[32, 7, 6, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[32, 7, 7, 7, 6, 1]" + "'", str83, "[32, 7, 7, 7, 6, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[32, 7, 8, 8, 6, 1]" + "'", str84, "[32, 7, 8, 8, 6, 1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test6134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6134");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass97 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[5, 5]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 3]" + "'", str34, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 4]" + "'", str35, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5, 5]" + "'", str36, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6, 6]" + "'", str37, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7, 7]" + "'", str38, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8, 8]" + "'", str39, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9, 9]" + "'", str40, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 2]" + "'", str43, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 3]" + "'", str44, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 4]" + "'", str45, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 5]" + "'", str46, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6, 6]" + "'", str47, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7, 7]" + "'", str48, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8, 8]" + "'", str49, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9, 9]" + "'", str50, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2, 2]" + "'", str53, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3, 3]" + "'", str54, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 4]" + "'", str55, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 5]" + "'", str56, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 6]" + "'", str57, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7, 7]" + "'", str58, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8, 8]" + "'", str59, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9, 9]" + "'", str60, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 1]" + "'", str61, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[2, 2]" + "'", str63, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[3, 3]" + "'", str64, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[4, 4]" + "'", str65, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 5]" + "'", str66, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 6]" + "'", str67, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 7]" + "'", str68, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[8, 8]" + "'", str69, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[9, 9]" + "'", str70, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 1]" + "'", str71, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[2, 2]" + "'", str73, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[3, 3]" + "'", str74, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[4, 4]" + "'", str75, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[5, 5]" + "'", str76, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 6]" + "'", str77, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7, 7]" + "'", str78, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 8]" + "'", str79, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[9, 9]" + "'", str80, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 1]" + "'", str81, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1]" + "'", str82, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[2, 2]" + "'", str83, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[3, 3]" + "'", str84, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[4, 4]" + "'", str85, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[5, 5]" + "'", str86, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[6, 6]" + "'", str87, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[7, 7]" + "'", str88, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[8, 8]" + "'", str89, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[9, 9]" + "'", str90, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[1, 0, 1]" + "'", str91, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 1]" + "'", str92, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[2, 2]" + "'", str93, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[3, 3]" + "'", str94, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[4, 4]" + "'", str95, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[5, 5]" + "'", str96, "[5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test6135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6135");
        int[] intArray2 = new int[] { (byte) -1, (short) 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass30 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[8, 8]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 2]" + "'", str3, "[0, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 3]" + "'", str4, "[1, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 4]" + "'", str5, "[2, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 5]" + "'", str6, "[3, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 6]" + "'", str7, "[4, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 7]" + "'", str8, "[5, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 8]" + "'", str9, "[6, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 9]" + "'", str10, "[7, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test6136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6136");
        int[] intArray5 = new int[] { ' ', ' ', 1, (byte) 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass15 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 33, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 32, 2, 0, 1]" + "'", str6, "[32, 32, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 32, 3, 0, 1]" + "'", str7, "[32, 32, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 32, 4, 0, 1]" + "'", str8, "[32, 32, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 32, 5, 0, 1]" + "'", str9, "[32, 32, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 32, 6, 0, 1]" + "'", str10, "[32, 32, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 32, 7, 0, 1]" + "'", str11, "[32, 32, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 32, 8, 0, 1]" + "'", str12, "[32, 32, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 32, 9, 0, 1]" + "'", str13, "[32, 32, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 33, 0, 1, 1]" + "'", str14, "[32, 33, 0, 1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test6137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6137");
        int[] intArray5 = new int[] { (-1), '4', '4', (byte) -1, (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass15 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 52, 61, -1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 52, 53, -1, 0]" + "'", str6, "[-1, 52, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 52, 54, -1, 0]" + "'", str7, "[-1, 52, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 52, 55, -1, 0]" + "'", str8, "[-1, 52, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 52, 56, -1, 0]" + "'", str9, "[-1, 52, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 52, 57, -1, 0]" + "'", str10, "[-1, 52, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 52, 58, -1, 0]" + "'", str11, "[-1, 52, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 52, 59, -1, 0]" + "'", str12, "[-1, 52, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 52, 60, -1, 0]" + "'", str13, "[-1, 52, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 52, 61, -1, 0]" + "'", str14, "[-1, 52, 61, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test6138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6138");
        int[] intArray3 = new int[] { (byte) 100, (-1), ' ' };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass51 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[104, 6, 36]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 0, 32]" + "'", str4, "[100, 0, 32]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 1, 32]" + "'", str5, "[100, 1, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 2, 32]" + "'", str6, "[100, 2, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 3, 32]" + "'", str7, "[100, 3, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 4, 32]" + "'", str8, "[100, 4, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 5, 32]" + "'", str9, "[100, 5, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 6, 32]" + "'", str10, "[100, 6, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 7, 32]" + "'", str11, "[100, 7, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 8, 32]" + "'", str12, "[100, 8, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 9, 32]" + "'", str13, "[100, 9, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 0, 33]" + "'", str14, "[101, 0, 33]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 1, 33]" + "'", str15, "[101, 1, 33]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 2, 33]" + "'", str16, "[101, 2, 33]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 3, 33]" + "'", str17, "[101, 3, 33]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 4, 33]" + "'", str18, "[101, 4, 33]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 5, 33]" + "'", str19, "[101, 5, 33]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 6, 33]" + "'", str20, "[101, 6, 33]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 7, 33]" + "'", str21, "[101, 7, 33]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[101, 8, 33]" + "'", str22, "[101, 8, 33]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[101, 9, 33]" + "'", str23, "[101, 9, 33]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 0, 34]" + "'", str24, "[102, 0, 34]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 1, 34]" + "'", str25, "[102, 1, 34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 2, 34]" + "'", str26, "[102, 2, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 3, 34]" + "'", str27, "[102, 3, 34]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 4, 34]" + "'", str28, "[102, 4, 34]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[102, 5, 34]" + "'", str29, "[102, 5, 34]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[102, 6, 34]" + "'", str30, "[102, 6, 34]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[102, 7, 34]" + "'", str31, "[102, 7, 34]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[102, 8, 34]" + "'", str32, "[102, 8, 34]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[102, 9, 34]" + "'", str33, "[102, 9, 34]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[103, 0, 35]" + "'", str34, "[103, 0, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[103, 1, 35]" + "'", str35, "[103, 1, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[103, 2, 35]" + "'", str36, "[103, 2, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[103, 3, 35]" + "'", str37, "[103, 3, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[103, 4, 35]" + "'", str38, "[103, 4, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[103, 5, 35]" + "'", str39, "[103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[103, 6, 35]" + "'", str40, "[103, 6, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[103, 7, 35]" + "'", str41, "[103, 7, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[103, 8, 35]" + "'", str42, "[103, 8, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[103, 9, 35]" + "'", str43, "[103, 9, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[104, 0, 36]" + "'", str44, "[104, 0, 36]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[104, 1, 36]" + "'", str45, "[104, 1, 36]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[104, 2, 36]" + "'", str46, "[104, 2, 36]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[104, 3, 36]" + "'", str47, "[104, 3, 36]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[104, 4, 36]" + "'", str48, "[104, 4, 36]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[104, 5, 36]" + "'", str49, "[104, 5, 36]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[104, 6, 36]" + "'", str50, "[104, 6, 36]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test6139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6139");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass93 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 187, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 0, 1]" + "'", str29, "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 0, 1]" + "'", str30, "[1, 0, 125, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 0, 1]" + "'", str31, "[1, 0, 126, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 0, 1]" + "'", str32, "[1, 0, 127, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 0, 1]" + "'", str33, "[1, 0, 128, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 0, 1]" + "'", str34, "[1, 0, 129, 0, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 0, 1]" + "'", str35, "[1, 0, 130, 0, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 0, 1]" + "'", str36, "[1, 0, 131, 0, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 0, 1]" + "'", str37, "[1, 0, 132, 0, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 0, 1]" + "'", str38, "[1, 0, 133, 0, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 0, 1]" + "'", str39, "[1, 0, 134, 0, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 0, 1]" + "'", str40, "[1, 0, 135, 0, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 0, 1]" + "'", str41, "[1, 0, 136, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 0, 1]" + "'", str42, "[1, 0, 137, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 0, 1]" + "'", str43, "[1, 0, 138, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 0, 1]" + "'", str44, "[1, 0, 139, 0, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 0, 1]" + "'", str45, "[1, 0, 140, 0, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 0, 1]" + "'", str46, "[1, 0, 141, 0, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 0, 1]" + "'", str47, "[1, 0, 142, 0, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 0, 1]" + "'", str48, "[1, 0, 143, 0, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 0, 1]" + "'", str49, "[1, 0, 144, 0, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 0, 1]" + "'", str50, "[1, 0, 145, 0, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 0, 1]" + "'", str51, "[1, 0, 146, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 0, 1]" + "'", str52, "[1, 0, 147, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 0, 1]" + "'", str53, "[1, 0, 148, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 0, 1]" + "'", str54, "[1, 0, 149, 0, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 0, 1]" + "'", str55, "[1, 0, 150, 0, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 0, 1]" + "'", str56, "[1, 0, 151, 0, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 0, 1]" + "'", str57, "[1, 0, 152, 0, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 0, 1]" + "'", str58, "[1, 0, 153, 0, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 0, 1]" + "'", str59, "[1, 0, 154, 0, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 0, 1]" + "'", str60, "[1, 0, 155, 0, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 0, 1]" + "'", str61, "[1, 0, 156, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 0, 1]" + "'", str62, "[1, 0, 157, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 0, 1]" + "'", str63, "[1, 0, 158, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 0, 1]" + "'", str64, "[1, 0, 159, 0, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 0, 1]" + "'", str65, "[1, 0, 160, 0, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 0, 1]" + "'", str66, "[1, 0, 161, 0, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 0, 1]" + "'", str67, "[1, 0, 162, 0, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 0, 1]" + "'", str68, "[1, 0, 163, 0, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 0, 1]" + "'", str69, "[1, 0, 164, 0, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 0, 1]" + "'", str70, "[1, 0, 165, 0, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 0, 1]" + "'", str71, "[1, 0, 166, 0, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 0, 1]" + "'", str72, "[1, 0, 167, 0, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 0, 1]" + "'", str73, "[1, 0, 168, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 0, 1]" + "'", str74, "[1, 0, 169, 0, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 0, 1]" + "'", str75, "[1, 0, 170, 0, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 0, 1]" + "'", str76, "[1, 0, 171, 0, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 0, 172, 0, 1]" + "'", str77, "[1, 0, 172, 0, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 0, 173, 0, 1]" + "'", str78, "[1, 0, 173, 0, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 0, 174, 0, 1]" + "'", str79, "[1, 0, 174, 0, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 0, 175, 0, 1]" + "'", str80, "[1, 0, 175, 0, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 176, 0, 1]" + "'", str81, "[1, 0, 176, 0, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 0, 177, 0, 1]" + "'", str82, "[1, 0, 177, 0, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 178, 0, 1]" + "'", str83, "[1, 0, 178, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 0, 179, 0, 1]" + "'", str84, "[1, 0, 179, 0, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[1, 0, 180, 0, 1]" + "'", str85, "[1, 0, 180, 0, 1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[1, 0, 181, 0, 1]" + "'", str86, "[1, 0, 181, 0, 1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[1, 0, 182, 0, 1]" + "'", str87, "[1, 0, 182, 0, 1]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[1, 0, 183, 0, 1]" + "'", str88, "[1, 0, 183, 0, 1]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[1, 0, 184, 0, 1]" + "'", str89, "[1, 0, 184, 0, 1]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[1, 0, 185, 0, 1]" + "'", str90, "[1, 0, 185, 0, 1]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[1, 0, 186, 0, 1]" + "'", str91, "[1, 0, 186, 0, 1]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 0, 187, 0, 1]" + "'", str92, "[1, 0, 187, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test6140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6140");
        int[] intArray6 = new int[] { 0, (short) -1, 'a', '#', (byte) 0, 100 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass65 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 155, 93, 0, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 98, 36, 0, 100]" + "'", str7, "[0, -1, 98, 36, 0, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 99, 37, 0, 100]" + "'", str8, "[0, -1, 99, 37, 0, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 100, 38, 0, 100]" + "'", str9, "[0, -1, 100, 38, 0, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 101, 39, 0, 100]" + "'", str10, "[0, -1, 101, 39, 0, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 102, 40, 0, 100]" + "'", str11, "[0, -1, 102, 40, 0, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 103, 41, 0, 100]" + "'", str12, "[0, -1, 103, 41, 0, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 104, 42, 0, 100]" + "'", str13, "[0, -1, 104, 42, 0, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 105, 43, 0, 100]" + "'", str14, "[0, -1, 105, 43, 0, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 106, 44, 0, 100]" + "'", str15, "[0, -1, 106, 44, 0, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 107, 45, 0, 100]" + "'", str16, "[0, -1, 107, 45, 0, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 108, 46, 0, 100]" + "'", str17, "[0, -1, 108, 46, 0, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 109, 47, 0, 100]" + "'", str18, "[0, -1, 109, 47, 0, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 110, 48, 0, 100]" + "'", str19, "[0, -1, 110, 48, 0, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 111, 49, 0, 100]" + "'", str20, "[0, -1, 111, 49, 0, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 112, 50, 0, 100]" + "'", str21, "[0, -1, 112, 50, 0, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 113, 51, 0, 100]" + "'", str22, "[0, -1, 113, 51, 0, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 114, 52, 0, 100]" + "'", str23, "[0, -1, 114, 52, 0, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 115, 53, 0, 100]" + "'", str24, "[0, -1, 115, 53, 0, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 116, 54, 0, 100]" + "'", str25, "[0, -1, 116, 54, 0, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 117, 55, 0, 100]" + "'", str26, "[0, -1, 117, 55, 0, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 118, 56, 0, 100]" + "'", str27, "[0, -1, 118, 56, 0, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 119, 57, 0, 100]" + "'", str28, "[0, -1, 119, 57, 0, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 120, 58, 0, 100]" + "'", str29, "[0, -1, 120, 58, 0, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 121, 59, 0, 100]" + "'", str30, "[0, -1, 121, 59, 0, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 122, 60, 0, 100]" + "'", str31, "[0, -1, 122, 60, 0, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 123, 61, 0, 100]" + "'", str32, "[0, -1, 123, 61, 0, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 124, 62, 0, 100]" + "'", str33, "[0, -1, 124, 62, 0, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 125, 63, 0, 100]" + "'", str34, "[0, -1, 125, 63, 0, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 126, 64, 0, 100]" + "'", str35, "[0, -1, 126, 64, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 127, 65, 0, 100]" + "'", str36, "[0, -1, 127, 65, 0, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 128, 66, 0, 100]" + "'", str37, "[0, -1, 128, 66, 0, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 129, 67, 0, 100]" + "'", str38, "[0, -1, 129, 67, 0, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 130, 68, 0, 100]" + "'", str39, "[0, -1, 130, 68, 0, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 131, 69, 0, 100]" + "'", str40, "[0, -1, 131, 69, 0, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 132, 70, 0, 100]" + "'", str41, "[0, -1, 132, 70, 0, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 133, 71, 0, 100]" + "'", str42, "[0, -1, 133, 71, 0, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 134, 72, 0, 100]" + "'", str43, "[0, -1, 134, 72, 0, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, -1, 135, 73, 0, 100]" + "'", str44, "[0, -1, 135, 73, 0, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, -1, 136, 74, 0, 100]" + "'", str45, "[0, -1, 136, 74, 0, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, -1, 137, 75, 0, 100]" + "'", str46, "[0, -1, 137, 75, 0, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, -1, 138, 76, 0, 100]" + "'", str47, "[0, -1, 138, 76, 0, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, -1, 139, 77, 0, 100]" + "'", str48, "[0, -1, 139, 77, 0, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, -1, 140, 78, 0, 100]" + "'", str49, "[0, -1, 140, 78, 0, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, -1, 141, 79, 0, 100]" + "'", str50, "[0, -1, 141, 79, 0, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, -1, 142, 80, 0, 100]" + "'", str51, "[0, -1, 142, 80, 0, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, -1, 143, 81, 0, 100]" + "'", str52, "[0, -1, 143, 81, 0, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, -1, 144, 82, 0, 100]" + "'", str53, "[0, -1, 144, 82, 0, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, -1, 145, 83, 0, 100]" + "'", str54, "[0, -1, 145, 83, 0, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, -1, 146, 84, 0, 100]" + "'", str55, "[0, -1, 146, 84, 0, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, -1, 147, 85, 0, 100]" + "'", str56, "[0, -1, 147, 85, 0, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, -1, 148, 86, 0, 100]" + "'", str57, "[0, -1, 148, 86, 0, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, -1, 149, 87, 0, 100]" + "'", str58, "[0, -1, 149, 87, 0, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, -1, 150, 88, 0, 100]" + "'", str59, "[0, -1, 150, 88, 0, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, -1, 151, 89, 0, 100]" + "'", str60, "[0, -1, 151, 89, 0, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, -1, 152, 90, 0, 100]" + "'", str61, "[0, -1, 152, 90, 0, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, -1, 153, 91, 0, 100]" + "'", str62, "[0, -1, 153, 91, 0, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, -1, 154, 92, 0, 100]" + "'", str63, "[0, -1, 154, 92, 0, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, -1, 155, 93, 0, 100]" + "'", str64, "[0, -1, 155, 93, 0, 100]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test6141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6141");
        int[] intArray2 = new int[] { 0, '4' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass62 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[59, 111]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 53]" + "'", str3, "[1, 53]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 54]" + "'", str4, "[2, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 55]" + "'", str5, "[3, 55]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 56]" + "'", str6, "[4, 56]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 57]" + "'", str7, "[5, 57]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 58]" + "'", str8, "[6, 58]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 59]" + "'", str9, "[7, 59]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 60]" + "'", str10, "[8, 60]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9, 61]" + "'", str11, "[9, 61]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 62]" + "'", str12, "[10, 62]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 63]" + "'", str13, "[11, 63]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[12, 64]" + "'", str14, "[12, 64]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[13, 65]" + "'", str15, "[13, 65]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[14, 66]" + "'", str16, "[14, 66]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[15, 67]" + "'", str17, "[15, 67]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[16, 68]" + "'", str18, "[16, 68]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[17, 69]" + "'", str19, "[17, 69]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[18, 70]" + "'", str20, "[18, 70]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[19, 71]" + "'", str21, "[19, 71]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[20, 72]" + "'", str22, "[20, 72]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[21, 73]" + "'", str23, "[21, 73]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[22, 74]" + "'", str24, "[22, 74]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[23, 75]" + "'", str25, "[23, 75]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[24, 76]" + "'", str26, "[24, 76]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[25, 77]" + "'", str27, "[25, 77]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[26, 78]" + "'", str28, "[26, 78]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[27, 79]" + "'", str29, "[27, 79]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[28, 80]" + "'", str30, "[28, 80]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[29, 81]" + "'", str31, "[29, 81]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[30, 82]" + "'", str32, "[30, 82]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[31, 83]" + "'", str33, "[31, 83]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 84]" + "'", str34, "[32, 84]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[33, 85]" + "'", str35, "[33, 85]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[34, 86]" + "'", str36, "[34, 86]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 87]" + "'", str37, "[35, 87]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[36, 88]" + "'", str38, "[36, 88]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[37, 89]" + "'", str39, "[37, 89]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 90]" + "'", str40, "[38, 90]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[39, 91]" + "'", str41, "[39, 91]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[40, 92]" + "'", str42, "[40, 92]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[41, 93]" + "'", str43, "[41, 93]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[42, 94]" + "'", str44, "[42, 94]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[43, 95]" + "'", str45, "[43, 95]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[44, 96]" + "'", str46, "[44, 96]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[45, 97]" + "'", str47, "[45, 97]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[46, 98]" + "'", str48, "[46, 98]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[47, 99]" + "'", str49, "[47, 99]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[48, 100]" + "'", str50, "[48, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[49, 101]" + "'", str51, "[49, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[50, 102]" + "'", str52, "[50, 102]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[51, 103]" + "'", str53, "[51, 103]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 104]" + "'", str54, "[52, 104]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[53, 105]" + "'", str55, "[53, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[54, 106]" + "'", str56, "[54, 106]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[55, 107]" + "'", str57, "[55, 107]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[56, 108]" + "'", str58, "[56, 108]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[57, 109]" + "'", str59, "[57, 109]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[58, 110]" + "'", str60, "[58, 110]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[59, 111]" + "'", str61, "[59, 111]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test6142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6142");
        int[] intArray1 = new int[] { '4' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass52 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[102]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[53]" + "'", str2, "[53]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[54]" + "'", str3, "[54]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[55]" + "'", str4, "[55]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[56]" + "'", str5, "[56]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[57]" + "'", str6, "[57]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[58]" + "'", str7, "[58]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[59]" + "'", str8, "[59]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[60]" + "'", str9, "[60]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[61]" + "'", str10, "[61]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[62]" + "'", str11, "[62]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[63]" + "'", str12, "[63]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[64]" + "'", str13, "[64]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[65]" + "'", str14, "[65]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[66]" + "'", str15, "[66]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[67]" + "'", str16, "[67]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[68]" + "'", str17, "[68]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[69]" + "'", str18, "[69]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[70]" + "'", str19, "[70]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[71]" + "'", str20, "[71]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[72]" + "'", str21, "[72]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[73]" + "'", str22, "[73]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[74]" + "'", str23, "[74]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[75]" + "'", str24, "[75]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[76]" + "'", str25, "[76]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[77]" + "'", str26, "[77]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[78]" + "'", str27, "[78]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[79]" + "'", str28, "[79]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[80]" + "'", str29, "[80]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[81]" + "'", str30, "[81]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[82]" + "'", str31, "[82]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[83]" + "'", str32, "[83]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[84]" + "'", str33, "[84]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[85]" + "'", str34, "[85]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[86]" + "'", str35, "[86]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[87]" + "'", str36, "[87]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[88]" + "'", str37, "[88]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[89]" + "'", str38, "[89]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[90]" + "'", str39, "[90]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[91]" + "'", str40, "[91]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[92]" + "'", str41, "[92]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[93]" + "'", str42, "[93]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[94]" + "'", str43, "[94]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[95]" + "'", str44, "[95]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[96]" + "'", str45, "[96]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97]" + "'", str46, "[97]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[98]" + "'", str47, "[98]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[99]" + "'", str48, "[99]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100]" + "'", str49, "[100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101]" + "'", str50, "[101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[102]" + "'", str51, "[102]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test6143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6143");
        int[] intArray2 = new int[] { 0, '4' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass63 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[60, 112]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 53]" + "'", str3, "[1, 53]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 54]" + "'", str4, "[2, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 55]" + "'", str5, "[3, 55]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 56]" + "'", str6, "[4, 56]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 57]" + "'", str7, "[5, 57]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 58]" + "'", str8, "[6, 58]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 59]" + "'", str9, "[7, 59]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 60]" + "'", str10, "[8, 60]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9, 61]" + "'", str11, "[9, 61]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 62]" + "'", str12, "[10, 62]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 63]" + "'", str13, "[11, 63]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[12, 64]" + "'", str14, "[12, 64]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[13, 65]" + "'", str15, "[13, 65]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[14, 66]" + "'", str16, "[14, 66]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[15, 67]" + "'", str17, "[15, 67]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[16, 68]" + "'", str18, "[16, 68]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[17, 69]" + "'", str19, "[17, 69]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[18, 70]" + "'", str20, "[18, 70]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[19, 71]" + "'", str21, "[19, 71]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[20, 72]" + "'", str22, "[20, 72]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[21, 73]" + "'", str23, "[21, 73]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[22, 74]" + "'", str24, "[22, 74]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[23, 75]" + "'", str25, "[23, 75]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[24, 76]" + "'", str26, "[24, 76]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[25, 77]" + "'", str27, "[25, 77]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[26, 78]" + "'", str28, "[26, 78]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[27, 79]" + "'", str29, "[27, 79]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[28, 80]" + "'", str30, "[28, 80]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[29, 81]" + "'", str31, "[29, 81]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[30, 82]" + "'", str32, "[30, 82]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[31, 83]" + "'", str33, "[31, 83]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 84]" + "'", str34, "[32, 84]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[33, 85]" + "'", str35, "[33, 85]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[34, 86]" + "'", str36, "[34, 86]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 87]" + "'", str37, "[35, 87]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[36, 88]" + "'", str38, "[36, 88]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[37, 89]" + "'", str39, "[37, 89]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 90]" + "'", str40, "[38, 90]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[39, 91]" + "'", str41, "[39, 91]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[40, 92]" + "'", str42, "[40, 92]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[41, 93]" + "'", str43, "[41, 93]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[42, 94]" + "'", str44, "[42, 94]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[43, 95]" + "'", str45, "[43, 95]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[44, 96]" + "'", str46, "[44, 96]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[45, 97]" + "'", str47, "[45, 97]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[46, 98]" + "'", str48, "[46, 98]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[47, 99]" + "'", str49, "[47, 99]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[48, 100]" + "'", str50, "[48, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[49, 101]" + "'", str51, "[49, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[50, 102]" + "'", str52, "[50, 102]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[51, 103]" + "'", str53, "[51, 103]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 104]" + "'", str54, "[52, 104]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[53, 105]" + "'", str55, "[53, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[54, 106]" + "'", str56, "[54, 106]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[55, 107]" + "'", str57, "[55, 107]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[56, 108]" + "'", str58, "[56, 108]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[57, 109]" + "'", str59, "[57, 109]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[58, 110]" + "'", str60, "[58, 110]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[59, 111]" + "'", str61, "[59, 111]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[60, 112]" + "'", str62, "[60, 112]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test6144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6144");
        int[] intArray3 = new int[] { ' ', (short) 0, (byte) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass27 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[34, 3, 12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 1, 10]" + "'", str4, "[32, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 2, 10]" + "'", str5, "[32, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 3, 10]" + "'", str6, "[32, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 4, 10]" + "'", str7, "[32, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 5, 10]" + "'", str8, "[32, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 6, 10]" + "'", str9, "[32, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 7, 10]" + "'", str10, "[32, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 8, 10]" + "'", str11, "[32, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 9, 10]" + "'", str12, "[32, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 0, 11]" + "'", str13, "[33, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 1, 11]" + "'", str14, "[33, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 2, 11]" + "'", str15, "[33, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 3, 11]" + "'", str16, "[33, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 4, 11]" + "'", str17, "[33, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 5, 11]" + "'", str18, "[33, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 6, 11]" + "'", str19, "[33, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 7, 11]" + "'", str20, "[33, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 8, 11]" + "'", str21, "[33, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 9, 11]" + "'", str22, "[33, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 0, 12]" + "'", str23, "[34, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 1, 12]" + "'", str24, "[34, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 2, 12]" + "'", str25, "[34, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 3, 12]" + "'", str26, "[34, 3, 12]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test6145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6145");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass85 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 7, 8, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 16, 6, 1, 0]" + "'", str12, "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 17, 7, 1, 0]" + "'", str13, "[100, 0, 17, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 18, 8, 1, 0]" + "'", str14, "[100, 0, 18, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 0, 19, 9, 1, 0]" + "'", str15, "[100, 0, 19, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 1, 0, 0, 2, 0]" + "'", str16, "[100, 1, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 1, 1, 1, 2, 0]" + "'", str17, "[100, 1, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 1, 2, 2, 2, 0]" + "'", str18, "[100, 1, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 1, 3, 3, 2, 0]" + "'", str19, "[100, 1, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 1, 4, 4, 2, 0]" + "'", str20, "[100, 1, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 1, 5, 5, 2, 0]" + "'", str21, "[100, 1, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 1, 6, 6, 2, 0]" + "'", str22, "[100, 1, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 1, 7, 7, 2, 0]" + "'", str23, "[100, 1, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 1, 8, 8, 2, 0]" + "'", str24, "[100, 1, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 1, 9, 9, 2, 0]" + "'", str25, "[100, 1, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 2, 0, 0, 3, 0]" + "'", str26, "[100, 2, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 2, 1, 1, 3, 0]" + "'", str27, "[100, 2, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 2, 2, 2, 3, 0]" + "'", str28, "[100, 2, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 2, 3, 3, 3, 0]" + "'", str29, "[100, 2, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 2, 4, 4, 3, 0]" + "'", str30, "[100, 2, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 2, 5, 5, 3, 0]" + "'", str31, "[100, 2, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 2, 6, 6, 3, 0]" + "'", str32, "[100, 2, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 2, 7, 7, 3, 0]" + "'", str33, "[100, 2, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 2, 8, 8, 3, 0]" + "'", str34, "[100, 2, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 2, 9, 9, 3, 0]" + "'", str35, "[100, 2, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 3, 0, 0, 4, 0]" + "'", str36, "[100, 3, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 1, 1, 4, 0]" + "'", str37, "[100, 3, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 2, 2, 4, 0]" + "'", str38, "[100, 3, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 3, 3, 3, 4, 0]" + "'", str39, "[100, 3, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 3, 4, 4, 4, 0]" + "'", str40, "[100, 3, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 3, 5, 5, 4, 0]" + "'", str41, "[100, 3, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 3, 6, 6, 4, 0]" + "'", str42, "[100, 3, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 3, 7, 7, 4, 0]" + "'", str43, "[100, 3, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 3, 8, 8, 4, 0]" + "'", str44, "[100, 3, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 3, 9, 9, 4, 0]" + "'", str45, "[100, 3, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 4, 0, 0, 5, 0]" + "'", str46, "[100, 4, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 4, 1, 1, 5, 0]" + "'", str47, "[100, 4, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 4, 2, 2, 5, 0]" + "'", str48, "[100, 4, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 4, 3, 3, 5, 0]" + "'", str49, "[100, 4, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 4, 4, 4, 5, 0]" + "'", str50, "[100, 4, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 4, 5, 5, 5, 0]" + "'", str51, "[100, 4, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 4, 6, 6, 5, 0]" + "'", str52, "[100, 4, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 4, 7, 7, 5, 0]" + "'", str53, "[100, 4, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 4, 8, 8, 5, 0]" + "'", str54, "[100, 4, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 4, 9, 9, 5, 0]" + "'", str55, "[100, 4, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 5, 0, 0, 6, 0]" + "'", str56, "[100, 5, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 5, 1, 1, 6, 0]" + "'", str57, "[100, 5, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 5, 2, 2, 6, 0]" + "'", str58, "[100, 5, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 5, 3, 3, 6, 0]" + "'", str59, "[100, 5, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 5, 4, 4, 6, 0]" + "'", str60, "[100, 5, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 5, 5, 5, 6, 0]" + "'", str61, "[100, 5, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 5, 6, 6, 6, 0]" + "'", str62, "[100, 5, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 5, 7, 7, 6, 0]" + "'", str63, "[100, 5, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 5, 8, 8, 6, 0]" + "'", str64, "[100, 5, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 5, 9, 9, 6, 0]" + "'", str65, "[100, 5, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 6, 0, 0, 7, 0]" + "'", str66, "[100, 6, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 6, 1, 1, 7, 0]" + "'", str67, "[100, 6, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 6, 2, 2, 7, 0]" + "'", str68, "[100, 6, 2, 2, 7, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 6, 3, 3, 7, 0]" + "'", str69, "[100, 6, 3, 3, 7, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 6, 4, 4, 7, 0]" + "'", str70, "[100, 6, 4, 4, 7, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 6, 5, 5, 7, 0]" + "'", str71, "[100, 6, 5, 5, 7, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 6, 6, 6, 7, 0]" + "'", str72, "[100, 6, 6, 6, 7, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 6, 7, 7, 7, 0]" + "'", str73, "[100, 6, 7, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 6, 8, 8, 7, 0]" + "'", str74, "[100, 6, 8, 8, 7, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 6, 9, 9, 7, 0]" + "'", str75, "[100, 6, 9, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 7, 0, 0, 8, 0]" + "'", str76, "[100, 7, 0, 0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 7, 1, 1, 8, 0]" + "'", str77, "[100, 7, 1, 1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 7, 2, 2, 8, 0]" + "'", str78, "[100, 7, 2, 2, 8, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 7, 3, 3, 8, 0]" + "'", str79, "[100, 7, 3, 3, 8, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 7, 4, 4, 8, 0]" + "'", str80, "[100, 7, 4, 4, 8, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 7, 5, 5, 8, 0]" + "'", str81, "[100, 7, 5, 5, 8, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[100, 7, 6, 6, 8, 0]" + "'", str82, "[100, 7, 6, 6, 8, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[100, 7, 7, 7, 8, 0]" + "'", str83, "[100, 7, 7, 7, 8, 0]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[100, 7, 8, 8, 8, 0]" + "'", str84, "[100, 7, 8, 8, 8, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test6146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6146");
        int[] intArray1 = new int[] { (byte) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass20 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6147");
        int[] intArray5 = new int[] { (byte) 10, (byte) -1, '#', (byte) 100, (short) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass17 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, -1, 36, 100, -1]" + "'", str6, "[10, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, -1, 37, 100, -1]" + "'", str7, "[10, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, -1, 38, 100, -1]" + "'", str8, "[10, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, -1, 39, 100, -1]" + "'", str9, "[10, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, -1, 40, 100, -1]" + "'", str10, "[10, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, -1, 41, 100, -1]" + "'", str11, "[10, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, -1, 42, 100, -1]" + "'", str12, "[10, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, -1, 43, 100, -1]" + "'", str13, "[10, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, -1, 44, 100, -1]" + "'", str14, "[10, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, -1, 45, 100, -1]" + "'", str15, "[10, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, -1, 46, 100, -1]" + "'", str16, "[10, -1, 46, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6148");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass89 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[60, 5, 5, 18]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[54, 1, 1, 12]" + "'", str24, "[54, 1, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 2, 2, 12]" + "'", str25, "[54, 2, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 3, 3, 12]" + "'", str26, "[54, 3, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[54, 4, 4, 12]" + "'", str27, "[54, 4, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[54, 5, 5, 12]" + "'", str28, "[54, 5, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[54, 6, 6, 12]" + "'", str29, "[54, 6, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[54, 7, 7, 12]" + "'", str30, "[54, 7, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[54, 8, 8, 12]" + "'", str31, "[54, 8, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[54, 9, 9, 12]" + "'", str32, "[54, 9, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[55, 0, 0, 13]" + "'", str33, "[55, 0, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[55, 1, 1, 13]" + "'", str34, "[55, 1, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[55, 2, 2, 13]" + "'", str35, "[55, 2, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[55, 3, 3, 13]" + "'", str36, "[55, 3, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[55, 4, 4, 13]" + "'", str37, "[55, 4, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[55, 5, 5, 13]" + "'", str38, "[55, 5, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[55, 6, 6, 13]" + "'", str39, "[55, 6, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[55, 7, 7, 13]" + "'", str40, "[55, 7, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[55, 8, 8, 13]" + "'", str41, "[55, 8, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[55, 9, 9, 13]" + "'", str42, "[55, 9, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[56, 0, 0, 14]" + "'", str43, "[56, 0, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[56, 1, 1, 14]" + "'", str44, "[56, 1, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[56, 2, 2, 14]" + "'", str45, "[56, 2, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[56, 3, 3, 14]" + "'", str46, "[56, 3, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56, 4, 4, 14]" + "'", str47, "[56, 4, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 5, 5, 14]" + "'", str48, "[56, 5, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[56, 6, 6, 14]" + "'", str49, "[56, 6, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[56, 7, 7, 14]" + "'", str50, "[56, 7, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[56, 8, 8, 14]" + "'", str51, "[56, 8, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[56, 9, 9, 14]" + "'", str52, "[56, 9, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[57, 0, 0, 15]" + "'", str53, "[57, 0, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[57, 1, 1, 15]" + "'", str54, "[57, 1, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[57, 2, 2, 15]" + "'", str55, "[57, 2, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[57, 3, 3, 15]" + "'", str56, "[57, 3, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[57, 4, 4, 15]" + "'", str57, "[57, 4, 4, 15]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[57, 5, 5, 15]" + "'", str58, "[57, 5, 5, 15]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[57, 6, 6, 15]" + "'", str59, "[57, 6, 6, 15]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[57, 7, 7, 15]" + "'", str60, "[57, 7, 7, 15]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[57, 8, 8, 15]" + "'", str61, "[57, 8, 8, 15]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[57, 9, 9, 15]" + "'", str62, "[57, 9, 9, 15]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[58, 0, 0, 16]" + "'", str63, "[58, 0, 0, 16]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[58, 1, 1, 16]" + "'", str64, "[58, 1, 1, 16]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[58, 2, 2, 16]" + "'", str65, "[58, 2, 2, 16]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[58, 3, 3, 16]" + "'", str66, "[58, 3, 3, 16]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[58, 4, 4, 16]" + "'", str67, "[58, 4, 4, 16]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[58, 5, 5, 16]" + "'", str68, "[58, 5, 5, 16]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[58, 6, 6, 16]" + "'", str69, "[58, 6, 6, 16]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[58, 7, 7, 16]" + "'", str70, "[58, 7, 7, 16]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[58, 8, 8, 16]" + "'", str71, "[58, 8, 8, 16]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[58, 9, 9, 16]" + "'", str72, "[58, 9, 9, 16]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[59, 0, 0, 17]" + "'", str73, "[59, 0, 0, 17]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[59, 1, 1, 17]" + "'", str74, "[59, 1, 1, 17]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[59, 2, 2, 17]" + "'", str75, "[59, 2, 2, 17]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[59, 3, 3, 17]" + "'", str76, "[59, 3, 3, 17]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[59, 4, 4, 17]" + "'", str77, "[59, 4, 4, 17]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[59, 5, 5, 17]" + "'", str78, "[59, 5, 5, 17]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[59, 6, 6, 17]" + "'", str79, "[59, 6, 6, 17]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[59, 7, 7, 17]" + "'", str80, "[59, 7, 7, 17]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[59, 8, 8, 17]" + "'", str81, "[59, 8, 8, 17]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[59, 9, 9, 17]" + "'", str82, "[59, 9, 9, 17]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[60, 0, 0, 18]" + "'", str83, "[60, 0, 0, 18]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[60, 1, 1, 18]" + "'", str84, "[60, 1, 1, 18]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[60, 2, 2, 18]" + "'", str85, "[60, 2, 2, 18]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[60, 3, 3, 18]" + "'", str86, "[60, 3, 3, 18]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[60, 4, 4, 18]" + "'", str87, "[60, 4, 4, 18]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[60, 5, 5, 18]" + "'", str88, "[60, 5, 5, 18]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test6149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6149");
        int[] intArray4 = new int[] { '4', (-1), (byte) 10, 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass73 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 67, 78, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 11, 1]" + "'", str5, "[52, 0, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 12, 1]" + "'", str6, "[52, 1, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 13, 1]" + "'", str7, "[52, 2, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 14, 1]" + "'", str8, "[52, 3, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 15, 1]" + "'", str9, "[52, 4, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 16, 1]" + "'", str10, "[52, 5, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 17, 1]" + "'", str11, "[52, 6, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 18, 1]" + "'", str12, "[52, 7, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 19, 1]" + "'", str13, "[52, 8, 19, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 20, 1]" + "'", str14, "[52, 9, 20, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 21, 1]" + "'", str15, "[52, 10, 21, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 22, 1]" + "'", str16, "[52, 11, 22, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 23, 1]" + "'", str17, "[52, 12, 23, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 24, 1]" + "'", str18, "[52, 13, 24, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 25, 1]" + "'", str19, "[52, 14, 25, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 26, 1]" + "'", str20, "[52, 15, 26, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 27, 1]" + "'", str21, "[52, 16, 27, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 28, 1]" + "'", str22, "[52, 17, 28, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 29, 1]" + "'", str23, "[52, 18, 29, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 30, 1]" + "'", str24, "[52, 19, 30, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 31, 1]" + "'", str25, "[52, 20, 31, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 32, 1]" + "'", str26, "[52, 21, 32, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 33, 1]" + "'", str27, "[52, 22, 33, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 34, 1]" + "'", str28, "[52, 23, 34, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 35, 1]" + "'", str29, "[52, 24, 35, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 36, 1]" + "'", str30, "[52, 25, 36, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 37, 1]" + "'", str31, "[52, 26, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 38, 1]" + "'", str32, "[52, 27, 38, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 39, 1]" + "'", str33, "[52, 28, 39, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 40, 1]" + "'", str34, "[52, 29, 40, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 41, 1]" + "'", str35, "[52, 30, 41, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 42, 1]" + "'", str36, "[52, 31, 42, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 43, 1]" + "'", str37, "[52, 32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 44, 1]" + "'", str38, "[52, 33, 44, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 45, 1]" + "'", str39, "[52, 34, 45, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 46, 1]" + "'", str40, "[52, 35, 46, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 47, 1]" + "'", str41, "[52, 36, 47, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 48, 1]" + "'", str42, "[52, 37, 48, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 49, 1]" + "'", str43, "[52, 38, 49, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 50, 1]" + "'", str44, "[52, 39, 50, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 51, 1]" + "'", str45, "[52, 40, 51, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 52, 1]" + "'", str46, "[52, 41, 52, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 53, 1]" + "'", str47, "[52, 42, 53, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 54, 1]" + "'", str48, "[52, 43, 54, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 55, 1]" + "'", str49, "[52, 44, 55, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 56, 1]" + "'", str50, "[52, 45, 56, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 57, 1]" + "'", str51, "[52, 46, 57, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 58, 1]" + "'", str52, "[52, 47, 58, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 59, 1]" + "'", str53, "[52, 48, 59, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 60, 1]" + "'", str54, "[52, 49, 60, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 61, 1]" + "'", str55, "[52, 50, 61, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 62, 1]" + "'", str56, "[52, 51, 62, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 63, 1]" + "'", str57, "[52, 52, 63, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 64, 1]" + "'", str58, "[52, 53, 64, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[52, 54, 65, 1]" + "'", str59, "[52, 54, 65, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[52, 55, 66, 1]" + "'", str60, "[52, 55, 66, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[52, 56, 67, 1]" + "'", str61, "[52, 56, 67, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[52, 57, 68, 1]" + "'", str62, "[52, 57, 68, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[52, 58, 69, 1]" + "'", str63, "[52, 58, 69, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[52, 59, 70, 1]" + "'", str64, "[52, 59, 70, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[52, 60, 71, 1]" + "'", str65, "[52, 60, 71, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[52, 61, 72, 1]" + "'", str66, "[52, 61, 72, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[52, 62, 73, 1]" + "'", str67, "[52, 62, 73, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[52, 63, 74, 1]" + "'", str68, "[52, 63, 74, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[52, 64, 75, 1]" + "'", str69, "[52, 64, 75, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[52, 65, 76, 1]" + "'", str70, "[52, 65, 76, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[52, 66, 77, 1]" + "'", str71, "[52, 66, 77, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[52, 67, 78, 1]" + "'", str72, "[52, 67, 78, 1]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test6150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6150");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass81 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 175, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 52, 0]" + "'", str29, "[1, 0, 124, 52, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 52, 0]" + "'", str30, "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 52, 0]" + "'", str31, "[1, 0, 126, 52, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 52, 0]" + "'", str32, "[1, 0, 127, 52, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 52, 0]" + "'", str33, "[1, 0, 128, 52, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 52, 0]" + "'", str34, "[1, 0, 129, 52, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 52, 0]" + "'", str35, "[1, 0, 130, 52, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 52, 0]" + "'", str36, "[1, 0, 131, 52, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 52, 0]" + "'", str37, "[1, 0, 132, 52, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 52, 0]" + "'", str38, "[1, 0, 133, 52, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 52, 0]" + "'", str39, "[1, 0, 134, 52, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 52, 0]" + "'", str40, "[1, 0, 135, 52, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 52, 0]" + "'", str41, "[1, 0, 136, 52, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 52, 0]" + "'", str42, "[1, 0, 137, 52, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 52, 0]" + "'", str43, "[1, 0, 138, 52, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 52, 0]" + "'", str44, "[1, 0, 139, 52, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 52, 0]" + "'", str45, "[1, 0, 140, 52, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 52, 0]" + "'", str46, "[1, 0, 141, 52, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 52, 0]" + "'", str47, "[1, 0, 142, 52, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 52, 0]" + "'", str48, "[1, 0, 143, 52, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 52, 0]" + "'", str49, "[1, 0, 144, 52, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 52, 0]" + "'", str50, "[1, 0, 145, 52, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 52, 0]" + "'", str51, "[1, 0, 146, 52, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 52, 0]" + "'", str52, "[1, 0, 147, 52, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 52, 0]" + "'", str53, "[1, 0, 148, 52, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 52, 0]" + "'", str54, "[1, 0, 149, 52, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 52, 0]" + "'", str55, "[1, 0, 150, 52, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 52, 0]" + "'", str56, "[1, 0, 151, 52, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 52, 0]" + "'", str57, "[1, 0, 152, 52, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 52, 0]" + "'", str58, "[1, 0, 153, 52, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 52, 0]" + "'", str59, "[1, 0, 154, 52, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 52, 0]" + "'", str60, "[1, 0, 155, 52, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 52, 0]" + "'", str61, "[1, 0, 156, 52, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 52, 0]" + "'", str62, "[1, 0, 157, 52, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 52, 0]" + "'", str63, "[1, 0, 158, 52, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 52, 0]" + "'", str64, "[1, 0, 159, 52, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 52, 0]" + "'", str65, "[1, 0, 160, 52, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 52, 0]" + "'", str66, "[1, 0, 161, 52, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 52, 0]" + "'", str67, "[1, 0, 162, 52, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 52, 0]" + "'", str68, "[1, 0, 163, 52, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 52, 0]" + "'", str69, "[1, 0, 164, 52, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 52, 0]" + "'", str70, "[1, 0, 165, 52, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 52, 0]" + "'", str71, "[1, 0, 166, 52, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 52, 0]" + "'", str72, "[1, 0, 167, 52, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 52, 0]" + "'", str73, "[1, 0, 168, 52, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 52, 0]" + "'", str74, "[1, 0, 169, 52, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 52, 0]" + "'", str75, "[1, 0, 170, 52, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 52, 0]" + "'", str76, "[1, 0, 171, 52, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 0, 172, 52, 0]" + "'", str77, "[1, 0, 172, 52, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 0, 173, 52, 0]" + "'", str78, "[1, 0, 173, 52, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 0, 174, 52, 0]" + "'", str79, "[1, 0, 174, 52, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 0, 175, 52, 0]" + "'", str80, "[1, 0, 175, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test6151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6151");
        int[] intArray2 = new int[] { '4', (short) 0 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass5 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[54, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 1]" + "'", str3, "[53, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 2]" + "'", str4, "[54, 2]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test6152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6152");
        int[] intArray4 = new int[] { (byte) 100, '#', (byte) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass21 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 51, 26, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 36, 11, -1]" + "'", str5, "[100, 36, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 37, 12, -1]" + "'", str6, "[100, 37, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 38, 13, -1]" + "'", str7, "[100, 38, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 39, 14, -1]" + "'", str8, "[100, 39, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 40, 15, -1]" + "'", str9, "[100, 40, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 41, 16, -1]" + "'", str10, "[100, 41, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 42, 17, -1]" + "'", str11, "[100, 42, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 43, 18, -1]" + "'", str12, "[100, 43, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 44, 19, -1]" + "'", str13, "[100, 44, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 45, 20, -1]" + "'", str14, "[100, 45, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 46, 21, -1]" + "'", str15, "[100, 46, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 47, 22, -1]" + "'", str16, "[100, 47, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 48, 23, -1]" + "'", str17, "[100, 48, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 49, 24, -1]" + "'", str18, "[100, 49, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 50, 25, -1]" + "'", str19, "[100, 50, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 51, 26, -1]" + "'", str20, "[100, 51, 26, -1]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test6153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6153");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass80 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 84, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 52, 17, -1, 1]" + "'", str12, "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 52, 18, -1, 1]" + "'", str13, "[97, 52, 18, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 52, 19, -1, 1]" + "'", str14, "[97, 52, 19, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 52, 20, -1, 1]" + "'", str15, "[97, 52, 20, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 52, 21, -1, 1]" + "'", str16, "[97, 52, 21, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 52, 22, -1, 1]" + "'", str17, "[97, 52, 22, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 52, 23, -1, 1]" + "'", str18, "[97, 52, 23, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 52, 24, -1, 1]" + "'", str19, "[97, 52, 24, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 52, 25, -1, 1]" + "'", str20, "[97, 52, 25, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 52, 26, -1, 1]" + "'", str21, "[97, 52, 26, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 52, 27, -1, 1]" + "'", str22, "[97, 52, 27, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 52, 28, -1, 1]" + "'", str23, "[97, 52, 28, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 52, 29, -1, 1]" + "'", str24, "[97, 52, 29, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 52, 30, -1, 1]" + "'", str25, "[97, 52, 30, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 52, 31, -1, 1]" + "'", str26, "[97, 52, 31, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 52, 32, -1, 1]" + "'", str27, "[97, 52, 32, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 52, 33, -1, 1]" + "'", str28, "[97, 52, 33, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 52, 34, -1, 1]" + "'", str29, "[97, 52, 34, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 52, 35, -1, 1]" + "'", str30, "[97, 52, 35, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 52, 36, -1, 1]" + "'", str31, "[97, 52, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 52, 37, -1, 1]" + "'", str32, "[97, 52, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 52, 38, -1, 1]" + "'", str33, "[97, 52, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 52, 39, -1, 1]" + "'", str34, "[97, 52, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 52, 40, -1, 1]" + "'", str35, "[97, 52, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 52, 41, -1, 1]" + "'", str36, "[97, 52, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 52, 42, -1, 1]" + "'", str37, "[97, 52, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 52, 43, -1, 1]" + "'", str38, "[97, 52, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 52, 44, -1, 1]" + "'", str39, "[97, 52, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 52, 45, -1, 1]" + "'", str40, "[97, 52, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 52, 46, -1, 1]" + "'", str41, "[97, 52, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 52, 47, -1, 1]" + "'", str42, "[97, 52, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 52, 48, -1, 1]" + "'", str43, "[97, 52, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 52, 49, -1, 1]" + "'", str44, "[97, 52, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 52, 50, -1, 1]" + "'", str45, "[97, 52, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 51, -1, 1]" + "'", str46, "[97, 52, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 52, 52, -1, 1]" + "'", str47, "[97, 52, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 52, 53, -1, 1]" + "'", str48, "[97, 52, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 52, 54, -1, 1]" + "'", str49, "[97, 52, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 52, 55, -1, 1]" + "'", str50, "[97, 52, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 52, 56, -1, 1]" + "'", str51, "[97, 52, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 52, 57, -1, 1]" + "'", str52, "[97, 52, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 52, 58, -1, 1]" + "'", str53, "[97, 52, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 52, 59, -1, 1]" + "'", str54, "[97, 52, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 52, 60, -1, 1]" + "'", str55, "[97, 52, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 52, 61, -1, 1]" + "'", str56, "[97, 52, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 52, 62, -1, 1]" + "'", str57, "[97, 52, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 52, 63, -1, 1]" + "'", str58, "[97, 52, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 52, 64, -1, 1]" + "'", str59, "[97, 52, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 52, 65, -1, 1]" + "'", str60, "[97, 52, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 52, 66, -1, 1]" + "'", str61, "[97, 52, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 52, 67, -1, 1]" + "'", str62, "[97, 52, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 52, 68, -1, 1]" + "'", str63, "[97, 52, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 52, 69, -1, 1]" + "'", str64, "[97, 52, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 52, 70, -1, 1]" + "'", str65, "[97, 52, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 52, 71, -1, 1]" + "'", str66, "[97, 52, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 52, 72, -1, 1]" + "'", str67, "[97, 52, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 52, 73, -1, 1]" + "'", str68, "[97, 52, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 52, 74, -1, 1]" + "'", str69, "[97, 52, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 52, 75, -1, 1]" + "'", str70, "[97, 52, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 52, 76, -1, 1]" + "'", str71, "[97, 52, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 52, 77, -1, 1]" + "'", str72, "[97, 52, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 52, 78, -1, 1]" + "'", str73, "[97, 52, 78, -1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 52, 79, -1, 1]" + "'", str74, "[97, 52, 79, -1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 52, 80, -1, 1]" + "'", str75, "[97, 52, 80, -1, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 52, 81, -1, 1]" + "'", str76, "[97, 52, 81, -1, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 52, 82, -1, 1]" + "'", str77, "[97, 52, 82, -1, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 52, 83, -1, 1]" + "'", str78, "[97, 52, 83, -1, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 52, 84, -1, 1]" + "'", str79, "[97, 52, 84, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test6154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6154");
        int[] intArray1 = new int[] { (byte) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass19 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test6155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6155");
        int[] intArray6 = new int[] { (byte) 10, (byte) 1, (short) 100, 0, (byte) 0, (byte) -1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass19 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 2, 2, 2, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 1, 101, 1, 0, -1]" + "'", str7, "[10, 1, 101, 1, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 1, 102, 2, 0, -1]" + "'", str8, "[10, 1, 102, 2, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 1, 103, 3, 0, -1]" + "'", str9, "[10, 1, 103, 3, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 1, 104, 4, 0, -1]" + "'", str10, "[10, 1, 104, 4, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 1, 105, 5, 0, -1]" + "'", str11, "[10, 1, 105, 5, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 1, 106, 6, 0, -1]" + "'", str12, "[10, 1, 106, 6, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 1, 107, 7, 0, -1]" + "'", str13, "[10, 1, 107, 7, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 1, 108, 8, 0, -1]" + "'", str14, "[10, 1, 108, 8, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 1, 109, 9, 0, -1]" + "'", str15, "[10, 1, 109, 9, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 2, 0, 0, 1, -1]" + "'", str16, "[10, 2, 0, 0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 2, 1, 1, 1, -1]" + "'", str17, "[10, 2, 1, 1, 1, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 2, 2, 2, 1, -1]" + "'", str18, "[10, 2, 2, 2, 1, -1]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test6156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6156");
        int[] intArray6 = new int[] { (byte) 100, (short) 100, (short) 100, '4', (short) 100, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass30 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 100, 123, 75, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 101, 53, 100, -1]" + "'", str7, "[100, 100, 101, 53, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 102, 54, 100, -1]" + "'", str8, "[100, 100, 102, 54, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 103, 55, 100, -1]" + "'", str9, "[100, 100, 103, 55, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 104, 56, 100, -1]" + "'", str10, "[100, 100, 104, 56, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 105, 57, 100, -1]" + "'", str11, "[100, 100, 105, 57, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 106, 58, 100, -1]" + "'", str12, "[100, 100, 106, 58, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 107, 59, 100, -1]" + "'", str13, "[100, 100, 107, 59, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 100, 108, 60, 100, -1]" + "'", str14, "[100, 100, 108, 60, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 100, 109, 61, 100, -1]" + "'", str15, "[100, 100, 109, 61, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 100, 110, 62, 100, -1]" + "'", str16, "[100, 100, 110, 62, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 100, 111, 63, 100, -1]" + "'", str17, "[100, 100, 111, 63, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 100, 112, 64, 100, -1]" + "'", str18, "[100, 100, 112, 64, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 100, 113, 65, 100, -1]" + "'", str19, "[100, 100, 113, 65, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 100, 114, 66, 100, -1]" + "'", str20, "[100, 100, 114, 66, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 100, 115, 67, 100, -1]" + "'", str21, "[100, 100, 115, 67, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 100, 116, 68, 100, -1]" + "'", str22, "[100, 100, 116, 68, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 100, 117, 69, 100, -1]" + "'", str23, "[100, 100, 117, 69, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 100, 118, 70, 100, -1]" + "'", str24, "[100, 100, 118, 70, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 100, 119, 71, 100, -1]" + "'", str25, "[100, 100, 119, 71, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 100, 120, 72, 100, -1]" + "'", str26, "[100, 100, 120, 72, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 100, 121, 73, 100, -1]" + "'", str27, "[100, 100, 121, 73, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 100, 122, 74, 100, -1]" + "'", str28, "[100, 100, 122, 74, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 100, 123, 75, 100, -1]" + "'", str29, "[100, 100, 123, 75, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test6157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6157");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass93 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1]" + "'", str73, "[1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2]" + "'", str74, "[2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[3]" + "'", str75, "[3]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[4]" + "'", str76, "[4]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[5]" + "'", str77, "[5]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6]" + "'", str78, "[6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7]" + "'", str79, "[7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8]" + "'", str80, "[8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[9]" + "'", str81, "[9]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1]" + "'", str82, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1]" + "'", str83, "[1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[2]" + "'", str84, "[2]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[3]" + "'", str85, "[3]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[4]" + "'", str86, "[4]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[5]" + "'", str87, "[5]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[6]" + "'", str88, "[6]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7]" + "'", str89, "[7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8]" + "'", str90, "[8]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9]" + "'", str91, "[9]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 1]" + "'", str92, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test6158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6158");
        int[] intArray3 = new int[] { (short) 1, '4', '#' };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass43 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 91, 35]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 53, 35]" + "'", str4, "[1, 53, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 54, 35]" + "'", str5, "[1, 54, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 55, 35]" + "'", str6, "[1, 55, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 56, 35]" + "'", str7, "[1, 56, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 57, 35]" + "'", str8, "[1, 57, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 58, 35]" + "'", str9, "[1, 58, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 59, 35]" + "'", str10, "[1, 59, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 60, 35]" + "'", str11, "[1, 60, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 61, 35]" + "'", str12, "[1, 61, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 62, 35]" + "'", str13, "[1, 62, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 63, 35]" + "'", str14, "[1, 63, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 64, 35]" + "'", str15, "[1, 64, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 65, 35]" + "'", str16, "[1, 65, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 66, 35]" + "'", str17, "[1, 66, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 67, 35]" + "'", str18, "[1, 67, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 68, 35]" + "'", str19, "[1, 68, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 69, 35]" + "'", str20, "[1, 69, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 70, 35]" + "'", str21, "[1, 70, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 71, 35]" + "'", str22, "[1, 71, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 72, 35]" + "'", str23, "[1, 72, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 73, 35]" + "'", str24, "[1, 73, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 74, 35]" + "'", str25, "[1, 74, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 75, 35]" + "'", str26, "[1, 75, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 76, 35]" + "'", str27, "[1, 76, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 77, 35]" + "'", str28, "[1, 77, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 78, 35]" + "'", str29, "[1, 78, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 79, 35]" + "'", str30, "[1, 79, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 80, 35]" + "'", str31, "[1, 80, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 81, 35]" + "'", str32, "[1, 81, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 82, 35]" + "'", str33, "[1, 82, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 83, 35]" + "'", str34, "[1, 83, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 84, 35]" + "'", str35, "[1, 84, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 85, 35]" + "'", str36, "[1, 85, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 86, 35]" + "'", str37, "[1, 86, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 87, 35]" + "'", str38, "[1, 87, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 88, 35]" + "'", str39, "[1, 88, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 89, 35]" + "'", str40, "[1, 89, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 90, 35]" + "'", str41, "[1, 90, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 91, 35]" + "'", str42, "[1, 91, 35]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test6159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6159");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass92 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 108, 6, 6, 7, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 7, 7, 1, 0]" + "'", str32, "[0, 102, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 8, 8, 1, 0]" + "'", str33, "[0, 102, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 9, 9, 1, 0]" + "'", str34, "[0, 102, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 103, 0, 0, 2, 0]" + "'", str35, "[0, 103, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 103, 1, 1, 2, 0]" + "'", str36, "[0, 103, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 2, 2, 2, 0]" + "'", str37, "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 3, 3, 2, 0]" + "'", str38, "[0, 103, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 4, 4, 2, 0]" + "'", str39, "[0, 103, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 5, 5, 2, 0]" + "'", str40, "[0, 103, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 6, 6, 2, 0]" + "'", str41, "[0, 103, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 7, 7, 2, 0]" + "'", str42, "[0, 103, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 8, 8, 2, 0]" + "'", str43, "[0, 103, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 9, 9, 2, 0]" + "'", str44, "[0, 103, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 104, 0, 0, 3, 0]" + "'", str45, "[0, 104, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 104, 1, 1, 3, 0]" + "'", str46, "[0, 104, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 2, 2, 3, 0]" + "'", str47, "[0, 104, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 3, 3, 3, 0]" + "'", str48, "[0, 104, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 4, 4, 3, 0]" + "'", str49, "[0, 104, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 5, 5, 3, 0]" + "'", str50, "[0, 104, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 6, 6, 3, 0]" + "'", str51, "[0, 104, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 7, 7, 3, 0]" + "'", str52, "[0, 104, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 8, 8, 3, 0]" + "'", str53, "[0, 104, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 9, 9, 3, 0]" + "'", str54, "[0, 104, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 105, 0, 0, 4, 0]" + "'", str55, "[0, 105, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 105, 1, 1, 4, 0]" + "'", str56, "[0, 105, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 2, 2, 4, 0]" + "'", str57, "[0, 105, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 3, 3, 4, 0]" + "'", str58, "[0, 105, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 4, 4, 4, 0]" + "'", str59, "[0, 105, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 105, 5, 5, 4, 0]" + "'", str60, "[0, 105, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 105, 6, 6, 4, 0]" + "'", str61, "[0, 105, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 105, 7, 7, 4, 0]" + "'", str62, "[0, 105, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 105, 8, 8, 4, 0]" + "'", str63, "[0, 105, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 105, 9, 9, 4, 0]" + "'", str64, "[0, 105, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 106, 0, 0, 5, 0]" + "'", str65, "[0, 106, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 106, 1, 1, 5, 0]" + "'", str66, "[0, 106, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 106, 2, 2, 5, 0]" + "'", str67, "[0, 106, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 106, 3, 3, 5, 0]" + "'", str68, "[0, 106, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 106, 4, 4, 5, 0]" + "'", str69, "[0, 106, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 106, 5, 5, 5, 0]" + "'", str70, "[0, 106, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 106, 6, 6, 5, 0]" + "'", str71, "[0, 106, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 106, 7, 7, 5, 0]" + "'", str72, "[0, 106, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 106, 8, 8, 5, 0]" + "'", str73, "[0, 106, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[0, 106, 9, 9, 5, 0]" + "'", str74, "[0, 106, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[0, 107, 0, 0, 6, 0]" + "'", str75, "[0, 107, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[0, 107, 1, 1, 6, 0]" + "'", str76, "[0, 107, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[0, 107, 2, 2, 6, 0]" + "'", str77, "[0, 107, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[0, 107, 3, 3, 6, 0]" + "'", str78, "[0, 107, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[0, 107, 4, 4, 6, 0]" + "'", str79, "[0, 107, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[0, 107, 5, 5, 6, 0]" + "'", str80, "[0, 107, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[0, 107, 6, 6, 6, 0]" + "'", str81, "[0, 107, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[0, 107, 7, 7, 6, 0]" + "'", str82, "[0, 107, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[0, 107, 8, 8, 6, 0]" + "'", str83, "[0, 107, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[0, 107, 9, 9, 6, 0]" + "'", str84, "[0, 107, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[0, 108, 0, 0, 7, 0]" + "'", str85, "[0, 108, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[0, 108, 1, 1, 7, 0]" + "'", str86, "[0, 108, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[0, 108, 2, 2, 7, 0]" + "'", str87, "[0, 108, 2, 2, 7, 0]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[0, 108, 3, 3, 7, 0]" + "'", str88, "[0, 108, 3, 3, 7, 0]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[0, 108, 4, 4, 7, 0]" + "'", str89, "[0, 108, 4, 4, 7, 0]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[0, 108, 5, 5, 7, 0]" + "'", str90, "[0, 108, 5, 5, 7, 0]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[0, 108, 6, 6, 7, 0]" + "'", str91, "[0, 108, 6, 6, 7, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test6160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6160");
        int[] intArray5 = new int[] { (byte) 10, (byte) -1, '#', (byte) 100, (short) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass16 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, -1, 36, 100, -1]" + "'", str6, "[10, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, -1, 37, 100, -1]" + "'", str7, "[10, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, -1, 38, 100, -1]" + "'", str8, "[10, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, -1, 39, 100, -1]" + "'", str9, "[10, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, -1, 40, 100, -1]" + "'", str10, "[10, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, -1, 41, 100, -1]" + "'", str11, "[10, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, -1, 42, 100, -1]" + "'", str12, "[10, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, -1, 43, 100, -1]" + "'", str13, "[10, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, -1, 44, 100, -1]" + "'", str14, "[10, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, -1, 45, 100, -1]" + "'", str15, "[10, -1, 45, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test6161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6161");
        int[] intArray6 = new int[] { (byte) 10, (byte) 1, (short) 100, 0, (byte) 0, (byte) -1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass20 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 2, 3, 3, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 1, 101, 1, 0, -1]" + "'", str7, "[10, 1, 101, 1, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 1, 102, 2, 0, -1]" + "'", str8, "[10, 1, 102, 2, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 1, 103, 3, 0, -1]" + "'", str9, "[10, 1, 103, 3, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 1, 104, 4, 0, -1]" + "'", str10, "[10, 1, 104, 4, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 1, 105, 5, 0, -1]" + "'", str11, "[10, 1, 105, 5, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 1, 106, 6, 0, -1]" + "'", str12, "[10, 1, 106, 6, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 1, 107, 7, 0, -1]" + "'", str13, "[10, 1, 107, 7, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 1, 108, 8, 0, -1]" + "'", str14, "[10, 1, 108, 8, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 1, 109, 9, 0, -1]" + "'", str15, "[10, 1, 109, 9, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 2, 0, 0, 1, -1]" + "'", str16, "[10, 2, 0, 0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 2, 1, 1, 1, -1]" + "'", str17, "[10, 2, 1, 1, 1, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 2, 2, 2, 1, -1]" + "'", str18, "[10, 2, 2, 2, 1, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 2, 3, 3, 1, -1]" + "'", str19, "[10, 2, 3, 3, 1, -1]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6162");
        int[] intArray5 = new int[] { (short) 0, ' ', (short) 10, (byte) 0, (short) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass51 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 32, 55, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 32, 11, 0, 10]" + "'", str6, "[0, 32, 11, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 32, 12, 0, 10]" + "'", str7, "[0, 32, 12, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 32, 13, 0, 10]" + "'", str8, "[0, 32, 13, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 32, 14, 0, 10]" + "'", str9, "[0, 32, 14, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 32, 15, 0, 10]" + "'", str10, "[0, 32, 15, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 32, 16, 0, 10]" + "'", str11, "[0, 32, 16, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 32, 17, 0, 10]" + "'", str12, "[0, 32, 17, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 32, 18, 0, 10]" + "'", str13, "[0, 32, 18, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 32, 19, 0, 10]" + "'", str14, "[0, 32, 19, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 32, 20, 0, 10]" + "'", str15, "[0, 32, 20, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 32, 21, 0, 10]" + "'", str16, "[0, 32, 21, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 32, 22, 0, 10]" + "'", str17, "[0, 32, 22, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 32, 23, 0, 10]" + "'", str18, "[0, 32, 23, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 32, 24, 0, 10]" + "'", str19, "[0, 32, 24, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 32, 25, 0, 10]" + "'", str20, "[0, 32, 25, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 32, 26, 0, 10]" + "'", str21, "[0, 32, 26, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 32, 27, 0, 10]" + "'", str22, "[0, 32, 27, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 32, 28, 0, 10]" + "'", str23, "[0, 32, 28, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 32, 29, 0, 10]" + "'", str24, "[0, 32, 29, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 32, 30, 0, 10]" + "'", str25, "[0, 32, 30, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 31, 0, 10]" + "'", str26, "[0, 32, 31, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 32, 32, 0, 10]" + "'", str27, "[0, 32, 32, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 32, 33, 0, 10]" + "'", str28, "[0, 32, 33, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 32, 34, 0, 10]" + "'", str29, "[0, 32, 34, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 32, 35, 0, 10]" + "'", str30, "[0, 32, 35, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 32, 36, 0, 10]" + "'", str31, "[0, 32, 36, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 32, 37, 0, 10]" + "'", str32, "[0, 32, 37, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 32, 38, 0, 10]" + "'", str33, "[0, 32, 38, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 32, 39, 0, 10]" + "'", str34, "[0, 32, 39, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 32, 40, 0, 10]" + "'", str35, "[0, 32, 40, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 32, 41, 0, 10]" + "'", str36, "[0, 32, 41, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 32, 42, 0, 10]" + "'", str37, "[0, 32, 42, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 32, 43, 0, 10]" + "'", str38, "[0, 32, 43, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 32, 44, 0, 10]" + "'", str39, "[0, 32, 44, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 32, 45, 0, 10]" + "'", str40, "[0, 32, 45, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 32, 46, 0, 10]" + "'", str41, "[0, 32, 46, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 32, 47, 0, 10]" + "'", str42, "[0, 32, 47, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 32, 48, 0, 10]" + "'", str43, "[0, 32, 48, 0, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 32, 49, 0, 10]" + "'", str44, "[0, 32, 49, 0, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 32, 50, 0, 10]" + "'", str45, "[0, 32, 50, 0, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 32, 51, 0, 10]" + "'", str46, "[0, 32, 51, 0, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 32, 52, 0, 10]" + "'", str47, "[0, 32, 52, 0, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 32, 53, 0, 10]" + "'", str48, "[0, 32, 53, 0, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 32, 54, 0, 10]" + "'", str49, "[0, 32, 54, 0, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 32, 55, 0, 10]" + "'", str50, "[0, 32, 55, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test6163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6163");
        int[] intArray3 = new int[] { (byte) 10, (short) -1, (byte) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass5 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 0, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 0, 10]" + "'", str4, "[10, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test6164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6164");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass81 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 175, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 104, -1, 1]" + "'", str9, "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 105, -1, 1]" + "'", str10, "[97, 0, 105, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 0, 106, -1, 1]" + "'", str11, "[97, 0, 106, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 0, 107, -1, 1]" + "'", str12, "[97, 0, 107, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 0, 108, -1, 1]" + "'", str13, "[97, 0, 108, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 0, 109, -1, 1]" + "'", str14, "[97, 0, 109, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 0, 110, -1, 1]" + "'", str15, "[97, 0, 110, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 0, 111, -1, 1]" + "'", str16, "[97, 0, 111, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 0, 112, -1, 1]" + "'", str17, "[97, 0, 112, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 0, 113, -1, 1]" + "'", str18, "[97, 0, 113, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 0, 114, -1, 1]" + "'", str19, "[97, 0, 114, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 0, 115, -1, 1]" + "'", str20, "[97, 0, 115, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 0, 116, -1, 1]" + "'", str21, "[97, 0, 116, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 0, 117, -1, 1]" + "'", str22, "[97, 0, 117, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 0, 118, -1, 1]" + "'", str23, "[97, 0, 118, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 0, 119, -1, 1]" + "'", str24, "[97, 0, 119, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 0, 120, -1, 1]" + "'", str25, "[97, 0, 120, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 0, 121, -1, 1]" + "'", str26, "[97, 0, 121, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 0, 122, -1, 1]" + "'", str27, "[97, 0, 122, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 0, 123, -1, 1]" + "'", str28, "[97, 0, 123, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 0, 124, -1, 1]" + "'", str29, "[97, 0, 124, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 0, 125, -1, 1]" + "'", str30, "[97, 0, 125, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 0, 126, -1, 1]" + "'", str31, "[97, 0, 126, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 0, 127, -1, 1]" + "'", str32, "[97, 0, 127, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 0, 128, -1, 1]" + "'", str33, "[97, 0, 128, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 0, 129, -1, 1]" + "'", str34, "[97, 0, 129, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 0, 130, -1, 1]" + "'", str35, "[97, 0, 130, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 0, 131, -1, 1]" + "'", str36, "[97, 0, 131, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 0, 132, -1, 1]" + "'", str37, "[97, 0, 132, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 0, 133, -1, 1]" + "'", str38, "[97, 0, 133, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 0, 134, -1, 1]" + "'", str39, "[97, 0, 134, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 0, 135, -1, 1]" + "'", str40, "[97, 0, 135, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 0, 136, -1, 1]" + "'", str41, "[97, 0, 136, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 0, 137, -1, 1]" + "'", str42, "[97, 0, 137, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 0, 138, -1, 1]" + "'", str43, "[97, 0, 138, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 0, 139, -1, 1]" + "'", str44, "[97, 0, 139, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 0, 140, -1, 1]" + "'", str45, "[97, 0, 140, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 0, 141, -1, 1]" + "'", str46, "[97, 0, 141, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 0, 142, -1, 1]" + "'", str47, "[97, 0, 142, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 0, 143, -1, 1]" + "'", str48, "[97, 0, 143, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 0, 144, -1, 1]" + "'", str49, "[97, 0, 144, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 0, 145, -1, 1]" + "'", str50, "[97, 0, 145, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 0, 146, -1, 1]" + "'", str51, "[97, 0, 146, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 0, 147, -1, 1]" + "'", str52, "[97, 0, 147, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 0, 148, -1, 1]" + "'", str53, "[97, 0, 148, -1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 0, 149, -1, 1]" + "'", str54, "[97, 0, 149, -1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 0, 150, -1, 1]" + "'", str55, "[97, 0, 150, -1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 0, 151, -1, 1]" + "'", str56, "[97, 0, 151, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 0, 152, -1, 1]" + "'", str57, "[97, 0, 152, -1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 0, 153, -1, 1]" + "'", str58, "[97, 0, 153, -1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 0, 154, -1, 1]" + "'", str59, "[97, 0, 154, -1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 0, 155, -1, 1]" + "'", str60, "[97, 0, 155, -1, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 0, 156, -1, 1]" + "'", str61, "[97, 0, 156, -1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 0, 157, -1, 1]" + "'", str62, "[97, 0, 157, -1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 0, 158, -1, 1]" + "'", str63, "[97, 0, 158, -1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 0, 159, -1, 1]" + "'", str64, "[97, 0, 159, -1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 0, 160, -1, 1]" + "'", str65, "[97, 0, 160, -1, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 0, 161, -1, 1]" + "'", str66, "[97, 0, 161, -1, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 0, 162, -1, 1]" + "'", str67, "[97, 0, 162, -1, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 0, 163, -1, 1]" + "'", str68, "[97, 0, 163, -1, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 0, 164, -1, 1]" + "'", str69, "[97, 0, 164, -1, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 0, 165, -1, 1]" + "'", str70, "[97, 0, 165, -1, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 0, 166, -1, 1]" + "'", str71, "[97, 0, 166, -1, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 0, 167, -1, 1]" + "'", str72, "[97, 0, 167, -1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 0, 168, -1, 1]" + "'", str73, "[97, 0, 168, -1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 0, 169, -1, 1]" + "'", str74, "[97, 0, 169, -1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 0, 170, -1, 1]" + "'", str75, "[97, 0, 170, -1, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 0, 171, -1, 1]" + "'", str76, "[97, 0, 171, -1, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 0, 172, -1, 1]" + "'", str77, "[97, 0, 172, -1, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 0, 173, -1, 1]" + "'", str78, "[97, 0, 173, -1, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 0, 174, -1, 1]" + "'", str79, "[97, 0, 174, -1, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 0, 175, -1, 1]" + "'", str80, "[97, 0, 175, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test6165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6165");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass87 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[60, 3, 3, 18]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[54, 1, 1, 12]" + "'", str24, "[54, 1, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 2, 2, 12]" + "'", str25, "[54, 2, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 3, 3, 12]" + "'", str26, "[54, 3, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[54, 4, 4, 12]" + "'", str27, "[54, 4, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[54, 5, 5, 12]" + "'", str28, "[54, 5, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[54, 6, 6, 12]" + "'", str29, "[54, 6, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[54, 7, 7, 12]" + "'", str30, "[54, 7, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[54, 8, 8, 12]" + "'", str31, "[54, 8, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[54, 9, 9, 12]" + "'", str32, "[54, 9, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[55, 0, 0, 13]" + "'", str33, "[55, 0, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[55, 1, 1, 13]" + "'", str34, "[55, 1, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[55, 2, 2, 13]" + "'", str35, "[55, 2, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[55, 3, 3, 13]" + "'", str36, "[55, 3, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[55, 4, 4, 13]" + "'", str37, "[55, 4, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[55, 5, 5, 13]" + "'", str38, "[55, 5, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[55, 6, 6, 13]" + "'", str39, "[55, 6, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[55, 7, 7, 13]" + "'", str40, "[55, 7, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[55, 8, 8, 13]" + "'", str41, "[55, 8, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[55, 9, 9, 13]" + "'", str42, "[55, 9, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[56, 0, 0, 14]" + "'", str43, "[56, 0, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[56, 1, 1, 14]" + "'", str44, "[56, 1, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[56, 2, 2, 14]" + "'", str45, "[56, 2, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[56, 3, 3, 14]" + "'", str46, "[56, 3, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56, 4, 4, 14]" + "'", str47, "[56, 4, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 5, 5, 14]" + "'", str48, "[56, 5, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[56, 6, 6, 14]" + "'", str49, "[56, 6, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[56, 7, 7, 14]" + "'", str50, "[56, 7, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[56, 8, 8, 14]" + "'", str51, "[56, 8, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[56, 9, 9, 14]" + "'", str52, "[56, 9, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[57, 0, 0, 15]" + "'", str53, "[57, 0, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[57, 1, 1, 15]" + "'", str54, "[57, 1, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[57, 2, 2, 15]" + "'", str55, "[57, 2, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[57, 3, 3, 15]" + "'", str56, "[57, 3, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[57, 4, 4, 15]" + "'", str57, "[57, 4, 4, 15]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[57, 5, 5, 15]" + "'", str58, "[57, 5, 5, 15]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[57, 6, 6, 15]" + "'", str59, "[57, 6, 6, 15]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[57, 7, 7, 15]" + "'", str60, "[57, 7, 7, 15]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[57, 8, 8, 15]" + "'", str61, "[57, 8, 8, 15]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[57, 9, 9, 15]" + "'", str62, "[57, 9, 9, 15]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[58, 0, 0, 16]" + "'", str63, "[58, 0, 0, 16]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[58, 1, 1, 16]" + "'", str64, "[58, 1, 1, 16]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[58, 2, 2, 16]" + "'", str65, "[58, 2, 2, 16]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[58, 3, 3, 16]" + "'", str66, "[58, 3, 3, 16]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[58, 4, 4, 16]" + "'", str67, "[58, 4, 4, 16]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[58, 5, 5, 16]" + "'", str68, "[58, 5, 5, 16]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[58, 6, 6, 16]" + "'", str69, "[58, 6, 6, 16]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[58, 7, 7, 16]" + "'", str70, "[58, 7, 7, 16]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[58, 8, 8, 16]" + "'", str71, "[58, 8, 8, 16]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[58, 9, 9, 16]" + "'", str72, "[58, 9, 9, 16]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[59, 0, 0, 17]" + "'", str73, "[59, 0, 0, 17]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[59, 1, 1, 17]" + "'", str74, "[59, 1, 1, 17]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[59, 2, 2, 17]" + "'", str75, "[59, 2, 2, 17]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[59, 3, 3, 17]" + "'", str76, "[59, 3, 3, 17]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[59, 4, 4, 17]" + "'", str77, "[59, 4, 4, 17]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[59, 5, 5, 17]" + "'", str78, "[59, 5, 5, 17]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[59, 6, 6, 17]" + "'", str79, "[59, 6, 6, 17]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[59, 7, 7, 17]" + "'", str80, "[59, 7, 7, 17]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[59, 8, 8, 17]" + "'", str81, "[59, 8, 8, 17]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[59, 9, 9, 17]" + "'", str82, "[59, 9, 9, 17]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[60, 0, 0, 18]" + "'", str83, "[60, 0, 0, 18]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[60, 1, 1, 18]" + "'", str84, "[60, 1, 1, 18]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[60, 2, 2, 18]" + "'", str85, "[60, 2, 2, 18]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[60, 3, 3, 18]" + "'", str86, "[60, 3, 3, 18]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test6166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6166");
        int[] intArray5 = new int[] { (-1), '4', '4', (byte) -1, (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass16 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 52, 62, -1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 52, 53, -1, 0]" + "'", str6, "[-1, 52, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 52, 54, -1, 0]" + "'", str7, "[-1, 52, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 52, 55, -1, 0]" + "'", str8, "[-1, 52, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 52, 56, -1, 0]" + "'", str9, "[-1, 52, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 52, 57, -1, 0]" + "'", str10, "[-1, 52, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 52, 58, -1, 0]" + "'", str11, "[-1, 52, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 52, 59, -1, 0]" + "'", str12, "[-1, 52, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 52, 60, -1, 0]" + "'", str13, "[-1, 52, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 52, 61, -1, 0]" + "'", str14, "[-1, 52, 61, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 52, 62, -1, 0]" + "'", str15, "[-1, 52, 62, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test6167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6167");
        int[] intArray4 = new int[] { '4', (-1), (byte) 10, 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass76 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 70, 81, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 11, 1]" + "'", str5, "[52, 0, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 12, 1]" + "'", str6, "[52, 1, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 13, 1]" + "'", str7, "[52, 2, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 14, 1]" + "'", str8, "[52, 3, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 15, 1]" + "'", str9, "[52, 4, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 16, 1]" + "'", str10, "[52, 5, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 17, 1]" + "'", str11, "[52, 6, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 18, 1]" + "'", str12, "[52, 7, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 19, 1]" + "'", str13, "[52, 8, 19, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 20, 1]" + "'", str14, "[52, 9, 20, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 21, 1]" + "'", str15, "[52, 10, 21, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 22, 1]" + "'", str16, "[52, 11, 22, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 23, 1]" + "'", str17, "[52, 12, 23, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 24, 1]" + "'", str18, "[52, 13, 24, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 25, 1]" + "'", str19, "[52, 14, 25, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 26, 1]" + "'", str20, "[52, 15, 26, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 27, 1]" + "'", str21, "[52, 16, 27, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 28, 1]" + "'", str22, "[52, 17, 28, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 29, 1]" + "'", str23, "[52, 18, 29, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 30, 1]" + "'", str24, "[52, 19, 30, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 31, 1]" + "'", str25, "[52, 20, 31, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 32, 1]" + "'", str26, "[52, 21, 32, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 33, 1]" + "'", str27, "[52, 22, 33, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 34, 1]" + "'", str28, "[52, 23, 34, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 35, 1]" + "'", str29, "[52, 24, 35, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 36, 1]" + "'", str30, "[52, 25, 36, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 37, 1]" + "'", str31, "[52, 26, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 38, 1]" + "'", str32, "[52, 27, 38, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 39, 1]" + "'", str33, "[52, 28, 39, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 40, 1]" + "'", str34, "[52, 29, 40, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 41, 1]" + "'", str35, "[52, 30, 41, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 42, 1]" + "'", str36, "[52, 31, 42, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 43, 1]" + "'", str37, "[52, 32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 44, 1]" + "'", str38, "[52, 33, 44, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 45, 1]" + "'", str39, "[52, 34, 45, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 46, 1]" + "'", str40, "[52, 35, 46, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 47, 1]" + "'", str41, "[52, 36, 47, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 48, 1]" + "'", str42, "[52, 37, 48, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 49, 1]" + "'", str43, "[52, 38, 49, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 50, 1]" + "'", str44, "[52, 39, 50, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 51, 1]" + "'", str45, "[52, 40, 51, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 52, 1]" + "'", str46, "[52, 41, 52, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 53, 1]" + "'", str47, "[52, 42, 53, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 54, 1]" + "'", str48, "[52, 43, 54, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 55, 1]" + "'", str49, "[52, 44, 55, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 56, 1]" + "'", str50, "[52, 45, 56, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 57, 1]" + "'", str51, "[52, 46, 57, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 58, 1]" + "'", str52, "[52, 47, 58, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 59, 1]" + "'", str53, "[52, 48, 59, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 60, 1]" + "'", str54, "[52, 49, 60, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 61, 1]" + "'", str55, "[52, 50, 61, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 62, 1]" + "'", str56, "[52, 51, 62, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 63, 1]" + "'", str57, "[52, 52, 63, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 64, 1]" + "'", str58, "[52, 53, 64, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[52, 54, 65, 1]" + "'", str59, "[52, 54, 65, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[52, 55, 66, 1]" + "'", str60, "[52, 55, 66, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[52, 56, 67, 1]" + "'", str61, "[52, 56, 67, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[52, 57, 68, 1]" + "'", str62, "[52, 57, 68, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[52, 58, 69, 1]" + "'", str63, "[52, 58, 69, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[52, 59, 70, 1]" + "'", str64, "[52, 59, 70, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[52, 60, 71, 1]" + "'", str65, "[52, 60, 71, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[52, 61, 72, 1]" + "'", str66, "[52, 61, 72, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[52, 62, 73, 1]" + "'", str67, "[52, 62, 73, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[52, 63, 74, 1]" + "'", str68, "[52, 63, 74, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[52, 64, 75, 1]" + "'", str69, "[52, 64, 75, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[52, 65, 76, 1]" + "'", str70, "[52, 65, 76, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[52, 66, 77, 1]" + "'", str71, "[52, 66, 77, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[52, 67, 78, 1]" + "'", str72, "[52, 67, 78, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[52, 68, 79, 1]" + "'", str73, "[52, 68, 79, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[52, 69, 80, 1]" + "'", str74, "[52, 69, 80, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[52, 70, 81, 1]" + "'", str75, "[52, 70, 81, 1]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test6168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6168");
        int[] intArray5 = new int[] { (short) 100, (short) 100, (byte) 1, 100, (byte) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass62 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 105, 7, 105, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, 100, 10]" + "'", str6, "[100, 100, 2, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, 100, 10]" + "'", str7, "[100, 100, 3, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, 100, 10]" + "'", str8, "[100, 100, 4, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, 100, 10]" + "'", str9, "[100, 100, 5, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, 100, 10]" + "'", str10, "[100, 100, 6, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, 100, 10]" + "'", str11, "[100, 100, 7, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, 100, 10]" + "'", str12, "[100, 100, 8, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, 100, 10]" + "'", str13, "[100, 100, 9, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 101, 10]" + "'", str14, "[100, 101, 0, 101, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 101, 10]" + "'", str15, "[100, 101, 1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 101, 10]" + "'", str16, "[100, 101, 2, 101, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 101, 10]" + "'", str17, "[100, 101, 3, 101, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 101, 10]" + "'", str18, "[100, 101, 4, 101, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 101, 10]" + "'", str19, "[100, 101, 5, 101, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 101, 10]" + "'", str20, "[100, 101, 6, 101, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 101, 10]" + "'", str21, "[100, 101, 7, 101, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 101, 10]" + "'", str22, "[100, 101, 8, 101, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 101, 10]" + "'", str23, "[100, 101, 9, 101, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 102, 10]" + "'", str24, "[100, 102, 0, 102, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 102, 10]" + "'", str25, "[100, 102, 1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 102, 10]" + "'", str26, "[100, 102, 2, 102, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 102, 10]" + "'", str27, "[100, 102, 3, 102, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 102, 10]" + "'", str28, "[100, 102, 4, 102, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 102, 10]" + "'", str29, "[100, 102, 5, 102, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 102, 10]" + "'", str30, "[100, 102, 6, 102, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 102, 10]" + "'", str31, "[100, 102, 7, 102, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 102, 10]" + "'", str32, "[100, 102, 8, 102, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 102, 10]" + "'", str33, "[100, 102, 9, 102, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 103, 10]" + "'", str34, "[100, 103, 0, 103, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 103, 10]" + "'", str35, "[100, 103, 1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 103, 10]" + "'", str36, "[100, 103, 2, 103, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 103, 10]" + "'", str37, "[100, 103, 3, 103, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 103, 10]" + "'", str38, "[100, 103, 4, 103, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 103, 10]" + "'", str39, "[100, 103, 5, 103, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 103, 10]" + "'", str40, "[100, 103, 6, 103, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 103, 10]" + "'", str41, "[100, 103, 7, 103, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 103, 8, 103, 10]" + "'", str42, "[100, 103, 8, 103, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 103, 9, 103, 10]" + "'", str43, "[100, 103, 9, 103, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 104, 0, 104, 10]" + "'", str44, "[100, 104, 0, 104, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 104, 1, 104, 10]" + "'", str45, "[100, 104, 1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 104, 2, 104, 10]" + "'", str46, "[100, 104, 2, 104, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 104, 3, 104, 10]" + "'", str47, "[100, 104, 3, 104, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 104, 4, 104, 10]" + "'", str48, "[100, 104, 4, 104, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 104, 5, 104, 10]" + "'", str49, "[100, 104, 5, 104, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 104, 6, 104, 10]" + "'", str50, "[100, 104, 6, 104, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 104, 7, 104, 10]" + "'", str51, "[100, 104, 7, 104, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 104, 8, 104, 10]" + "'", str52, "[100, 104, 8, 104, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 104, 9, 104, 10]" + "'", str53, "[100, 104, 9, 104, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 105, 0, 105, 10]" + "'", str54, "[100, 105, 0, 105, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 105, 1, 105, 10]" + "'", str55, "[100, 105, 1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 105, 2, 105, 10]" + "'", str56, "[100, 105, 2, 105, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 105, 3, 105, 10]" + "'", str57, "[100, 105, 3, 105, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 105, 4, 105, 10]" + "'", str58, "[100, 105, 4, 105, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 105, 5, 105, 10]" + "'", str59, "[100, 105, 5, 105, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 105, 6, 105, 10]" + "'", str60, "[100, 105, 6, 105, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 105, 7, 105, 10]" + "'", str61, "[100, 105, 7, 105, 10]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test6169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6169");
        int[] intArray6 = new int[] { (byte) 10, (byte) 1, (short) 100, 0, (byte) 0, (byte) -1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass21 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 2, 4, 4, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 1, 101, 1, 0, -1]" + "'", str7, "[10, 1, 101, 1, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 1, 102, 2, 0, -1]" + "'", str8, "[10, 1, 102, 2, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 1, 103, 3, 0, -1]" + "'", str9, "[10, 1, 103, 3, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 1, 104, 4, 0, -1]" + "'", str10, "[10, 1, 104, 4, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 1, 105, 5, 0, -1]" + "'", str11, "[10, 1, 105, 5, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 1, 106, 6, 0, -1]" + "'", str12, "[10, 1, 106, 6, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 1, 107, 7, 0, -1]" + "'", str13, "[10, 1, 107, 7, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 1, 108, 8, 0, -1]" + "'", str14, "[10, 1, 108, 8, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 1, 109, 9, 0, -1]" + "'", str15, "[10, 1, 109, 9, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 2, 0, 0, 1, -1]" + "'", str16, "[10, 2, 0, 0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 2, 1, 1, 1, -1]" + "'", str17, "[10, 2, 1, 1, 1, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 2, 2, 2, 1, -1]" + "'", str18, "[10, 2, 2, 2, 1, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 2, 3, 3, 1, -1]" + "'", str19, "[10, 2, 3, 3, 1, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 2, 4, 4, 1, -1]" + "'", str20, "[10, 2, 4, 4, 1, -1]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test6170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6170");
        int[] intArray2 = new int[] { '#', (short) 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[79, 54]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[36, 11]" + "'", str3, "[36, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[37, 12]" + "'", str4, "[37, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[38, 13]" + "'", str5, "[38, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[39, 14]" + "'", str6, "[39, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[40, 15]" + "'", str7, "[40, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[41, 16]" + "'", str8, "[41, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[42, 17]" + "'", str9, "[42, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[43, 18]" + "'", str10, "[43, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[44, 19]" + "'", str11, "[44, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[45, 20]" + "'", str12, "[45, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[46, 21]" + "'", str13, "[46, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[47, 22]" + "'", str14, "[47, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[48, 23]" + "'", str15, "[48, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[49, 24]" + "'", str16, "[49, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[50, 25]" + "'", str17, "[50, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[51, 26]" + "'", str18, "[51, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 27]" + "'", str19, "[52, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 28]" + "'", str20, "[53, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[54, 29]" + "'", str21, "[54, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[55, 30]" + "'", str22, "[55, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[56, 31]" + "'", str23, "[56, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[57, 32]" + "'", str24, "[57, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[58, 33]" + "'", str25, "[58, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[59, 34]" + "'", str26, "[59, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[60, 35]" + "'", str27, "[60, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[61, 36]" + "'", str28, "[61, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[62, 37]" + "'", str29, "[62, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[63, 38]" + "'", str30, "[63, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[64, 39]" + "'", str31, "[64, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[65, 40]" + "'", str32, "[65, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[66, 41]" + "'", str33, "[66, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[67, 42]" + "'", str34, "[67, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[68, 43]" + "'", str35, "[68, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[69, 44]" + "'", str36, "[69, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[70, 45]" + "'", str37, "[70, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[71, 46]" + "'", str38, "[71, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[72, 47]" + "'", str39, "[72, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[73, 48]" + "'", str40, "[73, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[74, 49]" + "'", str41, "[74, 49]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[75, 50]" + "'", str42, "[75, 50]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[76, 51]" + "'", str43, "[76, 51]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[77, 52]" + "'", str44, "[77, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[78, 53]" + "'", str45, "[78, 53]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[79, 54]" + "'", str46, "[79, 54]");
    }

    @Test
    public void test6171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6171");
        int[] intArray4 = new int[] { (byte) -1, 0, (byte) -1, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass28 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 0, 52]" + "'", str5, "[-1, 1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 1, 52]" + "'", str6, "[-1, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 3, 2, 52]" + "'", str7, "[-1, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 4, 3, 52]" + "'", str8, "[-1, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 5, 4, 52]" + "'", str9, "[-1, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 6, 5, 52]" + "'", str10, "[-1, 6, 5, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 7, 6, 52]" + "'", str11, "[-1, 7, 6, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 8, 7, 52]" + "'", str12, "[-1, 8, 7, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 9, 8, 52]" + "'", str13, "[-1, 9, 8, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 9, 52]" + "'", str14, "[-1, 10, 9, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 0, 0, 53]" + "'", str15, "[0, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 1, 53]" + "'", str16, "[0, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 53]" + "'", str17, "[0, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 3, 3, 53]" + "'", str18, "[0, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 4, 4, 53]" + "'", str19, "[0, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 5, 5, 53]" + "'", str20, "[0, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 6, 6, 53]" + "'", str21, "[0, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 7, 7, 53]" + "'", str22, "[0, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 8, 8, 53]" + "'", str23, "[0, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 9, 9, 53]" + "'", str24, "[0, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 0, 54]" + "'", str25, "[1, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 1, 54]" + "'", str26, "[1, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 2, 54]" + "'", str27, "[1, 2, 2, 54]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test6172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6172");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass96 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1]" + "'", str73, "[1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2]" + "'", str74, "[2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[3]" + "'", str75, "[3]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[4]" + "'", str76, "[4]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[5]" + "'", str77, "[5]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6]" + "'", str78, "[6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7]" + "'", str79, "[7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8]" + "'", str80, "[8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[9]" + "'", str81, "[9]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1]" + "'", str82, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1]" + "'", str83, "[1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[2]" + "'", str84, "[2]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[3]" + "'", str85, "[3]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[4]" + "'", str86, "[4]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[5]" + "'", str87, "[5]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[6]" + "'", str88, "[6]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7]" + "'", str89, "[7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8]" + "'", str90, "[8]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9]" + "'", str91, "[9]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 1]" + "'", str92, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1]" + "'", str93, "[1]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[2]" + "'", str94, "[2]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[3]" + "'", str95, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test6173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6173");
        int[] intArray5 = new int[] { (-1), '4', '4', (byte) -1, (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass17 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 52, 63, -1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 52, 53, -1, 0]" + "'", str6, "[-1, 52, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 52, 54, -1, 0]" + "'", str7, "[-1, 52, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 52, 55, -1, 0]" + "'", str8, "[-1, 52, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 52, 56, -1, 0]" + "'", str9, "[-1, 52, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 52, 57, -1, 0]" + "'", str10, "[-1, 52, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 52, 58, -1, 0]" + "'", str11, "[-1, 52, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 52, 59, -1, 0]" + "'", str12, "[-1, 52, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 52, 60, -1, 0]" + "'", str13, "[-1, 52, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 52, 61, -1, 0]" + "'", str14, "[-1, 52, 61, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 52, 62, -1, 0]" + "'", str15, "[-1, 52, 62, -1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 52, 63, -1, 0]" + "'", str16, "[-1, 52, 63, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6174");
        int[] intArray3 = new int[] { (short) 1, '4', '#' };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass44 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 92, 35]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 53, 35]" + "'", str4, "[1, 53, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 54, 35]" + "'", str5, "[1, 54, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 55, 35]" + "'", str6, "[1, 55, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 56, 35]" + "'", str7, "[1, 56, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 57, 35]" + "'", str8, "[1, 57, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 58, 35]" + "'", str9, "[1, 58, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 59, 35]" + "'", str10, "[1, 59, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 60, 35]" + "'", str11, "[1, 60, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 61, 35]" + "'", str12, "[1, 61, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 62, 35]" + "'", str13, "[1, 62, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 63, 35]" + "'", str14, "[1, 63, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 64, 35]" + "'", str15, "[1, 64, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 65, 35]" + "'", str16, "[1, 65, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 66, 35]" + "'", str17, "[1, 66, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 67, 35]" + "'", str18, "[1, 67, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 68, 35]" + "'", str19, "[1, 68, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 69, 35]" + "'", str20, "[1, 69, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 70, 35]" + "'", str21, "[1, 70, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 71, 35]" + "'", str22, "[1, 71, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 72, 35]" + "'", str23, "[1, 72, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 73, 35]" + "'", str24, "[1, 73, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 74, 35]" + "'", str25, "[1, 74, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 75, 35]" + "'", str26, "[1, 75, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 76, 35]" + "'", str27, "[1, 76, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 77, 35]" + "'", str28, "[1, 77, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 78, 35]" + "'", str29, "[1, 78, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 79, 35]" + "'", str30, "[1, 79, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 80, 35]" + "'", str31, "[1, 80, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 81, 35]" + "'", str32, "[1, 81, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 82, 35]" + "'", str33, "[1, 82, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 83, 35]" + "'", str34, "[1, 83, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 84, 35]" + "'", str35, "[1, 84, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 85, 35]" + "'", str36, "[1, 85, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 86, 35]" + "'", str37, "[1, 86, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 87, 35]" + "'", str38, "[1, 87, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 88, 35]" + "'", str39, "[1, 88, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 89, 35]" + "'", str40, "[1, 89, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 90, 35]" + "'", str41, "[1, 90, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 91, 35]" + "'", str42, "[1, 91, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 92, 35]" + "'", str43, "[1, 92, 35]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test6175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6175");
        int[] intArray5 = new int[] { (byte) 0, (short) -1, ' ', (short) 10, (-1) };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass69 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 33, 10, -1]" + "'", str6, "[0, -1, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 34, 10, -1]" + "'", str7, "[0, -1, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 35, 10, -1]" + "'", str8, "[0, -1, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 36, 10, -1]" + "'", str9, "[0, -1, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 37, 10, -1]" + "'", str10, "[0, -1, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 38, 10, -1]" + "'", str11, "[0, -1, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 39, 10, -1]" + "'", str12, "[0, -1, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 40, 10, -1]" + "'", str13, "[0, -1, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 41, 10, -1]" + "'", str14, "[0, -1, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 42, 10, -1]" + "'", str15, "[0, -1, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 43, 10, -1]" + "'", str16, "[0, -1, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 44, 10, -1]" + "'", str17, "[0, -1, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 45, 10, -1]" + "'", str18, "[0, -1, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 46, 10, -1]" + "'", str19, "[0, -1, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 47, 10, -1]" + "'", str20, "[0, -1, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 48, 10, -1]" + "'", str21, "[0, -1, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 49, 10, -1]" + "'", str22, "[0, -1, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 50, 10, -1]" + "'", str23, "[0, -1, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 51, 10, -1]" + "'", str24, "[0, -1, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 52, 10, -1]" + "'", str25, "[0, -1, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 53, 10, -1]" + "'", str26, "[0, -1, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 54, 10, -1]" + "'", str27, "[0, -1, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 55, 10, -1]" + "'", str28, "[0, -1, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 56, 10, -1]" + "'", str29, "[0, -1, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 57, 10, -1]" + "'", str30, "[0, -1, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 58, 10, -1]" + "'", str31, "[0, -1, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 59, 10, -1]" + "'", str32, "[0, -1, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 60, 10, -1]" + "'", str33, "[0, -1, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 61, 10, -1]" + "'", str34, "[0, -1, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 62, 10, -1]" + "'", str35, "[0, -1, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 63, 10, -1]" + "'", str36, "[0, -1, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 64, 10, -1]" + "'", str37, "[0, -1, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 65, 10, -1]" + "'", str38, "[0, -1, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 66, 10, -1]" + "'", str39, "[0, -1, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 67, 10, -1]" + "'", str40, "[0, -1, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 68, 10, -1]" + "'", str41, "[0, -1, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 69, 10, -1]" + "'", str42, "[0, -1, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 70, 10, -1]" + "'", str43, "[0, -1, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, -1, 71, 10, -1]" + "'", str44, "[0, -1, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, -1, 72, 10, -1]" + "'", str45, "[0, -1, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, -1, 73, 10, -1]" + "'", str46, "[0, -1, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, -1, 74, 10, -1]" + "'", str47, "[0, -1, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, -1, 75, 10, -1]" + "'", str48, "[0, -1, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, -1, 76, 10, -1]" + "'", str49, "[0, -1, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, -1, 77, 10, -1]" + "'", str50, "[0, -1, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, -1, 78, 10, -1]" + "'", str51, "[0, -1, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, -1, 79, 10, -1]" + "'", str52, "[0, -1, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, -1, 80, 10, -1]" + "'", str53, "[0, -1, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, -1, 81, 10, -1]" + "'", str54, "[0, -1, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, -1, 82, 10, -1]" + "'", str55, "[0, -1, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, -1, 83, 10, -1]" + "'", str56, "[0, -1, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, -1, 84, 10, -1]" + "'", str57, "[0, -1, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, -1, 85, 10, -1]" + "'", str58, "[0, -1, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, -1, 86, 10, -1]" + "'", str59, "[0, -1, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, -1, 87, 10, -1]" + "'", str60, "[0, -1, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, -1, 88, 10, -1]" + "'", str61, "[0, -1, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, -1, 89, 10, -1]" + "'", str62, "[0, -1, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, -1, 90, 10, -1]" + "'", str63, "[0, -1, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, -1, 91, 10, -1]" + "'", str64, "[0, -1, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, -1, 92, 10, -1]" + "'", str65, "[0, -1, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, -1, 93, 10, -1]" + "'", str66, "[0, -1, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, -1, 94, 10, -1]" + "'", str67, "[0, -1, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, -1, 95, 10, -1]" + "'", str68, "[0, -1, 95, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test6176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6176");
        int[] intArray4 = new int[] { (byte) 100, '#', (byte) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass23 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 53, 28, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 36, 11, -1]" + "'", str5, "[100, 36, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 37, 12, -1]" + "'", str6, "[100, 37, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 38, 13, -1]" + "'", str7, "[100, 38, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 39, 14, -1]" + "'", str8, "[100, 39, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 40, 15, -1]" + "'", str9, "[100, 40, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 41, 16, -1]" + "'", str10, "[100, 41, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 42, 17, -1]" + "'", str11, "[100, 42, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 43, 18, -1]" + "'", str12, "[100, 43, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 44, 19, -1]" + "'", str13, "[100, 44, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 45, 20, -1]" + "'", str14, "[100, 45, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 46, 21, -1]" + "'", str15, "[100, 46, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 47, 22, -1]" + "'", str16, "[100, 47, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 48, 23, -1]" + "'", str17, "[100, 48, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 49, 24, -1]" + "'", str18, "[100, 49, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 50, 25, -1]" + "'", str19, "[100, 50, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 51, 26, -1]" + "'", str20, "[100, 51, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 52, 27, -1]" + "'", str21, "[100, 52, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 53, 28, -1]" + "'", str22, "[100, 53, 28, -1]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test6177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6177");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass72 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 166, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 100, 103, 10, 1]" + "'", str8, "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 100, 104, 10, 1]" + "'", str9, "[1, 100, 104, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 100, 105, 10, 1]" + "'", str10, "[1, 100, 105, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 100, 106, 10, 1]" + "'", str11, "[1, 100, 106, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 100, 107, 10, 1]" + "'", str12, "[1, 100, 107, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 100, 108, 10, 1]" + "'", str13, "[1, 100, 108, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 100, 109, 10, 1]" + "'", str14, "[1, 100, 109, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 100, 110, 10, 1]" + "'", str15, "[1, 100, 110, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 100, 111, 10, 1]" + "'", str16, "[1, 100, 111, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 100, 112, 10, 1]" + "'", str17, "[1, 100, 112, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 100, 113, 10, 1]" + "'", str18, "[1, 100, 113, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 100, 114, 10, 1]" + "'", str19, "[1, 100, 114, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 100, 115, 10, 1]" + "'", str20, "[1, 100, 115, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 100, 116, 10, 1]" + "'", str21, "[1, 100, 116, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 100, 117, 10, 1]" + "'", str22, "[1, 100, 117, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 100, 118, 10, 1]" + "'", str23, "[1, 100, 118, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 100, 119, 10, 1]" + "'", str24, "[1, 100, 119, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 100, 120, 10, 1]" + "'", str25, "[1, 100, 120, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 100, 121, 10, 1]" + "'", str26, "[1, 100, 121, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 100, 122, 10, 1]" + "'", str27, "[1, 100, 122, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 100, 123, 10, 1]" + "'", str28, "[1, 100, 123, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 100, 124, 10, 1]" + "'", str29, "[1, 100, 124, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 100, 125, 10, 1]" + "'", str30, "[1, 100, 125, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 100, 126, 10, 1]" + "'", str31, "[1, 100, 126, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 100, 127, 10, 1]" + "'", str32, "[1, 100, 127, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 100, 128, 10, 1]" + "'", str33, "[1, 100, 128, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 100, 129, 10, 1]" + "'", str34, "[1, 100, 129, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 100, 130, 10, 1]" + "'", str35, "[1, 100, 130, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 100, 131, 10, 1]" + "'", str36, "[1, 100, 131, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 100, 132, 10, 1]" + "'", str37, "[1, 100, 132, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 100, 133, 10, 1]" + "'", str38, "[1, 100, 133, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 100, 134, 10, 1]" + "'", str39, "[1, 100, 134, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 100, 135, 10, 1]" + "'", str40, "[1, 100, 135, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 100, 136, 10, 1]" + "'", str41, "[1, 100, 136, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 100, 137, 10, 1]" + "'", str42, "[1, 100, 137, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 100, 138, 10, 1]" + "'", str43, "[1, 100, 138, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 100, 139, 10, 1]" + "'", str44, "[1, 100, 139, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 100, 140, 10, 1]" + "'", str45, "[1, 100, 140, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 100, 141, 10, 1]" + "'", str46, "[1, 100, 141, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 100, 142, 10, 1]" + "'", str47, "[1, 100, 142, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 100, 143, 10, 1]" + "'", str48, "[1, 100, 143, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 100, 144, 10, 1]" + "'", str49, "[1, 100, 144, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 100, 145, 10, 1]" + "'", str50, "[1, 100, 145, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 100, 146, 10, 1]" + "'", str51, "[1, 100, 146, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 100, 147, 10, 1]" + "'", str52, "[1, 100, 147, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 100, 148, 10, 1]" + "'", str53, "[1, 100, 148, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 100, 149, 10, 1]" + "'", str54, "[1, 100, 149, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 100, 150, 10, 1]" + "'", str55, "[1, 100, 150, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 100, 151, 10, 1]" + "'", str56, "[1, 100, 151, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 100, 152, 10, 1]" + "'", str57, "[1, 100, 152, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 100, 153, 10, 1]" + "'", str58, "[1, 100, 153, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 100, 154, 10, 1]" + "'", str59, "[1, 100, 154, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 100, 155, 10, 1]" + "'", str60, "[1, 100, 155, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 100, 156, 10, 1]" + "'", str61, "[1, 100, 156, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 100, 157, 10, 1]" + "'", str62, "[1, 100, 157, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 100, 158, 10, 1]" + "'", str63, "[1, 100, 158, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 100, 159, 10, 1]" + "'", str64, "[1, 100, 159, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 100, 160, 10, 1]" + "'", str65, "[1, 100, 160, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 100, 161, 10, 1]" + "'", str66, "[1, 100, 161, 10, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 100, 162, 10, 1]" + "'", str67, "[1, 100, 162, 10, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 100, 163, 10, 1]" + "'", str68, "[1, 100, 163, 10, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 100, 164, 10, 1]" + "'", str69, "[1, 100, 164, 10, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 100, 165, 10, 1]" + "'", str70, "[1, 100, 165, 10, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 100, 166, 10, 1]" + "'", str71, "[1, 100, 166, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test6178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6178");
        int[] intArray6 = new int[] { 0, (short) -1, 'a', '#', (byte) 0, 100 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass68 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 158, 96, 0, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 98, 36, 0, 100]" + "'", str7, "[0, -1, 98, 36, 0, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 99, 37, 0, 100]" + "'", str8, "[0, -1, 99, 37, 0, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 100, 38, 0, 100]" + "'", str9, "[0, -1, 100, 38, 0, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 101, 39, 0, 100]" + "'", str10, "[0, -1, 101, 39, 0, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 102, 40, 0, 100]" + "'", str11, "[0, -1, 102, 40, 0, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 103, 41, 0, 100]" + "'", str12, "[0, -1, 103, 41, 0, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 104, 42, 0, 100]" + "'", str13, "[0, -1, 104, 42, 0, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 105, 43, 0, 100]" + "'", str14, "[0, -1, 105, 43, 0, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 106, 44, 0, 100]" + "'", str15, "[0, -1, 106, 44, 0, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 107, 45, 0, 100]" + "'", str16, "[0, -1, 107, 45, 0, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 108, 46, 0, 100]" + "'", str17, "[0, -1, 108, 46, 0, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 109, 47, 0, 100]" + "'", str18, "[0, -1, 109, 47, 0, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 110, 48, 0, 100]" + "'", str19, "[0, -1, 110, 48, 0, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 111, 49, 0, 100]" + "'", str20, "[0, -1, 111, 49, 0, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 112, 50, 0, 100]" + "'", str21, "[0, -1, 112, 50, 0, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 113, 51, 0, 100]" + "'", str22, "[0, -1, 113, 51, 0, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 114, 52, 0, 100]" + "'", str23, "[0, -1, 114, 52, 0, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 115, 53, 0, 100]" + "'", str24, "[0, -1, 115, 53, 0, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 116, 54, 0, 100]" + "'", str25, "[0, -1, 116, 54, 0, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 117, 55, 0, 100]" + "'", str26, "[0, -1, 117, 55, 0, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 118, 56, 0, 100]" + "'", str27, "[0, -1, 118, 56, 0, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 119, 57, 0, 100]" + "'", str28, "[0, -1, 119, 57, 0, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 120, 58, 0, 100]" + "'", str29, "[0, -1, 120, 58, 0, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 121, 59, 0, 100]" + "'", str30, "[0, -1, 121, 59, 0, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 122, 60, 0, 100]" + "'", str31, "[0, -1, 122, 60, 0, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 123, 61, 0, 100]" + "'", str32, "[0, -1, 123, 61, 0, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 124, 62, 0, 100]" + "'", str33, "[0, -1, 124, 62, 0, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 125, 63, 0, 100]" + "'", str34, "[0, -1, 125, 63, 0, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 126, 64, 0, 100]" + "'", str35, "[0, -1, 126, 64, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 127, 65, 0, 100]" + "'", str36, "[0, -1, 127, 65, 0, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 128, 66, 0, 100]" + "'", str37, "[0, -1, 128, 66, 0, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 129, 67, 0, 100]" + "'", str38, "[0, -1, 129, 67, 0, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 130, 68, 0, 100]" + "'", str39, "[0, -1, 130, 68, 0, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 131, 69, 0, 100]" + "'", str40, "[0, -1, 131, 69, 0, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 132, 70, 0, 100]" + "'", str41, "[0, -1, 132, 70, 0, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 133, 71, 0, 100]" + "'", str42, "[0, -1, 133, 71, 0, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 134, 72, 0, 100]" + "'", str43, "[0, -1, 134, 72, 0, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, -1, 135, 73, 0, 100]" + "'", str44, "[0, -1, 135, 73, 0, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, -1, 136, 74, 0, 100]" + "'", str45, "[0, -1, 136, 74, 0, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, -1, 137, 75, 0, 100]" + "'", str46, "[0, -1, 137, 75, 0, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, -1, 138, 76, 0, 100]" + "'", str47, "[0, -1, 138, 76, 0, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, -1, 139, 77, 0, 100]" + "'", str48, "[0, -1, 139, 77, 0, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, -1, 140, 78, 0, 100]" + "'", str49, "[0, -1, 140, 78, 0, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, -1, 141, 79, 0, 100]" + "'", str50, "[0, -1, 141, 79, 0, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, -1, 142, 80, 0, 100]" + "'", str51, "[0, -1, 142, 80, 0, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, -1, 143, 81, 0, 100]" + "'", str52, "[0, -1, 143, 81, 0, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, -1, 144, 82, 0, 100]" + "'", str53, "[0, -1, 144, 82, 0, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, -1, 145, 83, 0, 100]" + "'", str54, "[0, -1, 145, 83, 0, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, -1, 146, 84, 0, 100]" + "'", str55, "[0, -1, 146, 84, 0, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, -1, 147, 85, 0, 100]" + "'", str56, "[0, -1, 147, 85, 0, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, -1, 148, 86, 0, 100]" + "'", str57, "[0, -1, 148, 86, 0, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, -1, 149, 87, 0, 100]" + "'", str58, "[0, -1, 149, 87, 0, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, -1, 150, 88, 0, 100]" + "'", str59, "[0, -1, 150, 88, 0, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, -1, 151, 89, 0, 100]" + "'", str60, "[0, -1, 151, 89, 0, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, -1, 152, 90, 0, 100]" + "'", str61, "[0, -1, 152, 90, 0, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, -1, 153, 91, 0, 100]" + "'", str62, "[0, -1, 153, 91, 0, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, -1, 154, 92, 0, 100]" + "'", str63, "[0, -1, 154, 92, 0, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, -1, 155, 93, 0, 100]" + "'", str64, "[0, -1, 155, 93, 0, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, -1, 156, 94, 0, 100]" + "'", str65, "[0, -1, 156, 94, 0, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, -1, 157, 95, 0, 100]" + "'", str66, "[0, -1, 157, 95, 0, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, -1, 158, 96, 0, 100]" + "'", str67, "[0, -1, 158, 96, 0, 100]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test6179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6179");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass26 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[4]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test6180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6180");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass82 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 176, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 52, 0]" + "'", str29, "[1, 0, 124, 52, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 52, 0]" + "'", str30, "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 52, 0]" + "'", str31, "[1, 0, 126, 52, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 52, 0]" + "'", str32, "[1, 0, 127, 52, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 52, 0]" + "'", str33, "[1, 0, 128, 52, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 52, 0]" + "'", str34, "[1, 0, 129, 52, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 52, 0]" + "'", str35, "[1, 0, 130, 52, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 52, 0]" + "'", str36, "[1, 0, 131, 52, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 52, 0]" + "'", str37, "[1, 0, 132, 52, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 52, 0]" + "'", str38, "[1, 0, 133, 52, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 52, 0]" + "'", str39, "[1, 0, 134, 52, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 52, 0]" + "'", str40, "[1, 0, 135, 52, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 52, 0]" + "'", str41, "[1, 0, 136, 52, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 52, 0]" + "'", str42, "[1, 0, 137, 52, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 52, 0]" + "'", str43, "[1, 0, 138, 52, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 52, 0]" + "'", str44, "[1, 0, 139, 52, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 52, 0]" + "'", str45, "[1, 0, 140, 52, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 52, 0]" + "'", str46, "[1, 0, 141, 52, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 52, 0]" + "'", str47, "[1, 0, 142, 52, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 52, 0]" + "'", str48, "[1, 0, 143, 52, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 52, 0]" + "'", str49, "[1, 0, 144, 52, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 52, 0]" + "'", str50, "[1, 0, 145, 52, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 52, 0]" + "'", str51, "[1, 0, 146, 52, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 52, 0]" + "'", str52, "[1, 0, 147, 52, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 52, 0]" + "'", str53, "[1, 0, 148, 52, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 52, 0]" + "'", str54, "[1, 0, 149, 52, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 52, 0]" + "'", str55, "[1, 0, 150, 52, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 52, 0]" + "'", str56, "[1, 0, 151, 52, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 52, 0]" + "'", str57, "[1, 0, 152, 52, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 52, 0]" + "'", str58, "[1, 0, 153, 52, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 52, 0]" + "'", str59, "[1, 0, 154, 52, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 52, 0]" + "'", str60, "[1, 0, 155, 52, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 52, 0]" + "'", str61, "[1, 0, 156, 52, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 52, 0]" + "'", str62, "[1, 0, 157, 52, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 52, 0]" + "'", str63, "[1, 0, 158, 52, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 52, 0]" + "'", str64, "[1, 0, 159, 52, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 52, 0]" + "'", str65, "[1, 0, 160, 52, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 52, 0]" + "'", str66, "[1, 0, 161, 52, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 52, 0]" + "'", str67, "[1, 0, 162, 52, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 52, 0]" + "'", str68, "[1, 0, 163, 52, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 52, 0]" + "'", str69, "[1, 0, 164, 52, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 52, 0]" + "'", str70, "[1, 0, 165, 52, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 52, 0]" + "'", str71, "[1, 0, 166, 52, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 52, 0]" + "'", str72, "[1, 0, 167, 52, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 52, 0]" + "'", str73, "[1, 0, 168, 52, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 52, 0]" + "'", str74, "[1, 0, 169, 52, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 52, 0]" + "'", str75, "[1, 0, 170, 52, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 52, 0]" + "'", str76, "[1, 0, 171, 52, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 0, 172, 52, 0]" + "'", str77, "[1, 0, 172, 52, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 0, 173, 52, 0]" + "'", str78, "[1, 0, 173, 52, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 0, 174, 52, 0]" + "'", str79, "[1, 0, 174, 52, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 0, 175, 52, 0]" + "'", str80, "[1, 0, 175, 52, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 176, 52, 0]" + "'", str81, "[1, 0, 176, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test6181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6181");
        int[] intArray5 = new int[] { (short) 100, (short) 100, (byte) 1, 100, (byte) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass61 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 105, 6, 105, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, 100, 10]" + "'", str6, "[100, 100, 2, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, 100, 10]" + "'", str7, "[100, 100, 3, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, 100, 10]" + "'", str8, "[100, 100, 4, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, 100, 10]" + "'", str9, "[100, 100, 5, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, 100, 10]" + "'", str10, "[100, 100, 6, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, 100, 10]" + "'", str11, "[100, 100, 7, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, 100, 10]" + "'", str12, "[100, 100, 8, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, 100, 10]" + "'", str13, "[100, 100, 9, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 101, 10]" + "'", str14, "[100, 101, 0, 101, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 101, 10]" + "'", str15, "[100, 101, 1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 101, 10]" + "'", str16, "[100, 101, 2, 101, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 101, 10]" + "'", str17, "[100, 101, 3, 101, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 101, 10]" + "'", str18, "[100, 101, 4, 101, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 101, 10]" + "'", str19, "[100, 101, 5, 101, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 101, 10]" + "'", str20, "[100, 101, 6, 101, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 101, 10]" + "'", str21, "[100, 101, 7, 101, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 101, 10]" + "'", str22, "[100, 101, 8, 101, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 101, 10]" + "'", str23, "[100, 101, 9, 101, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 102, 10]" + "'", str24, "[100, 102, 0, 102, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 102, 10]" + "'", str25, "[100, 102, 1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 102, 10]" + "'", str26, "[100, 102, 2, 102, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 102, 10]" + "'", str27, "[100, 102, 3, 102, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 102, 10]" + "'", str28, "[100, 102, 4, 102, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 102, 10]" + "'", str29, "[100, 102, 5, 102, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 102, 10]" + "'", str30, "[100, 102, 6, 102, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 102, 10]" + "'", str31, "[100, 102, 7, 102, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 102, 10]" + "'", str32, "[100, 102, 8, 102, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 102, 10]" + "'", str33, "[100, 102, 9, 102, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 103, 10]" + "'", str34, "[100, 103, 0, 103, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 103, 10]" + "'", str35, "[100, 103, 1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 103, 10]" + "'", str36, "[100, 103, 2, 103, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 103, 10]" + "'", str37, "[100, 103, 3, 103, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 103, 10]" + "'", str38, "[100, 103, 4, 103, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 103, 10]" + "'", str39, "[100, 103, 5, 103, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 103, 10]" + "'", str40, "[100, 103, 6, 103, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 103, 10]" + "'", str41, "[100, 103, 7, 103, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 103, 8, 103, 10]" + "'", str42, "[100, 103, 8, 103, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 103, 9, 103, 10]" + "'", str43, "[100, 103, 9, 103, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 104, 0, 104, 10]" + "'", str44, "[100, 104, 0, 104, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 104, 1, 104, 10]" + "'", str45, "[100, 104, 1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 104, 2, 104, 10]" + "'", str46, "[100, 104, 2, 104, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 104, 3, 104, 10]" + "'", str47, "[100, 104, 3, 104, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 104, 4, 104, 10]" + "'", str48, "[100, 104, 4, 104, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 104, 5, 104, 10]" + "'", str49, "[100, 104, 5, 104, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 104, 6, 104, 10]" + "'", str50, "[100, 104, 6, 104, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 104, 7, 104, 10]" + "'", str51, "[100, 104, 7, 104, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 104, 8, 104, 10]" + "'", str52, "[100, 104, 8, 104, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 104, 9, 104, 10]" + "'", str53, "[100, 104, 9, 104, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 105, 0, 105, 10]" + "'", str54, "[100, 105, 0, 105, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 105, 1, 105, 10]" + "'", str55, "[100, 105, 1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 105, 2, 105, 10]" + "'", str56, "[100, 105, 2, 105, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 105, 3, 105, 10]" + "'", str57, "[100, 105, 3, 105, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 105, 4, 105, 10]" + "'", str58, "[100, 105, 4, 105, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 105, 5, 105, 10]" + "'", str59, "[100, 105, 5, 105, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 105, 6, 105, 10]" + "'", str60, "[100, 105, 6, 105, 10]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test6182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6182");
        int[] intArray3 = new int[] { (short) 10, '#', 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass36 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 67, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 36, 10]" + "'", str4, "[10, 36, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 37, 10]" + "'", str5, "[10, 37, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 38, 10]" + "'", str6, "[10, 38, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 39, 10]" + "'", str7, "[10, 39, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 40, 10]" + "'", str8, "[10, 40, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 41, 10]" + "'", str9, "[10, 41, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 42, 10]" + "'", str10, "[10, 42, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 43, 10]" + "'", str11, "[10, 43, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 44, 10]" + "'", str12, "[10, 44, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 45, 10]" + "'", str13, "[10, 45, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 46, 10]" + "'", str14, "[10, 46, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 47, 10]" + "'", str15, "[10, 47, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 48, 10]" + "'", str16, "[10, 48, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 49, 10]" + "'", str17, "[10, 49, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 50, 10]" + "'", str18, "[10, 50, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 51, 10]" + "'", str19, "[10, 51, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 52, 10]" + "'", str20, "[10, 52, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 53, 10]" + "'", str21, "[10, 53, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 54, 10]" + "'", str22, "[10, 54, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 55, 10]" + "'", str23, "[10, 55, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 56, 10]" + "'", str24, "[10, 56, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 57, 10]" + "'", str25, "[10, 57, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 58, 10]" + "'", str26, "[10, 58, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 59, 10]" + "'", str27, "[10, 59, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 60, 10]" + "'", str28, "[10, 60, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 61, 10]" + "'", str29, "[10, 61, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 62, 10]" + "'", str30, "[10, 62, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 63, 10]" + "'", str31, "[10, 63, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 64, 10]" + "'", str32, "[10, 64, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 65, 10]" + "'", str33, "[10, 65, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[10, 66, 10]" + "'", str34, "[10, 66, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 67, 10]" + "'", str35, "[10, 67, 10]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test6183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6183");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 118, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 54, 1]" + "'", str22, "[32, 54, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 55, 1]" + "'", str23, "[32, 55, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 56, 1]" + "'", str24, "[32, 56, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 57, 1]" + "'", str25, "[32, 57, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 58, 1]" + "'", str26, "[32, 58, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 59, 1]" + "'", str27, "[32, 59, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 60, 1]" + "'", str28, "[32, 60, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 61, 1]" + "'", str29, "[32, 61, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 62, 1]" + "'", str30, "[32, 62, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 63, 1]" + "'", str31, "[32, 63, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 64, 1]" + "'", str32, "[32, 64, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 65, 1]" + "'", str33, "[32, 65, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 66, 1]" + "'", str34, "[32, 66, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 67, 1]" + "'", str35, "[32, 67, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 68, 1]" + "'", str36, "[32, 68, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 69, 1]" + "'", str37, "[32, 69, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 70, 1]" + "'", str38, "[32, 70, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 71, 1]" + "'", str39, "[32, 71, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 72, 1]" + "'", str40, "[32, 72, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[32, 73, 1]" + "'", str41, "[32, 73, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[32, 74, 1]" + "'", str42, "[32, 74, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[32, 75, 1]" + "'", str43, "[32, 75, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[32, 76, 1]" + "'", str44, "[32, 76, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[32, 77, 1]" + "'", str45, "[32, 77, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[32, 78, 1]" + "'", str46, "[32, 78, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[32, 79, 1]" + "'", str47, "[32, 79, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[32, 80, 1]" + "'", str48, "[32, 80, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[32, 81, 1]" + "'", str49, "[32, 81, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[32, 82, 1]" + "'", str50, "[32, 82, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[32, 83, 1]" + "'", str51, "[32, 83, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[32, 84, 1]" + "'", str52, "[32, 84, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[32, 85, 1]" + "'", str53, "[32, 85, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[32, 86, 1]" + "'", str54, "[32, 86, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[32, 87, 1]" + "'", str55, "[32, 87, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[32, 88, 1]" + "'", str56, "[32, 88, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[32, 89, 1]" + "'", str57, "[32, 89, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[32, 90, 1]" + "'", str58, "[32, 90, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[32, 91, 1]" + "'", str59, "[32, 91, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[32, 92, 1]" + "'", str60, "[32, 92, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[32, 93, 1]" + "'", str61, "[32, 93, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[32, 94, 1]" + "'", str62, "[32, 94, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[32, 95, 1]" + "'", str63, "[32, 95, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[32, 96, 1]" + "'", str64, "[32, 96, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[32, 97, 1]" + "'", str65, "[32, 97, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[32, 98, 1]" + "'", str66, "[32, 98, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[32, 99, 1]" + "'", str67, "[32, 99, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[32, 100, 1]" + "'", str68, "[32, 100, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[32, 101, 1]" + "'", str69, "[32, 101, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[32, 102, 1]" + "'", str70, "[32, 102, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[32, 103, 1]" + "'", str71, "[32, 103, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[32, 104, 1]" + "'", str72, "[32, 104, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[32, 105, 1]" + "'", str73, "[32, 105, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[32, 106, 1]" + "'", str74, "[32, 106, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[32, 107, 1]" + "'", str75, "[32, 107, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[32, 108, 1]" + "'", str76, "[32, 108, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[32, 109, 1]" + "'", str77, "[32, 109, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[32, 110, 1]" + "'", str78, "[32, 110, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[32, 111, 1]" + "'", str79, "[32, 111, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[32, 112, 1]" + "'", str80, "[32, 112, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[32, 113, 1]" + "'", str81, "[32, 113, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[32, 114, 1]" + "'", str82, "[32, 114, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[32, 115, 1]" + "'", str83, "[32, 115, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[32, 116, 1]" + "'", str84, "[32, 116, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[32, 117, 1]" + "'", str85, "[32, 117, 1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[32, 118, 1]" + "'", str86, "[32, 118, 1]");
    }

    @Test
    public void test6184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6184");
        int[] intArray1 = new int[] { '4' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass53 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[103]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[53]" + "'", str2, "[53]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[54]" + "'", str3, "[54]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[55]" + "'", str4, "[55]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[56]" + "'", str5, "[56]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[57]" + "'", str6, "[57]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[58]" + "'", str7, "[58]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[59]" + "'", str8, "[59]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[60]" + "'", str9, "[60]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[61]" + "'", str10, "[61]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[62]" + "'", str11, "[62]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[63]" + "'", str12, "[63]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[64]" + "'", str13, "[64]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[65]" + "'", str14, "[65]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[66]" + "'", str15, "[66]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[67]" + "'", str16, "[67]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[68]" + "'", str17, "[68]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[69]" + "'", str18, "[69]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[70]" + "'", str19, "[70]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[71]" + "'", str20, "[71]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[72]" + "'", str21, "[72]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[73]" + "'", str22, "[73]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[74]" + "'", str23, "[74]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[75]" + "'", str24, "[75]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[76]" + "'", str25, "[76]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[77]" + "'", str26, "[77]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[78]" + "'", str27, "[78]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[79]" + "'", str28, "[79]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[80]" + "'", str29, "[80]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[81]" + "'", str30, "[81]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[82]" + "'", str31, "[82]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[83]" + "'", str32, "[83]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[84]" + "'", str33, "[84]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[85]" + "'", str34, "[85]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[86]" + "'", str35, "[86]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[87]" + "'", str36, "[87]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[88]" + "'", str37, "[88]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[89]" + "'", str38, "[89]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[90]" + "'", str39, "[90]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[91]" + "'", str40, "[91]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[92]" + "'", str41, "[92]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[93]" + "'", str42, "[93]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[94]" + "'", str43, "[94]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[95]" + "'", str44, "[95]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[96]" + "'", str45, "[96]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97]" + "'", str46, "[97]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[98]" + "'", str47, "[98]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[99]" + "'", str48, "[99]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100]" + "'", str49, "[100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101]" + "'", str50, "[101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[102]" + "'", str51, "[102]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[103]" + "'", str52, "[103]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test6185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6185");
        int[] intArray2 = new int[] { (byte) -1, 100 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass5 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 102]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 101]" + "'", str3, "[0, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 102]" + "'", str4, "[1, 102]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test6186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6186");
        int[] intArray3 = new int[] { (short) 10, '#', 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass37 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 68, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 36, 10]" + "'", str4, "[10, 36, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 37, 10]" + "'", str5, "[10, 37, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 38, 10]" + "'", str6, "[10, 38, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 39, 10]" + "'", str7, "[10, 39, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 40, 10]" + "'", str8, "[10, 40, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 41, 10]" + "'", str9, "[10, 41, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 42, 10]" + "'", str10, "[10, 42, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 43, 10]" + "'", str11, "[10, 43, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 44, 10]" + "'", str12, "[10, 44, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 45, 10]" + "'", str13, "[10, 45, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 46, 10]" + "'", str14, "[10, 46, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 47, 10]" + "'", str15, "[10, 47, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 48, 10]" + "'", str16, "[10, 48, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 49, 10]" + "'", str17, "[10, 49, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 50, 10]" + "'", str18, "[10, 50, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 51, 10]" + "'", str19, "[10, 51, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 52, 10]" + "'", str20, "[10, 52, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 53, 10]" + "'", str21, "[10, 53, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 54, 10]" + "'", str22, "[10, 54, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 55, 10]" + "'", str23, "[10, 55, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 56, 10]" + "'", str24, "[10, 56, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 57, 10]" + "'", str25, "[10, 57, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 58, 10]" + "'", str26, "[10, 58, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 59, 10]" + "'", str27, "[10, 59, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 60, 10]" + "'", str28, "[10, 60, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 61, 10]" + "'", str29, "[10, 61, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 62, 10]" + "'", str30, "[10, 62, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 63, 10]" + "'", str31, "[10, 63, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 64, 10]" + "'", str32, "[10, 64, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 65, 10]" + "'", str33, "[10, 65, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[10, 66, 10]" + "'", str34, "[10, 66, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 67, 10]" + "'", str35, "[10, 67, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 68, 10]" + "'", str36, "[10, 68, 10]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test6187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6187");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 86, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 52, 17, -1, 1]" + "'", str12, "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 52, 18, -1, 1]" + "'", str13, "[97, 52, 18, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 52, 19, -1, 1]" + "'", str14, "[97, 52, 19, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 52, 20, -1, 1]" + "'", str15, "[97, 52, 20, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 52, 21, -1, 1]" + "'", str16, "[97, 52, 21, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 52, 22, -1, 1]" + "'", str17, "[97, 52, 22, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 52, 23, -1, 1]" + "'", str18, "[97, 52, 23, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 52, 24, -1, 1]" + "'", str19, "[97, 52, 24, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 52, 25, -1, 1]" + "'", str20, "[97, 52, 25, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 52, 26, -1, 1]" + "'", str21, "[97, 52, 26, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 52, 27, -1, 1]" + "'", str22, "[97, 52, 27, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 52, 28, -1, 1]" + "'", str23, "[97, 52, 28, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 52, 29, -1, 1]" + "'", str24, "[97, 52, 29, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 52, 30, -1, 1]" + "'", str25, "[97, 52, 30, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 52, 31, -1, 1]" + "'", str26, "[97, 52, 31, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 52, 32, -1, 1]" + "'", str27, "[97, 52, 32, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 52, 33, -1, 1]" + "'", str28, "[97, 52, 33, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 52, 34, -1, 1]" + "'", str29, "[97, 52, 34, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 52, 35, -1, 1]" + "'", str30, "[97, 52, 35, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 52, 36, -1, 1]" + "'", str31, "[97, 52, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 52, 37, -1, 1]" + "'", str32, "[97, 52, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 52, 38, -1, 1]" + "'", str33, "[97, 52, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 52, 39, -1, 1]" + "'", str34, "[97, 52, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 52, 40, -1, 1]" + "'", str35, "[97, 52, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 52, 41, -1, 1]" + "'", str36, "[97, 52, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 52, 42, -1, 1]" + "'", str37, "[97, 52, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 52, 43, -1, 1]" + "'", str38, "[97, 52, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 52, 44, -1, 1]" + "'", str39, "[97, 52, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 52, 45, -1, 1]" + "'", str40, "[97, 52, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 52, 46, -1, 1]" + "'", str41, "[97, 52, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 52, 47, -1, 1]" + "'", str42, "[97, 52, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 52, 48, -1, 1]" + "'", str43, "[97, 52, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 52, 49, -1, 1]" + "'", str44, "[97, 52, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 52, 50, -1, 1]" + "'", str45, "[97, 52, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 51, -1, 1]" + "'", str46, "[97, 52, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 52, 52, -1, 1]" + "'", str47, "[97, 52, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 52, 53, -1, 1]" + "'", str48, "[97, 52, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 52, 54, -1, 1]" + "'", str49, "[97, 52, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 52, 55, -1, 1]" + "'", str50, "[97, 52, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 52, 56, -1, 1]" + "'", str51, "[97, 52, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 52, 57, -1, 1]" + "'", str52, "[97, 52, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 52, 58, -1, 1]" + "'", str53, "[97, 52, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 52, 59, -1, 1]" + "'", str54, "[97, 52, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 52, 60, -1, 1]" + "'", str55, "[97, 52, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 52, 61, -1, 1]" + "'", str56, "[97, 52, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 52, 62, -1, 1]" + "'", str57, "[97, 52, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 52, 63, -1, 1]" + "'", str58, "[97, 52, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 52, 64, -1, 1]" + "'", str59, "[97, 52, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 52, 65, -1, 1]" + "'", str60, "[97, 52, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 52, 66, -1, 1]" + "'", str61, "[97, 52, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 52, 67, -1, 1]" + "'", str62, "[97, 52, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 52, 68, -1, 1]" + "'", str63, "[97, 52, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 52, 69, -1, 1]" + "'", str64, "[97, 52, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 52, 70, -1, 1]" + "'", str65, "[97, 52, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 52, 71, -1, 1]" + "'", str66, "[97, 52, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 52, 72, -1, 1]" + "'", str67, "[97, 52, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 52, 73, -1, 1]" + "'", str68, "[97, 52, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 52, 74, -1, 1]" + "'", str69, "[97, 52, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 52, 75, -1, 1]" + "'", str70, "[97, 52, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 52, 76, -1, 1]" + "'", str71, "[97, 52, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 52, 77, -1, 1]" + "'", str72, "[97, 52, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 52, 78, -1, 1]" + "'", str73, "[97, 52, 78, -1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 52, 79, -1, 1]" + "'", str74, "[97, 52, 79, -1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 52, 80, -1, 1]" + "'", str75, "[97, 52, 80, -1, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 52, 81, -1, 1]" + "'", str76, "[97, 52, 81, -1, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 52, 82, -1, 1]" + "'", str77, "[97, 52, 82, -1, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 52, 83, -1, 1]" + "'", str78, "[97, 52, 83, -1, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 52, 84, -1, 1]" + "'", str79, "[97, 52, 84, -1, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 52, 85, -1, 1]" + "'", str80, "[97, 52, 85, -1, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[97, 52, 86, -1, 1]" + "'", str81, "[97, 52, 86, -1, 1]");
    }

    @Test
    public void test6188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6188");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass94 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1]" + "'", str73, "[1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2]" + "'", str74, "[2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[3]" + "'", str75, "[3]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[4]" + "'", str76, "[4]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[5]" + "'", str77, "[5]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6]" + "'", str78, "[6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7]" + "'", str79, "[7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8]" + "'", str80, "[8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[9]" + "'", str81, "[9]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1]" + "'", str82, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1]" + "'", str83, "[1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[2]" + "'", str84, "[2]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[3]" + "'", str85, "[3]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[4]" + "'", str86, "[4]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[5]" + "'", str87, "[5]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[6]" + "'", str88, "[6]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7]" + "'", str89, "[7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8]" + "'", str90, "[8]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9]" + "'", str91, "[9]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 1]" + "'", str92, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1]" + "'", str93, "[1]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test6189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6189");
        int[] intArray5 = new int[] { (byte) -1, '#', 10, (-1), 100 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass54 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 35, 58, -1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 35, 11, -1, 100]" + "'", str6, "[-1, 35, 11, -1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 35, 12, -1, 100]" + "'", str7, "[-1, 35, 12, -1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 35, 13, -1, 100]" + "'", str8, "[-1, 35, 13, -1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 35, 14, -1, 100]" + "'", str9, "[-1, 35, 14, -1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 35, 15, -1, 100]" + "'", str10, "[-1, 35, 15, -1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 35, 16, -1, 100]" + "'", str11, "[-1, 35, 16, -1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 35, 17, -1, 100]" + "'", str12, "[-1, 35, 17, -1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 35, 18, -1, 100]" + "'", str13, "[-1, 35, 18, -1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 35, 19, -1, 100]" + "'", str14, "[-1, 35, 19, -1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 35, 20, -1, 100]" + "'", str15, "[-1, 35, 20, -1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 35, 21, -1, 100]" + "'", str16, "[-1, 35, 21, -1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 35, 22, -1, 100]" + "'", str17, "[-1, 35, 22, -1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 35, 23, -1, 100]" + "'", str18, "[-1, 35, 23, -1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 35, 24, -1, 100]" + "'", str19, "[-1, 35, 24, -1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 35, 25, -1, 100]" + "'", str20, "[-1, 35, 25, -1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 35, 26, -1, 100]" + "'", str21, "[-1, 35, 26, -1, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 35, 27, -1, 100]" + "'", str22, "[-1, 35, 27, -1, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 35, 28, -1, 100]" + "'", str23, "[-1, 35, 28, -1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 35, 29, -1, 100]" + "'", str24, "[-1, 35, 29, -1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 35, 30, -1, 100]" + "'", str25, "[-1, 35, 30, -1, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 35, 31, -1, 100]" + "'", str26, "[-1, 35, 31, -1, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 35, 32, -1, 100]" + "'", str27, "[-1, 35, 32, -1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 35, 33, -1, 100]" + "'", str28, "[-1, 35, 33, -1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 35, 34, -1, 100]" + "'", str29, "[-1, 35, 34, -1, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 35, 35, -1, 100]" + "'", str30, "[-1, 35, 35, -1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 35, 36, -1, 100]" + "'", str31, "[-1, 35, 36, -1, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 35, 37, -1, 100]" + "'", str32, "[-1, 35, 37, -1, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 35, 38, -1, 100]" + "'", str33, "[-1, 35, 38, -1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 35, 39, -1, 100]" + "'", str34, "[-1, 35, 39, -1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 35, 40, -1, 100]" + "'", str35, "[-1, 35, 40, -1, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 35, 41, -1, 100]" + "'", str36, "[-1, 35, 41, -1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 35, 42, -1, 100]" + "'", str37, "[-1, 35, 42, -1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 43, -1, 100]" + "'", str38, "[-1, 35, 43, -1, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 35, 44, -1, 100]" + "'", str39, "[-1, 35, 44, -1, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 35, 45, -1, 100]" + "'", str40, "[-1, 35, 45, -1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 35, 46, -1, 100]" + "'", str41, "[-1, 35, 46, -1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 35, 47, -1, 100]" + "'", str42, "[-1, 35, 47, -1, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 35, 48, -1, 100]" + "'", str43, "[-1, 35, 48, -1, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 35, 49, -1, 100]" + "'", str44, "[-1, 35, 49, -1, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 35, 50, -1, 100]" + "'", str45, "[-1, 35, 50, -1, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 35, 51, -1, 100]" + "'", str46, "[-1, 35, 51, -1, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 35, 52, -1, 100]" + "'", str47, "[-1, 35, 52, -1, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 35, 53, -1, 100]" + "'", str48, "[-1, 35, 53, -1, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 35, 54, -1, 100]" + "'", str49, "[-1, 35, 54, -1, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 35, 55, -1, 100]" + "'", str50, "[-1, 35, 55, -1, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 35, 56, -1, 100]" + "'", str51, "[-1, 35, 56, -1, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 35, 57, -1, 100]" + "'", str52, "[-1, 35, 57, -1, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 35, 58, -1, 100]" + "'", str53, "[-1, 35, 58, -1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test6190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6190");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass95 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1]" + "'", str73, "[1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2]" + "'", str74, "[2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[3]" + "'", str75, "[3]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[4]" + "'", str76, "[4]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[5]" + "'", str77, "[5]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6]" + "'", str78, "[6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7]" + "'", str79, "[7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8]" + "'", str80, "[8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[9]" + "'", str81, "[9]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1]" + "'", str82, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1]" + "'", str83, "[1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[2]" + "'", str84, "[2]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[3]" + "'", str85, "[3]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[4]" + "'", str86, "[4]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[5]" + "'", str87, "[5]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[6]" + "'", str88, "[6]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7]" + "'", str89, "[7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8]" + "'", str90, "[8]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9]" + "'", str91, "[9]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 1]" + "'", str92, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1]" + "'", str93, "[1]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[2]" + "'", str94, "[2]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test6191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6191");
        int[] intArray6 = new int[] { 100, (byte) 10, 'a', 'a', (byte) 100, ' ' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass77 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 10, 167, 167, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 98, 98, 100, 32]" + "'", str7, "[100, 10, 98, 98, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 99, 99, 100, 32]" + "'", str8, "[100, 10, 99, 99, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 100, 100, 100, 32]" + "'", str9, "[100, 10, 100, 100, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 101, 101, 100, 32]" + "'", str10, "[100, 10, 101, 101, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 102, 102, 100, 32]" + "'", str11, "[100, 10, 102, 102, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 103, 103, 100, 32]" + "'", str12, "[100, 10, 103, 103, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 104, 104, 100, 32]" + "'", str13, "[100, 10, 104, 104, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 105, 105, 100, 32]" + "'", str14, "[100, 10, 105, 105, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 106, 106, 100, 32]" + "'", str15, "[100, 10, 106, 106, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 107, 107, 100, 32]" + "'", str16, "[100, 10, 107, 107, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 108, 108, 100, 32]" + "'", str17, "[100, 10, 108, 108, 100, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 109, 109, 100, 32]" + "'", str18, "[100, 10, 109, 109, 100, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 110, 110, 100, 32]" + "'", str19, "[100, 10, 110, 110, 100, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 111, 111, 100, 32]" + "'", str20, "[100, 10, 111, 111, 100, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 112, 112, 100, 32]" + "'", str21, "[100, 10, 112, 112, 100, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 113, 113, 100, 32]" + "'", str22, "[100, 10, 113, 113, 100, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 114, 114, 100, 32]" + "'", str23, "[100, 10, 114, 114, 100, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 115, 115, 100, 32]" + "'", str24, "[100, 10, 115, 115, 100, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 116, 116, 100, 32]" + "'", str25, "[100, 10, 116, 116, 100, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 117, 117, 100, 32]" + "'", str26, "[100, 10, 117, 117, 100, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 118, 118, 100, 32]" + "'", str27, "[100, 10, 118, 118, 100, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 119, 119, 100, 32]" + "'", str28, "[100, 10, 119, 119, 100, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 120, 120, 100, 32]" + "'", str29, "[100, 10, 120, 120, 100, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 121, 121, 100, 32]" + "'", str30, "[100, 10, 121, 121, 100, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 122, 122, 100, 32]" + "'", str31, "[100, 10, 122, 122, 100, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 123, 123, 100, 32]" + "'", str32, "[100, 10, 123, 123, 100, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 124, 124, 100, 32]" + "'", str33, "[100, 10, 124, 124, 100, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 125, 125, 100, 32]" + "'", str34, "[100, 10, 125, 125, 100, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 126, 126, 100, 32]" + "'", str35, "[100, 10, 126, 126, 100, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 127, 127, 100, 32]" + "'", str36, "[100, 10, 127, 127, 100, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 128, 128, 100, 32]" + "'", str37, "[100, 10, 128, 128, 100, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 129, 129, 100, 32]" + "'", str38, "[100, 10, 129, 129, 100, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 130, 130, 100, 32]" + "'", str39, "[100, 10, 130, 130, 100, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 131, 131, 100, 32]" + "'", str40, "[100, 10, 131, 131, 100, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 132, 132, 100, 32]" + "'", str41, "[100, 10, 132, 132, 100, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 133, 133, 100, 32]" + "'", str42, "[100, 10, 133, 133, 100, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 134, 134, 100, 32]" + "'", str43, "[100, 10, 134, 134, 100, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 10, 135, 135, 100, 32]" + "'", str44, "[100, 10, 135, 135, 100, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 10, 136, 136, 100, 32]" + "'", str45, "[100, 10, 136, 136, 100, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 10, 137, 137, 100, 32]" + "'", str46, "[100, 10, 137, 137, 100, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 10, 138, 138, 100, 32]" + "'", str47, "[100, 10, 138, 138, 100, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 10, 139, 139, 100, 32]" + "'", str48, "[100, 10, 139, 139, 100, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 10, 140, 140, 100, 32]" + "'", str49, "[100, 10, 140, 140, 100, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 10, 141, 141, 100, 32]" + "'", str50, "[100, 10, 141, 141, 100, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 10, 142, 142, 100, 32]" + "'", str51, "[100, 10, 142, 142, 100, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 10, 143, 143, 100, 32]" + "'", str52, "[100, 10, 143, 143, 100, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 10, 144, 144, 100, 32]" + "'", str53, "[100, 10, 144, 144, 100, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 10, 145, 145, 100, 32]" + "'", str54, "[100, 10, 145, 145, 100, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 10, 146, 146, 100, 32]" + "'", str55, "[100, 10, 146, 146, 100, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 10, 147, 147, 100, 32]" + "'", str56, "[100, 10, 147, 147, 100, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 10, 148, 148, 100, 32]" + "'", str57, "[100, 10, 148, 148, 100, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 10, 149, 149, 100, 32]" + "'", str58, "[100, 10, 149, 149, 100, 32]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 10, 150, 150, 100, 32]" + "'", str59, "[100, 10, 150, 150, 100, 32]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 10, 151, 151, 100, 32]" + "'", str60, "[100, 10, 151, 151, 100, 32]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 10, 152, 152, 100, 32]" + "'", str61, "[100, 10, 152, 152, 100, 32]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 10, 153, 153, 100, 32]" + "'", str62, "[100, 10, 153, 153, 100, 32]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 10, 154, 154, 100, 32]" + "'", str63, "[100, 10, 154, 154, 100, 32]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 10, 155, 155, 100, 32]" + "'", str64, "[100, 10, 155, 155, 100, 32]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 10, 156, 156, 100, 32]" + "'", str65, "[100, 10, 156, 156, 100, 32]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 10, 157, 157, 100, 32]" + "'", str66, "[100, 10, 157, 157, 100, 32]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 10, 158, 158, 100, 32]" + "'", str67, "[100, 10, 158, 158, 100, 32]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 10, 159, 159, 100, 32]" + "'", str68, "[100, 10, 159, 159, 100, 32]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 10, 160, 160, 100, 32]" + "'", str69, "[100, 10, 160, 160, 100, 32]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 10, 161, 161, 100, 32]" + "'", str70, "[100, 10, 161, 161, 100, 32]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 10, 162, 162, 100, 32]" + "'", str71, "[100, 10, 162, 162, 100, 32]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 10, 163, 163, 100, 32]" + "'", str72, "[100, 10, 163, 163, 100, 32]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 10, 164, 164, 100, 32]" + "'", str73, "[100, 10, 164, 164, 100, 32]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 10, 165, 165, 100, 32]" + "'", str74, "[100, 10, 165, 165, 100, 32]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 10, 166, 166, 100, 32]" + "'", str75, "[100, 10, 166, 166, 100, 32]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 10, 167, 167, 100, 32]" + "'", str76, "[100, 10, 167, 167, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test6192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6192");
        int[] intArray2 = new int[] { (byte) -1, (short) 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass32 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 2]" + "'", str3, "[0, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 3]" + "'", str4, "[1, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 4]" + "'", str5, "[2, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 5]" + "'", str6, "[3, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 6]" + "'", str7, "[4, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 7]" + "'", str8, "[5, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 8]" + "'", str9, "[6, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 9]" + "'", str10, "[7, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test6193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6193");
        int[] intArray4 = new int[] { (byte) -1, 0, (byte) -1, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass27 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 0, 52]" + "'", str5, "[-1, 1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 1, 52]" + "'", str6, "[-1, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 3, 2, 52]" + "'", str7, "[-1, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 4, 3, 52]" + "'", str8, "[-1, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 5, 4, 52]" + "'", str9, "[-1, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 6, 5, 52]" + "'", str10, "[-1, 6, 5, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 7, 6, 52]" + "'", str11, "[-1, 7, 6, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 8, 7, 52]" + "'", str12, "[-1, 8, 7, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 9, 8, 52]" + "'", str13, "[-1, 9, 8, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 9, 52]" + "'", str14, "[-1, 10, 9, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 0, 0, 53]" + "'", str15, "[0, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 1, 53]" + "'", str16, "[0, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 53]" + "'", str17, "[0, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 3, 3, 53]" + "'", str18, "[0, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 4, 4, 53]" + "'", str19, "[0, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 5, 5, 53]" + "'", str20, "[0, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 6, 6, 53]" + "'", str21, "[0, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 7, 7, 53]" + "'", str22, "[0, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 8, 8, 53]" + "'", str23, "[0, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 9, 9, 53]" + "'", str24, "[0, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 0, 54]" + "'", str25, "[1, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 1, 54]" + "'", str26, "[1, 1, 1, 54]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test6194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6194");
        int[] intArray4 = new int[] { (byte) 1, (byte) 100, (short) 100, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass70 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 165, 165, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 101, 101, 0]" + "'", str5, "[1, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 102, 102, 0]" + "'", str6, "[1, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 103, 103, 0]" + "'", str7, "[1, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 104, 104, 0]" + "'", str8, "[1, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 105, 105, 0]" + "'", str9, "[1, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 106, 106, 0]" + "'", str10, "[1, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 107, 107, 0]" + "'", str11, "[1, 107, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 108, 108, 0]" + "'", str12, "[1, 108, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 109, 109, 0]" + "'", str13, "[1, 109, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 110, 110, 0]" + "'", str14, "[1, 110, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 111, 111, 0]" + "'", str15, "[1, 111, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 112, 112, 0]" + "'", str16, "[1, 112, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 113, 113, 0]" + "'", str17, "[1, 113, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 114, 114, 0]" + "'", str18, "[1, 114, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 115, 115, 0]" + "'", str19, "[1, 115, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 116, 116, 0]" + "'", str20, "[1, 116, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 117, 117, 0]" + "'", str21, "[1, 117, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 118, 118, 0]" + "'", str22, "[1, 118, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 119, 119, 0]" + "'", str23, "[1, 119, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 120, 120, 0]" + "'", str24, "[1, 120, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 121, 121, 0]" + "'", str25, "[1, 121, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 122, 122, 0]" + "'", str26, "[1, 122, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 123, 123, 0]" + "'", str27, "[1, 123, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 124, 124, 0]" + "'", str28, "[1, 124, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 125, 125, 0]" + "'", str29, "[1, 125, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 126, 126, 0]" + "'", str30, "[1, 126, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 127, 127, 0]" + "'", str31, "[1, 127, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 128, 128, 0]" + "'", str32, "[1, 128, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 129, 129, 0]" + "'", str33, "[1, 129, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 130, 130, 0]" + "'", str34, "[1, 130, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 131, 131, 0]" + "'", str35, "[1, 131, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 132, 132, 0]" + "'", str36, "[1, 132, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 133, 133, 0]" + "'", str37, "[1, 133, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 134, 134, 0]" + "'", str38, "[1, 134, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 135, 135, 0]" + "'", str39, "[1, 135, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 136, 136, 0]" + "'", str40, "[1, 136, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 137, 137, 0]" + "'", str41, "[1, 137, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 138, 138, 0]" + "'", str42, "[1, 138, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 139, 139, 0]" + "'", str43, "[1, 139, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 140, 140, 0]" + "'", str44, "[1, 140, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 141, 141, 0]" + "'", str45, "[1, 141, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 142, 142, 0]" + "'", str46, "[1, 142, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 143, 143, 0]" + "'", str47, "[1, 143, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 144, 144, 0]" + "'", str48, "[1, 144, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 145, 145, 0]" + "'", str49, "[1, 145, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 146, 146, 0]" + "'", str50, "[1, 146, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 147, 147, 0]" + "'", str51, "[1, 147, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 148, 148, 0]" + "'", str52, "[1, 148, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 149, 149, 0]" + "'", str53, "[1, 149, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 150, 150, 0]" + "'", str54, "[1, 150, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 151, 151, 0]" + "'", str55, "[1, 151, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 152, 152, 0]" + "'", str56, "[1, 152, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 153, 153, 0]" + "'", str57, "[1, 153, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 154, 154, 0]" + "'", str58, "[1, 154, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 155, 155, 0]" + "'", str59, "[1, 155, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 156, 156, 0]" + "'", str60, "[1, 156, 156, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 157, 157, 0]" + "'", str61, "[1, 157, 157, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 158, 158, 0]" + "'", str62, "[1, 158, 158, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 159, 159, 0]" + "'", str63, "[1, 159, 159, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 160, 160, 0]" + "'", str64, "[1, 160, 160, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 161, 161, 0]" + "'", str65, "[1, 161, 161, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 162, 162, 0]" + "'", str66, "[1, 162, 162, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 163, 163, 0]" + "'", str67, "[1, 163, 163, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 164, 164, 0]" + "'", str68, "[1, 164, 164, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 165, 165, 0]" + "'", str69, "[1, 165, 165, 0]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test6195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6195");
        int[] intArray3 = new int[] { 1, 0, (short) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[9, 4, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 5]" + "'", str60, "[6, 7, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 5]" + "'", str61, "[6, 8, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 5]" + "'", str62, "[6, 9, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 6]" + "'", str63, "[7, 0, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 6]" + "'", str64, "[7, 1, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 6]" + "'", str65, "[7, 2, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 6]" + "'", str66, "[7, 3, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 6]" + "'", str67, "[7, 4, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 5, 6]" + "'", str68, "[7, 5, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 6, 6]" + "'", str69, "[7, 6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7, 6]" + "'", str70, "[7, 7, 6]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 8, 6]" + "'", str71, "[7, 8, 6]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 9, 6]" + "'", str72, "[7, 9, 6]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[8, 0, 7]" + "'", str73, "[8, 0, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 1, 7]" + "'", str74, "[8, 1, 7]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 2, 7]" + "'", str75, "[8, 2, 7]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 3, 7]" + "'", str76, "[8, 3, 7]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 4, 7]" + "'", str77, "[8, 4, 7]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 5, 7]" + "'", str78, "[8, 5, 7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 6, 7]" + "'", str79, "[8, 6, 7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 7, 7]" + "'", str80, "[8, 7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8, 7]" + "'", str81, "[8, 8, 7]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 9, 7]" + "'", str82, "[8, 9, 7]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[9, 0, 8]" + "'", str83, "[9, 0, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 1, 8]" + "'", str84, "[9, 1, 8]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 2, 8]" + "'", str85, "[9, 2, 8]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[9, 3, 8]" + "'", str86, "[9, 3, 8]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[9, 4, 8]" + "'", str87, "[9, 4, 8]");
    }

    @Test
    public void test6196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6196");
        int[] intArray4 = new int[] { (byte) 100, '#', (byte) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass20 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 50, 25, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 36, 11, -1]" + "'", str5, "[100, 36, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 37, 12, -1]" + "'", str6, "[100, 37, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 38, 13, -1]" + "'", str7, "[100, 38, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 39, 14, -1]" + "'", str8, "[100, 39, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 40, 15, -1]" + "'", str9, "[100, 40, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 41, 16, -1]" + "'", str10, "[100, 41, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 42, 17, -1]" + "'", str11, "[100, 42, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 43, 18, -1]" + "'", str12, "[100, 43, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 44, 19, -1]" + "'", str13, "[100, 44, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 45, 20, -1]" + "'", str14, "[100, 45, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 46, 21, -1]" + "'", str15, "[100, 46, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 47, 22, -1]" + "'", str16, "[100, 47, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 48, 23, -1]" + "'", str17, "[100, 48, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 49, 24, -1]" + "'", str18, "[100, 49, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 50, 25, -1]" + "'", str19, "[100, 50, 25, -1]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6197");
        int[] intArray3 = new int[] { 1, (byte) 0, (byte) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass70 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[7, 6, 6]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 5]" + "'", str60, "[6, 7, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 5]" + "'", str61, "[6, 8, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 5]" + "'", str62, "[6, 9, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 6]" + "'", str63, "[7, 0, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 6]" + "'", str64, "[7, 1, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 6]" + "'", str65, "[7, 2, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 6]" + "'", str66, "[7, 3, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 6]" + "'", str67, "[7, 4, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 5, 6]" + "'", str68, "[7, 5, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 6, 6]" + "'", str69, "[7, 6, 6]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test6198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6198");
        int[] intArray5 = new int[] { 1, (byte) 0, (-1), ' ', 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass23 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 0, 32, 1]" + "'", str6, "[1, 0, 0, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 32, 1]" + "'", str7, "[1, 0, 1, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 32, 1]" + "'", str8, "[1, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 32, 1]" + "'", str9, "[1, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 32, 1]" + "'", str10, "[1, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 32, 1]" + "'", str11, "[1, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 32, 1]" + "'", str12, "[1, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 32, 1]" + "'", str13, "[1, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 32, 1]" + "'", str14, "[1, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 32, 1]" + "'", str15, "[1, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 0, 33, 1]" + "'", str16, "[1, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 1, 33, 1]" + "'", str17, "[1, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 2, 33, 1]" + "'", str18, "[1, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 3, 33, 1]" + "'", str19, "[1, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 4, 33, 1]" + "'", str20, "[1, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 5, 33, 1]" + "'", str21, "[1, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 6, 33, 1]" + "'", str22, "[1, 1, 6, 33, 1]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test6199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6199");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass84 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 7, 7, 7, 8, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 16, 6, 1, 0]" + "'", str12, "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 17, 7, 1, 0]" + "'", str13, "[100, 0, 17, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 18, 8, 1, 0]" + "'", str14, "[100, 0, 18, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 0, 19, 9, 1, 0]" + "'", str15, "[100, 0, 19, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 1, 0, 0, 2, 0]" + "'", str16, "[100, 1, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 1, 1, 1, 2, 0]" + "'", str17, "[100, 1, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 1, 2, 2, 2, 0]" + "'", str18, "[100, 1, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 1, 3, 3, 2, 0]" + "'", str19, "[100, 1, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 1, 4, 4, 2, 0]" + "'", str20, "[100, 1, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 1, 5, 5, 2, 0]" + "'", str21, "[100, 1, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 1, 6, 6, 2, 0]" + "'", str22, "[100, 1, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 1, 7, 7, 2, 0]" + "'", str23, "[100, 1, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 1, 8, 8, 2, 0]" + "'", str24, "[100, 1, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 1, 9, 9, 2, 0]" + "'", str25, "[100, 1, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 2, 0, 0, 3, 0]" + "'", str26, "[100, 2, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 2, 1, 1, 3, 0]" + "'", str27, "[100, 2, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 2, 2, 2, 3, 0]" + "'", str28, "[100, 2, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 2, 3, 3, 3, 0]" + "'", str29, "[100, 2, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 2, 4, 4, 3, 0]" + "'", str30, "[100, 2, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 2, 5, 5, 3, 0]" + "'", str31, "[100, 2, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 2, 6, 6, 3, 0]" + "'", str32, "[100, 2, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 2, 7, 7, 3, 0]" + "'", str33, "[100, 2, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 2, 8, 8, 3, 0]" + "'", str34, "[100, 2, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 2, 9, 9, 3, 0]" + "'", str35, "[100, 2, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 3, 0, 0, 4, 0]" + "'", str36, "[100, 3, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 1, 1, 4, 0]" + "'", str37, "[100, 3, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 2, 2, 4, 0]" + "'", str38, "[100, 3, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 3, 3, 3, 4, 0]" + "'", str39, "[100, 3, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 3, 4, 4, 4, 0]" + "'", str40, "[100, 3, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 3, 5, 5, 4, 0]" + "'", str41, "[100, 3, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 3, 6, 6, 4, 0]" + "'", str42, "[100, 3, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 3, 7, 7, 4, 0]" + "'", str43, "[100, 3, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 3, 8, 8, 4, 0]" + "'", str44, "[100, 3, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 3, 9, 9, 4, 0]" + "'", str45, "[100, 3, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 4, 0, 0, 5, 0]" + "'", str46, "[100, 4, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 4, 1, 1, 5, 0]" + "'", str47, "[100, 4, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 4, 2, 2, 5, 0]" + "'", str48, "[100, 4, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 4, 3, 3, 5, 0]" + "'", str49, "[100, 4, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 4, 4, 4, 5, 0]" + "'", str50, "[100, 4, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 4, 5, 5, 5, 0]" + "'", str51, "[100, 4, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 4, 6, 6, 5, 0]" + "'", str52, "[100, 4, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 4, 7, 7, 5, 0]" + "'", str53, "[100, 4, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 4, 8, 8, 5, 0]" + "'", str54, "[100, 4, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 4, 9, 9, 5, 0]" + "'", str55, "[100, 4, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 5, 0, 0, 6, 0]" + "'", str56, "[100, 5, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 5, 1, 1, 6, 0]" + "'", str57, "[100, 5, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 5, 2, 2, 6, 0]" + "'", str58, "[100, 5, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 5, 3, 3, 6, 0]" + "'", str59, "[100, 5, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 5, 4, 4, 6, 0]" + "'", str60, "[100, 5, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 5, 5, 5, 6, 0]" + "'", str61, "[100, 5, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 5, 6, 6, 6, 0]" + "'", str62, "[100, 5, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 5, 7, 7, 6, 0]" + "'", str63, "[100, 5, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 5, 8, 8, 6, 0]" + "'", str64, "[100, 5, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 5, 9, 9, 6, 0]" + "'", str65, "[100, 5, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 6, 0, 0, 7, 0]" + "'", str66, "[100, 6, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 6, 1, 1, 7, 0]" + "'", str67, "[100, 6, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 6, 2, 2, 7, 0]" + "'", str68, "[100, 6, 2, 2, 7, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 6, 3, 3, 7, 0]" + "'", str69, "[100, 6, 3, 3, 7, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 6, 4, 4, 7, 0]" + "'", str70, "[100, 6, 4, 4, 7, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 6, 5, 5, 7, 0]" + "'", str71, "[100, 6, 5, 5, 7, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 6, 6, 6, 7, 0]" + "'", str72, "[100, 6, 6, 6, 7, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 6, 7, 7, 7, 0]" + "'", str73, "[100, 6, 7, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 6, 8, 8, 7, 0]" + "'", str74, "[100, 6, 8, 8, 7, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 6, 9, 9, 7, 0]" + "'", str75, "[100, 6, 9, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 7, 0, 0, 8, 0]" + "'", str76, "[100, 7, 0, 0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 7, 1, 1, 8, 0]" + "'", str77, "[100, 7, 1, 1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 7, 2, 2, 8, 0]" + "'", str78, "[100, 7, 2, 2, 8, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 7, 3, 3, 8, 0]" + "'", str79, "[100, 7, 3, 3, 8, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 7, 4, 4, 8, 0]" + "'", str80, "[100, 7, 4, 4, 8, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 7, 5, 5, 8, 0]" + "'", str81, "[100, 7, 5, 5, 8, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[100, 7, 6, 6, 8, 0]" + "'", str82, "[100, 7, 6, 6, 8, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[100, 7, 7, 7, 8, 0]" + "'", str83, "[100, 7, 7, 7, 8, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test6200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6200");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass73 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 167, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 100, 103, 10, 1]" + "'", str8, "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 100, 104, 10, 1]" + "'", str9, "[1, 100, 104, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 100, 105, 10, 1]" + "'", str10, "[1, 100, 105, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 100, 106, 10, 1]" + "'", str11, "[1, 100, 106, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 100, 107, 10, 1]" + "'", str12, "[1, 100, 107, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 100, 108, 10, 1]" + "'", str13, "[1, 100, 108, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 100, 109, 10, 1]" + "'", str14, "[1, 100, 109, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 100, 110, 10, 1]" + "'", str15, "[1, 100, 110, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 100, 111, 10, 1]" + "'", str16, "[1, 100, 111, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 100, 112, 10, 1]" + "'", str17, "[1, 100, 112, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 100, 113, 10, 1]" + "'", str18, "[1, 100, 113, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 100, 114, 10, 1]" + "'", str19, "[1, 100, 114, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 100, 115, 10, 1]" + "'", str20, "[1, 100, 115, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 100, 116, 10, 1]" + "'", str21, "[1, 100, 116, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 100, 117, 10, 1]" + "'", str22, "[1, 100, 117, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 100, 118, 10, 1]" + "'", str23, "[1, 100, 118, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 100, 119, 10, 1]" + "'", str24, "[1, 100, 119, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 100, 120, 10, 1]" + "'", str25, "[1, 100, 120, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 100, 121, 10, 1]" + "'", str26, "[1, 100, 121, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 100, 122, 10, 1]" + "'", str27, "[1, 100, 122, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 100, 123, 10, 1]" + "'", str28, "[1, 100, 123, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 100, 124, 10, 1]" + "'", str29, "[1, 100, 124, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 100, 125, 10, 1]" + "'", str30, "[1, 100, 125, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 100, 126, 10, 1]" + "'", str31, "[1, 100, 126, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 100, 127, 10, 1]" + "'", str32, "[1, 100, 127, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 100, 128, 10, 1]" + "'", str33, "[1, 100, 128, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 100, 129, 10, 1]" + "'", str34, "[1, 100, 129, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 100, 130, 10, 1]" + "'", str35, "[1, 100, 130, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 100, 131, 10, 1]" + "'", str36, "[1, 100, 131, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 100, 132, 10, 1]" + "'", str37, "[1, 100, 132, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 100, 133, 10, 1]" + "'", str38, "[1, 100, 133, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 100, 134, 10, 1]" + "'", str39, "[1, 100, 134, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 100, 135, 10, 1]" + "'", str40, "[1, 100, 135, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 100, 136, 10, 1]" + "'", str41, "[1, 100, 136, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 100, 137, 10, 1]" + "'", str42, "[1, 100, 137, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 100, 138, 10, 1]" + "'", str43, "[1, 100, 138, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 100, 139, 10, 1]" + "'", str44, "[1, 100, 139, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 100, 140, 10, 1]" + "'", str45, "[1, 100, 140, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 100, 141, 10, 1]" + "'", str46, "[1, 100, 141, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 100, 142, 10, 1]" + "'", str47, "[1, 100, 142, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 100, 143, 10, 1]" + "'", str48, "[1, 100, 143, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 100, 144, 10, 1]" + "'", str49, "[1, 100, 144, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 100, 145, 10, 1]" + "'", str50, "[1, 100, 145, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 100, 146, 10, 1]" + "'", str51, "[1, 100, 146, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 100, 147, 10, 1]" + "'", str52, "[1, 100, 147, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 100, 148, 10, 1]" + "'", str53, "[1, 100, 148, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 100, 149, 10, 1]" + "'", str54, "[1, 100, 149, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 100, 150, 10, 1]" + "'", str55, "[1, 100, 150, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 100, 151, 10, 1]" + "'", str56, "[1, 100, 151, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 100, 152, 10, 1]" + "'", str57, "[1, 100, 152, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 100, 153, 10, 1]" + "'", str58, "[1, 100, 153, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 100, 154, 10, 1]" + "'", str59, "[1, 100, 154, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 100, 155, 10, 1]" + "'", str60, "[1, 100, 155, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 100, 156, 10, 1]" + "'", str61, "[1, 100, 156, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 100, 157, 10, 1]" + "'", str62, "[1, 100, 157, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 100, 158, 10, 1]" + "'", str63, "[1, 100, 158, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 100, 159, 10, 1]" + "'", str64, "[1, 100, 159, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 100, 160, 10, 1]" + "'", str65, "[1, 100, 160, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 100, 161, 10, 1]" + "'", str66, "[1, 100, 161, 10, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 100, 162, 10, 1]" + "'", str67, "[1, 100, 162, 10, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 100, 163, 10, 1]" + "'", str68, "[1, 100, 163, 10, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 100, 164, 10, 1]" + "'", str69, "[1, 100, 164, 10, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 100, 165, 10, 1]" + "'", str70, "[1, 100, 165, 10, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 100, 166, 10, 1]" + "'", str71, "[1, 100, 166, 10, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 100, 167, 10, 1]" + "'", str72, "[1, 100, 167, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test6201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6201");
        int[] intArray5 = new int[] { (short) -1, (byte) 100, (byte) 10, (short) 100, ' ' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass68 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 72, 100, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 100, 11, 100, 32]" + "'", str6, "[-1, 100, 11, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 12, 100, 32]" + "'", str7, "[-1, 100, 12, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 13, 100, 32]" + "'", str8, "[-1, 100, 13, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 14, 100, 32]" + "'", str9, "[-1, 100, 14, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 15, 100, 32]" + "'", str10, "[-1, 100, 15, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 16, 100, 32]" + "'", str11, "[-1, 100, 16, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 17, 100, 32]" + "'", str12, "[-1, 100, 17, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 18, 100, 32]" + "'", str13, "[-1, 100, 18, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 19, 100, 32]" + "'", str14, "[-1, 100, 19, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 20, 100, 32]" + "'", str15, "[-1, 100, 20, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 21, 100, 32]" + "'", str16, "[-1, 100, 21, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 22, 100, 32]" + "'", str17, "[-1, 100, 22, 100, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 23, 100, 32]" + "'", str18, "[-1, 100, 23, 100, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 24, 100, 32]" + "'", str19, "[-1, 100, 24, 100, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 25, 100, 32]" + "'", str20, "[-1, 100, 25, 100, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 26, 100, 32]" + "'", str21, "[-1, 100, 26, 100, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 27, 100, 32]" + "'", str22, "[-1, 100, 27, 100, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 28, 100, 32]" + "'", str23, "[-1, 100, 28, 100, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 29, 100, 32]" + "'", str24, "[-1, 100, 29, 100, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 30, 100, 32]" + "'", str25, "[-1, 100, 30, 100, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 31, 100, 32]" + "'", str26, "[-1, 100, 31, 100, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 32, 100, 32]" + "'", str27, "[-1, 100, 32, 100, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 33, 100, 32]" + "'", str28, "[-1, 100, 33, 100, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 34, 100, 32]" + "'", str29, "[-1, 100, 34, 100, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 35, 100, 32]" + "'", str30, "[-1, 100, 35, 100, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 36, 100, 32]" + "'", str31, "[-1, 100, 36, 100, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 37, 100, 32]" + "'", str32, "[-1, 100, 37, 100, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 38, 100, 32]" + "'", str33, "[-1, 100, 38, 100, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 39, 100, 32]" + "'", str34, "[-1, 100, 39, 100, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 40, 100, 32]" + "'", str35, "[-1, 100, 40, 100, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 41, 100, 32]" + "'", str36, "[-1, 100, 41, 100, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 42, 100, 32]" + "'", str37, "[-1, 100, 42, 100, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 100, 43, 100, 32]" + "'", str38, "[-1, 100, 43, 100, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 100, 44, 100, 32]" + "'", str39, "[-1, 100, 44, 100, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 100, 45, 100, 32]" + "'", str40, "[-1, 100, 45, 100, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 100, 46, 100, 32]" + "'", str41, "[-1, 100, 46, 100, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 100, 47, 100, 32]" + "'", str42, "[-1, 100, 47, 100, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 100, 48, 100, 32]" + "'", str43, "[-1, 100, 48, 100, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 100, 49, 100, 32]" + "'", str44, "[-1, 100, 49, 100, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 100, 50, 100, 32]" + "'", str45, "[-1, 100, 50, 100, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 100, 51, 100, 32]" + "'", str46, "[-1, 100, 51, 100, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 100, 52, 100, 32]" + "'", str47, "[-1, 100, 52, 100, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 100, 53, 100, 32]" + "'", str48, "[-1, 100, 53, 100, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 100, 54, 100, 32]" + "'", str49, "[-1, 100, 54, 100, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 100, 55, 100, 32]" + "'", str50, "[-1, 100, 55, 100, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 100, 56, 100, 32]" + "'", str51, "[-1, 100, 56, 100, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 57, 100, 32]" + "'", str52, "[-1, 100, 57, 100, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 100, 58, 100, 32]" + "'", str53, "[-1, 100, 58, 100, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 100, 59, 100, 32]" + "'", str54, "[-1, 100, 59, 100, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 100, 60, 100, 32]" + "'", str55, "[-1, 100, 60, 100, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 100, 61, 100, 32]" + "'", str56, "[-1, 100, 61, 100, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 100, 62, 100, 32]" + "'", str57, "[-1, 100, 62, 100, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 100, 63, 100, 32]" + "'", str58, "[-1, 100, 63, 100, 32]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 100, 64, 100, 32]" + "'", str59, "[-1, 100, 64, 100, 32]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 100, 65, 100, 32]" + "'", str60, "[-1, 100, 65, 100, 32]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 100, 66, 100, 32]" + "'", str61, "[-1, 100, 66, 100, 32]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 100, 67, 100, 32]" + "'", str62, "[-1, 100, 67, 100, 32]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 100, 68, 100, 32]" + "'", str63, "[-1, 100, 68, 100, 32]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[-1, 100, 69, 100, 32]" + "'", str64, "[-1, 100, 69, 100, 32]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[-1, 100, 70, 100, 32]" + "'", str65, "[-1, 100, 70, 100, 32]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[-1, 100, 71, 100, 32]" + "'", str66, "[-1, 100, 71, 100, 32]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[-1, 100, 72, 100, 32]" + "'", str67, "[-1, 100, 72, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test6202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6202");
        int[] intArray5 = new int[] { (-1), '4', '4', (byte) -1, (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 52, 64, -1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 52, 53, -1, 0]" + "'", str6, "[-1, 52, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 52, 54, -1, 0]" + "'", str7, "[-1, 52, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 52, 55, -1, 0]" + "'", str8, "[-1, 52, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 52, 56, -1, 0]" + "'", str9, "[-1, 52, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 52, 57, -1, 0]" + "'", str10, "[-1, 52, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 52, 58, -1, 0]" + "'", str11, "[-1, 52, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 52, 59, -1, 0]" + "'", str12, "[-1, 52, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 52, 60, -1, 0]" + "'", str13, "[-1, 52, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 52, 61, -1, 0]" + "'", str14, "[-1, 52, 61, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 52, 62, -1, 0]" + "'", str15, "[-1, 52, 62, -1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 52, 63, -1, 0]" + "'", str16, "[-1, 52, 63, -1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 52, 64, -1, 0]" + "'", str17, "[-1, 52, 64, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test6203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6203");
        int[] intArray5 = new int[] { ' ', (byte) -1, (byte) 100, (byte) 0, (short) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass9 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, -1, 103, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, -1, 101, 0, 10]" + "'", str6, "[32, -1, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, -1, 102, 0, 10]" + "'", str7, "[32, -1, 102, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, -1, 103, 0, 10]" + "'", str8, "[32, -1, 103, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test6204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6204");
        int[] intArray3 = new int[] { 1, (byte) 0, (byte) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass73 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[7, 9, 6]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 5]" + "'", str60, "[6, 7, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 5]" + "'", str61, "[6, 8, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 5]" + "'", str62, "[6, 9, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 6]" + "'", str63, "[7, 0, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 6]" + "'", str64, "[7, 1, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 6]" + "'", str65, "[7, 2, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 6]" + "'", str66, "[7, 3, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 6]" + "'", str67, "[7, 4, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 5, 6]" + "'", str68, "[7, 5, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 6, 6]" + "'", str69, "[7, 6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7, 6]" + "'", str70, "[7, 7, 6]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 8, 6]" + "'", str71, "[7, 8, 6]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 9, 6]" + "'", str72, "[7, 9, 6]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test6205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6205");
        int[] intArray4 = new int[] { (short) 0, (byte) 0, 'a', (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass8 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 3, 100, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 98, 10]" + "'", str5, "[0, 1, 98, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 99, 10]" + "'", str6, "[0, 2, 99, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100, 10]" + "'", str7, "[0, 3, 100, 10]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test6206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6206");
        int[] intArray3 = new int[] { (short) 10, '#', 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass38 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 69, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 36, 10]" + "'", str4, "[10, 36, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 37, 10]" + "'", str5, "[10, 37, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 38, 10]" + "'", str6, "[10, 38, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 39, 10]" + "'", str7, "[10, 39, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 40, 10]" + "'", str8, "[10, 40, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 41, 10]" + "'", str9, "[10, 41, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 42, 10]" + "'", str10, "[10, 42, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 43, 10]" + "'", str11, "[10, 43, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 44, 10]" + "'", str12, "[10, 44, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 45, 10]" + "'", str13, "[10, 45, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 46, 10]" + "'", str14, "[10, 46, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 47, 10]" + "'", str15, "[10, 47, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 48, 10]" + "'", str16, "[10, 48, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 49, 10]" + "'", str17, "[10, 49, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 50, 10]" + "'", str18, "[10, 50, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 51, 10]" + "'", str19, "[10, 51, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 52, 10]" + "'", str20, "[10, 52, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 53, 10]" + "'", str21, "[10, 53, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 54, 10]" + "'", str22, "[10, 54, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 55, 10]" + "'", str23, "[10, 55, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 56, 10]" + "'", str24, "[10, 56, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 57, 10]" + "'", str25, "[10, 57, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 58, 10]" + "'", str26, "[10, 58, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 59, 10]" + "'", str27, "[10, 59, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 60, 10]" + "'", str28, "[10, 60, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 61, 10]" + "'", str29, "[10, 61, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 62, 10]" + "'", str30, "[10, 62, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 63, 10]" + "'", str31, "[10, 63, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 64, 10]" + "'", str32, "[10, 64, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 65, 10]" + "'", str33, "[10, 65, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[10, 66, 10]" + "'", str34, "[10, 66, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 67, 10]" + "'", str35, "[10, 67, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 68, 10]" + "'", str36, "[10, 68, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[10, 69, 10]" + "'", str37, "[10, 69, 10]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test6207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6207");
        int[] intArray5 = new int[] { (short) 100, (short) 100, (byte) 1, 100, (byte) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass60 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 105, 5, 105, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, 100, 10]" + "'", str6, "[100, 100, 2, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, 100, 10]" + "'", str7, "[100, 100, 3, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, 100, 10]" + "'", str8, "[100, 100, 4, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, 100, 10]" + "'", str9, "[100, 100, 5, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, 100, 10]" + "'", str10, "[100, 100, 6, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, 100, 10]" + "'", str11, "[100, 100, 7, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, 100, 10]" + "'", str12, "[100, 100, 8, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, 100, 10]" + "'", str13, "[100, 100, 9, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 101, 10]" + "'", str14, "[100, 101, 0, 101, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 101, 10]" + "'", str15, "[100, 101, 1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 101, 10]" + "'", str16, "[100, 101, 2, 101, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 101, 10]" + "'", str17, "[100, 101, 3, 101, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 101, 10]" + "'", str18, "[100, 101, 4, 101, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 101, 10]" + "'", str19, "[100, 101, 5, 101, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 101, 10]" + "'", str20, "[100, 101, 6, 101, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 101, 10]" + "'", str21, "[100, 101, 7, 101, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 101, 10]" + "'", str22, "[100, 101, 8, 101, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 101, 10]" + "'", str23, "[100, 101, 9, 101, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 102, 10]" + "'", str24, "[100, 102, 0, 102, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 102, 10]" + "'", str25, "[100, 102, 1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 102, 10]" + "'", str26, "[100, 102, 2, 102, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 102, 10]" + "'", str27, "[100, 102, 3, 102, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 102, 10]" + "'", str28, "[100, 102, 4, 102, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 102, 10]" + "'", str29, "[100, 102, 5, 102, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 102, 10]" + "'", str30, "[100, 102, 6, 102, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 102, 10]" + "'", str31, "[100, 102, 7, 102, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 102, 10]" + "'", str32, "[100, 102, 8, 102, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 102, 10]" + "'", str33, "[100, 102, 9, 102, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 103, 10]" + "'", str34, "[100, 103, 0, 103, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 103, 10]" + "'", str35, "[100, 103, 1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 103, 10]" + "'", str36, "[100, 103, 2, 103, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 103, 10]" + "'", str37, "[100, 103, 3, 103, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 103, 10]" + "'", str38, "[100, 103, 4, 103, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 103, 10]" + "'", str39, "[100, 103, 5, 103, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 103, 10]" + "'", str40, "[100, 103, 6, 103, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 103, 10]" + "'", str41, "[100, 103, 7, 103, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 103, 8, 103, 10]" + "'", str42, "[100, 103, 8, 103, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 103, 9, 103, 10]" + "'", str43, "[100, 103, 9, 103, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 104, 0, 104, 10]" + "'", str44, "[100, 104, 0, 104, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 104, 1, 104, 10]" + "'", str45, "[100, 104, 1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 104, 2, 104, 10]" + "'", str46, "[100, 104, 2, 104, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 104, 3, 104, 10]" + "'", str47, "[100, 104, 3, 104, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 104, 4, 104, 10]" + "'", str48, "[100, 104, 4, 104, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 104, 5, 104, 10]" + "'", str49, "[100, 104, 5, 104, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 104, 6, 104, 10]" + "'", str50, "[100, 104, 6, 104, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 104, 7, 104, 10]" + "'", str51, "[100, 104, 7, 104, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 104, 8, 104, 10]" + "'", str52, "[100, 104, 8, 104, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 104, 9, 104, 10]" + "'", str53, "[100, 104, 9, 104, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 105, 0, 105, 10]" + "'", str54, "[100, 105, 0, 105, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 105, 1, 105, 10]" + "'", str55, "[100, 105, 1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 105, 2, 105, 10]" + "'", str56, "[100, 105, 2, 105, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 105, 3, 105, 10]" + "'", str57, "[100, 105, 3, 105, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 105, 4, 105, 10]" + "'", str58, "[100, 105, 4, 105, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 105, 5, 105, 10]" + "'", str59, "[100, 105, 5, 105, 10]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test6208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6208");
        int[] intArray1 = new int[] { (byte) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass21 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test6209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6209");
        int[] intArray4 = new int[] { (byte) 100, '#', (byte) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass22 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 52, 27, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 36, 11, -1]" + "'", str5, "[100, 36, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 37, 12, -1]" + "'", str6, "[100, 37, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 38, 13, -1]" + "'", str7, "[100, 38, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 39, 14, -1]" + "'", str8, "[100, 39, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 40, 15, -1]" + "'", str9, "[100, 40, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 41, 16, -1]" + "'", str10, "[100, 41, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 42, 17, -1]" + "'", str11, "[100, 42, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 43, 18, -1]" + "'", str12, "[100, 43, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 44, 19, -1]" + "'", str13, "[100, 44, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 45, 20, -1]" + "'", str14, "[100, 45, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 46, 21, -1]" + "'", str15, "[100, 46, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 47, 22, -1]" + "'", str16, "[100, 47, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 48, 23, -1]" + "'", str17, "[100, 48, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 49, 24, -1]" + "'", str18, "[100, 49, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 50, 25, -1]" + "'", str19, "[100, 50, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 51, 26, -1]" + "'", str20, "[100, 51, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 52, 27, -1]" + "'", str21, "[100, 52, 27, -1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6210");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass85 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 116, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 54, 1]" + "'", str22, "[32, 54, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 55, 1]" + "'", str23, "[32, 55, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 56, 1]" + "'", str24, "[32, 56, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 57, 1]" + "'", str25, "[32, 57, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 58, 1]" + "'", str26, "[32, 58, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 59, 1]" + "'", str27, "[32, 59, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 60, 1]" + "'", str28, "[32, 60, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 61, 1]" + "'", str29, "[32, 61, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 62, 1]" + "'", str30, "[32, 62, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 63, 1]" + "'", str31, "[32, 63, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 64, 1]" + "'", str32, "[32, 64, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 65, 1]" + "'", str33, "[32, 65, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 66, 1]" + "'", str34, "[32, 66, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 67, 1]" + "'", str35, "[32, 67, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 68, 1]" + "'", str36, "[32, 68, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 69, 1]" + "'", str37, "[32, 69, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 70, 1]" + "'", str38, "[32, 70, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 71, 1]" + "'", str39, "[32, 71, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 72, 1]" + "'", str40, "[32, 72, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[32, 73, 1]" + "'", str41, "[32, 73, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[32, 74, 1]" + "'", str42, "[32, 74, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[32, 75, 1]" + "'", str43, "[32, 75, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[32, 76, 1]" + "'", str44, "[32, 76, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[32, 77, 1]" + "'", str45, "[32, 77, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[32, 78, 1]" + "'", str46, "[32, 78, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[32, 79, 1]" + "'", str47, "[32, 79, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[32, 80, 1]" + "'", str48, "[32, 80, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[32, 81, 1]" + "'", str49, "[32, 81, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[32, 82, 1]" + "'", str50, "[32, 82, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[32, 83, 1]" + "'", str51, "[32, 83, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[32, 84, 1]" + "'", str52, "[32, 84, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[32, 85, 1]" + "'", str53, "[32, 85, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[32, 86, 1]" + "'", str54, "[32, 86, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[32, 87, 1]" + "'", str55, "[32, 87, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[32, 88, 1]" + "'", str56, "[32, 88, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[32, 89, 1]" + "'", str57, "[32, 89, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[32, 90, 1]" + "'", str58, "[32, 90, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[32, 91, 1]" + "'", str59, "[32, 91, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[32, 92, 1]" + "'", str60, "[32, 92, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[32, 93, 1]" + "'", str61, "[32, 93, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[32, 94, 1]" + "'", str62, "[32, 94, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[32, 95, 1]" + "'", str63, "[32, 95, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[32, 96, 1]" + "'", str64, "[32, 96, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[32, 97, 1]" + "'", str65, "[32, 97, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[32, 98, 1]" + "'", str66, "[32, 98, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[32, 99, 1]" + "'", str67, "[32, 99, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[32, 100, 1]" + "'", str68, "[32, 100, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[32, 101, 1]" + "'", str69, "[32, 101, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[32, 102, 1]" + "'", str70, "[32, 102, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[32, 103, 1]" + "'", str71, "[32, 103, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[32, 104, 1]" + "'", str72, "[32, 104, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[32, 105, 1]" + "'", str73, "[32, 105, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[32, 106, 1]" + "'", str74, "[32, 106, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[32, 107, 1]" + "'", str75, "[32, 107, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[32, 108, 1]" + "'", str76, "[32, 108, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[32, 109, 1]" + "'", str77, "[32, 109, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[32, 110, 1]" + "'", str78, "[32, 110, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[32, 111, 1]" + "'", str79, "[32, 111, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[32, 112, 1]" + "'", str80, "[32, 112, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[32, 113, 1]" + "'", str81, "[32, 113, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[32, 114, 1]" + "'", str82, "[32, 114, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[32, 115, 1]" + "'", str83, "[32, 115, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[32, 116, 1]" + "'", str84, "[32, 116, 1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test6211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6211");
        int[] intArray5 = new int[] { (short) 100, (short) 100, (byte) 1, 100, (byte) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass63 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 105, 8, 105, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, 100, 10]" + "'", str6, "[100, 100, 2, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, 100, 10]" + "'", str7, "[100, 100, 3, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, 100, 10]" + "'", str8, "[100, 100, 4, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, 100, 10]" + "'", str9, "[100, 100, 5, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, 100, 10]" + "'", str10, "[100, 100, 6, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, 100, 10]" + "'", str11, "[100, 100, 7, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, 100, 10]" + "'", str12, "[100, 100, 8, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, 100, 10]" + "'", str13, "[100, 100, 9, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 101, 10]" + "'", str14, "[100, 101, 0, 101, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 101, 10]" + "'", str15, "[100, 101, 1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 101, 10]" + "'", str16, "[100, 101, 2, 101, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 101, 10]" + "'", str17, "[100, 101, 3, 101, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 101, 10]" + "'", str18, "[100, 101, 4, 101, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 101, 10]" + "'", str19, "[100, 101, 5, 101, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 101, 10]" + "'", str20, "[100, 101, 6, 101, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 101, 10]" + "'", str21, "[100, 101, 7, 101, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 101, 10]" + "'", str22, "[100, 101, 8, 101, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 101, 10]" + "'", str23, "[100, 101, 9, 101, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 102, 10]" + "'", str24, "[100, 102, 0, 102, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 102, 10]" + "'", str25, "[100, 102, 1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 102, 10]" + "'", str26, "[100, 102, 2, 102, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 102, 10]" + "'", str27, "[100, 102, 3, 102, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 102, 10]" + "'", str28, "[100, 102, 4, 102, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 102, 10]" + "'", str29, "[100, 102, 5, 102, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 102, 10]" + "'", str30, "[100, 102, 6, 102, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 102, 10]" + "'", str31, "[100, 102, 7, 102, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 102, 10]" + "'", str32, "[100, 102, 8, 102, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 102, 10]" + "'", str33, "[100, 102, 9, 102, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 103, 10]" + "'", str34, "[100, 103, 0, 103, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 103, 10]" + "'", str35, "[100, 103, 1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 103, 10]" + "'", str36, "[100, 103, 2, 103, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 103, 10]" + "'", str37, "[100, 103, 3, 103, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 103, 10]" + "'", str38, "[100, 103, 4, 103, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 103, 10]" + "'", str39, "[100, 103, 5, 103, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 103, 10]" + "'", str40, "[100, 103, 6, 103, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 103, 10]" + "'", str41, "[100, 103, 7, 103, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 103, 8, 103, 10]" + "'", str42, "[100, 103, 8, 103, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 103, 9, 103, 10]" + "'", str43, "[100, 103, 9, 103, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 104, 0, 104, 10]" + "'", str44, "[100, 104, 0, 104, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 104, 1, 104, 10]" + "'", str45, "[100, 104, 1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 104, 2, 104, 10]" + "'", str46, "[100, 104, 2, 104, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 104, 3, 104, 10]" + "'", str47, "[100, 104, 3, 104, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 104, 4, 104, 10]" + "'", str48, "[100, 104, 4, 104, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 104, 5, 104, 10]" + "'", str49, "[100, 104, 5, 104, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 104, 6, 104, 10]" + "'", str50, "[100, 104, 6, 104, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 104, 7, 104, 10]" + "'", str51, "[100, 104, 7, 104, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 104, 8, 104, 10]" + "'", str52, "[100, 104, 8, 104, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 104, 9, 104, 10]" + "'", str53, "[100, 104, 9, 104, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 105, 0, 105, 10]" + "'", str54, "[100, 105, 0, 105, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 105, 1, 105, 10]" + "'", str55, "[100, 105, 1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 105, 2, 105, 10]" + "'", str56, "[100, 105, 2, 105, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 105, 3, 105, 10]" + "'", str57, "[100, 105, 3, 105, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 105, 4, 105, 10]" + "'", str58, "[100, 105, 4, 105, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 105, 5, 105, 10]" + "'", str59, "[100, 105, 5, 105, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 105, 6, 105, 10]" + "'", str60, "[100, 105, 6, 105, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 105, 7, 105, 10]" + "'", str61, "[100, 105, 7, 105, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 105, 8, 105, 10]" + "'", str62, "[100, 105, 8, 105, 10]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test6212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6212");
        int[] intArray3 = new int[] { ' ', (short) 0, (byte) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass29 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[34, 5, 12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 1, 10]" + "'", str4, "[32, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 2, 10]" + "'", str5, "[32, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 3, 10]" + "'", str6, "[32, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 4, 10]" + "'", str7, "[32, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 5, 10]" + "'", str8, "[32, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 6, 10]" + "'", str9, "[32, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 7, 10]" + "'", str10, "[32, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 8, 10]" + "'", str11, "[32, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 9, 10]" + "'", str12, "[32, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 0, 11]" + "'", str13, "[33, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 1, 11]" + "'", str14, "[33, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 2, 11]" + "'", str15, "[33, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 3, 11]" + "'", str16, "[33, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 4, 11]" + "'", str17, "[33, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 5, 11]" + "'", str18, "[33, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 6, 11]" + "'", str19, "[33, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 7, 11]" + "'", str20, "[33, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 8, 11]" + "'", str21, "[33, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 9, 11]" + "'", str22, "[33, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 0, 12]" + "'", str23, "[34, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 1, 12]" + "'", str24, "[34, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 2, 12]" + "'", str25, "[34, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 3, 12]" + "'", str26, "[34, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 4, 12]" + "'", str27, "[34, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 5, 12]" + "'", str28, "[34, 5, 12]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test6213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6213");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass59 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[5, 4, 105]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 100]" + "'", str6, "[0, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100]" + "'", str7, "[0, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 100]" + "'", str8, "[0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 100]" + "'", str9, "[0, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 100]" + "'", str10, "[0, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 100]" + "'", str11, "[0, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 100]" + "'", str12, "[0, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 100]" + "'", str13, "[0, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 101]" + "'", str14, "[1, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 101]" + "'", str15, "[1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 101]" + "'", str16, "[1, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 101]" + "'", str17, "[1, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 101]" + "'", str18, "[1, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 101]" + "'", str19, "[1, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 101]" + "'", str20, "[1, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 101]" + "'", str21, "[1, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 101]" + "'", str22, "[1, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 101]" + "'", str23, "[1, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 102]" + "'", str24, "[2, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 102]" + "'", str25, "[2, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 102]" + "'", str26, "[2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 102]" + "'", str27, "[2, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 102]" + "'", str28, "[2, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 102]" + "'", str29, "[2, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 102]" + "'", str30, "[2, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 102]" + "'", str31, "[2, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 102]" + "'", str32, "[2, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 102]" + "'", str33, "[2, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 103]" + "'", str34, "[3, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 103]" + "'", str35, "[3, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 103]" + "'", str36, "[3, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 103]" + "'", str37, "[3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 103]" + "'", str38, "[3, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 103]" + "'", str39, "[3, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 103]" + "'", str40, "[3, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 103]" + "'", str41, "[3, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 103]" + "'", str42, "[3, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 103]" + "'", str43, "[3, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 104]" + "'", str44, "[4, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 104]" + "'", str45, "[4, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 104]" + "'", str46, "[4, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 104]" + "'", str47, "[4, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 104]" + "'", str48, "[4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 104]" + "'", str49, "[4, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 104]" + "'", str50, "[4, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 104]" + "'", str51, "[4, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 104]" + "'", str52, "[4, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 9, 104]" + "'", str53, "[4, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 0, 105]" + "'", str54, "[5, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 1, 105]" + "'", str55, "[5, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 2, 105]" + "'", str56, "[5, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 3, 105]" + "'", str57, "[5, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 4, 105]" + "'", str58, "[5, 4, 105]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test6214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6214");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 176, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 104, -1, 1]" + "'", str9, "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 105, -1, 1]" + "'", str10, "[97, 0, 105, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 0, 106, -1, 1]" + "'", str11, "[97, 0, 106, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 0, 107, -1, 1]" + "'", str12, "[97, 0, 107, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 0, 108, -1, 1]" + "'", str13, "[97, 0, 108, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 0, 109, -1, 1]" + "'", str14, "[97, 0, 109, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 0, 110, -1, 1]" + "'", str15, "[97, 0, 110, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 0, 111, -1, 1]" + "'", str16, "[97, 0, 111, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 0, 112, -1, 1]" + "'", str17, "[97, 0, 112, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 0, 113, -1, 1]" + "'", str18, "[97, 0, 113, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 0, 114, -1, 1]" + "'", str19, "[97, 0, 114, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 0, 115, -1, 1]" + "'", str20, "[97, 0, 115, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 0, 116, -1, 1]" + "'", str21, "[97, 0, 116, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 0, 117, -1, 1]" + "'", str22, "[97, 0, 117, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 0, 118, -1, 1]" + "'", str23, "[97, 0, 118, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 0, 119, -1, 1]" + "'", str24, "[97, 0, 119, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 0, 120, -1, 1]" + "'", str25, "[97, 0, 120, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 0, 121, -1, 1]" + "'", str26, "[97, 0, 121, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 0, 122, -1, 1]" + "'", str27, "[97, 0, 122, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 0, 123, -1, 1]" + "'", str28, "[97, 0, 123, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 0, 124, -1, 1]" + "'", str29, "[97, 0, 124, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 0, 125, -1, 1]" + "'", str30, "[97, 0, 125, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 0, 126, -1, 1]" + "'", str31, "[97, 0, 126, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 0, 127, -1, 1]" + "'", str32, "[97, 0, 127, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 0, 128, -1, 1]" + "'", str33, "[97, 0, 128, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 0, 129, -1, 1]" + "'", str34, "[97, 0, 129, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 0, 130, -1, 1]" + "'", str35, "[97, 0, 130, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 0, 131, -1, 1]" + "'", str36, "[97, 0, 131, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 0, 132, -1, 1]" + "'", str37, "[97, 0, 132, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 0, 133, -1, 1]" + "'", str38, "[97, 0, 133, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 0, 134, -1, 1]" + "'", str39, "[97, 0, 134, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 0, 135, -1, 1]" + "'", str40, "[97, 0, 135, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 0, 136, -1, 1]" + "'", str41, "[97, 0, 136, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 0, 137, -1, 1]" + "'", str42, "[97, 0, 137, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 0, 138, -1, 1]" + "'", str43, "[97, 0, 138, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 0, 139, -1, 1]" + "'", str44, "[97, 0, 139, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 0, 140, -1, 1]" + "'", str45, "[97, 0, 140, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 0, 141, -1, 1]" + "'", str46, "[97, 0, 141, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 0, 142, -1, 1]" + "'", str47, "[97, 0, 142, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 0, 143, -1, 1]" + "'", str48, "[97, 0, 143, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 0, 144, -1, 1]" + "'", str49, "[97, 0, 144, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 0, 145, -1, 1]" + "'", str50, "[97, 0, 145, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 0, 146, -1, 1]" + "'", str51, "[97, 0, 146, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 0, 147, -1, 1]" + "'", str52, "[97, 0, 147, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 0, 148, -1, 1]" + "'", str53, "[97, 0, 148, -1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 0, 149, -1, 1]" + "'", str54, "[97, 0, 149, -1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 0, 150, -1, 1]" + "'", str55, "[97, 0, 150, -1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 0, 151, -1, 1]" + "'", str56, "[97, 0, 151, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 0, 152, -1, 1]" + "'", str57, "[97, 0, 152, -1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 0, 153, -1, 1]" + "'", str58, "[97, 0, 153, -1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 0, 154, -1, 1]" + "'", str59, "[97, 0, 154, -1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 0, 155, -1, 1]" + "'", str60, "[97, 0, 155, -1, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 0, 156, -1, 1]" + "'", str61, "[97, 0, 156, -1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 0, 157, -1, 1]" + "'", str62, "[97, 0, 157, -1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 0, 158, -1, 1]" + "'", str63, "[97, 0, 158, -1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 0, 159, -1, 1]" + "'", str64, "[97, 0, 159, -1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 0, 160, -1, 1]" + "'", str65, "[97, 0, 160, -1, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 0, 161, -1, 1]" + "'", str66, "[97, 0, 161, -1, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 0, 162, -1, 1]" + "'", str67, "[97, 0, 162, -1, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 0, 163, -1, 1]" + "'", str68, "[97, 0, 163, -1, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 0, 164, -1, 1]" + "'", str69, "[97, 0, 164, -1, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 0, 165, -1, 1]" + "'", str70, "[97, 0, 165, -1, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 0, 166, -1, 1]" + "'", str71, "[97, 0, 166, -1, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 0, 167, -1, 1]" + "'", str72, "[97, 0, 167, -1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 0, 168, -1, 1]" + "'", str73, "[97, 0, 168, -1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 0, 169, -1, 1]" + "'", str74, "[97, 0, 169, -1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 0, 170, -1, 1]" + "'", str75, "[97, 0, 170, -1, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 0, 171, -1, 1]" + "'", str76, "[97, 0, 171, -1, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 0, 172, -1, 1]" + "'", str77, "[97, 0, 172, -1, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 0, 173, -1, 1]" + "'", str78, "[97, 0, 173, -1, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 0, 174, -1, 1]" + "'", str79, "[97, 0, 174, -1, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 0, 175, -1, 1]" + "'", str80, "[97, 0, 175, -1, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[97, 0, 176, -1, 1]" + "'", str81, "[97, 0, 176, -1, 1]");
    }

    @Test
    public void test6215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6215");
        int[] intArray2 = new int[] { '#', (short) 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass46 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[78, 53]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[36, 11]" + "'", str3, "[36, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[37, 12]" + "'", str4, "[37, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[38, 13]" + "'", str5, "[38, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[39, 14]" + "'", str6, "[39, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[40, 15]" + "'", str7, "[40, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[41, 16]" + "'", str8, "[41, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[42, 17]" + "'", str9, "[42, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[43, 18]" + "'", str10, "[43, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[44, 19]" + "'", str11, "[44, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[45, 20]" + "'", str12, "[45, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[46, 21]" + "'", str13, "[46, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[47, 22]" + "'", str14, "[47, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[48, 23]" + "'", str15, "[48, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[49, 24]" + "'", str16, "[49, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[50, 25]" + "'", str17, "[50, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[51, 26]" + "'", str18, "[51, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 27]" + "'", str19, "[52, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 28]" + "'", str20, "[53, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[54, 29]" + "'", str21, "[54, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[55, 30]" + "'", str22, "[55, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[56, 31]" + "'", str23, "[56, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[57, 32]" + "'", str24, "[57, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[58, 33]" + "'", str25, "[58, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[59, 34]" + "'", str26, "[59, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[60, 35]" + "'", str27, "[60, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[61, 36]" + "'", str28, "[61, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[62, 37]" + "'", str29, "[62, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[63, 38]" + "'", str30, "[63, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[64, 39]" + "'", str31, "[64, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[65, 40]" + "'", str32, "[65, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[66, 41]" + "'", str33, "[66, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[67, 42]" + "'", str34, "[67, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[68, 43]" + "'", str35, "[68, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[69, 44]" + "'", str36, "[69, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[70, 45]" + "'", str37, "[70, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[71, 46]" + "'", str38, "[71, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[72, 47]" + "'", str39, "[72, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[73, 48]" + "'", str40, "[73, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[74, 49]" + "'", str41, "[74, 49]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[75, 50]" + "'", str42, "[75, 50]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[76, 51]" + "'", str43, "[76, 51]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[77, 52]" + "'", str44, "[77, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[78, 53]" + "'", str45, "[78, 53]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test6216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6216");
        int[] intArray2 = new int[] { (byte) -1, 100 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 103]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 101]" + "'", str3, "[0, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 102]" + "'", str4, "[1, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 103]" + "'", str5, "[2, 103]");
    }

    @Test
    public void test6217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6217");
        int[] intArray4 = new int[] { (short) 0, (byte) 0, 'a', (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass9 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 4, 101, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 98, 10]" + "'", str5, "[0, 1, 98, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 99, 10]" + "'", str6, "[0, 2, 99, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100, 10]" + "'", str7, "[0, 3, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 101, 10]" + "'", str8, "[0, 4, 101, 10]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test6218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6218");
        int[] intArray5 = new int[] { (-1), (-1), (-1), (byte) 10, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass39 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 2, 2, 13, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, -1, 0, 10, -1]" + "'", str6, "[-1, -1, 0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, -1, 1, 10, -1]" + "'", str7, "[-1, -1, 1, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, -1, 2, 10, -1]" + "'", str8, "[-1, -1, 2, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, -1, 3, 10, -1]" + "'", str9, "[-1, -1, 3, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, -1, 4, 10, -1]" + "'", str10, "[-1, -1, 4, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, -1, 5, 10, -1]" + "'", str11, "[-1, -1, 5, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, -1, 6, 10, -1]" + "'", str12, "[-1, -1, 6, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, -1, 7, 10, -1]" + "'", str13, "[-1, -1, 7, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, -1, 8, 10, -1]" + "'", str14, "[-1, -1, 8, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, -1, 9, 10, -1]" + "'", str15, "[-1, -1, 9, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 0, 0, 11, -1]" + "'", str16, "[-1, 0, 0, 11, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 0, 1, 11, -1]" + "'", str17, "[-1, 0, 1, 11, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 0, 2, 11, -1]" + "'", str18, "[-1, 0, 2, 11, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 0, 3, 11, -1]" + "'", str19, "[-1, 0, 3, 11, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 0, 4, 11, -1]" + "'", str20, "[-1, 0, 4, 11, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 0, 5, 11, -1]" + "'", str21, "[-1, 0, 5, 11, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 0, 6, 11, -1]" + "'", str22, "[-1, 0, 6, 11, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 0, 7, 11, -1]" + "'", str23, "[-1, 0, 7, 11, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 0, 8, 11, -1]" + "'", str24, "[-1, 0, 8, 11, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 0, 9, 11, -1]" + "'", str25, "[-1, 0, 9, 11, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 1, 0, 12, -1]" + "'", str26, "[-1, 1, 0, 12, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 1, 1, 12, -1]" + "'", str27, "[-1, 1, 1, 12, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 1, 2, 12, -1]" + "'", str28, "[-1, 1, 2, 12, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 1, 3, 12, -1]" + "'", str29, "[-1, 1, 3, 12, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 1, 4, 12, -1]" + "'", str30, "[-1, 1, 4, 12, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 1, 5, 12, -1]" + "'", str31, "[-1, 1, 5, 12, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 1, 6, 12, -1]" + "'", str32, "[-1, 1, 6, 12, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 1, 7, 12, -1]" + "'", str33, "[-1, 1, 7, 12, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 1, 8, 12, -1]" + "'", str34, "[-1, 1, 8, 12, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 1, 9, 12, -1]" + "'", str35, "[-1, 1, 9, 12, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 2, 0, 13, -1]" + "'", str36, "[-1, 2, 0, 13, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 2, 1, 13, -1]" + "'", str37, "[-1, 2, 1, 13, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 2, 2, 13, -1]" + "'", str38, "[-1, 2, 2, 13, -1]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test6219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6219");
        int[] intArray4 = new int[] { (byte) -1, 0, (byte) -1, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass31 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 0, 52]" + "'", str5, "[-1, 1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 1, 52]" + "'", str6, "[-1, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 3, 2, 52]" + "'", str7, "[-1, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 4, 3, 52]" + "'", str8, "[-1, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 5, 4, 52]" + "'", str9, "[-1, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 6, 5, 52]" + "'", str10, "[-1, 6, 5, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 7, 6, 52]" + "'", str11, "[-1, 7, 6, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 8, 7, 52]" + "'", str12, "[-1, 8, 7, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 9, 8, 52]" + "'", str13, "[-1, 9, 8, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 9, 52]" + "'", str14, "[-1, 10, 9, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 0, 0, 53]" + "'", str15, "[0, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 1, 53]" + "'", str16, "[0, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 53]" + "'", str17, "[0, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 3, 3, 53]" + "'", str18, "[0, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 4, 4, 53]" + "'", str19, "[0, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 5, 5, 53]" + "'", str20, "[0, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 6, 6, 53]" + "'", str21, "[0, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 7, 7, 53]" + "'", str22, "[0, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 8, 8, 53]" + "'", str23, "[0, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 9, 9, 53]" + "'", str24, "[0, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 0, 54]" + "'", str25, "[1, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 1, 54]" + "'", str26, "[1, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 2, 54]" + "'", str27, "[1, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 3, 54]" + "'", str28, "[1, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 4, 4, 54]" + "'", str29, "[1, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 5, 5, 54]" + "'", str30, "[1, 5, 5, 54]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test6220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6220");
        int[] intArray6 = new int[] { (byte) 10, (byte) 1, (short) 100, 0, (byte) 0, (byte) -1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass22 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 2, 5, 5, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 1, 101, 1, 0, -1]" + "'", str7, "[10, 1, 101, 1, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 1, 102, 2, 0, -1]" + "'", str8, "[10, 1, 102, 2, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 1, 103, 3, 0, -1]" + "'", str9, "[10, 1, 103, 3, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 1, 104, 4, 0, -1]" + "'", str10, "[10, 1, 104, 4, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 1, 105, 5, 0, -1]" + "'", str11, "[10, 1, 105, 5, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 1, 106, 6, 0, -1]" + "'", str12, "[10, 1, 106, 6, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 1, 107, 7, 0, -1]" + "'", str13, "[10, 1, 107, 7, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 1, 108, 8, 0, -1]" + "'", str14, "[10, 1, 108, 8, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 1, 109, 9, 0, -1]" + "'", str15, "[10, 1, 109, 9, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 2, 0, 0, 1, -1]" + "'", str16, "[10, 2, 0, 0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 2, 1, 1, 1, -1]" + "'", str17, "[10, 2, 1, 1, 1, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 2, 2, 2, 1, -1]" + "'", str18, "[10, 2, 2, 2, 1, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 2, 3, 3, 1, -1]" + "'", str19, "[10, 2, 3, 3, 1, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 2, 4, 4, 1, -1]" + "'", str20, "[10, 2, 4, 4, 1, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 2, 5, 5, 1, -1]" + "'", str21, "[10, 2, 5, 5, 1, -1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6221");
        int[] intArray5 = new int[] { ' ', ' ', 1, (byte) 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass16 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 33, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 32, 2, 0, 1]" + "'", str6, "[32, 32, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 32, 3, 0, 1]" + "'", str7, "[32, 32, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 32, 4, 0, 1]" + "'", str8, "[32, 32, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 32, 5, 0, 1]" + "'", str9, "[32, 32, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 32, 6, 0, 1]" + "'", str10, "[32, 32, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 32, 7, 0, 1]" + "'", str11, "[32, 32, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 32, 8, 0, 1]" + "'", str12, "[32, 32, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 32, 9, 0, 1]" + "'", str13, "[32, 32, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 33, 0, 1, 1]" + "'", str14, "[32, 33, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 33, 1, 1, 1]" + "'", str15, "[32, 33, 1, 1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test6222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6222");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass81 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 85, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 52, 17, -1, 1]" + "'", str12, "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 52, 18, -1, 1]" + "'", str13, "[97, 52, 18, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 52, 19, -1, 1]" + "'", str14, "[97, 52, 19, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 52, 20, -1, 1]" + "'", str15, "[97, 52, 20, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 52, 21, -1, 1]" + "'", str16, "[97, 52, 21, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 52, 22, -1, 1]" + "'", str17, "[97, 52, 22, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 52, 23, -1, 1]" + "'", str18, "[97, 52, 23, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 52, 24, -1, 1]" + "'", str19, "[97, 52, 24, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 52, 25, -1, 1]" + "'", str20, "[97, 52, 25, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 52, 26, -1, 1]" + "'", str21, "[97, 52, 26, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 52, 27, -1, 1]" + "'", str22, "[97, 52, 27, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 52, 28, -1, 1]" + "'", str23, "[97, 52, 28, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 52, 29, -1, 1]" + "'", str24, "[97, 52, 29, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 52, 30, -1, 1]" + "'", str25, "[97, 52, 30, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 52, 31, -1, 1]" + "'", str26, "[97, 52, 31, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 52, 32, -1, 1]" + "'", str27, "[97, 52, 32, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 52, 33, -1, 1]" + "'", str28, "[97, 52, 33, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 52, 34, -1, 1]" + "'", str29, "[97, 52, 34, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 52, 35, -1, 1]" + "'", str30, "[97, 52, 35, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 52, 36, -1, 1]" + "'", str31, "[97, 52, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 52, 37, -1, 1]" + "'", str32, "[97, 52, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 52, 38, -1, 1]" + "'", str33, "[97, 52, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 52, 39, -1, 1]" + "'", str34, "[97, 52, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 52, 40, -1, 1]" + "'", str35, "[97, 52, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 52, 41, -1, 1]" + "'", str36, "[97, 52, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 52, 42, -1, 1]" + "'", str37, "[97, 52, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 52, 43, -1, 1]" + "'", str38, "[97, 52, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 52, 44, -1, 1]" + "'", str39, "[97, 52, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 52, 45, -1, 1]" + "'", str40, "[97, 52, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 52, 46, -1, 1]" + "'", str41, "[97, 52, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 52, 47, -1, 1]" + "'", str42, "[97, 52, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 52, 48, -1, 1]" + "'", str43, "[97, 52, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 52, 49, -1, 1]" + "'", str44, "[97, 52, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 52, 50, -1, 1]" + "'", str45, "[97, 52, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 51, -1, 1]" + "'", str46, "[97, 52, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 52, 52, -1, 1]" + "'", str47, "[97, 52, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 52, 53, -1, 1]" + "'", str48, "[97, 52, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 52, 54, -1, 1]" + "'", str49, "[97, 52, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 52, 55, -1, 1]" + "'", str50, "[97, 52, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 52, 56, -1, 1]" + "'", str51, "[97, 52, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 52, 57, -1, 1]" + "'", str52, "[97, 52, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 52, 58, -1, 1]" + "'", str53, "[97, 52, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 52, 59, -1, 1]" + "'", str54, "[97, 52, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 52, 60, -1, 1]" + "'", str55, "[97, 52, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 52, 61, -1, 1]" + "'", str56, "[97, 52, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 52, 62, -1, 1]" + "'", str57, "[97, 52, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 52, 63, -1, 1]" + "'", str58, "[97, 52, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 52, 64, -1, 1]" + "'", str59, "[97, 52, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 52, 65, -1, 1]" + "'", str60, "[97, 52, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 52, 66, -1, 1]" + "'", str61, "[97, 52, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 52, 67, -1, 1]" + "'", str62, "[97, 52, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 52, 68, -1, 1]" + "'", str63, "[97, 52, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 52, 69, -1, 1]" + "'", str64, "[97, 52, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 52, 70, -1, 1]" + "'", str65, "[97, 52, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 52, 71, -1, 1]" + "'", str66, "[97, 52, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 52, 72, -1, 1]" + "'", str67, "[97, 52, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 52, 73, -1, 1]" + "'", str68, "[97, 52, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 52, 74, -1, 1]" + "'", str69, "[97, 52, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 52, 75, -1, 1]" + "'", str70, "[97, 52, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 52, 76, -1, 1]" + "'", str71, "[97, 52, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 52, 77, -1, 1]" + "'", str72, "[97, 52, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 52, 78, -1, 1]" + "'", str73, "[97, 52, 78, -1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 52, 79, -1, 1]" + "'", str74, "[97, 52, 79, -1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 52, 80, -1, 1]" + "'", str75, "[97, 52, 80, -1, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 52, 81, -1, 1]" + "'", str76, "[97, 52, 81, -1, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 52, 82, -1, 1]" + "'", str77, "[97, 52, 82, -1, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 52, 83, -1, 1]" + "'", str78, "[97, 52, 83, -1, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 52, 84, -1, 1]" + "'", str79, "[97, 52, 84, -1, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 52, 85, -1, 1]" + "'", str80, "[97, 52, 85, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test6223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6223");
        int[] intArray2 = new int[] { '#', (byte) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass50 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[6, 6]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[36, 0]" + "'", str3, "[36, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[37, 1]" + "'", str4, "[37, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[38, 2]" + "'", str5, "[38, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[39, 3]" + "'", str6, "[39, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[40, 4]" + "'", str7, "[40, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[41, 5]" + "'", str8, "[41, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[42, 6]" + "'", str9, "[42, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[43, 7]" + "'", str10, "[43, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[44, 8]" + "'", str11, "[44, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[45, 9]" + "'", str12, "[45, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test6224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6224");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 179, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 52, 0]" + "'", str29, "[1, 0, 124, 52, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 52, 0]" + "'", str30, "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 52, 0]" + "'", str31, "[1, 0, 126, 52, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 52, 0]" + "'", str32, "[1, 0, 127, 52, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 52, 0]" + "'", str33, "[1, 0, 128, 52, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 52, 0]" + "'", str34, "[1, 0, 129, 52, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 52, 0]" + "'", str35, "[1, 0, 130, 52, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 52, 0]" + "'", str36, "[1, 0, 131, 52, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 52, 0]" + "'", str37, "[1, 0, 132, 52, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 52, 0]" + "'", str38, "[1, 0, 133, 52, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 52, 0]" + "'", str39, "[1, 0, 134, 52, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 52, 0]" + "'", str40, "[1, 0, 135, 52, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 52, 0]" + "'", str41, "[1, 0, 136, 52, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 52, 0]" + "'", str42, "[1, 0, 137, 52, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 52, 0]" + "'", str43, "[1, 0, 138, 52, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 52, 0]" + "'", str44, "[1, 0, 139, 52, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 52, 0]" + "'", str45, "[1, 0, 140, 52, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 52, 0]" + "'", str46, "[1, 0, 141, 52, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 52, 0]" + "'", str47, "[1, 0, 142, 52, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 52, 0]" + "'", str48, "[1, 0, 143, 52, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 52, 0]" + "'", str49, "[1, 0, 144, 52, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 52, 0]" + "'", str50, "[1, 0, 145, 52, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 52, 0]" + "'", str51, "[1, 0, 146, 52, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 52, 0]" + "'", str52, "[1, 0, 147, 52, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 52, 0]" + "'", str53, "[1, 0, 148, 52, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 52, 0]" + "'", str54, "[1, 0, 149, 52, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 52, 0]" + "'", str55, "[1, 0, 150, 52, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 52, 0]" + "'", str56, "[1, 0, 151, 52, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 52, 0]" + "'", str57, "[1, 0, 152, 52, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 52, 0]" + "'", str58, "[1, 0, 153, 52, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 52, 0]" + "'", str59, "[1, 0, 154, 52, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 52, 0]" + "'", str60, "[1, 0, 155, 52, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 52, 0]" + "'", str61, "[1, 0, 156, 52, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 52, 0]" + "'", str62, "[1, 0, 157, 52, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 52, 0]" + "'", str63, "[1, 0, 158, 52, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 52, 0]" + "'", str64, "[1, 0, 159, 52, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 52, 0]" + "'", str65, "[1, 0, 160, 52, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 52, 0]" + "'", str66, "[1, 0, 161, 52, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 52, 0]" + "'", str67, "[1, 0, 162, 52, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 52, 0]" + "'", str68, "[1, 0, 163, 52, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 52, 0]" + "'", str69, "[1, 0, 164, 52, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 52, 0]" + "'", str70, "[1, 0, 165, 52, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 52, 0]" + "'", str71, "[1, 0, 166, 52, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 52, 0]" + "'", str72, "[1, 0, 167, 52, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 52, 0]" + "'", str73, "[1, 0, 168, 52, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 52, 0]" + "'", str74, "[1, 0, 169, 52, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 52, 0]" + "'", str75, "[1, 0, 170, 52, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 52, 0]" + "'", str76, "[1, 0, 171, 52, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 0, 172, 52, 0]" + "'", str77, "[1, 0, 172, 52, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 0, 173, 52, 0]" + "'", str78, "[1, 0, 173, 52, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 0, 174, 52, 0]" + "'", str79, "[1, 0, 174, 52, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 0, 175, 52, 0]" + "'", str80, "[1, 0, 175, 52, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 176, 52, 0]" + "'", str81, "[1, 0, 176, 52, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 0, 177, 52, 0]" + "'", str82, "[1, 0, 177, 52, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 178, 52, 0]" + "'", str83, "[1, 0, 178, 52, 0]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 0, 179, 52, 0]" + "'", str84, "[1, 0, 179, 52, 0]");
    }

    @Test
    public void test6225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6225");
        int[] intArray5 = new int[] { (short) -1, (byte) 100, (byte) 10, (short) 100, ' ' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass66 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 70, 100, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 100, 11, 100, 32]" + "'", str6, "[-1, 100, 11, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 12, 100, 32]" + "'", str7, "[-1, 100, 12, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 13, 100, 32]" + "'", str8, "[-1, 100, 13, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 14, 100, 32]" + "'", str9, "[-1, 100, 14, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 15, 100, 32]" + "'", str10, "[-1, 100, 15, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 16, 100, 32]" + "'", str11, "[-1, 100, 16, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 17, 100, 32]" + "'", str12, "[-1, 100, 17, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 18, 100, 32]" + "'", str13, "[-1, 100, 18, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 19, 100, 32]" + "'", str14, "[-1, 100, 19, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 20, 100, 32]" + "'", str15, "[-1, 100, 20, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 21, 100, 32]" + "'", str16, "[-1, 100, 21, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 22, 100, 32]" + "'", str17, "[-1, 100, 22, 100, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 23, 100, 32]" + "'", str18, "[-1, 100, 23, 100, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 24, 100, 32]" + "'", str19, "[-1, 100, 24, 100, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 25, 100, 32]" + "'", str20, "[-1, 100, 25, 100, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 26, 100, 32]" + "'", str21, "[-1, 100, 26, 100, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 27, 100, 32]" + "'", str22, "[-1, 100, 27, 100, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 28, 100, 32]" + "'", str23, "[-1, 100, 28, 100, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 29, 100, 32]" + "'", str24, "[-1, 100, 29, 100, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 30, 100, 32]" + "'", str25, "[-1, 100, 30, 100, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 31, 100, 32]" + "'", str26, "[-1, 100, 31, 100, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 32, 100, 32]" + "'", str27, "[-1, 100, 32, 100, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 33, 100, 32]" + "'", str28, "[-1, 100, 33, 100, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 34, 100, 32]" + "'", str29, "[-1, 100, 34, 100, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 35, 100, 32]" + "'", str30, "[-1, 100, 35, 100, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 36, 100, 32]" + "'", str31, "[-1, 100, 36, 100, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 37, 100, 32]" + "'", str32, "[-1, 100, 37, 100, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 38, 100, 32]" + "'", str33, "[-1, 100, 38, 100, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 39, 100, 32]" + "'", str34, "[-1, 100, 39, 100, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 40, 100, 32]" + "'", str35, "[-1, 100, 40, 100, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 41, 100, 32]" + "'", str36, "[-1, 100, 41, 100, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 42, 100, 32]" + "'", str37, "[-1, 100, 42, 100, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 100, 43, 100, 32]" + "'", str38, "[-1, 100, 43, 100, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 100, 44, 100, 32]" + "'", str39, "[-1, 100, 44, 100, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 100, 45, 100, 32]" + "'", str40, "[-1, 100, 45, 100, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 100, 46, 100, 32]" + "'", str41, "[-1, 100, 46, 100, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 100, 47, 100, 32]" + "'", str42, "[-1, 100, 47, 100, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 100, 48, 100, 32]" + "'", str43, "[-1, 100, 48, 100, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 100, 49, 100, 32]" + "'", str44, "[-1, 100, 49, 100, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 100, 50, 100, 32]" + "'", str45, "[-1, 100, 50, 100, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 100, 51, 100, 32]" + "'", str46, "[-1, 100, 51, 100, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 100, 52, 100, 32]" + "'", str47, "[-1, 100, 52, 100, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 100, 53, 100, 32]" + "'", str48, "[-1, 100, 53, 100, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 100, 54, 100, 32]" + "'", str49, "[-1, 100, 54, 100, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 100, 55, 100, 32]" + "'", str50, "[-1, 100, 55, 100, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 100, 56, 100, 32]" + "'", str51, "[-1, 100, 56, 100, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 57, 100, 32]" + "'", str52, "[-1, 100, 57, 100, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 100, 58, 100, 32]" + "'", str53, "[-1, 100, 58, 100, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 100, 59, 100, 32]" + "'", str54, "[-1, 100, 59, 100, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 100, 60, 100, 32]" + "'", str55, "[-1, 100, 60, 100, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 100, 61, 100, 32]" + "'", str56, "[-1, 100, 61, 100, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 100, 62, 100, 32]" + "'", str57, "[-1, 100, 62, 100, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 100, 63, 100, 32]" + "'", str58, "[-1, 100, 63, 100, 32]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 100, 64, 100, 32]" + "'", str59, "[-1, 100, 64, 100, 32]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 100, 65, 100, 32]" + "'", str60, "[-1, 100, 65, 100, 32]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 100, 66, 100, 32]" + "'", str61, "[-1, 100, 66, 100, 32]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 100, 67, 100, 32]" + "'", str62, "[-1, 100, 67, 100, 32]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 100, 68, 100, 32]" + "'", str63, "[-1, 100, 68, 100, 32]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[-1, 100, 69, 100, 32]" + "'", str64, "[-1, 100, 69, 100, 32]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[-1, 100, 70, 100, 32]" + "'", str65, "[-1, 100, 70, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test6226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6226");
        int[] intArray5 = new int[] { (-1), '4', '4', (byte) -1, (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 52, 65, -1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 52, 53, -1, 0]" + "'", str6, "[-1, 52, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 52, 54, -1, 0]" + "'", str7, "[-1, 52, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 52, 55, -1, 0]" + "'", str8, "[-1, 52, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 52, 56, -1, 0]" + "'", str9, "[-1, 52, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 52, 57, -1, 0]" + "'", str10, "[-1, 52, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 52, 58, -1, 0]" + "'", str11, "[-1, 52, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 52, 59, -1, 0]" + "'", str12, "[-1, 52, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 52, 60, -1, 0]" + "'", str13, "[-1, 52, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 52, 61, -1, 0]" + "'", str14, "[-1, 52, 61, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 52, 62, -1, 0]" + "'", str15, "[-1, 52, 62, -1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 52, 63, -1, 0]" + "'", str16, "[-1, 52, 63, -1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 52, 64, -1, 0]" + "'", str17, "[-1, 52, 64, -1, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 52, 65, -1, 0]" + "'", str18, "[-1, 52, 65, -1, 0]");
    }

    @Test
    public void test6227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6227");
        int[] intArray5 = new int[] { (byte) -1, '#', 10, (-1), 100 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass55 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 35, 59, -1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 35, 11, -1, 100]" + "'", str6, "[-1, 35, 11, -1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 35, 12, -1, 100]" + "'", str7, "[-1, 35, 12, -1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 35, 13, -1, 100]" + "'", str8, "[-1, 35, 13, -1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 35, 14, -1, 100]" + "'", str9, "[-1, 35, 14, -1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 35, 15, -1, 100]" + "'", str10, "[-1, 35, 15, -1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 35, 16, -1, 100]" + "'", str11, "[-1, 35, 16, -1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 35, 17, -1, 100]" + "'", str12, "[-1, 35, 17, -1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 35, 18, -1, 100]" + "'", str13, "[-1, 35, 18, -1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 35, 19, -1, 100]" + "'", str14, "[-1, 35, 19, -1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 35, 20, -1, 100]" + "'", str15, "[-1, 35, 20, -1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 35, 21, -1, 100]" + "'", str16, "[-1, 35, 21, -1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 35, 22, -1, 100]" + "'", str17, "[-1, 35, 22, -1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 35, 23, -1, 100]" + "'", str18, "[-1, 35, 23, -1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 35, 24, -1, 100]" + "'", str19, "[-1, 35, 24, -1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 35, 25, -1, 100]" + "'", str20, "[-1, 35, 25, -1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 35, 26, -1, 100]" + "'", str21, "[-1, 35, 26, -1, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 35, 27, -1, 100]" + "'", str22, "[-1, 35, 27, -1, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 35, 28, -1, 100]" + "'", str23, "[-1, 35, 28, -1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 35, 29, -1, 100]" + "'", str24, "[-1, 35, 29, -1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 35, 30, -1, 100]" + "'", str25, "[-1, 35, 30, -1, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 35, 31, -1, 100]" + "'", str26, "[-1, 35, 31, -1, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 35, 32, -1, 100]" + "'", str27, "[-1, 35, 32, -1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 35, 33, -1, 100]" + "'", str28, "[-1, 35, 33, -1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 35, 34, -1, 100]" + "'", str29, "[-1, 35, 34, -1, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 35, 35, -1, 100]" + "'", str30, "[-1, 35, 35, -1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 35, 36, -1, 100]" + "'", str31, "[-1, 35, 36, -1, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 35, 37, -1, 100]" + "'", str32, "[-1, 35, 37, -1, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 35, 38, -1, 100]" + "'", str33, "[-1, 35, 38, -1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 35, 39, -1, 100]" + "'", str34, "[-1, 35, 39, -1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 35, 40, -1, 100]" + "'", str35, "[-1, 35, 40, -1, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 35, 41, -1, 100]" + "'", str36, "[-1, 35, 41, -1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 35, 42, -1, 100]" + "'", str37, "[-1, 35, 42, -1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 43, -1, 100]" + "'", str38, "[-1, 35, 43, -1, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 35, 44, -1, 100]" + "'", str39, "[-1, 35, 44, -1, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 35, 45, -1, 100]" + "'", str40, "[-1, 35, 45, -1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 35, 46, -1, 100]" + "'", str41, "[-1, 35, 46, -1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 35, 47, -1, 100]" + "'", str42, "[-1, 35, 47, -1, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 35, 48, -1, 100]" + "'", str43, "[-1, 35, 48, -1, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 35, 49, -1, 100]" + "'", str44, "[-1, 35, 49, -1, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 35, 50, -1, 100]" + "'", str45, "[-1, 35, 50, -1, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 35, 51, -1, 100]" + "'", str46, "[-1, 35, 51, -1, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 35, 52, -1, 100]" + "'", str47, "[-1, 35, 52, -1, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 35, 53, -1, 100]" + "'", str48, "[-1, 35, 53, -1, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 35, 54, -1, 100]" + "'", str49, "[-1, 35, 54, -1, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 35, 55, -1, 100]" + "'", str50, "[-1, 35, 55, -1, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 35, 56, -1, 100]" + "'", str51, "[-1, 35, 56, -1, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 35, 57, -1, 100]" + "'", str52, "[-1, 35, 57, -1, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 35, 58, -1, 100]" + "'", str53, "[-1, 35, 58, -1, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 35, 59, -1, 100]" + "'", str54, "[-1, 35, 59, -1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test6228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6228");
        int[] intArray5 = new int[] { (byte) 10, (byte) -1, '#', (byte) 100, (short) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, -1, 36, 100, -1]" + "'", str6, "[10, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, -1, 37, 100, -1]" + "'", str7, "[10, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, -1, 38, 100, -1]" + "'", str8, "[10, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, -1, 39, 100, -1]" + "'", str9, "[10, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, -1, 40, 100, -1]" + "'", str10, "[10, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, -1, 41, 100, -1]" + "'", str11, "[10, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, -1, 42, 100, -1]" + "'", str12, "[10, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, -1, 43, 100, -1]" + "'", str13, "[10, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, -1, 44, 100, -1]" + "'", str14, "[10, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, -1, 45, 100, -1]" + "'", str15, "[10, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, -1, 46, 100, -1]" + "'", str16, "[10, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, -1, 47, 100, -1]" + "'", str17, "[10, -1, 47, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test6229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6229");
        int[] intArray4 = new int[] { '4', (-1), (byte) 10, 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 72, 83, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 11, 1]" + "'", str5, "[52, 0, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 12, 1]" + "'", str6, "[52, 1, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 13, 1]" + "'", str7, "[52, 2, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 14, 1]" + "'", str8, "[52, 3, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 15, 1]" + "'", str9, "[52, 4, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 16, 1]" + "'", str10, "[52, 5, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 17, 1]" + "'", str11, "[52, 6, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 18, 1]" + "'", str12, "[52, 7, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 19, 1]" + "'", str13, "[52, 8, 19, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 20, 1]" + "'", str14, "[52, 9, 20, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 21, 1]" + "'", str15, "[52, 10, 21, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 22, 1]" + "'", str16, "[52, 11, 22, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 23, 1]" + "'", str17, "[52, 12, 23, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 24, 1]" + "'", str18, "[52, 13, 24, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 25, 1]" + "'", str19, "[52, 14, 25, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 26, 1]" + "'", str20, "[52, 15, 26, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 27, 1]" + "'", str21, "[52, 16, 27, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 28, 1]" + "'", str22, "[52, 17, 28, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 29, 1]" + "'", str23, "[52, 18, 29, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 30, 1]" + "'", str24, "[52, 19, 30, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 31, 1]" + "'", str25, "[52, 20, 31, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 32, 1]" + "'", str26, "[52, 21, 32, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 33, 1]" + "'", str27, "[52, 22, 33, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 34, 1]" + "'", str28, "[52, 23, 34, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 35, 1]" + "'", str29, "[52, 24, 35, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 36, 1]" + "'", str30, "[52, 25, 36, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 37, 1]" + "'", str31, "[52, 26, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 38, 1]" + "'", str32, "[52, 27, 38, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 39, 1]" + "'", str33, "[52, 28, 39, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 40, 1]" + "'", str34, "[52, 29, 40, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 41, 1]" + "'", str35, "[52, 30, 41, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 42, 1]" + "'", str36, "[52, 31, 42, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 43, 1]" + "'", str37, "[52, 32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 44, 1]" + "'", str38, "[52, 33, 44, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 45, 1]" + "'", str39, "[52, 34, 45, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 46, 1]" + "'", str40, "[52, 35, 46, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 47, 1]" + "'", str41, "[52, 36, 47, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 48, 1]" + "'", str42, "[52, 37, 48, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 49, 1]" + "'", str43, "[52, 38, 49, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 50, 1]" + "'", str44, "[52, 39, 50, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 51, 1]" + "'", str45, "[52, 40, 51, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 52, 1]" + "'", str46, "[52, 41, 52, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 53, 1]" + "'", str47, "[52, 42, 53, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 54, 1]" + "'", str48, "[52, 43, 54, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 55, 1]" + "'", str49, "[52, 44, 55, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 56, 1]" + "'", str50, "[52, 45, 56, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 57, 1]" + "'", str51, "[52, 46, 57, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 58, 1]" + "'", str52, "[52, 47, 58, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 59, 1]" + "'", str53, "[52, 48, 59, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 60, 1]" + "'", str54, "[52, 49, 60, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 61, 1]" + "'", str55, "[52, 50, 61, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 62, 1]" + "'", str56, "[52, 51, 62, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 63, 1]" + "'", str57, "[52, 52, 63, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 64, 1]" + "'", str58, "[52, 53, 64, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[52, 54, 65, 1]" + "'", str59, "[52, 54, 65, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[52, 55, 66, 1]" + "'", str60, "[52, 55, 66, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[52, 56, 67, 1]" + "'", str61, "[52, 56, 67, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[52, 57, 68, 1]" + "'", str62, "[52, 57, 68, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[52, 58, 69, 1]" + "'", str63, "[52, 58, 69, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[52, 59, 70, 1]" + "'", str64, "[52, 59, 70, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[52, 60, 71, 1]" + "'", str65, "[52, 60, 71, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[52, 61, 72, 1]" + "'", str66, "[52, 61, 72, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[52, 62, 73, 1]" + "'", str67, "[52, 62, 73, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[52, 63, 74, 1]" + "'", str68, "[52, 63, 74, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[52, 64, 75, 1]" + "'", str69, "[52, 64, 75, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[52, 65, 76, 1]" + "'", str70, "[52, 65, 76, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[52, 66, 77, 1]" + "'", str71, "[52, 66, 77, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[52, 67, 78, 1]" + "'", str72, "[52, 67, 78, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[52, 68, 79, 1]" + "'", str73, "[52, 68, 79, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[52, 69, 80, 1]" + "'", str74, "[52, 69, 80, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[52, 70, 81, 1]" + "'", str75, "[52, 70, 81, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[52, 71, 82, 1]" + "'", str76, "[52, 71, 82, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[52, 72, 83, 1]" + "'", str77, "[52, 72, 83, 1]");
    }

    @Test
    public void test6230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6230");
        int[] intArray5 = new int[] { 1, (byte) 0, (-1), ' ', 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass24 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 7, 33, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 0, 32, 1]" + "'", str6, "[1, 0, 0, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 32, 1]" + "'", str7, "[1, 0, 1, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 32, 1]" + "'", str8, "[1, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 32, 1]" + "'", str9, "[1, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 32, 1]" + "'", str10, "[1, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 32, 1]" + "'", str11, "[1, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 32, 1]" + "'", str12, "[1, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 32, 1]" + "'", str13, "[1, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 32, 1]" + "'", str14, "[1, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 32, 1]" + "'", str15, "[1, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 0, 33, 1]" + "'", str16, "[1, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 1, 33, 1]" + "'", str17, "[1, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 2, 33, 1]" + "'", str18, "[1, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 3, 33, 1]" + "'", str19, "[1, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 4, 33, 1]" + "'", str20, "[1, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 5, 33, 1]" + "'", str21, "[1, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 6, 33, 1]" + "'", str22, "[1, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 7, 33, 1]" + "'", str23, "[1, 1, 7, 33, 1]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test6231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6231");
        int[] intArray5 = new int[] { (byte) 10, (short) 10, (short) -1, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 11, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 10, 0, 0, 1]" + "'", str6, "[10, 10, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 1, 0, 1]" + "'", str7, "[10, 10, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 2, 0, 1]" + "'", str8, "[10, 10, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 3, 0, 1]" + "'", str9, "[10, 10, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 4, 0, 1]" + "'", str10, "[10, 10, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 5, 0, 1]" + "'", str11, "[10, 10, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 6, 0, 1]" + "'", str12, "[10, 10, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 7, 0, 1]" + "'", str13, "[10, 10, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 8, 0, 1]" + "'", str14, "[10, 10, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 9, 0, 1]" + "'", str15, "[10, 10, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 11, 0, 1, 1]" + "'", str16, "[10, 11, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 11, 1, 1, 1]" + "'", str17, "[10, 11, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 11, 2, 1, 1]" + "'", str18, "[10, 11, 2, 1, 1]");
    }

    @Test
    public void test6232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6232");
        int[] intArray2 = new int[] { (short) 0, 100 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[39, 139]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 101]" + "'", str3, "[1, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 102]" + "'", str4, "[2, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 103]" + "'", str5, "[3, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 104]" + "'", str6, "[4, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 105]" + "'", str7, "[5, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 106]" + "'", str8, "[6, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 107]" + "'", str9, "[7, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 108]" + "'", str10, "[8, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9, 109]" + "'", str11, "[9, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 110]" + "'", str12, "[10, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 111]" + "'", str13, "[11, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[12, 112]" + "'", str14, "[12, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[13, 113]" + "'", str15, "[13, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[14, 114]" + "'", str16, "[14, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[15, 115]" + "'", str17, "[15, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[16, 116]" + "'", str18, "[16, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[17, 117]" + "'", str19, "[17, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[18, 118]" + "'", str20, "[18, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[19, 119]" + "'", str21, "[19, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[20, 120]" + "'", str22, "[20, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[21, 121]" + "'", str23, "[21, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[22, 122]" + "'", str24, "[22, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[23, 123]" + "'", str25, "[23, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[24, 124]" + "'", str26, "[24, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[25, 125]" + "'", str27, "[25, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[26, 126]" + "'", str28, "[26, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[27, 127]" + "'", str29, "[27, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[28, 128]" + "'", str30, "[28, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[29, 129]" + "'", str31, "[29, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[30, 130]" + "'", str32, "[30, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[31, 131]" + "'", str33, "[31, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 132]" + "'", str34, "[32, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[33, 133]" + "'", str35, "[33, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[34, 134]" + "'", str36, "[34, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 135]" + "'", str37, "[35, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[36, 136]" + "'", str38, "[36, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[37, 137]" + "'", str39, "[37, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 138]" + "'", str40, "[38, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[39, 139]" + "'", str41, "[39, 139]");
    }

    @Test
    public void test6233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6233");
        int[] intArray6 = new int[] { 0, (short) -1, 'a', '#', (byte) 0, 100 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 159, 97, 0, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 98, 36, 0, 100]" + "'", str7, "[0, -1, 98, 36, 0, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 99, 37, 0, 100]" + "'", str8, "[0, -1, 99, 37, 0, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 100, 38, 0, 100]" + "'", str9, "[0, -1, 100, 38, 0, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 101, 39, 0, 100]" + "'", str10, "[0, -1, 101, 39, 0, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 102, 40, 0, 100]" + "'", str11, "[0, -1, 102, 40, 0, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 103, 41, 0, 100]" + "'", str12, "[0, -1, 103, 41, 0, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 104, 42, 0, 100]" + "'", str13, "[0, -1, 104, 42, 0, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 105, 43, 0, 100]" + "'", str14, "[0, -1, 105, 43, 0, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 106, 44, 0, 100]" + "'", str15, "[0, -1, 106, 44, 0, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 107, 45, 0, 100]" + "'", str16, "[0, -1, 107, 45, 0, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 108, 46, 0, 100]" + "'", str17, "[0, -1, 108, 46, 0, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 109, 47, 0, 100]" + "'", str18, "[0, -1, 109, 47, 0, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 110, 48, 0, 100]" + "'", str19, "[0, -1, 110, 48, 0, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 111, 49, 0, 100]" + "'", str20, "[0, -1, 111, 49, 0, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 112, 50, 0, 100]" + "'", str21, "[0, -1, 112, 50, 0, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 113, 51, 0, 100]" + "'", str22, "[0, -1, 113, 51, 0, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 114, 52, 0, 100]" + "'", str23, "[0, -1, 114, 52, 0, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 115, 53, 0, 100]" + "'", str24, "[0, -1, 115, 53, 0, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 116, 54, 0, 100]" + "'", str25, "[0, -1, 116, 54, 0, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 117, 55, 0, 100]" + "'", str26, "[0, -1, 117, 55, 0, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 118, 56, 0, 100]" + "'", str27, "[0, -1, 118, 56, 0, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 119, 57, 0, 100]" + "'", str28, "[0, -1, 119, 57, 0, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 120, 58, 0, 100]" + "'", str29, "[0, -1, 120, 58, 0, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 121, 59, 0, 100]" + "'", str30, "[0, -1, 121, 59, 0, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 122, 60, 0, 100]" + "'", str31, "[0, -1, 122, 60, 0, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 123, 61, 0, 100]" + "'", str32, "[0, -1, 123, 61, 0, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 124, 62, 0, 100]" + "'", str33, "[0, -1, 124, 62, 0, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 125, 63, 0, 100]" + "'", str34, "[0, -1, 125, 63, 0, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 126, 64, 0, 100]" + "'", str35, "[0, -1, 126, 64, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 127, 65, 0, 100]" + "'", str36, "[0, -1, 127, 65, 0, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 128, 66, 0, 100]" + "'", str37, "[0, -1, 128, 66, 0, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 129, 67, 0, 100]" + "'", str38, "[0, -1, 129, 67, 0, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 130, 68, 0, 100]" + "'", str39, "[0, -1, 130, 68, 0, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 131, 69, 0, 100]" + "'", str40, "[0, -1, 131, 69, 0, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 132, 70, 0, 100]" + "'", str41, "[0, -1, 132, 70, 0, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 133, 71, 0, 100]" + "'", str42, "[0, -1, 133, 71, 0, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 134, 72, 0, 100]" + "'", str43, "[0, -1, 134, 72, 0, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, -1, 135, 73, 0, 100]" + "'", str44, "[0, -1, 135, 73, 0, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, -1, 136, 74, 0, 100]" + "'", str45, "[0, -1, 136, 74, 0, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, -1, 137, 75, 0, 100]" + "'", str46, "[0, -1, 137, 75, 0, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, -1, 138, 76, 0, 100]" + "'", str47, "[0, -1, 138, 76, 0, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, -1, 139, 77, 0, 100]" + "'", str48, "[0, -1, 139, 77, 0, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, -1, 140, 78, 0, 100]" + "'", str49, "[0, -1, 140, 78, 0, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, -1, 141, 79, 0, 100]" + "'", str50, "[0, -1, 141, 79, 0, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, -1, 142, 80, 0, 100]" + "'", str51, "[0, -1, 142, 80, 0, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, -1, 143, 81, 0, 100]" + "'", str52, "[0, -1, 143, 81, 0, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, -1, 144, 82, 0, 100]" + "'", str53, "[0, -1, 144, 82, 0, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, -1, 145, 83, 0, 100]" + "'", str54, "[0, -1, 145, 83, 0, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, -1, 146, 84, 0, 100]" + "'", str55, "[0, -1, 146, 84, 0, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, -1, 147, 85, 0, 100]" + "'", str56, "[0, -1, 147, 85, 0, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, -1, 148, 86, 0, 100]" + "'", str57, "[0, -1, 148, 86, 0, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, -1, 149, 87, 0, 100]" + "'", str58, "[0, -1, 149, 87, 0, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, -1, 150, 88, 0, 100]" + "'", str59, "[0, -1, 150, 88, 0, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, -1, 151, 89, 0, 100]" + "'", str60, "[0, -1, 151, 89, 0, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, -1, 152, 90, 0, 100]" + "'", str61, "[0, -1, 152, 90, 0, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, -1, 153, 91, 0, 100]" + "'", str62, "[0, -1, 153, 91, 0, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, -1, 154, 92, 0, 100]" + "'", str63, "[0, -1, 154, 92, 0, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, -1, 155, 93, 0, 100]" + "'", str64, "[0, -1, 155, 93, 0, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, -1, 156, 94, 0, 100]" + "'", str65, "[0, -1, 156, 94, 0, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, -1, 157, 95, 0, 100]" + "'", str66, "[0, -1, 157, 95, 0, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, -1, 158, 96, 0, 100]" + "'", str67, "[0, -1, 158, 96, 0, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, -1, 159, 97, 0, 100]" + "'", str68, "[0, -1, 159, 97, 0, 100]");
    }

    @Test
    public void test6234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6234");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 188, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 0, 1]" + "'", str29, "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 0, 1]" + "'", str30, "[1, 0, 125, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 0, 1]" + "'", str31, "[1, 0, 126, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 0, 1]" + "'", str32, "[1, 0, 127, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 0, 1]" + "'", str33, "[1, 0, 128, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 0, 1]" + "'", str34, "[1, 0, 129, 0, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 0, 1]" + "'", str35, "[1, 0, 130, 0, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 0, 1]" + "'", str36, "[1, 0, 131, 0, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 0, 1]" + "'", str37, "[1, 0, 132, 0, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 0, 1]" + "'", str38, "[1, 0, 133, 0, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 0, 1]" + "'", str39, "[1, 0, 134, 0, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 0, 1]" + "'", str40, "[1, 0, 135, 0, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 0, 1]" + "'", str41, "[1, 0, 136, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 0, 1]" + "'", str42, "[1, 0, 137, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 0, 1]" + "'", str43, "[1, 0, 138, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 0, 1]" + "'", str44, "[1, 0, 139, 0, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 0, 1]" + "'", str45, "[1, 0, 140, 0, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 0, 1]" + "'", str46, "[1, 0, 141, 0, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 0, 1]" + "'", str47, "[1, 0, 142, 0, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 0, 1]" + "'", str48, "[1, 0, 143, 0, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 0, 1]" + "'", str49, "[1, 0, 144, 0, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 0, 1]" + "'", str50, "[1, 0, 145, 0, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 0, 1]" + "'", str51, "[1, 0, 146, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 0, 1]" + "'", str52, "[1, 0, 147, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 0, 1]" + "'", str53, "[1, 0, 148, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 0, 1]" + "'", str54, "[1, 0, 149, 0, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 0, 1]" + "'", str55, "[1, 0, 150, 0, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 0, 1]" + "'", str56, "[1, 0, 151, 0, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 0, 1]" + "'", str57, "[1, 0, 152, 0, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 0, 1]" + "'", str58, "[1, 0, 153, 0, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 0, 1]" + "'", str59, "[1, 0, 154, 0, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 0, 1]" + "'", str60, "[1, 0, 155, 0, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 0, 1]" + "'", str61, "[1, 0, 156, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 0, 1]" + "'", str62, "[1, 0, 157, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 0, 1]" + "'", str63, "[1, 0, 158, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 0, 1]" + "'", str64, "[1, 0, 159, 0, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 0, 1]" + "'", str65, "[1, 0, 160, 0, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 0, 1]" + "'", str66, "[1, 0, 161, 0, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 0, 1]" + "'", str67, "[1, 0, 162, 0, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 0, 1]" + "'", str68, "[1, 0, 163, 0, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 0, 1]" + "'", str69, "[1, 0, 164, 0, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 0, 1]" + "'", str70, "[1, 0, 165, 0, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 0, 1]" + "'", str71, "[1, 0, 166, 0, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 0, 1]" + "'", str72, "[1, 0, 167, 0, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 0, 1]" + "'", str73, "[1, 0, 168, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 0, 1]" + "'", str74, "[1, 0, 169, 0, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 0, 1]" + "'", str75, "[1, 0, 170, 0, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 0, 1]" + "'", str76, "[1, 0, 171, 0, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 0, 172, 0, 1]" + "'", str77, "[1, 0, 172, 0, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 0, 173, 0, 1]" + "'", str78, "[1, 0, 173, 0, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 0, 174, 0, 1]" + "'", str79, "[1, 0, 174, 0, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 0, 175, 0, 1]" + "'", str80, "[1, 0, 175, 0, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 176, 0, 1]" + "'", str81, "[1, 0, 176, 0, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 0, 177, 0, 1]" + "'", str82, "[1, 0, 177, 0, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 178, 0, 1]" + "'", str83, "[1, 0, 178, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 0, 179, 0, 1]" + "'", str84, "[1, 0, 179, 0, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[1, 0, 180, 0, 1]" + "'", str85, "[1, 0, 180, 0, 1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[1, 0, 181, 0, 1]" + "'", str86, "[1, 0, 181, 0, 1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[1, 0, 182, 0, 1]" + "'", str87, "[1, 0, 182, 0, 1]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[1, 0, 183, 0, 1]" + "'", str88, "[1, 0, 183, 0, 1]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[1, 0, 184, 0, 1]" + "'", str89, "[1, 0, 184, 0, 1]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[1, 0, 185, 0, 1]" + "'", str90, "[1, 0, 185, 0, 1]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[1, 0, 186, 0, 1]" + "'", str91, "[1, 0, 186, 0, 1]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 0, 187, 0, 1]" + "'", str92, "[1, 0, 187, 0, 1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1, 0, 188, 0, 1]" + "'", str93, "[1, 0, 188, 0, 1]");
    }

    @Test
    public void test6235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6235");
        int[] intArray2 = new int[] { (short) 1, (short) 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass17 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[5, 5]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 2]" + "'", str3, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 3]" + "'", str4, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 4]" + "'", str5, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 5]" + "'", str6, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 6]" + "'", str7, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 7]" + "'", str8, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 8]" + "'", str9, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 9]" + "'", str10, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6236");
        int[] intArray2 = new int[] { (short) 1, (short) 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass18 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[6, 6]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 2]" + "'", str3, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 3]" + "'", str4, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 4]" + "'", str5, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 5]" + "'", str6, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 6]" + "'", str7, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 7]" + "'", str8, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 8]" + "'", str9, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 9]" + "'", str10, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test6237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6237");
        int[] intArray6 = new int[] { (byte) 10, (byte) 1, (short) 100, 0, (byte) 0, (byte) -1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass24 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 2, 7, 7, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 1, 101, 1, 0, -1]" + "'", str7, "[10, 1, 101, 1, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 1, 102, 2, 0, -1]" + "'", str8, "[10, 1, 102, 2, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 1, 103, 3, 0, -1]" + "'", str9, "[10, 1, 103, 3, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 1, 104, 4, 0, -1]" + "'", str10, "[10, 1, 104, 4, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 1, 105, 5, 0, -1]" + "'", str11, "[10, 1, 105, 5, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 1, 106, 6, 0, -1]" + "'", str12, "[10, 1, 106, 6, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 1, 107, 7, 0, -1]" + "'", str13, "[10, 1, 107, 7, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 1, 108, 8, 0, -1]" + "'", str14, "[10, 1, 108, 8, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 1, 109, 9, 0, -1]" + "'", str15, "[10, 1, 109, 9, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 2, 0, 0, 1, -1]" + "'", str16, "[10, 2, 0, 0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 2, 1, 1, 1, -1]" + "'", str17, "[10, 2, 1, 1, 1, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 2, 2, 2, 1, -1]" + "'", str18, "[10, 2, 2, 2, 1, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 2, 3, 3, 1, -1]" + "'", str19, "[10, 2, 3, 3, 1, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 2, 4, 4, 1, -1]" + "'", str20, "[10, 2, 4, 4, 1, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 2, 5, 5, 1, -1]" + "'", str21, "[10, 2, 5, 5, 1, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 2, 6, 6, 1, -1]" + "'", str22, "[10, 2, 6, 6, 1, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 2, 7, 7, 1, -1]" + "'", str23, "[10, 2, 7, 7, 1, -1]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test6238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6238");
        int[] intArray6 = new int[] { (byte) 10, (byte) 1, (short) 100, 0, (byte) 0, (byte) -1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass23 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 2, 6, 6, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 1, 101, 1, 0, -1]" + "'", str7, "[10, 1, 101, 1, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 1, 102, 2, 0, -1]" + "'", str8, "[10, 1, 102, 2, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 1, 103, 3, 0, -1]" + "'", str9, "[10, 1, 103, 3, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 1, 104, 4, 0, -1]" + "'", str10, "[10, 1, 104, 4, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 1, 105, 5, 0, -1]" + "'", str11, "[10, 1, 105, 5, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 1, 106, 6, 0, -1]" + "'", str12, "[10, 1, 106, 6, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 1, 107, 7, 0, -1]" + "'", str13, "[10, 1, 107, 7, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 1, 108, 8, 0, -1]" + "'", str14, "[10, 1, 108, 8, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 1, 109, 9, 0, -1]" + "'", str15, "[10, 1, 109, 9, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 2, 0, 0, 1, -1]" + "'", str16, "[10, 2, 0, 0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 2, 1, 1, 1, -1]" + "'", str17, "[10, 2, 1, 1, 1, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 2, 2, 2, 1, -1]" + "'", str18, "[10, 2, 2, 2, 1, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 2, 3, 3, 1, -1]" + "'", str19, "[10, 2, 3, 3, 1, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 2, 4, 4, 1, -1]" + "'", str20, "[10, 2, 4, 4, 1, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 2, 5, 5, 1, -1]" + "'", str21, "[10, 2, 5, 5, 1, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 2, 6, 6, 1, -1]" + "'", str22, "[10, 2, 6, 6, 1, -1]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test6239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6239");
        int[] intArray3 = new int[] { (byte) 10, (short) -1, (byte) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 2, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 0, 10]" + "'", str4, "[10, 0, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 1, 10]" + "'", str5, "[10, 1, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 2, 10]" + "'", str6, "[10, 2, 10]");
    }

    @Test
    public void test6240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6240");
        int[] intArray3 = new int[] { ' ', (short) 0, (byte) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass28 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[34, 4, 12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 1, 10]" + "'", str4, "[32, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 2, 10]" + "'", str5, "[32, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 3, 10]" + "'", str6, "[32, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 4, 10]" + "'", str7, "[32, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 5, 10]" + "'", str8, "[32, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 6, 10]" + "'", str9, "[32, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 7, 10]" + "'", str10, "[32, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 8, 10]" + "'", str11, "[32, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 9, 10]" + "'", str12, "[32, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 0, 11]" + "'", str13, "[33, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 1, 11]" + "'", str14, "[33, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 2, 11]" + "'", str15, "[33, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 3, 11]" + "'", str16, "[33, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 4, 11]" + "'", str17, "[33, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 5, 11]" + "'", str18, "[33, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 6, 11]" + "'", str19, "[33, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 7, 11]" + "'", str20, "[33, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 8, 11]" + "'", str21, "[33, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 9, 11]" + "'", str22, "[33, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 0, 12]" + "'", str23, "[34, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 1, 12]" + "'", str24, "[34, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 2, 12]" + "'", str25, "[34, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 3, 12]" + "'", str26, "[34, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 4, 12]" + "'", str27, "[34, 4, 12]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test6241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6241");
        int[] intArray6 = new int[] { ' ', (byte) 0, ' ', (byte) 0, (-1), (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 7, 9, 9, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 33, 1, -1, 1]" + "'", str7, "[32, 0, 33, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 34, 2, -1, 1]" + "'", str8, "[32, 0, 34, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 35, 3, -1, 1]" + "'", str9, "[32, 0, 35, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 36, 4, -1, 1]" + "'", str10, "[32, 0, 36, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 37, 5, -1, 1]" + "'", str11, "[32, 0, 37, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 38, 6, -1, 1]" + "'", str12, "[32, 0, 38, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 39, 7, -1, 1]" + "'", str13, "[32, 0, 39, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 0, 40, 8, -1, 1]" + "'", str14, "[32, 0, 40, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 0, 41, 9, -1, 1]" + "'", str15, "[32, 0, 41, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 0, 0, 0, 1]" + "'", str16, "[32, 1, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 1, 1, 0, 1]" + "'", str17, "[32, 1, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 2, 2, 0, 1]" + "'", str18, "[32, 1, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 3, 3, 0, 1]" + "'", str19, "[32, 1, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 4, 4, 0, 1]" + "'", str20, "[32, 1, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 5, 5, 0, 1]" + "'", str21, "[32, 1, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 6, 6, 0, 1]" + "'", str22, "[32, 1, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 7, 7, 0, 1]" + "'", str23, "[32, 1, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 1, 8, 8, 0, 1]" + "'", str24, "[32, 1, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 1, 9, 9, 0, 1]" + "'", str25, "[32, 1, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 2, 0, 0, 1, 1]" + "'", str26, "[32, 2, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 2, 1, 1, 1, 1]" + "'", str27, "[32, 2, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 2, 2, 2, 1, 1]" + "'", str28, "[32, 2, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 2, 3, 3, 1, 1]" + "'", str29, "[32, 2, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 2, 4, 4, 1, 1]" + "'", str30, "[32, 2, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 2, 5, 5, 1, 1]" + "'", str31, "[32, 2, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 2, 6, 6, 1, 1]" + "'", str32, "[32, 2, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 2, 7, 7, 1, 1]" + "'", str33, "[32, 2, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 2, 8, 8, 1, 1]" + "'", str34, "[32, 2, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 2, 9, 9, 1, 1]" + "'", str35, "[32, 2, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 3, 0, 0, 2, 1]" + "'", str36, "[32, 3, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 3, 1, 1, 2, 1]" + "'", str37, "[32, 3, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 3, 2, 2, 2, 1]" + "'", str38, "[32, 3, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 3, 3, 3, 2, 1]" + "'", str39, "[32, 3, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 3, 4, 4, 2, 1]" + "'", str40, "[32, 3, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[32, 3, 5, 5, 2, 1]" + "'", str41, "[32, 3, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[32, 3, 6, 6, 2, 1]" + "'", str42, "[32, 3, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[32, 3, 7, 7, 2, 1]" + "'", str43, "[32, 3, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[32, 3, 8, 8, 2, 1]" + "'", str44, "[32, 3, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[32, 3, 9, 9, 2, 1]" + "'", str45, "[32, 3, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[32, 4, 0, 0, 3, 1]" + "'", str46, "[32, 4, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[32, 4, 1, 1, 3, 1]" + "'", str47, "[32, 4, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[32, 4, 2, 2, 3, 1]" + "'", str48, "[32, 4, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[32, 4, 3, 3, 3, 1]" + "'", str49, "[32, 4, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[32, 4, 4, 4, 3, 1]" + "'", str50, "[32, 4, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[32, 4, 5, 5, 3, 1]" + "'", str51, "[32, 4, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[32, 4, 6, 6, 3, 1]" + "'", str52, "[32, 4, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[32, 4, 7, 7, 3, 1]" + "'", str53, "[32, 4, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[32, 4, 8, 8, 3, 1]" + "'", str54, "[32, 4, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[32, 4, 9, 9, 3, 1]" + "'", str55, "[32, 4, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[32, 5, 0, 0, 4, 1]" + "'", str56, "[32, 5, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[32, 5, 1, 1, 4, 1]" + "'", str57, "[32, 5, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[32, 5, 2, 2, 4, 1]" + "'", str58, "[32, 5, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[32, 5, 3, 3, 4, 1]" + "'", str59, "[32, 5, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[32, 5, 4, 4, 4, 1]" + "'", str60, "[32, 5, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[32, 5, 5, 5, 4, 1]" + "'", str61, "[32, 5, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[32, 5, 6, 6, 4, 1]" + "'", str62, "[32, 5, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[32, 5, 7, 7, 4, 1]" + "'", str63, "[32, 5, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[32, 5, 8, 8, 4, 1]" + "'", str64, "[32, 5, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[32, 5, 9, 9, 4, 1]" + "'", str65, "[32, 5, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[32, 6, 0, 0, 5, 1]" + "'", str66, "[32, 6, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[32, 6, 1, 1, 5, 1]" + "'", str67, "[32, 6, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[32, 6, 2, 2, 5, 1]" + "'", str68, "[32, 6, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[32, 6, 3, 3, 5, 1]" + "'", str69, "[32, 6, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[32, 6, 4, 4, 5, 1]" + "'", str70, "[32, 6, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[32, 6, 5, 5, 5, 1]" + "'", str71, "[32, 6, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[32, 6, 6, 6, 5, 1]" + "'", str72, "[32, 6, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[32, 6, 7, 7, 5, 1]" + "'", str73, "[32, 6, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[32, 6, 8, 8, 5, 1]" + "'", str74, "[32, 6, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[32, 6, 9, 9, 5, 1]" + "'", str75, "[32, 6, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[32, 7, 0, 0, 6, 1]" + "'", str76, "[32, 7, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[32, 7, 1, 1, 6, 1]" + "'", str77, "[32, 7, 1, 1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[32, 7, 2, 2, 6, 1]" + "'", str78, "[32, 7, 2, 2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[32, 7, 3, 3, 6, 1]" + "'", str79, "[32, 7, 3, 3, 6, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[32, 7, 4, 4, 6, 1]" + "'", str80, "[32, 7, 4, 4, 6, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[32, 7, 5, 5, 6, 1]" + "'", str81, "[32, 7, 5, 5, 6, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[32, 7, 6, 6, 6, 1]" + "'", str82, "[32, 7, 6, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[32, 7, 7, 7, 6, 1]" + "'", str83, "[32, 7, 7, 7, 6, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[32, 7, 8, 8, 6, 1]" + "'", str84, "[32, 7, 8, 8, 6, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[32, 7, 9, 9, 6, 1]" + "'", str85, "[32, 7, 9, 9, 6, 1]");
    }

    @Test
    public void test6242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6242");
        int[] intArray2 = new int[] { (short) 0, 100 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass40 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[37, 137]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 101]" + "'", str3, "[1, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 102]" + "'", str4, "[2, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 103]" + "'", str5, "[3, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 104]" + "'", str6, "[4, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 105]" + "'", str7, "[5, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 106]" + "'", str8, "[6, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 107]" + "'", str9, "[7, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 108]" + "'", str10, "[8, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9, 109]" + "'", str11, "[9, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 110]" + "'", str12, "[10, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 111]" + "'", str13, "[11, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[12, 112]" + "'", str14, "[12, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[13, 113]" + "'", str15, "[13, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[14, 114]" + "'", str16, "[14, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[15, 115]" + "'", str17, "[15, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[16, 116]" + "'", str18, "[16, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[17, 117]" + "'", str19, "[17, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[18, 118]" + "'", str20, "[18, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[19, 119]" + "'", str21, "[19, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[20, 120]" + "'", str22, "[20, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[21, 121]" + "'", str23, "[21, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[22, 122]" + "'", str24, "[22, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[23, 123]" + "'", str25, "[23, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[24, 124]" + "'", str26, "[24, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[25, 125]" + "'", str27, "[25, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[26, 126]" + "'", str28, "[26, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[27, 127]" + "'", str29, "[27, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[28, 128]" + "'", str30, "[28, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[29, 129]" + "'", str31, "[29, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[30, 130]" + "'", str32, "[30, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[31, 131]" + "'", str33, "[31, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 132]" + "'", str34, "[32, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[33, 133]" + "'", str35, "[33, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[34, 134]" + "'", str36, "[34, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 135]" + "'", str37, "[35, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[36, 136]" + "'", str38, "[36, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[37, 137]" + "'", str39, "[37, 137]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test6243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6243");
        int[] intArray5 = new int[] { ' ', (byte) -1, (byte) 100, (byte) 0, (short) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass10 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, -1, 104, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, -1, 101, 0, 10]" + "'", str6, "[32, -1, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, -1, 102, 0, 10]" + "'", str7, "[32, -1, 102, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, -1, 103, 0, 10]" + "'", str8, "[32, -1, 103, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, -1, 104, 0, 10]" + "'", str9, "[32, -1, 104, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test6244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6244");
        int[] intArray5 = new int[] { (short) 1, (short) 1, (byte) 0, '4', '#' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass80 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 8, 4, 59, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 1, 52, 35]" + "'", str6, "[1, 1, 1, 52, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 2, 52, 35]" + "'", str7, "[1, 1, 2, 52, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 3, 52, 35]" + "'", str8, "[1, 1, 3, 52, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 4, 52, 35]" + "'", str9, "[1, 1, 4, 52, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 5, 52, 35]" + "'", str10, "[1, 1, 5, 52, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 6, 52, 35]" + "'", str11, "[1, 1, 6, 52, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 7, 52, 35]" + "'", str12, "[1, 1, 7, 52, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 8, 52, 35]" + "'", str13, "[1, 1, 8, 52, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 9, 52, 35]" + "'", str14, "[1, 1, 9, 52, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0, 53, 35]" + "'", str15, "[1, 2, 0, 53, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 1, 53, 35]" + "'", str16, "[1, 2, 1, 53, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 53, 35]" + "'", str17, "[1, 2, 2, 53, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 3, 53, 35]" + "'", str18, "[1, 2, 3, 53, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 4, 53, 35]" + "'", str19, "[1, 2, 4, 53, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 5, 53, 35]" + "'", str20, "[1, 2, 5, 53, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 6, 53, 35]" + "'", str21, "[1, 2, 6, 53, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 7, 53, 35]" + "'", str22, "[1, 2, 7, 53, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 8, 53, 35]" + "'", str23, "[1, 2, 8, 53, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 9, 53, 35]" + "'", str24, "[1, 2, 9, 53, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 0, 54, 35]" + "'", str25, "[1, 3, 0, 54, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 1, 54, 35]" + "'", str26, "[1, 3, 1, 54, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 2, 54, 35]" + "'", str27, "[1, 3, 2, 54, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 3, 54, 35]" + "'", str28, "[1, 3, 3, 54, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 3, 4, 54, 35]" + "'", str29, "[1, 3, 4, 54, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 3, 5, 54, 35]" + "'", str30, "[1, 3, 5, 54, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 3, 6, 54, 35]" + "'", str31, "[1, 3, 6, 54, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 3, 7, 54, 35]" + "'", str32, "[1, 3, 7, 54, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 3, 8, 54, 35]" + "'", str33, "[1, 3, 8, 54, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 3, 9, 54, 35]" + "'", str34, "[1, 3, 9, 54, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 4, 0, 55, 35]" + "'", str35, "[1, 4, 0, 55, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 4, 1, 55, 35]" + "'", str36, "[1, 4, 1, 55, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 4, 2, 55, 35]" + "'", str37, "[1, 4, 2, 55, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 4, 3, 55, 35]" + "'", str38, "[1, 4, 3, 55, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 4, 4, 55, 35]" + "'", str39, "[1, 4, 4, 55, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 4, 5, 55, 35]" + "'", str40, "[1, 4, 5, 55, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 4, 6, 55, 35]" + "'", str41, "[1, 4, 6, 55, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 4, 7, 55, 35]" + "'", str42, "[1, 4, 7, 55, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 4, 8, 55, 35]" + "'", str43, "[1, 4, 8, 55, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 4, 9, 55, 35]" + "'", str44, "[1, 4, 9, 55, 35]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 5, 0, 56, 35]" + "'", str45, "[1, 5, 0, 56, 35]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 5, 1, 56, 35]" + "'", str46, "[1, 5, 1, 56, 35]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 5, 2, 56, 35]" + "'", str47, "[1, 5, 2, 56, 35]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 5, 3, 56, 35]" + "'", str48, "[1, 5, 3, 56, 35]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 5, 4, 56, 35]" + "'", str49, "[1, 5, 4, 56, 35]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 5, 5, 56, 35]" + "'", str50, "[1, 5, 5, 56, 35]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 5, 6, 56, 35]" + "'", str51, "[1, 5, 6, 56, 35]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 5, 7, 56, 35]" + "'", str52, "[1, 5, 7, 56, 35]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 5, 8, 56, 35]" + "'", str53, "[1, 5, 8, 56, 35]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 5, 9, 56, 35]" + "'", str54, "[1, 5, 9, 56, 35]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 6, 0, 57, 35]" + "'", str55, "[1, 6, 0, 57, 35]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 6, 1, 57, 35]" + "'", str56, "[1, 6, 1, 57, 35]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 6, 2, 57, 35]" + "'", str57, "[1, 6, 2, 57, 35]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 6, 3, 57, 35]" + "'", str58, "[1, 6, 3, 57, 35]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 6, 4, 57, 35]" + "'", str59, "[1, 6, 4, 57, 35]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 6, 5, 57, 35]" + "'", str60, "[1, 6, 5, 57, 35]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 6, 6, 57, 35]" + "'", str61, "[1, 6, 6, 57, 35]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 6, 7, 57, 35]" + "'", str62, "[1, 6, 7, 57, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 6, 8, 57, 35]" + "'", str63, "[1, 6, 8, 57, 35]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 6, 9, 57, 35]" + "'", str64, "[1, 6, 9, 57, 35]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 7, 0, 58, 35]" + "'", str65, "[1, 7, 0, 58, 35]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 7, 1, 58, 35]" + "'", str66, "[1, 7, 1, 58, 35]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 7, 2, 58, 35]" + "'", str67, "[1, 7, 2, 58, 35]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 7, 3, 58, 35]" + "'", str68, "[1, 7, 3, 58, 35]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 7, 4, 58, 35]" + "'", str69, "[1, 7, 4, 58, 35]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 7, 5, 58, 35]" + "'", str70, "[1, 7, 5, 58, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 7, 6, 58, 35]" + "'", str71, "[1, 7, 6, 58, 35]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 7, 7, 58, 35]" + "'", str72, "[1, 7, 7, 58, 35]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 7, 8, 58, 35]" + "'", str73, "[1, 7, 8, 58, 35]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 7, 9, 58, 35]" + "'", str74, "[1, 7, 9, 58, 35]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 8, 0, 59, 35]" + "'", str75, "[1, 8, 0, 59, 35]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 8, 1, 59, 35]" + "'", str76, "[1, 8, 1, 59, 35]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 8, 2, 59, 35]" + "'", str77, "[1, 8, 2, 59, 35]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 8, 3, 59, 35]" + "'", str78, "[1, 8, 3, 59, 35]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 8, 4, 59, 35]" + "'", str79, "[1, 8, 4, 59, 35]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test6245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6245");
        int[] intArray5 = new int[] { (byte) 10, (short) 10, (short) -1, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass17 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 11, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 10, 0, 0, 1]" + "'", str6, "[10, 10, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 1, 0, 1]" + "'", str7, "[10, 10, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 2, 0, 1]" + "'", str8, "[10, 10, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 3, 0, 1]" + "'", str9, "[10, 10, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 4, 0, 1]" + "'", str10, "[10, 10, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 5, 0, 1]" + "'", str11, "[10, 10, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 6, 0, 1]" + "'", str12, "[10, 10, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 7, 0, 1]" + "'", str13, "[10, 10, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 8, 0, 1]" + "'", str14, "[10, 10, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 9, 0, 1]" + "'", str15, "[10, 10, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 11, 0, 1, 1]" + "'", str16, "[10, 11, 0, 1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6246");
        int[] intArray6 = new int[] { 0, (short) -1, 'a', '#', (byte) 0, 100 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass67 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, -1, 157, 95, 0, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 98, 36, 0, 100]" + "'", str7, "[0, -1, 98, 36, 0, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 99, 37, 0, 100]" + "'", str8, "[0, -1, 99, 37, 0, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 100, 38, 0, 100]" + "'", str9, "[0, -1, 100, 38, 0, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 101, 39, 0, 100]" + "'", str10, "[0, -1, 101, 39, 0, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 102, 40, 0, 100]" + "'", str11, "[0, -1, 102, 40, 0, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 103, 41, 0, 100]" + "'", str12, "[0, -1, 103, 41, 0, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 104, 42, 0, 100]" + "'", str13, "[0, -1, 104, 42, 0, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 105, 43, 0, 100]" + "'", str14, "[0, -1, 105, 43, 0, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 106, 44, 0, 100]" + "'", str15, "[0, -1, 106, 44, 0, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 107, 45, 0, 100]" + "'", str16, "[0, -1, 107, 45, 0, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 108, 46, 0, 100]" + "'", str17, "[0, -1, 108, 46, 0, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 109, 47, 0, 100]" + "'", str18, "[0, -1, 109, 47, 0, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 110, 48, 0, 100]" + "'", str19, "[0, -1, 110, 48, 0, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 111, 49, 0, 100]" + "'", str20, "[0, -1, 111, 49, 0, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 112, 50, 0, 100]" + "'", str21, "[0, -1, 112, 50, 0, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 113, 51, 0, 100]" + "'", str22, "[0, -1, 113, 51, 0, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 114, 52, 0, 100]" + "'", str23, "[0, -1, 114, 52, 0, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 115, 53, 0, 100]" + "'", str24, "[0, -1, 115, 53, 0, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 116, 54, 0, 100]" + "'", str25, "[0, -1, 116, 54, 0, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 117, 55, 0, 100]" + "'", str26, "[0, -1, 117, 55, 0, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 118, 56, 0, 100]" + "'", str27, "[0, -1, 118, 56, 0, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 119, 57, 0, 100]" + "'", str28, "[0, -1, 119, 57, 0, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 120, 58, 0, 100]" + "'", str29, "[0, -1, 120, 58, 0, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 121, 59, 0, 100]" + "'", str30, "[0, -1, 121, 59, 0, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 122, 60, 0, 100]" + "'", str31, "[0, -1, 122, 60, 0, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 123, 61, 0, 100]" + "'", str32, "[0, -1, 123, 61, 0, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 124, 62, 0, 100]" + "'", str33, "[0, -1, 124, 62, 0, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 125, 63, 0, 100]" + "'", str34, "[0, -1, 125, 63, 0, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 126, 64, 0, 100]" + "'", str35, "[0, -1, 126, 64, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 127, 65, 0, 100]" + "'", str36, "[0, -1, 127, 65, 0, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 128, 66, 0, 100]" + "'", str37, "[0, -1, 128, 66, 0, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 129, 67, 0, 100]" + "'", str38, "[0, -1, 129, 67, 0, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 130, 68, 0, 100]" + "'", str39, "[0, -1, 130, 68, 0, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 131, 69, 0, 100]" + "'", str40, "[0, -1, 131, 69, 0, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 132, 70, 0, 100]" + "'", str41, "[0, -1, 132, 70, 0, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 133, 71, 0, 100]" + "'", str42, "[0, -1, 133, 71, 0, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 134, 72, 0, 100]" + "'", str43, "[0, -1, 134, 72, 0, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, -1, 135, 73, 0, 100]" + "'", str44, "[0, -1, 135, 73, 0, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, -1, 136, 74, 0, 100]" + "'", str45, "[0, -1, 136, 74, 0, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, -1, 137, 75, 0, 100]" + "'", str46, "[0, -1, 137, 75, 0, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, -1, 138, 76, 0, 100]" + "'", str47, "[0, -1, 138, 76, 0, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, -1, 139, 77, 0, 100]" + "'", str48, "[0, -1, 139, 77, 0, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, -1, 140, 78, 0, 100]" + "'", str49, "[0, -1, 140, 78, 0, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, -1, 141, 79, 0, 100]" + "'", str50, "[0, -1, 141, 79, 0, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, -1, 142, 80, 0, 100]" + "'", str51, "[0, -1, 142, 80, 0, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, -1, 143, 81, 0, 100]" + "'", str52, "[0, -1, 143, 81, 0, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, -1, 144, 82, 0, 100]" + "'", str53, "[0, -1, 144, 82, 0, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, -1, 145, 83, 0, 100]" + "'", str54, "[0, -1, 145, 83, 0, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, -1, 146, 84, 0, 100]" + "'", str55, "[0, -1, 146, 84, 0, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, -1, 147, 85, 0, 100]" + "'", str56, "[0, -1, 147, 85, 0, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, -1, 148, 86, 0, 100]" + "'", str57, "[0, -1, 148, 86, 0, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, -1, 149, 87, 0, 100]" + "'", str58, "[0, -1, 149, 87, 0, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, -1, 150, 88, 0, 100]" + "'", str59, "[0, -1, 150, 88, 0, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, -1, 151, 89, 0, 100]" + "'", str60, "[0, -1, 151, 89, 0, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, -1, 152, 90, 0, 100]" + "'", str61, "[0, -1, 152, 90, 0, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, -1, 153, 91, 0, 100]" + "'", str62, "[0, -1, 153, 91, 0, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, -1, 154, 92, 0, 100]" + "'", str63, "[0, -1, 154, 92, 0, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, -1, 155, 93, 0, 100]" + "'", str64, "[0, -1, 155, 93, 0, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, -1, 156, 94, 0, 100]" + "'", str65, "[0, -1, 156, 94, 0, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, -1, 157, 95, 0, 100]" + "'", str66, "[0, -1, 157, 95, 0, 100]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test6247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6247");
        int[] intArray5 = new int[] { ' ', ' ', 1, (byte) 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 33, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 32, 2, 0, 1]" + "'", str6, "[32, 32, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 32, 3, 0, 1]" + "'", str7, "[32, 32, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 32, 4, 0, 1]" + "'", str8, "[32, 32, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 32, 5, 0, 1]" + "'", str9, "[32, 32, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 32, 6, 0, 1]" + "'", str10, "[32, 32, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 32, 7, 0, 1]" + "'", str11, "[32, 32, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 32, 8, 0, 1]" + "'", str12, "[32, 32, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 32, 9, 0, 1]" + "'", str13, "[32, 32, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 33, 0, 1, 1]" + "'", str14, "[32, 33, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 33, 1, 1, 1]" + "'", str15, "[32, 33, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 33, 2, 1, 1]" + "'", str16, "[32, 33, 2, 1, 1]");
    }

    @Test
    public void test6248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6248");
        int[] intArray5 = new int[] { (short) 0, ' ', (short) 10, (byte) 0, (short) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 32, 57, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 32, 11, 0, 10]" + "'", str6, "[0, 32, 11, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 32, 12, 0, 10]" + "'", str7, "[0, 32, 12, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 32, 13, 0, 10]" + "'", str8, "[0, 32, 13, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 32, 14, 0, 10]" + "'", str9, "[0, 32, 14, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 32, 15, 0, 10]" + "'", str10, "[0, 32, 15, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 32, 16, 0, 10]" + "'", str11, "[0, 32, 16, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 32, 17, 0, 10]" + "'", str12, "[0, 32, 17, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 32, 18, 0, 10]" + "'", str13, "[0, 32, 18, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 32, 19, 0, 10]" + "'", str14, "[0, 32, 19, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 32, 20, 0, 10]" + "'", str15, "[0, 32, 20, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 32, 21, 0, 10]" + "'", str16, "[0, 32, 21, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 32, 22, 0, 10]" + "'", str17, "[0, 32, 22, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 32, 23, 0, 10]" + "'", str18, "[0, 32, 23, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 32, 24, 0, 10]" + "'", str19, "[0, 32, 24, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 32, 25, 0, 10]" + "'", str20, "[0, 32, 25, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 32, 26, 0, 10]" + "'", str21, "[0, 32, 26, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 32, 27, 0, 10]" + "'", str22, "[0, 32, 27, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 32, 28, 0, 10]" + "'", str23, "[0, 32, 28, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 32, 29, 0, 10]" + "'", str24, "[0, 32, 29, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 32, 30, 0, 10]" + "'", str25, "[0, 32, 30, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 31, 0, 10]" + "'", str26, "[0, 32, 31, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 32, 32, 0, 10]" + "'", str27, "[0, 32, 32, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 32, 33, 0, 10]" + "'", str28, "[0, 32, 33, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 32, 34, 0, 10]" + "'", str29, "[0, 32, 34, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 32, 35, 0, 10]" + "'", str30, "[0, 32, 35, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 32, 36, 0, 10]" + "'", str31, "[0, 32, 36, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 32, 37, 0, 10]" + "'", str32, "[0, 32, 37, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 32, 38, 0, 10]" + "'", str33, "[0, 32, 38, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 32, 39, 0, 10]" + "'", str34, "[0, 32, 39, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 32, 40, 0, 10]" + "'", str35, "[0, 32, 40, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 32, 41, 0, 10]" + "'", str36, "[0, 32, 41, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 32, 42, 0, 10]" + "'", str37, "[0, 32, 42, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 32, 43, 0, 10]" + "'", str38, "[0, 32, 43, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 32, 44, 0, 10]" + "'", str39, "[0, 32, 44, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 32, 45, 0, 10]" + "'", str40, "[0, 32, 45, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 32, 46, 0, 10]" + "'", str41, "[0, 32, 46, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 32, 47, 0, 10]" + "'", str42, "[0, 32, 47, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 32, 48, 0, 10]" + "'", str43, "[0, 32, 48, 0, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 32, 49, 0, 10]" + "'", str44, "[0, 32, 49, 0, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 32, 50, 0, 10]" + "'", str45, "[0, 32, 50, 0, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 32, 51, 0, 10]" + "'", str46, "[0, 32, 51, 0, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 32, 52, 0, 10]" + "'", str47, "[0, 32, 52, 0, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 32, 53, 0, 10]" + "'", str48, "[0, 32, 53, 0, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 32, 54, 0, 10]" + "'", str49, "[0, 32, 54, 0, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 32, 55, 0, 10]" + "'", str50, "[0, 32, 55, 0, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 32, 56, 0, 10]" + "'", str51, "[0, 32, 56, 0, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 32, 57, 0, 10]" + "'", str52, "[0, 32, 57, 0, 10]");
    }

    @Test
    public void test6249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6249");
        int[] intArray5 = new int[] { (-1), '4', '4', (byte) -1, (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 52, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 52, 53, -1, 0]" + "'", str6, "[-1, 52, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 52, 54, -1, 0]" + "'", str7, "[-1, 52, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 52, 55, -1, 0]" + "'", str8, "[-1, 52, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 52, 56, -1, 0]" + "'", str9, "[-1, 52, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 52, 57, -1, 0]" + "'", str10, "[-1, 52, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 52, 58, -1, 0]" + "'", str11, "[-1, 52, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 52, 59, -1, 0]" + "'", str12, "[-1, 52, 59, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test6250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6250");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass87 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 8, 0, 0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 16, 6, 1, 0]" + "'", str12, "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 17, 7, 1, 0]" + "'", str13, "[100, 0, 17, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 18, 8, 1, 0]" + "'", str14, "[100, 0, 18, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 0, 19, 9, 1, 0]" + "'", str15, "[100, 0, 19, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 1, 0, 0, 2, 0]" + "'", str16, "[100, 1, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 1, 1, 1, 2, 0]" + "'", str17, "[100, 1, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 1, 2, 2, 2, 0]" + "'", str18, "[100, 1, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 1, 3, 3, 2, 0]" + "'", str19, "[100, 1, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 1, 4, 4, 2, 0]" + "'", str20, "[100, 1, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 1, 5, 5, 2, 0]" + "'", str21, "[100, 1, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 1, 6, 6, 2, 0]" + "'", str22, "[100, 1, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 1, 7, 7, 2, 0]" + "'", str23, "[100, 1, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 1, 8, 8, 2, 0]" + "'", str24, "[100, 1, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 1, 9, 9, 2, 0]" + "'", str25, "[100, 1, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 2, 0, 0, 3, 0]" + "'", str26, "[100, 2, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 2, 1, 1, 3, 0]" + "'", str27, "[100, 2, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 2, 2, 2, 3, 0]" + "'", str28, "[100, 2, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 2, 3, 3, 3, 0]" + "'", str29, "[100, 2, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 2, 4, 4, 3, 0]" + "'", str30, "[100, 2, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 2, 5, 5, 3, 0]" + "'", str31, "[100, 2, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 2, 6, 6, 3, 0]" + "'", str32, "[100, 2, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 2, 7, 7, 3, 0]" + "'", str33, "[100, 2, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 2, 8, 8, 3, 0]" + "'", str34, "[100, 2, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 2, 9, 9, 3, 0]" + "'", str35, "[100, 2, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 3, 0, 0, 4, 0]" + "'", str36, "[100, 3, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 1, 1, 4, 0]" + "'", str37, "[100, 3, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 2, 2, 4, 0]" + "'", str38, "[100, 3, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 3, 3, 3, 4, 0]" + "'", str39, "[100, 3, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 3, 4, 4, 4, 0]" + "'", str40, "[100, 3, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 3, 5, 5, 4, 0]" + "'", str41, "[100, 3, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 3, 6, 6, 4, 0]" + "'", str42, "[100, 3, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 3, 7, 7, 4, 0]" + "'", str43, "[100, 3, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 3, 8, 8, 4, 0]" + "'", str44, "[100, 3, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 3, 9, 9, 4, 0]" + "'", str45, "[100, 3, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 4, 0, 0, 5, 0]" + "'", str46, "[100, 4, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 4, 1, 1, 5, 0]" + "'", str47, "[100, 4, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 4, 2, 2, 5, 0]" + "'", str48, "[100, 4, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 4, 3, 3, 5, 0]" + "'", str49, "[100, 4, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 4, 4, 4, 5, 0]" + "'", str50, "[100, 4, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 4, 5, 5, 5, 0]" + "'", str51, "[100, 4, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 4, 6, 6, 5, 0]" + "'", str52, "[100, 4, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 4, 7, 7, 5, 0]" + "'", str53, "[100, 4, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 4, 8, 8, 5, 0]" + "'", str54, "[100, 4, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 4, 9, 9, 5, 0]" + "'", str55, "[100, 4, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 5, 0, 0, 6, 0]" + "'", str56, "[100, 5, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 5, 1, 1, 6, 0]" + "'", str57, "[100, 5, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 5, 2, 2, 6, 0]" + "'", str58, "[100, 5, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 5, 3, 3, 6, 0]" + "'", str59, "[100, 5, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 5, 4, 4, 6, 0]" + "'", str60, "[100, 5, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 5, 5, 5, 6, 0]" + "'", str61, "[100, 5, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 5, 6, 6, 6, 0]" + "'", str62, "[100, 5, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 5, 7, 7, 6, 0]" + "'", str63, "[100, 5, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 5, 8, 8, 6, 0]" + "'", str64, "[100, 5, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 5, 9, 9, 6, 0]" + "'", str65, "[100, 5, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 6, 0, 0, 7, 0]" + "'", str66, "[100, 6, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 6, 1, 1, 7, 0]" + "'", str67, "[100, 6, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 6, 2, 2, 7, 0]" + "'", str68, "[100, 6, 2, 2, 7, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 6, 3, 3, 7, 0]" + "'", str69, "[100, 6, 3, 3, 7, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 6, 4, 4, 7, 0]" + "'", str70, "[100, 6, 4, 4, 7, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 6, 5, 5, 7, 0]" + "'", str71, "[100, 6, 5, 5, 7, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 6, 6, 6, 7, 0]" + "'", str72, "[100, 6, 6, 6, 7, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 6, 7, 7, 7, 0]" + "'", str73, "[100, 6, 7, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 6, 8, 8, 7, 0]" + "'", str74, "[100, 6, 8, 8, 7, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 6, 9, 9, 7, 0]" + "'", str75, "[100, 6, 9, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 7, 0, 0, 8, 0]" + "'", str76, "[100, 7, 0, 0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 7, 1, 1, 8, 0]" + "'", str77, "[100, 7, 1, 1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 7, 2, 2, 8, 0]" + "'", str78, "[100, 7, 2, 2, 8, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 7, 3, 3, 8, 0]" + "'", str79, "[100, 7, 3, 3, 8, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 7, 4, 4, 8, 0]" + "'", str80, "[100, 7, 4, 4, 8, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 7, 5, 5, 8, 0]" + "'", str81, "[100, 7, 5, 5, 8, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[100, 7, 6, 6, 8, 0]" + "'", str82, "[100, 7, 6, 6, 8, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[100, 7, 7, 7, 8, 0]" + "'", str83, "[100, 7, 7, 7, 8, 0]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[100, 7, 8, 8, 8, 0]" + "'", str84, "[100, 7, 8, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[100, 7, 9, 9, 8, 0]" + "'", str85, "[100, 7, 9, 9, 8, 0]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[100, 8, 0, 0, 9, 0]" + "'", str86, "[100, 8, 0, 0, 9, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test6251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6251");
        int[] intArray2 = new int[] { (short) 0, 100 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass41 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[38, 138]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 101]" + "'", str3, "[1, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 102]" + "'", str4, "[2, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 103]" + "'", str5, "[3, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 104]" + "'", str6, "[4, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 105]" + "'", str7, "[5, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 106]" + "'", str8, "[6, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 107]" + "'", str9, "[7, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 108]" + "'", str10, "[8, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9, 109]" + "'", str11, "[9, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 110]" + "'", str12, "[10, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 111]" + "'", str13, "[11, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[12, 112]" + "'", str14, "[12, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[13, 113]" + "'", str15, "[13, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[14, 114]" + "'", str16, "[14, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[15, 115]" + "'", str17, "[15, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[16, 116]" + "'", str18, "[16, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[17, 117]" + "'", str19, "[17, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[18, 118]" + "'", str20, "[18, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[19, 119]" + "'", str21, "[19, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[20, 120]" + "'", str22, "[20, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[21, 121]" + "'", str23, "[21, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[22, 122]" + "'", str24, "[22, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[23, 123]" + "'", str25, "[23, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[24, 124]" + "'", str26, "[24, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[25, 125]" + "'", str27, "[25, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[26, 126]" + "'", str28, "[26, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[27, 127]" + "'", str29, "[27, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[28, 128]" + "'", str30, "[28, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[29, 129]" + "'", str31, "[29, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[30, 130]" + "'", str32, "[30, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[31, 131]" + "'", str33, "[31, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 132]" + "'", str34, "[32, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[33, 133]" + "'", str35, "[33, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[34, 134]" + "'", str36, "[34, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 135]" + "'", str37, "[35, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[36, 136]" + "'", str38, "[36, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[37, 137]" + "'", str39, "[37, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 138]" + "'", str40, "[38, 138]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test6252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6252");
        int[] intArray5 = new int[] { (-1), (-1), (-1), (byte) 10, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 2, 6, 13, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, -1, 0, 10, -1]" + "'", str6, "[-1, -1, 0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, -1, 1, 10, -1]" + "'", str7, "[-1, -1, 1, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, -1, 2, 10, -1]" + "'", str8, "[-1, -1, 2, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, -1, 3, 10, -1]" + "'", str9, "[-1, -1, 3, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, -1, 4, 10, -1]" + "'", str10, "[-1, -1, 4, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, -1, 5, 10, -1]" + "'", str11, "[-1, -1, 5, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, -1, 6, 10, -1]" + "'", str12, "[-1, -1, 6, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, -1, 7, 10, -1]" + "'", str13, "[-1, -1, 7, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, -1, 8, 10, -1]" + "'", str14, "[-1, -1, 8, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, -1, 9, 10, -1]" + "'", str15, "[-1, -1, 9, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 0, 0, 11, -1]" + "'", str16, "[-1, 0, 0, 11, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 0, 1, 11, -1]" + "'", str17, "[-1, 0, 1, 11, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 0, 2, 11, -1]" + "'", str18, "[-1, 0, 2, 11, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 0, 3, 11, -1]" + "'", str19, "[-1, 0, 3, 11, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 0, 4, 11, -1]" + "'", str20, "[-1, 0, 4, 11, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 0, 5, 11, -1]" + "'", str21, "[-1, 0, 5, 11, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 0, 6, 11, -1]" + "'", str22, "[-1, 0, 6, 11, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 0, 7, 11, -1]" + "'", str23, "[-1, 0, 7, 11, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 0, 8, 11, -1]" + "'", str24, "[-1, 0, 8, 11, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 0, 9, 11, -1]" + "'", str25, "[-1, 0, 9, 11, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 1, 0, 12, -1]" + "'", str26, "[-1, 1, 0, 12, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 1, 1, 12, -1]" + "'", str27, "[-1, 1, 1, 12, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 1, 2, 12, -1]" + "'", str28, "[-1, 1, 2, 12, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 1, 3, 12, -1]" + "'", str29, "[-1, 1, 3, 12, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 1, 4, 12, -1]" + "'", str30, "[-1, 1, 4, 12, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 1, 5, 12, -1]" + "'", str31, "[-1, 1, 5, 12, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 1, 6, 12, -1]" + "'", str32, "[-1, 1, 6, 12, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 1, 7, 12, -1]" + "'", str33, "[-1, 1, 7, 12, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 1, 8, 12, -1]" + "'", str34, "[-1, 1, 8, 12, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 1, 9, 12, -1]" + "'", str35, "[-1, 1, 9, 12, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 2, 0, 13, -1]" + "'", str36, "[-1, 2, 0, 13, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 2, 1, 13, -1]" + "'", str37, "[-1, 2, 1, 13, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 2, 2, 13, -1]" + "'", str38, "[-1, 2, 2, 13, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 2, 3, 13, -1]" + "'", str39, "[-1, 2, 3, 13, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 2, 4, 13, -1]" + "'", str40, "[-1, 2, 4, 13, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 2, 5, 13, -1]" + "'", str41, "[-1, 2, 5, 13, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 2, 6, 13, -1]" + "'", str42, "[-1, 2, 6, 13, -1]");
    }

    @Test
    public void test6253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6253");
        int[] intArray4 = new int[] { (byte) 100, '#', (byte) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass24 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 54, 29, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 36, 11, -1]" + "'", str5, "[100, 36, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 37, 12, -1]" + "'", str6, "[100, 37, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 38, 13, -1]" + "'", str7, "[100, 38, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 39, 14, -1]" + "'", str8, "[100, 39, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 40, 15, -1]" + "'", str9, "[100, 40, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 41, 16, -1]" + "'", str10, "[100, 41, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 42, 17, -1]" + "'", str11, "[100, 42, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 43, 18, -1]" + "'", str12, "[100, 43, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 44, 19, -1]" + "'", str13, "[100, 44, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 45, 20, -1]" + "'", str14, "[100, 45, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 46, 21, -1]" + "'", str15, "[100, 46, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 47, 22, -1]" + "'", str16, "[100, 47, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 48, 23, -1]" + "'", str17, "[100, 48, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 49, 24, -1]" + "'", str18, "[100, 49, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 50, 25, -1]" + "'", str19, "[100, 50, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 51, 26, -1]" + "'", str20, "[100, 51, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 52, 27, -1]" + "'", str21, "[100, 52, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 53, 28, -1]" + "'", str22, "[100, 53, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 54, 29, -1]" + "'", str23, "[100, 54, 29, -1]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test6254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6254");
        int[] intArray2 = new int[] { (short) 1, (short) 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 2]" + "'", str3, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 3]" + "'", str4, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 4]" + "'", str5, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 5]" + "'", str6, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 6]" + "'", str7, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 7]" + "'", str8, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 8]" + "'", str9, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 9]" + "'", str10, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
    }

    @Test
    public void test6255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6255");
        int[] intArray3 = new int[] { 1, (byte) 0, (byte) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass72 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[7, 8, 6]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 5]" + "'", str60, "[6, 7, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 5]" + "'", str61, "[6, 8, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 5]" + "'", str62, "[6, 9, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 6]" + "'", str63, "[7, 0, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 6]" + "'", str64, "[7, 1, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 6]" + "'", str65, "[7, 2, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 6]" + "'", str66, "[7, 3, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 6]" + "'", str67, "[7, 4, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 5, 6]" + "'", str68, "[7, 5, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 6, 6]" + "'", str69, "[7, 6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7, 6]" + "'", str70, "[7, 7, 6]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 8, 6]" + "'", str71, "[7, 8, 6]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test6256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6256");
        int[] intArray4 = new int[] { (byte) -1, 0, (byte) -1, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass33 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 0, 52]" + "'", str5, "[-1, 1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 1, 52]" + "'", str6, "[-1, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 3, 2, 52]" + "'", str7, "[-1, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 4, 3, 52]" + "'", str8, "[-1, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 5, 4, 52]" + "'", str9, "[-1, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 6, 5, 52]" + "'", str10, "[-1, 6, 5, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 7, 6, 52]" + "'", str11, "[-1, 7, 6, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 8, 7, 52]" + "'", str12, "[-1, 8, 7, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 9, 8, 52]" + "'", str13, "[-1, 9, 8, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 9, 52]" + "'", str14, "[-1, 10, 9, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 0, 0, 53]" + "'", str15, "[0, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 1, 53]" + "'", str16, "[0, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 53]" + "'", str17, "[0, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 3, 3, 53]" + "'", str18, "[0, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 4, 4, 53]" + "'", str19, "[0, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 5, 5, 53]" + "'", str20, "[0, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 6, 6, 53]" + "'", str21, "[0, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 7, 7, 53]" + "'", str22, "[0, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 8, 8, 53]" + "'", str23, "[0, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 9, 9, 53]" + "'", str24, "[0, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 0, 54]" + "'", str25, "[1, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 1, 54]" + "'", str26, "[1, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 2, 54]" + "'", str27, "[1, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 3, 54]" + "'", str28, "[1, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 4, 4, 54]" + "'", str29, "[1, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 5, 5, 54]" + "'", str30, "[1, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 6, 6, 54]" + "'", str31, "[1, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 7, 7, 54]" + "'", str32, "[1, 7, 7, 54]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test6257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6257");
        int[] intArray3 = new int[] { (short) 10, '#', 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 70, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 36, 10]" + "'", str4, "[10, 36, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 37, 10]" + "'", str5, "[10, 37, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 38, 10]" + "'", str6, "[10, 38, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 39, 10]" + "'", str7, "[10, 39, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 40, 10]" + "'", str8, "[10, 40, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 41, 10]" + "'", str9, "[10, 41, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 42, 10]" + "'", str10, "[10, 42, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 43, 10]" + "'", str11, "[10, 43, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 44, 10]" + "'", str12, "[10, 44, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 45, 10]" + "'", str13, "[10, 45, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 46, 10]" + "'", str14, "[10, 46, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 47, 10]" + "'", str15, "[10, 47, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 48, 10]" + "'", str16, "[10, 48, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 49, 10]" + "'", str17, "[10, 49, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 50, 10]" + "'", str18, "[10, 50, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 51, 10]" + "'", str19, "[10, 51, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 52, 10]" + "'", str20, "[10, 52, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 53, 10]" + "'", str21, "[10, 53, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 54, 10]" + "'", str22, "[10, 54, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 55, 10]" + "'", str23, "[10, 55, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 56, 10]" + "'", str24, "[10, 56, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 57, 10]" + "'", str25, "[10, 57, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 58, 10]" + "'", str26, "[10, 58, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 59, 10]" + "'", str27, "[10, 59, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 60, 10]" + "'", str28, "[10, 60, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 61, 10]" + "'", str29, "[10, 61, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 62, 10]" + "'", str30, "[10, 62, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 63, 10]" + "'", str31, "[10, 63, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 64, 10]" + "'", str32, "[10, 64, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 65, 10]" + "'", str33, "[10, 65, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[10, 66, 10]" + "'", str34, "[10, 66, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 67, 10]" + "'", str35, "[10, 67, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 68, 10]" + "'", str36, "[10, 68, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[10, 69, 10]" + "'", str37, "[10, 69, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[10, 70, 10]" + "'", str38, "[10, 70, 10]");
    }

    @Test
    public void test6258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6258");
        int[] intArray5 = new int[] { (short) 1, (short) 1, (byte) 0, '4', '#' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 8, 5, 59, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 1, 52, 35]" + "'", str6, "[1, 1, 1, 52, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 2, 52, 35]" + "'", str7, "[1, 1, 2, 52, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 3, 52, 35]" + "'", str8, "[1, 1, 3, 52, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 4, 52, 35]" + "'", str9, "[1, 1, 4, 52, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 5, 52, 35]" + "'", str10, "[1, 1, 5, 52, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 6, 52, 35]" + "'", str11, "[1, 1, 6, 52, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 7, 52, 35]" + "'", str12, "[1, 1, 7, 52, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 8, 52, 35]" + "'", str13, "[1, 1, 8, 52, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 9, 52, 35]" + "'", str14, "[1, 1, 9, 52, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0, 53, 35]" + "'", str15, "[1, 2, 0, 53, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 1, 53, 35]" + "'", str16, "[1, 2, 1, 53, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 53, 35]" + "'", str17, "[1, 2, 2, 53, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 3, 53, 35]" + "'", str18, "[1, 2, 3, 53, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 4, 53, 35]" + "'", str19, "[1, 2, 4, 53, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 5, 53, 35]" + "'", str20, "[1, 2, 5, 53, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 6, 53, 35]" + "'", str21, "[1, 2, 6, 53, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 7, 53, 35]" + "'", str22, "[1, 2, 7, 53, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 8, 53, 35]" + "'", str23, "[1, 2, 8, 53, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 9, 53, 35]" + "'", str24, "[1, 2, 9, 53, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 0, 54, 35]" + "'", str25, "[1, 3, 0, 54, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 1, 54, 35]" + "'", str26, "[1, 3, 1, 54, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 2, 54, 35]" + "'", str27, "[1, 3, 2, 54, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 3, 54, 35]" + "'", str28, "[1, 3, 3, 54, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 3, 4, 54, 35]" + "'", str29, "[1, 3, 4, 54, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 3, 5, 54, 35]" + "'", str30, "[1, 3, 5, 54, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 3, 6, 54, 35]" + "'", str31, "[1, 3, 6, 54, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 3, 7, 54, 35]" + "'", str32, "[1, 3, 7, 54, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 3, 8, 54, 35]" + "'", str33, "[1, 3, 8, 54, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 3, 9, 54, 35]" + "'", str34, "[1, 3, 9, 54, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 4, 0, 55, 35]" + "'", str35, "[1, 4, 0, 55, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 4, 1, 55, 35]" + "'", str36, "[1, 4, 1, 55, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 4, 2, 55, 35]" + "'", str37, "[1, 4, 2, 55, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 4, 3, 55, 35]" + "'", str38, "[1, 4, 3, 55, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 4, 4, 55, 35]" + "'", str39, "[1, 4, 4, 55, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 4, 5, 55, 35]" + "'", str40, "[1, 4, 5, 55, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 4, 6, 55, 35]" + "'", str41, "[1, 4, 6, 55, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 4, 7, 55, 35]" + "'", str42, "[1, 4, 7, 55, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 4, 8, 55, 35]" + "'", str43, "[1, 4, 8, 55, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 4, 9, 55, 35]" + "'", str44, "[1, 4, 9, 55, 35]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 5, 0, 56, 35]" + "'", str45, "[1, 5, 0, 56, 35]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 5, 1, 56, 35]" + "'", str46, "[1, 5, 1, 56, 35]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 5, 2, 56, 35]" + "'", str47, "[1, 5, 2, 56, 35]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 5, 3, 56, 35]" + "'", str48, "[1, 5, 3, 56, 35]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 5, 4, 56, 35]" + "'", str49, "[1, 5, 4, 56, 35]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 5, 5, 56, 35]" + "'", str50, "[1, 5, 5, 56, 35]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 5, 6, 56, 35]" + "'", str51, "[1, 5, 6, 56, 35]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 5, 7, 56, 35]" + "'", str52, "[1, 5, 7, 56, 35]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 5, 8, 56, 35]" + "'", str53, "[1, 5, 8, 56, 35]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 5, 9, 56, 35]" + "'", str54, "[1, 5, 9, 56, 35]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 6, 0, 57, 35]" + "'", str55, "[1, 6, 0, 57, 35]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 6, 1, 57, 35]" + "'", str56, "[1, 6, 1, 57, 35]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 6, 2, 57, 35]" + "'", str57, "[1, 6, 2, 57, 35]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 6, 3, 57, 35]" + "'", str58, "[1, 6, 3, 57, 35]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 6, 4, 57, 35]" + "'", str59, "[1, 6, 4, 57, 35]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 6, 5, 57, 35]" + "'", str60, "[1, 6, 5, 57, 35]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 6, 6, 57, 35]" + "'", str61, "[1, 6, 6, 57, 35]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 6, 7, 57, 35]" + "'", str62, "[1, 6, 7, 57, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 6, 8, 57, 35]" + "'", str63, "[1, 6, 8, 57, 35]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 6, 9, 57, 35]" + "'", str64, "[1, 6, 9, 57, 35]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 7, 0, 58, 35]" + "'", str65, "[1, 7, 0, 58, 35]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 7, 1, 58, 35]" + "'", str66, "[1, 7, 1, 58, 35]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 7, 2, 58, 35]" + "'", str67, "[1, 7, 2, 58, 35]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 7, 3, 58, 35]" + "'", str68, "[1, 7, 3, 58, 35]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 7, 4, 58, 35]" + "'", str69, "[1, 7, 4, 58, 35]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 7, 5, 58, 35]" + "'", str70, "[1, 7, 5, 58, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 7, 6, 58, 35]" + "'", str71, "[1, 7, 6, 58, 35]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 7, 7, 58, 35]" + "'", str72, "[1, 7, 7, 58, 35]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 7, 8, 58, 35]" + "'", str73, "[1, 7, 8, 58, 35]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 7, 9, 58, 35]" + "'", str74, "[1, 7, 9, 58, 35]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 8, 0, 59, 35]" + "'", str75, "[1, 8, 0, 59, 35]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 8, 1, 59, 35]" + "'", str76, "[1, 8, 1, 59, 35]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 8, 2, 59, 35]" + "'", str77, "[1, 8, 2, 59, 35]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 8, 3, 59, 35]" + "'", str78, "[1, 8, 3, 59, 35]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 8, 4, 59, 35]" + "'", str79, "[1, 8, 4, 59, 35]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 8, 5, 59, 35]" + "'", str80, "[1, 8, 5, 59, 35]");
    }

    @Test
    public void test6259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6259");
        int[] intArray3 = new int[] { ' ', (short) 0, (byte) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[34, 6, 12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 1, 10]" + "'", str4, "[32, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 2, 10]" + "'", str5, "[32, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 3, 10]" + "'", str6, "[32, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 4, 10]" + "'", str7, "[32, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 5, 10]" + "'", str8, "[32, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 6, 10]" + "'", str9, "[32, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 7, 10]" + "'", str10, "[32, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 8, 10]" + "'", str11, "[32, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 9, 10]" + "'", str12, "[32, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 0, 11]" + "'", str13, "[33, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 1, 11]" + "'", str14, "[33, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 2, 11]" + "'", str15, "[33, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 3, 11]" + "'", str16, "[33, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 4, 11]" + "'", str17, "[33, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 5, 11]" + "'", str18, "[33, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 6, 11]" + "'", str19, "[33, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 7, 11]" + "'", str20, "[33, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 8, 11]" + "'", str21, "[33, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 9, 11]" + "'", str22, "[33, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 0, 12]" + "'", str23, "[34, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 1, 12]" + "'", str24, "[34, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 2, 12]" + "'", str25, "[34, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 3, 12]" + "'", str26, "[34, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 4, 12]" + "'", str27, "[34, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 5, 12]" + "'", str28, "[34, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 6, 12]" + "'", str29, "[34, 6, 12]");
    }

    @Test
    public void test6260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6260");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass84 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 178, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 52, 0]" + "'", str29, "[1, 0, 124, 52, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 52, 0]" + "'", str30, "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 52, 0]" + "'", str31, "[1, 0, 126, 52, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 52, 0]" + "'", str32, "[1, 0, 127, 52, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 52, 0]" + "'", str33, "[1, 0, 128, 52, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 52, 0]" + "'", str34, "[1, 0, 129, 52, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 52, 0]" + "'", str35, "[1, 0, 130, 52, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 0, 131, 52, 0]" + "'", str36, "[1, 0, 131, 52, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 0, 132, 52, 0]" + "'", str37, "[1, 0, 132, 52, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 0, 133, 52, 0]" + "'", str38, "[1, 0, 133, 52, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 0, 134, 52, 0]" + "'", str39, "[1, 0, 134, 52, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 135, 52, 0]" + "'", str40, "[1, 0, 135, 52, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 136, 52, 0]" + "'", str41, "[1, 0, 136, 52, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 137, 52, 0]" + "'", str42, "[1, 0, 137, 52, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 138, 52, 0]" + "'", str43, "[1, 0, 138, 52, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 0, 139, 52, 0]" + "'", str44, "[1, 0, 139, 52, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 0, 140, 52, 0]" + "'", str45, "[1, 0, 140, 52, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 0, 141, 52, 0]" + "'", str46, "[1, 0, 141, 52, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 0, 142, 52, 0]" + "'", str47, "[1, 0, 142, 52, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 0, 143, 52, 0]" + "'", str48, "[1, 0, 143, 52, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 0, 144, 52, 0]" + "'", str49, "[1, 0, 144, 52, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 145, 52, 0]" + "'", str50, "[1, 0, 145, 52, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 146, 52, 0]" + "'", str51, "[1, 0, 146, 52, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 147, 52, 0]" + "'", str52, "[1, 0, 147, 52, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 148, 52, 0]" + "'", str53, "[1, 0, 148, 52, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 0, 149, 52, 0]" + "'", str54, "[1, 0, 149, 52, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 0, 150, 52, 0]" + "'", str55, "[1, 0, 150, 52, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 0, 151, 52, 0]" + "'", str56, "[1, 0, 151, 52, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 0, 152, 52, 0]" + "'", str57, "[1, 0, 152, 52, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 0, 153, 52, 0]" + "'", str58, "[1, 0, 153, 52, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 0, 154, 52, 0]" + "'", str59, "[1, 0, 154, 52, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 155, 52, 0]" + "'", str60, "[1, 0, 155, 52, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 156, 52, 0]" + "'", str61, "[1, 0, 156, 52, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 157, 52, 0]" + "'", str62, "[1, 0, 157, 52, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 158, 52, 0]" + "'", str63, "[1, 0, 158, 52, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 0, 159, 52, 0]" + "'", str64, "[1, 0, 159, 52, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 0, 160, 52, 0]" + "'", str65, "[1, 0, 160, 52, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 0, 161, 52, 0]" + "'", str66, "[1, 0, 161, 52, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 0, 162, 52, 0]" + "'", str67, "[1, 0, 162, 52, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 0, 163, 52, 0]" + "'", str68, "[1, 0, 163, 52, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 0, 164, 52, 0]" + "'", str69, "[1, 0, 164, 52, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 0, 165, 52, 0]" + "'", str70, "[1, 0, 165, 52, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 166, 52, 0]" + "'", str71, "[1, 0, 166, 52, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 167, 52, 0]" + "'", str72, "[1, 0, 167, 52, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 168, 52, 0]" + "'", str73, "[1, 0, 168, 52, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 0, 169, 52, 0]" + "'", str74, "[1, 0, 169, 52, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 0, 170, 52, 0]" + "'", str75, "[1, 0, 170, 52, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 0, 171, 52, 0]" + "'", str76, "[1, 0, 171, 52, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 0, 172, 52, 0]" + "'", str77, "[1, 0, 172, 52, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 0, 173, 52, 0]" + "'", str78, "[1, 0, 173, 52, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 0, 174, 52, 0]" + "'", str79, "[1, 0, 174, 52, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 0, 175, 52, 0]" + "'", str80, "[1, 0, 175, 52, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 176, 52, 0]" + "'", str81, "[1, 0, 176, 52, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 0, 177, 52, 0]" + "'", str82, "[1, 0, 177, 52, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 178, 52, 0]" + "'", str83, "[1, 0, 178, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test6261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6261");
        int[] intArray4 = new int[] { (byte) -1, 0, (byte) -1, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass32 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 0, 52]" + "'", str5, "[-1, 1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 1, 52]" + "'", str6, "[-1, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 3, 2, 52]" + "'", str7, "[-1, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 4, 3, 52]" + "'", str8, "[-1, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 5, 4, 52]" + "'", str9, "[-1, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 6, 5, 52]" + "'", str10, "[-1, 6, 5, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 7, 6, 52]" + "'", str11, "[-1, 7, 6, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 8, 7, 52]" + "'", str12, "[-1, 8, 7, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 9, 8, 52]" + "'", str13, "[-1, 9, 8, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 9, 52]" + "'", str14, "[-1, 10, 9, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 0, 0, 53]" + "'", str15, "[0, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 1, 53]" + "'", str16, "[0, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 53]" + "'", str17, "[0, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 3, 3, 53]" + "'", str18, "[0, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 4, 4, 53]" + "'", str19, "[0, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 5, 5, 53]" + "'", str20, "[0, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 6, 6, 53]" + "'", str21, "[0, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 7, 7, 53]" + "'", str22, "[0, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 8, 8, 53]" + "'", str23, "[0, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 9, 9, 53]" + "'", str24, "[0, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 0, 54]" + "'", str25, "[1, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 1, 54]" + "'", str26, "[1, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 2, 54]" + "'", str27, "[1, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 3, 54]" + "'", str28, "[1, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 4, 4, 54]" + "'", str29, "[1, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 5, 5, 54]" + "'", str30, "[1, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 6, 6, 54]" + "'", str31, "[1, 6, 6, 54]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test6262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6262");
        int[] intArray5 = new int[] { 1, (byte) 0, (-1), ' ', 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 8, 33, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 0, 32, 1]" + "'", str6, "[1, 0, 0, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 32, 1]" + "'", str7, "[1, 0, 1, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 32, 1]" + "'", str8, "[1, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 32, 1]" + "'", str9, "[1, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 32, 1]" + "'", str10, "[1, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 32, 1]" + "'", str11, "[1, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 32, 1]" + "'", str12, "[1, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 32, 1]" + "'", str13, "[1, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 32, 1]" + "'", str14, "[1, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 32, 1]" + "'", str15, "[1, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 0, 33, 1]" + "'", str16, "[1, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 1, 33, 1]" + "'", str17, "[1, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 2, 33, 1]" + "'", str18, "[1, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 3, 33, 1]" + "'", str19, "[1, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 4, 33, 1]" + "'", str20, "[1, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 5, 33, 1]" + "'", str21, "[1, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 6, 33, 1]" + "'", str22, "[1, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 7, 33, 1]" + "'", str23, "[1, 1, 7, 33, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 8, 33, 1]" + "'", str24, "[1, 1, 8, 33, 1]");
    }

    @Test
    public void test6263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6263");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass86 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 7, 9, 9, 8, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 16, 6, 1, 0]" + "'", str12, "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 17, 7, 1, 0]" + "'", str13, "[100, 0, 17, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 18, 8, 1, 0]" + "'", str14, "[100, 0, 18, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 0, 19, 9, 1, 0]" + "'", str15, "[100, 0, 19, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 1, 0, 0, 2, 0]" + "'", str16, "[100, 1, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 1, 1, 1, 2, 0]" + "'", str17, "[100, 1, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 1, 2, 2, 2, 0]" + "'", str18, "[100, 1, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 1, 3, 3, 2, 0]" + "'", str19, "[100, 1, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 1, 4, 4, 2, 0]" + "'", str20, "[100, 1, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 1, 5, 5, 2, 0]" + "'", str21, "[100, 1, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 1, 6, 6, 2, 0]" + "'", str22, "[100, 1, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 1, 7, 7, 2, 0]" + "'", str23, "[100, 1, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 1, 8, 8, 2, 0]" + "'", str24, "[100, 1, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 1, 9, 9, 2, 0]" + "'", str25, "[100, 1, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 2, 0, 0, 3, 0]" + "'", str26, "[100, 2, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 2, 1, 1, 3, 0]" + "'", str27, "[100, 2, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 2, 2, 2, 3, 0]" + "'", str28, "[100, 2, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 2, 3, 3, 3, 0]" + "'", str29, "[100, 2, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 2, 4, 4, 3, 0]" + "'", str30, "[100, 2, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 2, 5, 5, 3, 0]" + "'", str31, "[100, 2, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 2, 6, 6, 3, 0]" + "'", str32, "[100, 2, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 2, 7, 7, 3, 0]" + "'", str33, "[100, 2, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 2, 8, 8, 3, 0]" + "'", str34, "[100, 2, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 2, 9, 9, 3, 0]" + "'", str35, "[100, 2, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 3, 0, 0, 4, 0]" + "'", str36, "[100, 3, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 1, 1, 4, 0]" + "'", str37, "[100, 3, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 2, 2, 4, 0]" + "'", str38, "[100, 3, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 3, 3, 3, 4, 0]" + "'", str39, "[100, 3, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 3, 4, 4, 4, 0]" + "'", str40, "[100, 3, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 3, 5, 5, 4, 0]" + "'", str41, "[100, 3, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 3, 6, 6, 4, 0]" + "'", str42, "[100, 3, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 3, 7, 7, 4, 0]" + "'", str43, "[100, 3, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 3, 8, 8, 4, 0]" + "'", str44, "[100, 3, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 3, 9, 9, 4, 0]" + "'", str45, "[100, 3, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 4, 0, 0, 5, 0]" + "'", str46, "[100, 4, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 4, 1, 1, 5, 0]" + "'", str47, "[100, 4, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 4, 2, 2, 5, 0]" + "'", str48, "[100, 4, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 4, 3, 3, 5, 0]" + "'", str49, "[100, 4, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 4, 4, 4, 5, 0]" + "'", str50, "[100, 4, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 4, 5, 5, 5, 0]" + "'", str51, "[100, 4, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 4, 6, 6, 5, 0]" + "'", str52, "[100, 4, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 4, 7, 7, 5, 0]" + "'", str53, "[100, 4, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 4, 8, 8, 5, 0]" + "'", str54, "[100, 4, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 4, 9, 9, 5, 0]" + "'", str55, "[100, 4, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 5, 0, 0, 6, 0]" + "'", str56, "[100, 5, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 5, 1, 1, 6, 0]" + "'", str57, "[100, 5, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 5, 2, 2, 6, 0]" + "'", str58, "[100, 5, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 5, 3, 3, 6, 0]" + "'", str59, "[100, 5, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 5, 4, 4, 6, 0]" + "'", str60, "[100, 5, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 5, 5, 5, 6, 0]" + "'", str61, "[100, 5, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 5, 6, 6, 6, 0]" + "'", str62, "[100, 5, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 5, 7, 7, 6, 0]" + "'", str63, "[100, 5, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 5, 8, 8, 6, 0]" + "'", str64, "[100, 5, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 5, 9, 9, 6, 0]" + "'", str65, "[100, 5, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 6, 0, 0, 7, 0]" + "'", str66, "[100, 6, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 6, 1, 1, 7, 0]" + "'", str67, "[100, 6, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 6, 2, 2, 7, 0]" + "'", str68, "[100, 6, 2, 2, 7, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 6, 3, 3, 7, 0]" + "'", str69, "[100, 6, 3, 3, 7, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 6, 4, 4, 7, 0]" + "'", str70, "[100, 6, 4, 4, 7, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 6, 5, 5, 7, 0]" + "'", str71, "[100, 6, 5, 5, 7, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 6, 6, 6, 7, 0]" + "'", str72, "[100, 6, 6, 6, 7, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 6, 7, 7, 7, 0]" + "'", str73, "[100, 6, 7, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 6, 8, 8, 7, 0]" + "'", str74, "[100, 6, 8, 8, 7, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 6, 9, 9, 7, 0]" + "'", str75, "[100, 6, 9, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 7, 0, 0, 8, 0]" + "'", str76, "[100, 7, 0, 0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 7, 1, 1, 8, 0]" + "'", str77, "[100, 7, 1, 1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 7, 2, 2, 8, 0]" + "'", str78, "[100, 7, 2, 2, 8, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 7, 3, 3, 8, 0]" + "'", str79, "[100, 7, 3, 3, 8, 0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 7, 4, 4, 8, 0]" + "'", str80, "[100, 7, 4, 4, 8, 0]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 7, 5, 5, 8, 0]" + "'", str81, "[100, 7, 5, 5, 8, 0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[100, 7, 6, 6, 8, 0]" + "'", str82, "[100, 7, 6, 6, 8, 0]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[100, 7, 7, 7, 8, 0]" + "'", str83, "[100, 7, 7, 7, 8, 0]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[100, 7, 8, 8, 8, 0]" + "'", str84, "[100, 7, 8, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[100, 7, 9, 9, 8, 0]" + "'", str85, "[100, 7, 9, 9, 8, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test6264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6264");
        int[] intArray5 = new int[] { (byte) 0, (short) -1, ' ', (short) 10, (-1) };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass68 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 33, 10, -1]" + "'", str6, "[0, -1, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 34, 10, -1]" + "'", str7, "[0, -1, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 35, 10, -1]" + "'", str8, "[0, -1, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 36, 10, -1]" + "'", str9, "[0, -1, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 37, 10, -1]" + "'", str10, "[0, -1, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 38, 10, -1]" + "'", str11, "[0, -1, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 39, 10, -1]" + "'", str12, "[0, -1, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 40, 10, -1]" + "'", str13, "[0, -1, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 41, 10, -1]" + "'", str14, "[0, -1, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 42, 10, -1]" + "'", str15, "[0, -1, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 43, 10, -1]" + "'", str16, "[0, -1, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 44, 10, -1]" + "'", str17, "[0, -1, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 45, 10, -1]" + "'", str18, "[0, -1, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 46, 10, -1]" + "'", str19, "[0, -1, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 47, 10, -1]" + "'", str20, "[0, -1, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 48, 10, -1]" + "'", str21, "[0, -1, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 49, 10, -1]" + "'", str22, "[0, -1, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 50, 10, -1]" + "'", str23, "[0, -1, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 51, 10, -1]" + "'", str24, "[0, -1, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 52, 10, -1]" + "'", str25, "[0, -1, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 53, 10, -1]" + "'", str26, "[0, -1, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 54, 10, -1]" + "'", str27, "[0, -1, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 55, 10, -1]" + "'", str28, "[0, -1, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 56, 10, -1]" + "'", str29, "[0, -1, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 57, 10, -1]" + "'", str30, "[0, -1, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 58, 10, -1]" + "'", str31, "[0, -1, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 59, 10, -1]" + "'", str32, "[0, -1, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 60, 10, -1]" + "'", str33, "[0, -1, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 61, 10, -1]" + "'", str34, "[0, -1, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 62, 10, -1]" + "'", str35, "[0, -1, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 63, 10, -1]" + "'", str36, "[0, -1, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 64, 10, -1]" + "'", str37, "[0, -1, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 65, 10, -1]" + "'", str38, "[0, -1, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 66, 10, -1]" + "'", str39, "[0, -1, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 67, 10, -1]" + "'", str40, "[0, -1, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 68, 10, -1]" + "'", str41, "[0, -1, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 69, 10, -1]" + "'", str42, "[0, -1, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 70, 10, -1]" + "'", str43, "[0, -1, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, -1, 71, 10, -1]" + "'", str44, "[0, -1, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, -1, 72, 10, -1]" + "'", str45, "[0, -1, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, -1, 73, 10, -1]" + "'", str46, "[0, -1, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, -1, 74, 10, -1]" + "'", str47, "[0, -1, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, -1, 75, 10, -1]" + "'", str48, "[0, -1, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, -1, 76, 10, -1]" + "'", str49, "[0, -1, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, -1, 77, 10, -1]" + "'", str50, "[0, -1, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, -1, 78, 10, -1]" + "'", str51, "[0, -1, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, -1, 79, 10, -1]" + "'", str52, "[0, -1, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, -1, 80, 10, -1]" + "'", str53, "[0, -1, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, -1, 81, 10, -1]" + "'", str54, "[0, -1, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, -1, 82, 10, -1]" + "'", str55, "[0, -1, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, -1, 83, 10, -1]" + "'", str56, "[0, -1, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, -1, 84, 10, -1]" + "'", str57, "[0, -1, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, -1, 85, 10, -1]" + "'", str58, "[0, -1, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, -1, 86, 10, -1]" + "'", str59, "[0, -1, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, -1, 87, 10, -1]" + "'", str60, "[0, -1, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, -1, 88, 10, -1]" + "'", str61, "[0, -1, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, -1, 89, 10, -1]" + "'", str62, "[0, -1, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, -1, 90, 10, -1]" + "'", str63, "[0, -1, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, -1, 91, 10, -1]" + "'", str64, "[0, -1, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, -1, 92, 10, -1]" + "'", str65, "[0, -1, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, -1, 93, 10, -1]" + "'", str66, "[0, -1, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, -1, 94, 10, -1]" + "'", str67, "[0, -1, 94, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test6265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6265");
        int[] intArray5 = new int[] { (byte) 10, (short) 10, (short) -1, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 11, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 10, 0, 0, 1]" + "'", str6, "[10, 10, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 1, 0, 1]" + "'", str7, "[10, 10, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 2, 0, 1]" + "'", str8, "[10, 10, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 3, 0, 1]" + "'", str9, "[10, 10, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 4, 0, 1]" + "'", str10, "[10, 10, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 5, 0, 1]" + "'", str11, "[10, 10, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 6, 0, 1]" + "'", str12, "[10, 10, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 7, 0, 1]" + "'", str13, "[10, 10, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 8, 0, 1]" + "'", str14, "[10, 10, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 9, 0, 1]" + "'", str15, "[10, 10, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 11, 0, 1, 1]" + "'", str16, "[10, 11, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 11, 1, 1, 1]" + "'", str17, "[10, 11, 1, 1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test6266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6266");
        int[] intArray6 = new int[] { (byte) 10, ' ', (byte) -1, 0, (byte) 100, '#' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 33, 7, 7, 101, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 0, 1, 100, 35]" + "'", str7, "[10, 32, 0, 1, 100, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 1, 2, 100, 35]" + "'", str8, "[10, 32, 1, 2, 100, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 2, 3, 100, 35]" + "'", str9, "[10, 32, 2, 3, 100, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 3, 4, 100, 35]" + "'", str10, "[10, 32, 3, 4, 100, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 4, 5, 100, 35]" + "'", str11, "[10, 32, 4, 5, 100, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 5, 6, 100, 35]" + "'", str12, "[10, 32, 5, 6, 100, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 6, 7, 100, 35]" + "'", str13, "[10, 32, 6, 7, 100, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 7, 8, 100, 35]" + "'", str14, "[10, 32, 7, 8, 100, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 8, 9, 100, 35]" + "'", str15, "[10, 32, 8, 9, 100, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 33, 0, 0, 101, 35]" + "'", str16, "[10, 33, 0, 0, 101, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 33, 1, 1, 101, 35]" + "'", str17, "[10, 33, 1, 1, 101, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 33, 2, 2, 101, 35]" + "'", str18, "[10, 33, 2, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 33, 3, 3, 101, 35]" + "'", str19, "[10, 33, 3, 3, 101, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 33, 4, 4, 101, 35]" + "'", str20, "[10, 33, 4, 4, 101, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 33, 5, 5, 101, 35]" + "'", str21, "[10, 33, 5, 5, 101, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 33, 6, 6, 101, 35]" + "'", str22, "[10, 33, 6, 6, 101, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 33, 7, 7, 101, 35]" + "'", str23, "[10, 33, 7, 7, 101, 35]");
    }

    @Test
    public void test6267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6267");
        int[] intArray4 = new int[] { (short) 0, (byte) 0, 'a', (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 5, 102, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 98, 10]" + "'", str5, "[0, 1, 98, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 99, 10]" + "'", str6, "[0, 2, 99, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100, 10]" + "'", str7, "[0, 3, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 101, 10]" + "'", str8, "[0, 4, 101, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 102, 10]" + "'", str9, "[0, 5, 102, 10]");
    }

    @Test
    public void test6268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6268");
        int[] intArray5 = new int[] { (short) 0, ' ', (short) 10, (byte) 0, (short) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass52 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 32, 56, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 32, 11, 0, 10]" + "'", str6, "[0, 32, 11, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 32, 12, 0, 10]" + "'", str7, "[0, 32, 12, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 32, 13, 0, 10]" + "'", str8, "[0, 32, 13, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 32, 14, 0, 10]" + "'", str9, "[0, 32, 14, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 32, 15, 0, 10]" + "'", str10, "[0, 32, 15, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 32, 16, 0, 10]" + "'", str11, "[0, 32, 16, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 32, 17, 0, 10]" + "'", str12, "[0, 32, 17, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 32, 18, 0, 10]" + "'", str13, "[0, 32, 18, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 32, 19, 0, 10]" + "'", str14, "[0, 32, 19, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 32, 20, 0, 10]" + "'", str15, "[0, 32, 20, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 32, 21, 0, 10]" + "'", str16, "[0, 32, 21, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 32, 22, 0, 10]" + "'", str17, "[0, 32, 22, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 32, 23, 0, 10]" + "'", str18, "[0, 32, 23, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 32, 24, 0, 10]" + "'", str19, "[0, 32, 24, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 32, 25, 0, 10]" + "'", str20, "[0, 32, 25, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 32, 26, 0, 10]" + "'", str21, "[0, 32, 26, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 32, 27, 0, 10]" + "'", str22, "[0, 32, 27, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 32, 28, 0, 10]" + "'", str23, "[0, 32, 28, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 32, 29, 0, 10]" + "'", str24, "[0, 32, 29, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 32, 30, 0, 10]" + "'", str25, "[0, 32, 30, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 31, 0, 10]" + "'", str26, "[0, 32, 31, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 32, 32, 0, 10]" + "'", str27, "[0, 32, 32, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 32, 33, 0, 10]" + "'", str28, "[0, 32, 33, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 32, 34, 0, 10]" + "'", str29, "[0, 32, 34, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 32, 35, 0, 10]" + "'", str30, "[0, 32, 35, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 32, 36, 0, 10]" + "'", str31, "[0, 32, 36, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 32, 37, 0, 10]" + "'", str32, "[0, 32, 37, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 32, 38, 0, 10]" + "'", str33, "[0, 32, 38, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 32, 39, 0, 10]" + "'", str34, "[0, 32, 39, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 32, 40, 0, 10]" + "'", str35, "[0, 32, 40, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 32, 41, 0, 10]" + "'", str36, "[0, 32, 41, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 32, 42, 0, 10]" + "'", str37, "[0, 32, 42, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 32, 43, 0, 10]" + "'", str38, "[0, 32, 43, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 32, 44, 0, 10]" + "'", str39, "[0, 32, 44, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 32, 45, 0, 10]" + "'", str40, "[0, 32, 45, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 32, 46, 0, 10]" + "'", str41, "[0, 32, 46, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 32, 47, 0, 10]" + "'", str42, "[0, 32, 47, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 32, 48, 0, 10]" + "'", str43, "[0, 32, 48, 0, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 32, 49, 0, 10]" + "'", str44, "[0, 32, 49, 0, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 32, 50, 0, 10]" + "'", str45, "[0, 32, 50, 0, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 32, 51, 0, 10]" + "'", str46, "[0, 32, 51, 0, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 32, 52, 0, 10]" + "'", str47, "[0, 32, 52, 0, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 32, 53, 0, 10]" + "'", str48, "[0, 32, 53, 0, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 32, 54, 0, 10]" + "'", str49, "[0, 32, 54, 0, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 32, 55, 0, 10]" + "'", str50, "[0, 32, 55, 0, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 32, 56, 0, 10]" + "'", str51, "[0, 32, 56, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test6269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6269");
        int[] intArray5 = new int[] { (byte) 10, (byte) -1, '#', (byte) 100, (short) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass19 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, -1, 48, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, -1, 36, 100, -1]" + "'", str6, "[10, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, -1, 37, 100, -1]" + "'", str7, "[10, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, -1, 38, 100, -1]" + "'", str8, "[10, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, -1, 39, 100, -1]" + "'", str9, "[10, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, -1, 40, 100, -1]" + "'", str10, "[10, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, -1, 41, 100, -1]" + "'", str11, "[10, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, -1, 42, 100, -1]" + "'", str12, "[10, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, -1, 43, 100, -1]" + "'", str13, "[10, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, -1, 44, 100, -1]" + "'", str14, "[10, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, -1, 45, 100, -1]" + "'", str15, "[10, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, -1, 46, 100, -1]" + "'", str16, "[10, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, -1, 47, 100, -1]" + "'", str17, "[10, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, -1, 48, 100, -1]" + "'", str18, "[10, -1, 48, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test6270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6270");
        int[] intArray2 = new int[] { 0, '4' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[63, 115]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 53]" + "'", str3, "[1, 53]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 54]" + "'", str4, "[2, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 55]" + "'", str5, "[3, 55]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 56]" + "'", str6, "[4, 56]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 57]" + "'", str7, "[5, 57]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 58]" + "'", str8, "[6, 58]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 59]" + "'", str9, "[7, 59]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 60]" + "'", str10, "[8, 60]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9, 61]" + "'", str11, "[9, 61]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 62]" + "'", str12, "[10, 62]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 63]" + "'", str13, "[11, 63]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[12, 64]" + "'", str14, "[12, 64]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[13, 65]" + "'", str15, "[13, 65]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[14, 66]" + "'", str16, "[14, 66]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[15, 67]" + "'", str17, "[15, 67]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[16, 68]" + "'", str18, "[16, 68]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[17, 69]" + "'", str19, "[17, 69]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[18, 70]" + "'", str20, "[18, 70]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[19, 71]" + "'", str21, "[19, 71]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[20, 72]" + "'", str22, "[20, 72]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[21, 73]" + "'", str23, "[21, 73]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[22, 74]" + "'", str24, "[22, 74]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[23, 75]" + "'", str25, "[23, 75]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[24, 76]" + "'", str26, "[24, 76]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[25, 77]" + "'", str27, "[25, 77]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[26, 78]" + "'", str28, "[26, 78]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[27, 79]" + "'", str29, "[27, 79]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[28, 80]" + "'", str30, "[28, 80]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[29, 81]" + "'", str31, "[29, 81]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[30, 82]" + "'", str32, "[30, 82]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[31, 83]" + "'", str33, "[31, 83]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 84]" + "'", str34, "[32, 84]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[33, 85]" + "'", str35, "[33, 85]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[34, 86]" + "'", str36, "[34, 86]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 87]" + "'", str37, "[35, 87]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[36, 88]" + "'", str38, "[36, 88]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[37, 89]" + "'", str39, "[37, 89]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 90]" + "'", str40, "[38, 90]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[39, 91]" + "'", str41, "[39, 91]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[40, 92]" + "'", str42, "[40, 92]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[41, 93]" + "'", str43, "[41, 93]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[42, 94]" + "'", str44, "[42, 94]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[43, 95]" + "'", str45, "[43, 95]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[44, 96]" + "'", str46, "[44, 96]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[45, 97]" + "'", str47, "[45, 97]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[46, 98]" + "'", str48, "[46, 98]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[47, 99]" + "'", str49, "[47, 99]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[48, 100]" + "'", str50, "[48, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[49, 101]" + "'", str51, "[49, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[50, 102]" + "'", str52, "[50, 102]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[51, 103]" + "'", str53, "[51, 103]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 104]" + "'", str54, "[52, 104]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[53, 105]" + "'", str55, "[53, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[54, 106]" + "'", str56, "[54, 106]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[55, 107]" + "'", str57, "[55, 107]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[56, 108]" + "'", str58, "[56, 108]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[57, 109]" + "'", str59, "[57, 109]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[58, 110]" + "'", str60, "[58, 110]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[59, 111]" + "'", str61, "[59, 111]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[60, 112]" + "'", str62, "[60, 112]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[61, 113]" + "'", str63, "[61, 113]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[62, 114]" + "'", str64, "[62, 114]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[63, 115]" + "'", str65, "[63, 115]");
    }

    @Test
    public void test6271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6271");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass28 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test6272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6272");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[4]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1]" + "'", str73, "[1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2]" + "'", str74, "[2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[3]" + "'", str75, "[3]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[4]" + "'", str76, "[4]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[5]" + "'", str77, "[5]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6]" + "'", str78, "[6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7]" + "'", str79, "[7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8]" + "'", str80, "[8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[9]" + "'", str81, "[9]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1]" + "'", str82, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1]" + "'", str83, "[1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[2]" + "'", str84, "[2]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[3]" + "'", str85, "[3]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[4]" + "'", str86, "[4]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[5]" + "'", str87, "[5]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[6]" + "'", str88, "[6]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7]" + "'", str89, "[7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8]" + "'", str90, "[8]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9]" + "'", str91, "[9]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 1]" + "'", str92, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1]" + "'", str93, "[1]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[2]" + "'", str94, "[2]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[3]" + "'", str95, "[3]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[4]" + "'", str96, "[4]");
    }

    @Test
    public void test6273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6273");
        int[] intArray5 = new int[] { (short) -1, (byte) 100, (byte) 10, (short) 100, ' ' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass67 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 71, 100, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 100, 11, 100, 32]" + "'", str6, "[-1, 100, 11, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 12, 100, 32]" + "'", str7, "[-1, 100, 12, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 13, 100, 32]" + "'", str8, "[-1, 100, 13, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 14, 100, 32]" + "'", str9, "[-1, 100, 14, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 15, 100, 32]" + "'", str10, "[-1, 100, 15, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 16, 100, 32]" + "'", str11, "[-1, 100, 16, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 17, 100, 32]" + "'", str12, "[-1, 100, 17, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 18, 100, 32]" + "'", str13, "[-1, 100, 18, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 19, 100, 32]" + "'", str14, "[-1, 100, 19, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 20, 100, 32]" + "'", str15, "[-1, 100, 20, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 21, 100, 32]" + "'", str16, "[-1, 100, 21, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 22, 100, 32]" + "'", str17, "[-1, 100, 22, 100, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 23, 100, 32]" + "'", str18, "[-1, 100, 23, 100, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 24, 100, 32]" + "'", str19, "[-1, 100, 24, 100, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 25, 100, 32]" + "'", str20, "[-1, 100, 25, 100, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 26, 100, 32]" + "'", str21, "[-1, 100, 26, 100, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 27, 100, 32]" + "'", str22, "[-1, 100, 27, 100, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 28, 100, 32]" + "'", str23, "[-1, 100, 28, 100, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 29, 100, 32]" + "'", str24, "[-1, 100, 29, 100, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 30, 100, 32]" + "'", str25, "[-1, 100, 30, 100, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 31, 100, 32]" + "'", str26, "[-1, 100, 31, 100, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 32, 100, 32]" + "'", str27, "[-1, 100, 32, 100, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 33, 100, 32]" + "'", str28, "[-1, 100, 33, 100, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 34, 100, 32]" + "'", str29, "[-1, 100, 34, 100, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 35, 100, 32]" + "'", str30, "[-1, 100, 35, 100, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 36, 100, 32]" + "'", str31, "[-1, 100, 36, 100, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 37, 100, 32]" + "'", str32, "[-1, 100, 37, 100, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 38, 100, 32]" + "'", str33, "[-1, 100, 38, 100, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 39, 100, 32]" + "'", str34, "[-1, 100, 39, 100, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 40, 100, 32]" + "'", str35, "[-1, 100, 40, 100, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 41, 100, 32]" + "'", str36, "[-1, 100, 41, 100, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 42, 100, 32]" + "'", str37, "[-1, 100, 42, 100, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 100, 43, 100, 32]" + "'", str38, "[-1, 100, 43, 100, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 100, 44, 100, 32]" + "'", str39, "[-1, 100, 44, 100, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 100, 45, 100, 32]" + "'", str40, "[-1, 100, 45, 100, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 100, 46, 100, 32]" + "'", str41, "[-1, 100, 46, 100, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 100, 47, 100, 32]" + "'", str42, "[-1, 100, 47, 100, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 100, 48, 100, 32]" + "'", str43, "[-1, 100, 48, 100, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 100, 49, 100, 32]" + "'", str44, "[-1, 100, 49, 100, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 100, 50, 100, 32]" + "'", str45, "[-1, 100, 50, 100, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 100, 51, 100, 32]" + "'", str46, "[-1, 100, 51, 100, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 100, 52, 100, 32]" + "'", str47, "[-1, 100, 52, 100, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 100, 53, 100, 32]" + "'", str48, "[-1, 100, 53, 100, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 100, 54, 100, 32]" + "'", str49, "[-1, 100, 54, 100, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 100, 55, 100, 32]" + "'", str50, "[-1, 100, 55, 100, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 100, 56, 100, 32]" + "'", str51, "[-1, 100, 56, 100, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 57, 100, 32]" + "'", str52, "[-1, 100, 57, 100, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 100, 58, 100, 32]" + "'", str53, "[-1, 100, 58, 100, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 100, 59, 100, 32]" + "'", str54, "[-1, 100, 59, 100, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 100, 60, 100, 32]" + "'", str55, "[-1, 100, 60, 100, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 100, 61, 100, 32]" + "'", str56, "[-1, 100, 61, 100, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 100, 62, 100, 32]" + "'", str57, "[-1, 100, 62, 100, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 100, 63, 100, 32]" + "'", str58, "[-1, 100, 63, 100, 32]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 100, 64, 100, 32]" + "'", str59, "[-1, 100, 64, 100, 32]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 100, 65, 100, 32]" + "'", str60, "[-1, 100, 65, 100, 32]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 100, 66, 100, 32]" + "'", str61, "[-1, 100, 66, 100, 32]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 100, 67, 100, 32]" + "'", str62, "[-1, 100, 67, 100, 32]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 100, 68, 100, 32]" + "'", str63, "[-1, 100, 68, 100, 32]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[-1, 100, 69, 100, 32]" + "'", str64, "[-1, 100, 69, 100, 32]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[-1, 100, 70, 100, 32]" + "'", str65, "[-1, 100, 70, 100, 32]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[-1, 100, 71, 100, 32]" + "'", str66, "[-1, 100, 71, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test6274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6274");
        int[] intArray5 = new int[] { (-1), (-1), (-1), (byte) 10, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass40 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 2, 3, 13, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, -1, 0, 10, -1]" + "'", str6, "[-1, -1, 0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, -1, 1, 10, -1]" + "'", str7, "[-1, -1, 1, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, -1, 2, 10, -1]" + "'", str8, "[-1, -1, 2, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, -1, 3, 10, -1]" + "'", str9, "[-1, -1, 3, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, -1, 4, 10, -1]" + "'", str10, "[-1, -1, 4, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, -1, 5, 10, -1]" + "'", str11, "[-1, -1, 5, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, -1, 6, 10, -1]" + "'", str12, "[-1, -1, 6, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, -1, 7, 10, -1]" + "'", str13, "[-1, -1, 7, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, -1, 8, 10, -1]" + "'", str14, "[-1, -1, 8, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, -1, 9, 10, -1]" + "'", str15, "[-1, -1, 9, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 0, 0, 11, -1]" + "'", str16, "[-1, 0, 0, 11, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 0, 1, 11, -1]" + "'", str17, "[-1, 0, 1, 11, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 0, 2, 11, -1]" + "'", str18, "[-1, 0, 2, 11, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 0, 3, 11, -1]" + "'", str19, "[-1, 0, 3, 11, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 0, 4, 11, -1]" + "'", str20, "[-1, 0, 4, 11, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 0, 5, 11, -1]" + "'", str21, "[-1, 0, 5, 11, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 0, 6, 11, -1]" + "'", str22, "[-1, 0, 6, 11, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 0, 7, 11, -1]" + "'", str23, "[-1, 0, 7, 11, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 0, 8, 11, -1]" + "'", str24, "[-1, 0, 8, 11, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 0, 9, 11, -1]" + "'", str25, "[-1, 0, 9, 11, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 1, 0, 12, -1]" + "'", str26, "[-1, 1, 0, 12, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 1, 1, 12, -1]" + "'", str27, "[-1, 1, 1, 12, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 1, 2, 12, -1]" + "'", str28, "[-1, 1, 2, 12, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 1, 3, 12, -1]" + "'", str29, "[-1, 1, 3, 12, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 1, 4, 12, -1]" + "'", str30, "[-1, 1, 4, 12, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 1, 5, 12, -1]" + "'", str31, "[-1, 1, 5, 12, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 1, 6, 12, -1]" + "'", str32, "[-1, 1, 6, 12, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 1, 7, 12, -1]" + "'", str33, "[-1, 1, 7, 12, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 1, 8, 12, -1]" + "'", str34, "[-1, 1, 8, 12, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 1, 9, 12, -1]" + "'", str35, "[-1, 1, 9, 12, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 2, 0, 13, -1]" + "'", str36, "[-1, 2, 0, 13, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 2, 1, 13, -1]" + "'", str37, "[-1, 2, 1, 13, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 2, 2, 13, -1]" + "'", str38, "[-1, 2, 2, 13, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 2, 3, 13, -1]" + "'", str39, "[-1, 2, 3, 13, -1]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test6275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6275");
        int[] intArray5 = new int[] { (byte) -1, '#', 10, (-1), 100 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 35, 61, -1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 35, 11, -1, 100]" + "'", str6, "[-1, 35, 11, -1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 35, 12, -1, 100]" + "'", str7, "[-1, 35, 12, -1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 35, 13, -1, 100]" + "'", str8, "[-1, 35, 13, -1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 35, 14, -1, 100]" + "'", str9, "[-1, 35, 14, -1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 35, 15, -1, 100]" + "'", str10, "[-1, 35, 15, -1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 35, 16, -1, 100]" + "'", str11, "[-1, 35, 16, -1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 35, 17, -1, 100]" + "'", str12, "[-1, 35, 17, -1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 35, 18, -1, 100]" + "'", str13, "[-1, 35, 18, -1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 35, 19, -1, 100]" + "'", str14, "[-1, 35, 19, -1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 35, 20, -1, 100]" + "'", str15, "[-1, 35, 20, -1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 35, 21, -1, 100]" + "'", str16, "[-1, 35, 21, -1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 35, 22, -1, 100]" + "'", str17, "[-1, 35, 22, -1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 35, 23, -1, 100]" + "'", str18, "[-1, 35, 23, -1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 35, 24, -1, 100]" + "'", str19, "[-1, 35, 24, -1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 35, 25, -1, 100]" + "'", str20, "[-1, 35, 25, -1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 35, 26, -1, 100]" + "'", str21, "[-1, 35, 26, -1, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 35, 27, -1, 100]" + "'", str22, "[-1, 35, 27, -1, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 35, 28, -1, 100]" + "'", str23, "[-1, 35, 28, -1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 35, 29, -1, 100]" + "'", str24, "[-1, 35, 29, -1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 35, 30, -1, 100]" + "'", str25, "[-1, 35, 30, -1, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 35, 31, -1, 100]" + "'", str26, "[-1, 35, 31, -1, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 35, 32, -1, 100]" + "'", str27, "[-1, 35, 32, -1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 35, 33, -1, 100]" + "'", str28, "[-1, 35, 33, -1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 35, 34, -1, 100]" + "'", str29, "[-1, 35, 34, -1, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 35, 35, -1, 100]" + "'", str30, "[-1, 35, 35, -1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 35, 36, -1, 100]" + "'", str31, "[-1, 35, 36, -1, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 35, 37, -1, 100]" + "'", str32, "[-1, 35, 37, -1, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 35, 38, -1, 100]" + "'", str33, "[-1, 35, 38, -1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 35, 39, -1, 100]" + "'", str34, "[-1, 35, 39, -1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 35, 40, -1, 100]" + "'", str35, "[-1, 35, 40, -1, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 35, 41, -1, 100]" + "'", str36, "[-1, 35, 41, -1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 35, 42, -1, 100]" + "'", str37, "[-1, 35, 42, -1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 43, -1, 100]" + "'", str38, "[-1, 35, 43, -1, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 35, 44, -1, 100]" + "'", str39, "[-1, 35, 44, -1, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 35, 45, -1, 100]" + "'", str40, "[-1, 35, 45, -1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 35, 46, -1, 100]" + "'", str41, "[-1, 35, 46, -1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 35, 47, -1, 100]" + "'", str42, "[-1, 35, 47, -1, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 35, 48, -1, 100]" + "'", str43, "[-1, 35, 48, -1, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 35, 49, -1, 100]" + "'", str44, "[-1, 35, 49, -1, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 35, 50, -1, 100]" + "'", str45, "[-1, 35, 50, -1, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 35, 51, -1, 100]" + "'", str46, "[-1, 35, 51, -1, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 35, 52, -1, 100]" + "'", str47, "[-1, 35, 52, -1, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 35, 53, -1, 100]" + "'", str48, "[-1, 35, 53, -1, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 35, 54, -1, 100]" + "'", str49, "[-1, 35, 54, -1, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 35, 55, -1, 100]" + "'", str50, "[-1, 35, 55, -1, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 35, 56, -1, 100]" + "'", str51, "[-1, 35, 56, -1, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 35, 57, -1, 100]" + "'", str52, "[-1, 35, 57, -1, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 35, 58, -1, 100]" + "'", str53, "[-1, 35, 58, -1, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 35, 59, -1, 100]" + "'", str54, "[-1, 35, 59, -1, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 35, 60, -1, 100]" + "'", str55, "[-1, 35, 60, -1, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 35, 61, -1, 100]" + "'", str56, "[-1, 35, 61, -1, 100]");
    }

    @Test
    public void test6276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6276");
        int[] intArray3 = new int[] { (byte) 10, (short) -1, (byte) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass6 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 1, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 0, 10]" + "'", str4, "[10, 0, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 1, 10]" + "'", str5, "[10, 1, 10]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test6277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6277");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 100]" + "'", str6, "[0, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100]" + "'", str7, "[0, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 100]" + "'", str8, "[0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 100]" + "'", str9, "[0, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 100]" + "'", str10, "[0, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 100]" + "'", str11, "[0, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 100]" + "'", str12, "[0, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 100]" + "'", str13, "[0, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 101]" + "'", str14, "[1, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 101]" + "'", str15, "[1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 101]" + "'", str16, "[1, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 101]" + "'", str17, "[1, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 101]" + "'", str18, "[1, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 101]" + "'", str19, "[1, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 101]" + "'", str20, "[1, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 101]" + "'", str21, "[1, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 101]" + "'", str22, "[1, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 101]" + "'", str23, "[1, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 102]" + "'", str24, "[2, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 102]" + "'", str25, "[2, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 102]" + "'", str26, "[2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 102]" + "'", str27, "[2, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 102]" + "'", str28, "[2, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 102]" + "'", str29, "[2, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 102]" + "'", str30, "[2, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 102]" + "'", str31, "[2, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 102]" + "'", str32, "[2, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 102]" + "'", str33, "[2, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 103]" + "'", str34, "[3, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 103]" + "'", str35, "[3, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 103]" + "'", str36, "[3, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 103]" + "'", str37, "[3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 103]" + "'", str38, "[3, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 103]" + "'", str39, "[3, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 103]" + "'", str40, "[3, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 103]" + "'", str41, "[3, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 103]" + "'", str42, "[3, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 103]" + "'", str43, "[3, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 104]" + "'", str44, "[4, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 104]" + "'", str45, "[4, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 104]" + "'", str46, "[4, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 104]" + "'", str47, "[4, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 104]" + "'", str48, "[4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 104]" + "'", str49, "[4, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 104]" + "'", str50, "[4, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 104]" + "'", str51, "[4, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 104]" + "'", str52, "[4, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 9, 104]" + "'", str53, "[4, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 0, 105]" + "'", str54, "[5, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 1, 105]" + "'", str55, "[5, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 2, 105]" + "'", str56, "[5, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 3, 105]" + "'", str57, "[5, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 4, 105]" + "'", str58, "[5, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 5, 105]" + "'", str59, "[5, 5, 105]");
    }

    @Test
    public void test6278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEPatched12.test6278");
        int[] intArray4 = new int[] { (byte) -1, 0, (byte) -1, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass30 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 0, 52]" + "'", str5, "[-1, 1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 1, 52]" + "'", str6, "[-1, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 3, 2, 52]" + "'", str7, "[-1, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 4, 3, 52]" + "'", str8, "[-1, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 5, 4, 52]" + "'", str9, "[-1, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 6, 5, 52]" + "'", str10, "[-1, 6, 5, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 7, 6, 52]" + "'", str11, "[-1, 7, 6, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 8, 7, 52]" + "'", str12, "[-1, 8, 7, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 9, 8, 52]" + "'", str13, "[-1, 9, 8, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 9, 52]" + "'", str14, "[-1, 10, 9, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 0, 0, 53]" + "'", str15, "[0, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 1, 53]" + "'", str16, "[0, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 53]" + "'", str17, "[0, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 3, 3, 53]" + "'", str18, "[0, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 4, 4, 53]" + "'", str19, "[0, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 5, 5, 53]" + "'", str20, "[0, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 6, 6, 53]" + "'", str21, "[0, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 7, 7, 53]" + "'", str22, "[0, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 8, 8, 53]" + "'", str23, "[0, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 9, 9, 53]" + "'", str24, "[0, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 0, 54]" + "'", str25, "[1, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 1, 54]" + "'", str26, "[1, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 2, 54]" + "'", str27, "[1, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 3, 54]" + "'", str28, "[1, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 4, 4, 54]" + "'", str29, "[1, 4, 4, 54]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }
}

