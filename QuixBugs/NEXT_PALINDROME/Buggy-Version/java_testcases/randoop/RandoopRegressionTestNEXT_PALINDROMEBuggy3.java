import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RandoopRegressionTestNEXT_PALINDROMEBuggy3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1501");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass24 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1502");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass24 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1503");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass18 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1504");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass45 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[52, 142]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1505");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass53 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1506");
        int[] intArray5 = new int[] { (short) 100, (byte) 10, (byte) 100, 0, (byte) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass44 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 138, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 101, 0, 10]" + "'", str6, "[100, 10, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 102, 0, 10]" + "'", str7, "[100, 10, 102, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 103, 0, 10]" + "'", str8, "[100, 10, 103, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 104, 0, 10]" + "'", str9, "[100, 10, 104, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 105, 0, 10]" + "'", str10, "[100, 10, 105, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 106, 0, 10]" + "'", str11, "[100, 10, 106, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 107, 0, 10]" + "'", str12, "[100, 10, 107, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 108, 0, 10]" + "'", str13, "[100, 10, 108, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 109, 0, 10]" + "'", str14, "[100, 10, 109, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 110, 0, 10]" + "'", str15, "[100, 10, 110, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 111, 0, 10]" + "'", str16, "[100, 10, 111, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 112, 0, 10]" + "'", str17, "[100, 10, 112, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 113, 0, 10]" + "'", str18, "[100, 10, 113, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 114, 0, 10]" + "'", str19, "[100, 10, 114, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 115, 0, 10]" + "'", str20, "[100, 10, 115, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 116, 0, 10]" + "'", str21, "[100, 10, 116, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 117, 0, 10]" + "'", str22, "[100, 10, 117, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 118, 0, 10]" + "'", str23, "[100, 10, 118, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 119, 0, 10]" + "'", str24, "[100, 10, 119, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 120, 0, 10]" + "'", str25, "[100, 10, 120, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 121, 0, 10]" + "'", str26, "[100, 10, 121, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 122, 0, 10]" + "'", str27, "[100, 10, 122, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 123, 0, 10]" + "'", str28, "[100, 10, 123, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 124, 0, 10]" + "'", str29, "[100, 10, 124, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 125, 0, 10]" + "'", str30, "[100, 10, 125, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 126, 0, 10]" + "'", str31, "[100, 10, 126, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 127, 0, 10]" + "'", str32, "[100, 10, 127, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 128, 0, 10]" + "'", str33, "[100, 10, 128, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 129, 0, 10]" + "'", str34, "[100, 10, 129, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 130, 0, 10]" + "'", str35, "[100, 10, 130, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 131, 0, 10]" + "'", str36, "[100, 10, 131, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 132, 0, 10]" + "'", str37, "[100, 10, 132, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 133, 0, 10]" + "'", str38, "[100, 10, 133, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 134, 0, 10]" + "'", str39, "[100, 10, 134, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 135, 0, 10]" + "'", str40, "[100, 10, 135, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 136, 0, 10]" + "'", str41, "[100, 10, 136, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 137, 0, 10]" + "'", str42, "[100, 10, 137, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 138, 0, 10]" + "'", str43, "[100, 10, 138, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1507");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass41 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1508");
        int[] intArray5 = new int[] { (short) 1, ' ', (byte) -1, (short) 100, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass24 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 33, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 32, 0, 100, 100]" + "'", str6, "[1, 32, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 32, 1, 100, 100]" + "'", str7, "[1, 32, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 32, 2, 100, 100]" + "'", str8, "[1, 32, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 32, 3, 100, 100]" + "'", str9, "[1, 32, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 32, 4, 100, 100]" + "'", str10, "[1, 32, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 32, 5, 100, 100]" + "'", str11, "[1, 32, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 32, 6, 100, 100]" + "'", str12, "[1, 32, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 32, 7, 100, 100]" + "'", str13, "[1, 32, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 32, 8, 100, 100]" + "'", str14, "[1, 32, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 32, 9, 100, 100]" + "'", str15, "[1, 32, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 33, 0, 101, 100]" + "'", str16, "[1, 33, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 33, 1, 101, 100]" + "'", str17, "[1, 33, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 33, 2, 101, 100]" + "'", str18, "[1, 33, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 33, 3, 101, 100]" + "'", str19, "[1, 33, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 33, 4, 101, 100]" + "'", str20, "[1, 33, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 33, 5, 101, 100]" + "'", str21, "[1, 33, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 33, 6, 101, 100]" + "'", str22, "[1, 33, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 33, 7, 101, 100]" + "'", str23, "[1, 33, 7, 101, 100]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1509");
        int[] intArray2 = new int[] { (short) -1, (short) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass50 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 1]" + "'", str3, "[0, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 2]" + "'", str4, "[1, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 3]" + "'", str5, "[2, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 4]" + "'", str6, "[3, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 5]" + "'", str7, "[4, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 6]" + "'", str8, "[5, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 7]" + "'", str9, "[6, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 8]" + "'", str10, "[7, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[8, 9]" + "'", str11, "[8, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1510");
        int[] intArray6 = new int[] { '#', (byte) 0, 10, (-1), '#', (byte) 1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass38 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 3, 0, 0, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 0, 11, 0, 35, 1]" + "'", str7, "[35, 0, 11, 0, 35, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 0, 12, 1, 35, 1]" + "'", str8, "[35, 0, 12, 1, 35, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 0, 13, 2, 35, 1]" + "'", str9, "[35, 0, 13, 2, 35, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 0, 14, 3, 35, 1]" + "'", str10, "[35, 0, 14, 3, 35, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 0, 15, 4, 35, 1]" + "'", str11, "[35, 0, 15, 4, 35, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 0, 16, 5, 35, 1]" + "'", str12, "[35, 0, 16, 5, 35, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 0, 17, 6, 35, 1]" + "'", str13, "[35, 0, 17, 6, 35, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 0, 18, 7, 35, 1]" + "'", str14, "[35, 0, 18, 7, 35, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 0, 19, 8, 35, 1]" + "'", str15, "[35, 0, 19, 8, 35, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 0, 20, 9, 35, 1]" + "'", str16, "[35, 0, 20, 9, 35, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 1, 0, 0, 36, 1]" + "'", str17, "[35, 1, 0, 0, 36, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 1, 1, 1, 36, 1]" + "'", str18, "[35, 1, 1, 1, 36, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 1, 2, 2, 36, 1]" + "'", str19, "[35, 1, 2, 2, 36, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 1, 3, 3, 36, 1]" + "'", str20, "[35, 1, 3, 3, 36, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 1, 4, 4, 36, 1]" + "'", str21, "[35, 1, 4, 4, 36, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 1, 5, 5, 36, 1]" + "'", str22, "[35, 1, 5, 5, 36, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 1, 6, 6, 36, 1]" + "'", str23, "[35, 1, 6, 6, 36, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 1, 7, 7, 36, 1]" + "'", str24, "[35, 1, 7, 7, 36, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 1, 8, 8, 36, 1]" + "'", str25, "[35, 1, 8, 8, 36, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 1, 9, 9, 36, 1]" + "'", str26, "[35, 1, 9, 9, 36, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 2, 0, 0, 37, 1]" + "'", str27, "[35, 2, 0, 0, 37, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 2, 1, 1, 37, 1]" + "'", str28, "[35, 2, 1, 1, 37, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 2, 2, 2, 37, 1]" + "'", str29, "[35, 2, 2, 2, 37, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 2, 3, 3, 37, 1]" + "'", str30, "[35, 2, 3, 3, 37, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 2, 4, 4, 37, 1]" + "'", str31, "[35, 2, 4, 4, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 2, 5, 5, 37, 1]" + "'", str32, "[35, 2, 5, 5, 37, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 2, 6, 6, 37, 1]" + "'", str33, "[35, 2, 6, 6, 37, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 7, 7, 37, 1]" + "'", str34, "[35, 2, 7, 7, 37, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 2, 8, 8, 37, 1]" + "'", str35, "[35, 2, 8, 8, 37, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 9, 9, 37, 1]" + "'", str36, "[35, 2, 9, 9, 37, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 0, 0, 38, 1]" + "'", str37, "[35, 3, 0, 0, 38, 1]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1511");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass22 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1512");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass49 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[82]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1513");
        int[] intArray2 = new int[] { (short) -1, (short) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass51 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[8, 8]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 1]" + "'", str3, "[0, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 2]" + "'", str4, "[1, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 3]" + "'", str5, "[2, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 4]" + "'", str6, "[3, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 5]" + "'", str7, "[4, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 6]" + "'", str8, "[5, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 7]" + "'", str9, "[6, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 8]" + "'", str10, "[7, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[8, 9]" + "'", str11, "[8, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1514");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass46 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[53, 143]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 143]" + "'", str45, "[53, 143]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1515");
        int[] intArray3 = new int[] { (short) 0, (short) 0, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass39 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 1, -1]" + "'", str4, "[0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 2, -1]" + "'", str5, "[0, 2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 3, -1]" + "'", str6, "[0, 3, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 4, -1]" + "'", str7, "[0, 4, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 5, -1]" + "'", str8, "[0, 5, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 6, -1]" + "'", str9, "[0, 6, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 7, -1]" + "'", str10, "[0, 7, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 8, -1]" + "'", str11, "[0, 8, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 9, -1]" + "'", str12, "[0, 9, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0]" + "'", str13, "[1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 0]" + "'", str14, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0]" + "'", str15, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 0]" + "'", str16, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 0]" + "'", str17, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 0]" + "'", str18, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 0]" + "'", str19, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 0]" + "'", str20, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 0]" + "'", str21, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 0]" + "'", str22, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 1]" + "'", str23, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1]" + "'", str24, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 1]" + "'", str25, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 1]" + "'", str26, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 1]" + "'", str27, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 1]" + "'", str28, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 1]" + "'", str29, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 1]" + "'", str30, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 1]" + "'", str31, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 1]" + "'", str32, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 2]" + "'", str33, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 2]" + "'", str34, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2]" + "'", str35, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 2]" + "'", str36, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 2]" + "'", str37, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 2]" + "'", str38, "[3, 5, 2]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1516");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass48 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[81]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1517");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass50 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1518");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass8 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1519");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass21 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1520");
        int[] intArray5 = new int[] { (short) 100, (byte) 10, (byte) 100, 0, (byte) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass43 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 137, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 101, 0, 10]" + "'", str6, "[100, 10, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 102, 0, 10]" + "'", str7, "[100, 10, 102, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 103, 0, 10]" + "'", str8, "[100, 10, 103, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 104, 0, 10]" + "'", str9, "[100, 10, 104, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 105, 0, 10]" + "'", str10, "[100, 10, 105, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 106, 0, 10]" + "'", str11, "[100, 10, 106, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 107, 0, 10]" + "'", str12, "[100, 10, 107, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 108, 0, 10]" + "'", str13, "[100, 10, 108, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 109, 0, 10]" + "'", str14, "[100, 10, 109, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 110, 0, 10]" + "'", str15, "[100, 10, 110, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 111, 0, 10]" + "'", str16, "[100, 10, 111, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 112, 0, 10]" + "'", str17, "[100, 10, 112, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 113, 0, 10]" + "'", str18, "[100, 10, 113, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 114, 0, 10]" + "'", str19, "[100, 10, 114, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 115, 0, 10]" + "'", str20, "[100, 10, 115, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 116, 0, 10]" + "'", str21, "[100, 10, 116, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 117, 0, 10]" + "'", str22, "[100, 10, 117, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 118, 0, 10]" + "'", str23, "[100, 10, 118, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 119, 0, 10]" + "'", str24, "[100, 10, 119, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 120, 0, 10]" + "'", str25, "[100, 10, 120, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 121, 0, 10]" + "'", str26, "[100, 10, 121, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 122, 0, 10]" + "'", str27, "[100, 10, 122, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 123, 0, 10]" + "'", str28, "[100, 10, 123, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 124, 0, 10]" + "'", str29, "[100, 10, 124, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 125, 0, 10]" + "'", str30, "[100, 10, 125, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 126, 0, 10]" + "'", str31, "[100, 10, 126, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 127, 0, 10]" + "'", str32, "[100, 10, 127, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 128, 0, 10]" + "'", str33, "[100, 10, 128, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 129, 0, 10]" + "'", str34, "[100, 10, 129, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 130, 0, 10]" + "'", str35, "[100, 10, 130, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 131, 0, 10]" + "'", str36, "[100, 10, 131, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 132, 0, 10]" + "'", str37, "[100, 10, 132, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 133, 0, 10]" + "'", str38, "[100, 10, 133, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 134, 0, 10]" + "'", str39, "[100, 10, 134, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 135, 0, 10]" + "'", str40, "[100, 10, 135, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 136, 0, 10]" + "'", str41, "[100, 10, 136, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 137, 0, 10]" + "'", str42, "[100, 10, 137, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1521");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass45 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1522");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass14 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 60, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 58, 1, 100]" + "'", str11, "[100, 10, 58, 1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 59, 1, 100]" + "'", str12, "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 60, 1, 100]" + "'", str13, "[100, 10, 60, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1523");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass53 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1524");
        int[] intArray5 = new int[] { (short) 1, ' ', (byte) -1, (short) 100, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass25 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 33, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 32, 0, 100, 100]" + "'", str6, "[1, 32, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 32, 1, 100, 100]" + "'", str7, "[1, 32, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 32, 2, 100, 100]" + "'", str8, "[1, 32, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 32, 3, 100, 100]" + "'", str9, "[1, 32, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 32, 4, 100, 100]" + "'", str10, "[1, 32, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 32, 5, 100, 100]" + "'", str11, "[1, 32, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 32, 6, 100, 100]" + "'", str12, "[1, 32, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 32, 7, 100, 100]" + "'", str13, "[1, 32, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 32, 8, 100, 100]" + "'", str14, "[1, 32, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 32, 9, 100, 100]" + "'", str15, "[1, 32, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 33, 0, 101, 100]" + "'", str16, "[1, 33, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 33, 1, 101, 100]" + "'", str17, "[1, 33, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 33, 2, 101, 100]" + "'", str18, "[1, 33, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 33, 3, 101, 100]" + "'", str19, "[1, 33, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 33, 4, 101, 100]" + "'", str20, "[1, 33, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 33, 5, 101, 100]" + "'", str21, "[1, 33, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 33, 6, 101, 100]" + "'", str22, "[1, 33, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 33, 7, 101, 100]" + "'", str23, "[1, 33, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 33, 8, 101, 100]" + "'", str24, "[1, 33, 8, 101, 100]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1525");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass21 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1526");
        int[] intArray5 = new int[] { (short) 100, 100, (short) 1, (byte) -1, (short) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass40 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 103, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, -1, 1]" + "'", str6, "[100, 100, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, -1, 1]" + "'", str7, "[100, 100, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, -1, 1]" + "'", str8, "[100, 100, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, -1, 1]" + "'", str9, "[100, 100, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, -1, 1]" + "'", str10, "[100, 100, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, -1, 1]" + "'", str11, "[100, 100, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, -1, 1]" + "'", str12, "[100, 100, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, -1, 1]" + "'", str13, "[100, 100, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 0, 1]" + "'", str14, "[100, 101, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 0, 1]" + "'", str15, "[100, 101, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 0, 1]" + "'", str16, "[100, 101, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 0, 1]" + "'", str17, "[100, 101, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 0, 1]" + "'", str18, "[100, 101, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 0, 1]" + "'", str19, "[100, 101, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 0, 1]" + "'", str20, "[100, 101, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 0, 1]" + "'", str21, "[100, 101, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 0, 1]" + "'", str22, "[100, 101, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 0, 1]" + "'", str23, "[100, 101, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 1, 1]" + "'", str24, "[100, 102, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 1, 1]" + "'", str25, "[100, 102, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 1, 1]" + "'", str26, "[100, 102, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 1, 1]" + "'", str27, "[100, 102, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 1, 1]" + "'", str28, "[100, 102, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 1, 1]" + "'", str29, "[100, 102, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 1, 1]" + "'", str30, "[100, 102, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 1, 1]" + "'", str31, "[100, 102, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 1, 1]" + "'", str32, "[100, 102, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 1, 1]" + "'", str33, "[100, 102, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 2, 1]" + "'", str34, "[100, 103, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 2, 1]" + "'", str35, "[100, 103, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 2, 1]" + "'", str36, "[100, 103, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 2, 1]" + "'", str37, "[100, 103, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 2, 1]" + "'", str38, "[100, 103, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 2, 1]" + "'", str39, "[100, 103, 5, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1527");
        int[] intArray4 = new int[] { 'a', (short) -1, '#', 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass45 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 39, 75, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 0, 36, 97]" + "'", str5, "[97, 0, 36, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 1, 37, 97]" + "'", str6, "[97, 1, 37, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 2, 38, 97]" + "'", str7, "[97, 2, 38, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 3, 39, 97]" + "'", str8, "[97, 3, 39, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 4, 40, 97]" + "'", str9, "[97, 4, 40, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 5, 41, 97]" + "'", str10, "[97, 5, 41, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 6, 42, 97]" + "'", str11, "[97, 6, 42, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 7, 43, 97]" + "'", str12, "[97, 7, 43, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 8, 44, 97]" + "'", str13, "[97, 8, 44, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 9, 45, 97]" + "'", str14, "[97, 9, 45, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 10, 46, 97]" + "'", str15, "[97, 10, 46, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 11, 47, 97]" + "'", str16, "[97, 11, 47, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 12, 48, 97]" + "'", str17, "[97, 12, 48, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 13, 49, 97]" + "'", str18, "[97, 13, 49, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 14, 50, 97]" + "'", str19, "[97, 14, 50, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 15, 51, 97]" + "'", str20, "[97, 15, 51, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 16, 52, 97]" + "'", str21, "[97, 16, 52, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 17, 53, 97]" + "'", str22, "[97, 17, 53, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 18, 54, 97]" + "'", str23, "[97, 18, 54, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 19, 55, 97]" + "'", str24, "[97, 19, 55, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 20, 56, 97]" + "'", str25, "[97, 20, 56, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 21, 57, 97]" + "'", str26, "[97, 21, 57, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 22, 58, 97]" + "'", str27, "[97, 22, 58, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 23, 59, 97]" + "'", str28, "[97, 23, 59, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 24, 60, 97]" + "'", str29, "[97, 24, 60, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 25, 61, 97]" + "'", str30, "[97, 25, 61, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 26, 62, 97]" + "'", str31, "[97, 26, 62, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 27, 63, 97]" + "'", str32, "[97, 27, 63, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 28, 64, 97]" + "'", str33, "[97, 28, 64, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 29, 65, 97]" + "'", str34, "[97, 29, 65, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 30, 66, 97]" + "'", str35, "[97, 30, 66, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 31, 67, 97]" + "'", str36, "[97, 31, 67, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 32, 68, 97]" + "'", str37, "[97, 32, 68, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 33, 69, 97]" + "'", str38, "[97, 33, 69, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 34, 70, 97]" + "'", str39, "[97, 34, 70, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 35, 71, 97]" + "'", str40, "[97, 35, 71, 97]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 36, 72, 97]" + "'", str41, "[97, 36, 72, 97]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 37, 73, 97]" + "'", str42, "[97, 37, 73, 97]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 38, 74, 97]" + "'", str43, "[97, 38, 74, 97]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 39, 75, 97]" + "'", str44, "[97, 39, 75, 97]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1528");
        int[] intArray6 = new int[] { (-1), 10, (short) -1, (short) -1, (short) 10, (short) -1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass42 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 13, 4, 4, 13, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 10, 0, 0, 10, -1]" + "'", str7, "[-1, 10, 0, 0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 10, 1, 1, 10, -1]" + "'", str8, "[-1, 10, 1, 1, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 10, 2, 2, 10, -1]" + "'", str9, "[-1, 10, 2, 2, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 10, 3, 3, 10, -1]" + "'", str10, "[-1, 10, 3, 3, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 10, 4, 4, 10, -1]" + "'", str11, "[-1, 10, 4, 4, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 10, 5, 5, 10, -1]" + "'", str12, "[-1, 10, 5, 5, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 6, 6, 10, -1]" + "'", str13, "[-1, 10, 6, 6, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 7, 7, 10, -1]" + "'", str14, "[-1, 10, 7, 7, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 10, 8, 8, 10, -1]" + "'", str15, "[-1, 10, 8, 8, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 10, 9, 9, 10, -1]" + "'", str16, "[-1, 10, 9, 9, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 11, 0, 0, 11, -1]" + "'", str17, "[-1, 11, 0, 0, 11, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 11, 1, 1, 11, -1]" + "'", str18, "[-1, 11, 1, 1, 11, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 11, 2, 2, 11, -1]" + "'", str19, "[-1, 11, 2, 2, 11, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 11, 3, 3, 11, -1]" + "'", str20, "[-1, 11, 3, 3, 11, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 11, 4, 4, 11, -1]" + "'", str21, "[-1, 11, 4, 4, 11, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 11, 5, 5, 11, -1]" + "'", str22, "[-1, 11, 5, 5, 11, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 11, 6, 6, 11, -1]" + "'", str23, "[-1, 11, 6, 6, 11, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 11, 7, 7, 11, -1]" + "'", str24, "[-1, 11, 7, 7, 11, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 11, 8, 8, 11, -1]" + "'", str25, "[-1, 11, 8, 8, 11, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 11, 9, 9, 11, -1]" + "'", str26, "[-1, 11, 9, 9, 11, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 12, 0, 0, 12, -1]" + "'", str27, "[-1, 12, 0, 0, 12, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 12, 1, 1, 12, -1]" + "'", str28, "[-1, 12, 1, 1, 12, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 12, 2, 2, 12, -1]" + "'", str29, "[-1, 12, 2, 2, 12, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 12, 3, 3, 12, -1]" + "'", str30, "[-1, 12, 3, 3, 12, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 12, 4, 4, 12, -1]" + "'", str31, "[-1, 12, 4, 4, 12, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 12, 5, 5, 12, -1]" + "'", str32, "[-1, 12, 5, 5, 12, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 12, 6, 6, 12, -1]" + "'", str33, "[-1, 12, 6, 6, 12, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 12, 7, 7, 12, -1]" + "'", str34, "[-1, 12, 7, 7, 12, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 12, 8, 8, 12, -1]" + "'", str35, "[-1, 12, 8, 8, 12, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 12, 9, 9, 12, -1]" + "'", str36, "[-1, 12, 9, 9, 12, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 13, 0, 0, 13, -1]" + "'", str37, "[-1, 13, 0, 0, 13, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 13, 1, 1, 13, -1]" + "'", str38, "[-1, 13, 1, 1, 13, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 13, 2, 2, 13, -1]" + "'", str39, "[-1, 13, 2, 2, 13, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 13, 3, 3, 13, -1]" + "'", str40, "[-1, 13, 3, 3, 13, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 13, 4, 4, 13, -1]" + "'", str41, "[-1, 13, 4, 4, 13, -1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1529");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass23 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1530");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass10 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1531");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass35 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[133]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1532");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass22 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1533");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass29 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1534");
        int[] intArray3 = new int[] { (byte) 1, (short) 0, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass53 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1535");
        int[] intArray4 = new int[] { '4', (byte) -1, 100, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass54 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 48, 149, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 101, 0]" + "'", str5, "[52, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 102, 0]" + "'", str6, "[52, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 103, 0]" + "'", str7, "[52, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 104, 0]" + "'", str8, "[52, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 105, 0]" + "'", str9, "[52, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 106, 0]" + "'", str10, "[52, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 107, 0]" + "'", str11, "[52, 6, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 108, 0]" + "'", str12, "[52, 7, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 109, 0]" + "'", str13, "[52, 8, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 110, 0]" + "'", str14, "[52, 9, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 111, 0]" + "'", str15, "[52, 10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 112, 0]" + "'", str16, "[52, 11, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 113, 0]" + "'", str17, "[52, 12, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 114, 0]" + "'", str18, "[52, 13, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 115, 0]" + "'", str19, "[52, 14, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 116, 0]" + "'", str20, "[52, 15, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 117, 0]" + "'", str21, "[52, 16, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 118, 0]" + "'", str22, "[52, 17, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 119, 0]" + "'", str23, "[52, 18, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 120, 0]" + "'", str24, "[52, 19, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 121, 0]" + "'", str25, "[52, 20, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 122, 0]" + "'", str26, "[52, 21, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 123, 0]" + "'", str27, "[52, 22, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 124, 0]" + "'", str28, "[52, 23, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 125, 0]" + "'", str29, "[52, 24, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 126, 0]" + "'", str30, "[52, 25, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 127, 0]" + "'", str31, "[52, 26, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 128, 0]" + "'", str32, "[52, 27, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 129, 0]" + "'", str33, "[52, 28, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 130, 0]" + "'", str34, "[52, 29, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 131, 0]" + "'", str35, "[52, 30, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 132, 0]" + "'", str36, "[52, 31, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 133, 0]" + "'", str37, "[52, 32, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 134, 0]" + "'", str38, "[52, 33, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 135, 0]" + "'", str39, "[52, 34, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 136, 0]" + "'", str40, "[52, 35, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 137, 0]" + "'", str41, "[52, 36, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 138, 0]" + "'", str42, "[52, 37, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 139, 0]" + "'", str43, "[52, 38, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 140, 0]" + "'", str44, "[52, 39, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 141, 0]" + "'", str45, "[52, 40, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 142, 0]" + "'", str46, "[52, 41, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 143, 0]" + "'", str47, "[52, 42, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 144, 0]" + "'", str48, "[52, 43, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 145, 0]" + "'", str49, "[52, 44, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 146, 0]" + "'", str50, "[52, 45, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 147, 0]" + "'", str51, "[52, 46, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 148, 0]" + "'", str52, "[52, 47, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 149, 0]" + "'", str53, "[52, 48, 149, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1536");
        int[] intArray3 = new int[] { (byte) -1, (byte) 0, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass47 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 1, 0]" + "'", str4, "[-1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 0]" + "'", str5, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 0]" + "'", str6, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 0]" + "'", str7, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 0]" + "'", str8, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 0]" + "'", str9, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 0]" + "'", str10, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 0]" + "'", str11, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 0]" + "'", str12, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 0, 1]" + "'", str13, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 1]" + "'", str14, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 1]" + "'", str15, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 3, 1]" + "'", str16, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 4, 1]" + "'", str17, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 5, 1]" + "'", str18, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 6, 1]" + "'", str19, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 7, 1]" + "'", str20, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 8, 1]" + "'", str21, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 9, 1]" + "'", str22, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 2]" + "'", str23, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 2]" + "'", str24, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 2, 2]" + "'", str25, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2]" + "'", str26, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 4, 2]" + "'", str27, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 5, 2]" + "'", str28, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 6, 2]" + "'", str29, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 7, 2]" + "'", str30, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 8, 2]" + "'", str31, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 9, 2]" + "'", str32, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 0, 3]" + "'", str33, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 1, 3]" + "'", str34, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2, 3]" + "'", str35, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 3, 3]" + "'", str36, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 4, 3]" + "'", str37, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 5, 3]" + "'", str38, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 6, 3]" + "'", str39, "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 7, 3]" + "'", str40, "[2, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 8, 3]" + "'", str41, "[2, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 9, 3]" + "'", str42, "[2, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 0, 4]" + "'", str43, "[3, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 1, 4]" + "'", str44, "[3, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 2, 4]" + "'", str45, "[3, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3, 4]" + "'", str46, "[3, 3, 4]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1537");
        int[] intArray4 = new int[] { (-1), '4', (byte) 100, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass60 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 107, 155, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 53, 101, 100]" + "'", str5, "[-1, 53, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 54, 102, 100]" + "'", str6, "[-1, 54, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 55, 103, 100]" + "'", str7, "[-1, 55, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 56, 104, 100]" + "'", str8, "[-1, 56, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 57, 105, 100]" + "'", str9, "[-1, 57, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 58, 106, 100]" + "'", str10, "[-1, 58, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 59, 107, 100]" + "'", str11, "[-1, 59, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 60, 108, 100]" + "'", str12, "[-1, 60, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 61, 109, 100]" + "'", str13, "[-1, 61, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 62, 110, 100]" + "'", str14, "[-1, 62, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 63, 111, 100]" + "'", str15, "[-1, 63, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 64, 112, 100]" + "'", str16, "[-1, 64, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 65, 113, 100]" + "'", str17, "[-1, 65, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 66, 114, 100]" + "'", str18, "[-1, 66, 114, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 67, 115, 100]" + "'", str19, "[-1, 67, 115, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 68, 116, 100]" + "'", str20, "[-1, 68, 116, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 69, 117, 100]" + "'", str21, "[-1, 69, 117, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 70, 118, 100]" + "'", str22, "[-1, 70, 118, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 71, 119, 100]" + "'", str23, "[-1, 71, 119, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 72, 120, 100]" + "'", str24, "[-1, 72, 120, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 73, 121, 100]" + "'", str25, "[-1, 73, 121, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 74, 122, 100]" + "'", str26, "[-1, 74, 122, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 75, 123, 100]" + "'", str27, "[-1, 75, 123, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 76, 124, 100]" + "'", str28, "[-1, 76, 124, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 77, 125, 100]" + "'", str29, "[-1, 77, 125, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 78, 126, 100]" + "'", str30, "[-1, 78, 126, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 79, 127, 100]" + "'", str31, "[-1, 79, 127, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 80, 128, 100]" + "'", str32, "[-1, 80, 128, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 81, 129, 100]" + "'", str33, "[-1, 81, 129, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 82, 130, 100]" + "'", str34, "[-1, 82, 130, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 83, 131, 100]" + "'", str35, "[-1, 83, 131, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 84, 132, 100]" + "'", str36, "[-1, 84, 132, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 85, 133, 100]" + "'", str37, "[-1, 85, 133, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 86, 134, 100]" + "'", str38, "[-1, 86, 134, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 87, 135, 100]" + "'", str39, "[-1, 87, 135, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 88, 136, 100]" + "'", str40, "[-1, 88, 136, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 89, 137, 100]" + "'", str41, "[-1, 89, 137, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 90, 138, 100]" + "'", str42, "[-1, 90, 138, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 91, 139, 100]" + "'", str43, "[-1, 91, 139, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 92, 140, 100]" + "'", str44, "[-1, 92, 140, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 93, 141, 100]" + "'", str45, "[-1, 93, 141, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 94, 142, 100]" + "'", str46, "[-1, 94, 142, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 95, 143, 100]" + "'", str47, "[-1, 95, 143, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 96, 144, 100]" + "'", str48, "[-1, 96, 144, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 97, 145, 100]" + "'", str49, "[-1, 97, 145, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 98, 146, 100]" + "'", str50, "[-1, 98, 146, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 99, 147, 100]" + "'", str51, "[-1, 99, 147, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 148, 100]" + "'", str52, "[-1, 100, 148, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 101, 149, 100]" + "'", str53, "[-1, 101, 149, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 102, 150, 100]" + "'", str54, "[-1, 102, 150, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 103, 151, 100]" + "'", str55, "[-1, 103, 151, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 104, 152, 100]" + "'", str56, "[-1, 104, 152, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 105, 153, 100]" + "'", str57, "[-1, 105, 153, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 106, 154, 100]" + "'", str58, "[-1, 106, 154, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 107, 155, 100]" + "'", str59, "[-1, 107, 155, 100]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1538");
        int[] intArray3 = new int[] { ' ', 1, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass40 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 7, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 2, -1]" + "'", str4, "[32, 2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 3, -1]" + "'", str5, "[32, 3, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 4, -1]" + "'", str6, "[32, 4, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 5, -1]" + "'", str7, "[32, 5, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 6, -1]" + "'", str8, "[32, 6, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 7, -1]" + "'", str9, "[32, 7, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 8, -1]" + "'", str10, "[32, 8, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 9, -1]" + "'", str11, "[32, 9, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[33, 0, 0]" + "'", str12, "[33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 1, 0]" + "'", str13, "[33, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 2, 0]" + "'", str14, "[33, 2, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 3, 0]" + "'", str15, "[33, 3, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 4, 0]" + "'", str16, "[33, 4, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 5, 0]" + "'", str17, "[33, 5, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 6, 0]" + "'", str18, "[33, 6, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 7, 0]" + "'", str19, "[33, 7, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 8, 0]" + "'", str20, "[33, 8, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 9, 0]" + "'", str21, "[33, 9, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[34, 0, 1]" + "'", str22, "[34, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 1, 1]" + "'", str23, "[34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 2, 1]" + "'", str24, "[34, 2, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 3, 1]" + "'", str25, "[34, 3, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 4, 1]" + "'", str26, "[34, 4, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 5, 1]" + "'", str27, "[34, 5, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 6, 1]" + "'", str28, "[34, 6, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 7, 1]" + "'", str29, "[34, 7, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 8, 1]" + "'", str30, "[34, 8, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 9, 1]" + "'", str31, "[34, 9, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 0, 2]" + "'", str32, "[35, 0, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 2]" + "'", str33, "[35, 1, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 2]" + "'", str34, "[35, 2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 3, 2]" + "'", str35, "[35, 3, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 4, 2]" + "'", str36, "[35, 4, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 5, 2]" + "'", str37, "[35, 5, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 6, 2]" + "'", str38, "[35, 6, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 7, 2]" + "'", str39, "[35, 7, 2]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1539");
        int[] intArray5 = new int[] { (short) 100, 100, (short) 1, (byte) -1, (short) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass38 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 103, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, -1, 1]" + "'", str6, "[100, 100, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, -1, 1]" + "'", str7, "[100, 100, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, -1, 1]" + "'", str8, "[100, 100, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, -1, 1]" + "'", str9, "[100, 100, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, -1, 1]" + "'", str10, "[100, 100, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, -1, 1]" + "'", str11, "[100, 100, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, -1, 1]" + "'", str12, "[100, 100, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, -1, 1]" + "'", str13, "[100, 100, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 0, 1]" + "'", str14, "[100, 101, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 0, 1]" + "'", str15, "[100, 101, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 0, 1]" + "'", str16, "[100, 101, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 0, 1]" + "'", str17, "[100, 101, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 0, 1]" + "'", str18, "[100, 101, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 0, 1]" + "'", str19, "[100, 101, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 0, 1]" + "'", str20, "[100, 101, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 0, 1]" + "'", str21, "[100, 101, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 0, 1]" + "'", str22, "[100, 101, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 0, 1]" + "'", str23, "[100, 101, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 1, 1]" + "'", str24, "[100, 102, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 1, 1]" + "'", str25, "[100, 102, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 1, 1]" + "'", str26, "[100, 102, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 1, 1]" + "'", str27, "[100, 102, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 1, 1]" + "'", str28, "[100, 102, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 1, 1]" + "'", str29, "[100, 102, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 1, 1]" + "'", str30, "[100, 102, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 1, 1]" + "'", str31, "[100, 102, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 1, 1]" + "'", str32, "[100, 102, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 1, 1]" + "'", str33, "[100, 102, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 2, 1]" + "'", str34, "[100, 103, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 2, 1]" + "'", str35, "[100, 103, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 2, 1]" + "'", str36, "[100, 103, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 2, 1]" + "'", str37, "[100, 103, 3, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1540");
        int[] intArray3 = new int[] { (byte) -1, (byte) 0, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass45 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 1, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 1, 0]" + "'", str4, "[-1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 0]" + "'", str5, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 0]" + "'", str6, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 0]" + "'", str7, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 0]" + "'", str8, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 0]" + "'", str9, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 0]" + "'", str10, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 0]" + "'", str11, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 0]" + "'", str12, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 0, 1]" + "'", str13, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 1]" + "'", str14, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 1]" + "'", str15, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 3, 1]" + "'", str16, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 4, 1]" + "'", str17, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 5, 1]" + "'", str18, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 6, 1]" + "'", str19, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 7, 1]" + "'", str20, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 8, 1]" + "'", str21, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 9, 1]" + "'", str22, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 2]" + "'", str23, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 2]" + "'", str24, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 2, 2]" + "'", str25, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2]" + "'", str26, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 4, 2]" + "'", str27, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 5, 2]" + "'", str28, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 6, 2]" + "'", str29, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 7, 2]" + "'", str30, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 8, 2]" + "'", str31, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 9, 2]" + "'", str32, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 0, 3]" + "'", str33, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 1, 3]" + "'", str34, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2, 3]" + "'", str35, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 3, 3]" + "'", str36, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 4, 3]" + "'", str37, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 5, 3]" + "'", str38, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 6, 3]" + "'", str39, "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 7, 3]" + "'", str40, "[2, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 8, 3]" + "'", str41, "[2, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 9, 3]" + "'", str42, "[2, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 0, 4]" + "'", str43, "[3, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 1, 4]" + "'", str44, "[3, 1, 4]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1541");
        int[] intArray4 = new int[] { 'a', 100, (byte) 0, '4' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass57 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 2, 2, 57]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 101, 1, 52]" + "'", str5, "[97, 101, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 102, 2, 52]" + "'", str6, "[97, 102, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 103, 3, 52]" + "'", str7, "[97, 103, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 104, 4, 52]" + "'", str8, "[97, 104, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 105, 5, 52]" + "'", str9, "[97, 105, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 106, 6, 52]" + "'", str10, "[97, 106, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 107, 7, 52]" + "'", str11, "[97, 107, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 108, 8, 52]" + "'", str12, "[97, 108, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 109, 9, 52]" + "'", str13, "[97, 109, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[98, 0, 0, 53]" + "'", str14, "[98, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 1, 1, 53]" + "'", str15, "[98, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 2, 2, 53]" + "'", str16, "[98, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 3, 3, 53]" + "'", str17, "[98, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 4, 4, 53]" + "'", str18, "[98, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 5, 5, 53]" + "'", str19, "[98, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 6, 6, 53]" + "'", str20, "[98, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 7, 7, 53]" + "'", str21, "[98, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 8, 8, 53]" + "'", str22, "[98, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 9, 9, 53]" + "'", str23, "[98, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[99, 0, 0, 54]" + "'", str24, "[99, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 1, 1, 54]" + "'", str25, "[99, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 2, 2, 54]" + "'", str26, "[99, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 3, 3, 54]" + "'", str27, "[99, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 4, 4, 54]" + "'", str28, "[99, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 5, 5, 54]" + "'", str29, "[99, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 6, 6, 54]" + "'", str30, "[99, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 7, 7, 54]" + "'", str31, "[99, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 8, 8, 54]" + "'", str32, "[99, 8, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 9, 9, 54]" + "'", str33, "[99, 9, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 0, 55]" + "'", str34, "[100, 0, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 1, 1, 55]" + "'", str35, "[100, 1, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 2, 2, 55]" + "'", str36, "[100, 2, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 3, 55]" + "'", str37, "[100, 3, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 4, 4, 55]" + "'", str38, "[100, 4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 5, 5, 55]" + "'", str39, "[100, 5, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 6, 6, 55]" + "'", str40, "[100, 6, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 7, 7, 55]" + "'", str41, "[100, 7, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 8, 8, 55]" + "'", str42, "[100, 8, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 9, 9, 55]" + "'", str43, "[100, 9, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[101, 0, 0, 56]" + "'", str44, "[101, 0, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 1, 1, 56]" + "'", str45, "[101, 1, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 2, 2, 56]" + "'", str46, "[101, 2, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 3, 3, 56]" + "'", str47, "[101, 3, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 4, 4, 56]" + "'", str48, "[101, 4, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 5, 5, 56]" + "'", str49, "[101, 5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 6, 6, 56]" + "'", str50, "[101, 6, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 7, 7, 56]" + "'", str51, "[101, 7, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 8, 8, 56]" + "'", str52, "[101, 8, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 9, 9, 56]" + "'", str53, "[101, 9, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[102, 0, 0, 57]" + "'", str54, "[102, 0, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 1, 1, 57]" + "'", str55, "[102, 1, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 2, 2, 57]" + "'", str56, "[102, 2, 2, 57]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1542");
        int[] intArray4 = new int[] { '4', (byte) -1, 100, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass53 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 47, 148, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 101, 0]" + "'", str5, "[52, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 102, 0]" + "'", str6, "[52, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 103, 0]" + "'", str7, "[52, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 104, 0]" + "'", str8, "[52, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 105, 0]" + "'", str9, "[52, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 106, 0]" + "'", str10, "[52, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 107, 0]" + "'", str11, "[52, 6, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 108, 0]" + "'", str12, "[52, 7, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 109, 0]" + "'", str13, "[52, 8, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 110, 0]" + "'", str14, "[52, 9, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 111, 0]" + "'", str15, "[52, 10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 112, 0]" + "'", str16, "[52, 11, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 113, 0]" + "'", str17, "[52, 12, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 114, 0]" + "'", str18, "[52, 13, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 115, 0]" + "'", str19, "[52, 14, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 116, 0]" + "'", str20, "[52, 15, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 117, 0]" + "'", str21, "[52, 16, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 118, 0]" + "'", str22, "[52, 17, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 119, 0]" + "'", str23, "[52, 18, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 120, 0]" + "'", str24, "[52, 19, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 121, 0]" + "'", str25, "[52, 20, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 122, 0]" + "'", str26, "[52, 21, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 123, 0]" + "'", str27, "[52, 22, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 124, 0]" + "'", str28, "[52, 23, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 125, 0]" + "'", str29, "[52, 24, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 126, 0]" + "'", str30, "[52, 25, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 127, 0]" + "'", str31, "[52, 26, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 128, 0]" + "'", str32, "[52, 27, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 129, 0]" + "'", str33, "[52, 28, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 130, 0]" + "'", str34, "[52, 29, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 131, 0]" + "'", str35, "[52, 30, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 132, 0]" + "'", str36, "[52, 31, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 133, 0]" + "'", str37, "[52, 32, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 134, 0]" + "'", str38, "[52, 33, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 135, 0]" + "'", str39, "[52, 34, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 136, 0]" + "'", str40, "[52, 35, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 137, 0]" + "'", str41, "[52, 36, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 138, 0]" + "'", str42, "[52, 37, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 139, 0]" + "'", str43, "[52, 38, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 140, 0]" + "'", str44, "[52, 39, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 141, 0]" + "'", str45, "[52, 40, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 142, 0]" + "'", str46, "[52, 41, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 143, 0]" + "'", str47, "[52, 42, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 144, 0]" + "'", str48, "[52, 43, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 145, 0]" + "'", str49, "[52, 44, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 146, 0]" + "'", str50, "[52, 45, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 147, 0]" + "'", str51, "[52, 46, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 148, 0]" + "'", str52, "[52, 47, 148, 0]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1543");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass11 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 106, 7, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 7, 100]" + "'", str10, "[0, 106, 7, 100]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1544");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass38 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[136]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1545");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass11 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1546");
        int[] intArray4 = new int[] { 'a', (short) -1, '#', 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass46 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 40, 76, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 0, 36, 97]" + "'", str5, "[97, 0, 36, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 1, 37, 97]" + "'", str6, "[97, 1, 37, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 2, 38, 97]" + "'", str7, "[97, 2, 38, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 3, 39, 97]" + "'", str8, "[97, 3, 39, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 4, 40, 97]" + "'", str9, "[97, 4, 40, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 5, 41, 97]" + "'", str10, "[97, 5, 41, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 6, 42, 97]" + "'", str11, "[97, 6, 42, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 7, 43, 97]" + "'", str12, "[97, 7, 43, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 8, 44, 97]" + "'", str13, "[97, 8, 44, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 9, 45, 97]" + "'", str14, "[97, 9, 45, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 10, 46, 97]" + "'", str15, "[97, 10, 46, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 11, 47, 97]" + "'", str16, "[97, 11, 47, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 12, 48, 97]" + "'", str17, "[97, 12, 48, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 13, 49, 97]" + "'", str18, "[97, 13, 49, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 14, 50, 97]" + "'", str19, "[97, 14, 50, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 15, 51, 97]" + "'", str20, "[97, 15, 51, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 16, 52, 97]" + "'", str21, "[97, 16, 52, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 17, 53, 97]" + "'", str22, "[97, 17, 53, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 18, 54, 97]" + "'", str23, "[97, 18, 54, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 19, 55, 97]" + "'", str24, "[97, 19, 55, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 20, 56, 97]" + "'", str25, "[97, 20, 56, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 21, 57, 97]" + "'", str26, "[97, 21, 57, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 22, 58, 97]" + "'", str27, "[97, 22, 58, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 23, 59, 97]" + "'", str28, "[97, 23, 59, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 24, 60, 97]" + "'", str29, "[97, 24, 60, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 25, 61, 97]" + "'", str30, "[97, 25, 61, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 26, 62, 97]" + "'", str31, "[97, 26, 62, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 27, 63, 97]" + "'", str32, "[97, 27, 63, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 28, 64, 97]" + "'", str33, "[97, 28, 64, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 29, 65, 97]" + "'", str34, "[97, 29, 65, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 30, 66, 97]" + "'", str35, "[97, 30, 66, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 31, 67, 97]" + "'", str36, "[97, 31, 67, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 32, 68, 97]" + "'", str37, "[97, 32, 68, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 33, 69, 97]" + "'", str38, "[97, 33, 69, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 34, 70, 97]" + "'", str39, "[97, 34, 70, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 35, 71, 97]" + "'", str40, "[97, 35, 71, 97]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 36, 72, 97]" + "'", str41, "[97, 36, 72, 97]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 37, 73, 97]" + "'", str42, "[97, 37, 73, 97]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 38, 74, 97]" + "'", str43, "[97, 38, 74, 97]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 39, 75, 97]" + "'", str44, "[97, 39, 75, 97]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 40, 76, 97]" + "'", str45, "[97, 40, 76, 97]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1547");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass23 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 9, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 101]" + "'", str22, "[2, 9, 101]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1548");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 58, 1, 100]" + "'", str11, "[100, 10, 58, 1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 59, 1, 100]" + "'", str12, "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1549");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass22 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1550");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass50 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[83]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1551");
        int[] intArray3 = new int[] { (short) -1, 100, (short) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass58 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 154, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 101, 10]" + "'", str4, "[-1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 102, 10]" + "'", str5, "[-1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 103, 10]" + "'", str6, "[-1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 104, 10]" + "'", str7, "[-1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 105, 10]" + "'", str8, "[-1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 106, 10]" + "'", str9, "[-1, 106, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 107, 10]" + "'", str10, "[-1, 107, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 108, 10]" + "'", str11, "[-1, 108, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 109, 10]" + "'", str12, "[-1, 109, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 110, 10]" + "'", str13, "[-1, 110, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 111, 10]" + "'", str14, "[-1, 111, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 112, 10]" + "'", str15, "[-1, 112, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 113, 10]" + "'", str16, "[-1, 113, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 114, 10]" + "'", str17, "[-1, 114, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 115, 10]" + "'", str18, "[-1, 115, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 116, 10]" + "'", str19, "[-1, 116, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 117, 10]" + "'", str20, "[-1, 117, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 118, 10]" + "'", str21, "[-1, 118, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 119, 10]" + "'", str22, "[-1, 119, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 120, 10]" + "'", str23, "[-1, 120, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 121, 10]" + "'", str24, "[-1, 121, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 122, 10]" + "'", str25, "[-1, 122, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 123, 10]" + "'", str26, "[-1, 123, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 124, 10]" + "'", str27, "[-1, 124, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 125, 10]" + "'", str28, "[-1, 125, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 126, 10]" + "'", str29, "[-1, 126, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 127, 10]" + "'", str30, "[-1, 127, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 128, 10]" + "'", str31, "[-1, 128, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 129, 10]" + "'", str32, "[-1, 129, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 130, 10]" + "'", str33, "[-1, 130, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 131, 10]" + "'", str34, "[-1, 131, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 132, 10]" + "'", str35, "[-1, 132, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 133, 10]" + "'", str36, "[-1, 133, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 134, 10]" + "'", str37, "[-1, 134, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 135, 10]" + "'", str38, "[-1, 135, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 136, 10]" + "'", str39, "[-1, 136, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 137, 10]" + "'", str40, "[-1, 137, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 138, 10]" + "'", str41, "[-1, 138, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 139, 10]" + "'", str42, "[-1, 139, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 140, 10]" + "'", str43, "[-1, 140, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 141, 10]" + "'", str44, "[-1, 141, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 142, 10]" + "'", str45, "[-1, 142, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 143, 10]" + "'", str46, "[-1, 143, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 144, 10]" + "'", str47, "[-1, 144, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 145, 10]" + "'", str48, "[-1, 145, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 146, 10]" + "'", str49, "[-1, 146, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 147, 10]" + "'", str50, "[-1, 147, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 148, 10]" + "'", str51, "[-1, 148, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 149, 10]" + "'", str52, "[-1, 149, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 150, 10]" + "'", str53, "[-1, 150, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 151, 10]" + "'", str54, "[-1, 151, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 152, 10]" + "'", str55, "[-1, 152, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 153, 10]" + "'", str56, "[-1, 153, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 154, 10]" + "'", str57, "[-1, 154, 10]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1552");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass9 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1553");
        int[] intArray2 = new int[] { (short) -1, (short) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass52 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[9, 9]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 1]" + "'", str3, "[0, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 2]" + "'", str4, "[1, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 3]" + "'", str5, "[2, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 4]" + "'", str6, "[3, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 5]" + "'", str7, "[4, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 6]" + "'", str8, "[5, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 7]" + "'", str9, "[6, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 8]" + "'", str10, "[7, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[8, 9]" + "'", str11, "[8, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1554");
        int[] intArray2 = new int[] { '4', (short) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass56 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 2]" + "'", str3, "[53, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 3]" + "'", str4, "[54, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 4]" + "'", str5, "[55, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 5]" + "'", str6, "[56, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 6]" + "'", str7, "[57, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 7]" + "'", str8, "[58, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 8]" + "'", str9, "[59, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 9]" + "'", str10, "[60, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 0, 1]" + "'", str21, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 0, 1]" + "'", str31, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 3]" + "'", str34, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 4]" + "'", str35, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5, 5]" + "'", str36, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6, 6]" + "'", str37, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7, 7]" + "'", str38, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8, 8]" + "'", str39, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9, 9]" + "'", str40, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 0, 1]" + "'", str41, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 2]" + "'", str43, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 3]" + "'", str44, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 4]" + "'", str45, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 5]" + "'", str46, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6, 6]" + "'", str47, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7, 7]" + "'", str48, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8, 8]" + "'", str49, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9, 9]" + "'", str50, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 0, 1]" + "'", str51, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2, 2]" + "'", str53, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3, 3]" + "'", str54, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 4]" + "'", str55, "[4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1555");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass20 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1556");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass42 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1557");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass9 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1558");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass53 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1559");
        int[] intArray6 = new int[] { (short) -1, (byte) -1, '4', '4', (short) -1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass59 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, -1, 104, 104, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, -1, 53, 53, -1, 0]" + "'", str7, "[-1, -1, 53, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, -1, 54, 54, -1, 0]" + "'", str8, "[-1, -1, 54, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, -1, 55, 55, -1, 0]" + "'", str9, "[-1, -1, 55, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, -1, 56, 56, -1, 0]" + "'", str10, "[-1, -1, 56, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, -1, 57, 57, -1, 0]" + "'", str11, "[-1, -1, 57, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, -1, 58, 58, -1, 0]" + "'", str12, "[-1, -1, 58, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, -1, 59, 59, -1, 0]" + "'", str13, "[-1, -1, 59, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, -1, 60, 60, -1, 0]" + "'", str14, "[-1, -1, 60, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, -1, 61, 61, -1, 0]" + "'", str15, "[-1, -1, 61, 61, -1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, -1, 62, 62, -1, 0]" + "'", str16, "[-1, -1, 62, 62, -1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, -1, 63, 63, -1, 0]" + "'", str17, "[-1, -1, 63, 63, -1, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, -1, 64, 64, -1, 0]" + "'", str18, "[-1, -1, 64, 64, -1, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, -1, 65, 65, -1, 0]" + "'", str19, "[-1, -1, 65, 65, -1, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, -1, 66, 66, -1, 0]" + "'", str20, "[-1, -1, 66, 66, -1, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, -1, 67, 67, -1, 0]" + "'", str21, "[-1, -1, 67, 67, -1, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, -1, 68, 68, -1, 0]" + "'", str22, "[-1, -1, 68, 68, -1, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, -1, 69, 69, -1, 0]" + "'", str23, "[-1, -1, 69, 69, -1, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, -1, 70, 70, -1, 0]" + "'", str24, "[-1, -1, 70, 70, -1, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, -1, 71, 71, -1, 0]" + "'", str25, "[-1, -1, 71, 71, -1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, -1, 72, 72, -1, 0]" + "'", str26, "[-1, -1, 72, 72, -1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, -1, 73, 73, -1, 0]" + "'", str27, "[-1, -1, 73, 73, -1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, -1, 74, 74, -1, 0]" + "'", str28, "[-1, -1, 74, 74, -1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, -1, 75, 75, -1, 0]" + "'", str29, "[-1, -1, 75, 75, -1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, -1, 76, 76, -1, 0]" + "'", str30, "[-1, -1, 76, 76, -1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, -1, 77, 77, -1, 0]" + "'", str31, "[-1, -1, 77, 77, -1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, -1, 78, 78, -1, 0]" + "'", str32, "[-1, -1, 78, 78, -1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, -1, 79, 79, -1, 0]" + "'", str33, "[-1, -1, 79, 79, -1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, -1, 80, 80, -1, 0]" + "'", str34, "[-1, -1, 80, 80, -1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, -1, 81, 81, -1, 0]" + "'", str35, "[-1, -1, 81, 81, -1, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, -1, 82, 82, -1, 0]" + "'", str36, "[-1, -1, 82, 82, -1, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, -1, 83, 83, -1, 0]" + "'", str37, "[-1, -1, 83, 83, -1, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, -1, 84, 84, -1, 0]" + "'", str38, "[-1, -1, 84, 84, -1, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, -1, 85, 85, -1, 0]" + "'", str39, "[-1, -1, 85, 85, -1, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, -1, 86, 86, -1, 0]" + "'", str40, "[-1, -1, 86, 86, -1, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, -1, 87, 87, -1, 0]" + "'", str41, "[-1, -1, 87, 87, -1, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, -1, 88, 88, -1, 0]" + "'", str42, "[-1, -1, 88, 88, -1, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, -1, 89, 89, -1, 0]" + "'", str43, "[-1, -1, 89, 89, -1, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, -1, 90, 90, -1, 0]" + "'", str44, "[-1, -1, 90, 90, -1, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, -1, 91, 91, -1, 0]" + "'", str45, "[-1, -1, 91, 91, -1, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, -1, 92, 92, -1, 0]" + "'", str46, "[-1, -1, 92, 92, -1, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, -1, 93, 93, -1, 0]" + "'", str47, "[-1, -1, 93, 93, -1, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, -1, 94, 94, -1, 0]" + "'", str48, "[-1, -1, 94, 94, -1, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, -1, 95, 95, -1, 0]" + "'", str49, "[-1, -1, 95, 95, -1, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, -1, 96, 96, -1, 0]" + "'", str50, "[-1, -1, 96, 96, -1, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, -1, 97, 97, -1, 0]" + "'", str51, "[-1, -1, 97, 97, -1, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, -1, 98, 98, -1, 0]" + "'", str52, "[-1, -1, 98, 98, -1, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, -1, 99, 99, -1, 0]" + "'", str53, "[-1, -1, 99, 99, -1, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, -1, 100, 100, -1, 0]" + "'", str54, "[-1, -1, 100, 100, -1, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, -1, 101, 101, -1, 0]" + "'", str55, "[-1, -1, 101, 101, -1, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, -1, 102, 102, -1, 0]" + "'", str56, "[-1, -1, 102, 102, -1, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, -1, 103, 103, -1, 0]" + "'", str57, "[-1, -1, 103, 103, -1, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, -1, 104, 104, -1, 0]" + "'", str58, "[-1, -1, 104, 104, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1560");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass30 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1561");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass56 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1562");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass43 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1563");
        int[] intArray4 = new int[] { (short) 100, (byte) 0, 'a', (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass58 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 53, 150, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 1, 98, 0]" + "'", str5, "[100, 1, 98, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 2, 99, 0]" + "'", str6, "[100, 2, 99, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 3, 100, 0]" + "'", str7, "[100, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 4, 101, 0]" + "'", str8, "[100, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 5, 102, 0]" + "'", str9, "[100, 5, 102, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 6, 103, 0]" + "'", str10, "[100, 6, 103, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 7, 104, 0]" + "'", str11, "[100, 7, 104, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 8, 105, 0]" + "'", str12, "[100, 8, 105, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 9, 106, 0]" + "'", str13, "[100, 9, 106, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 107, 0]" + "'", str14, "[100, 10, 107, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 11, 108, 0]" + "'", str15, "[100, 11, 108, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 12, 109, 0]" + "'", str16, "[100, 12, 109, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 13, 110, 0]" + "'", str17, "[100, 13, 110, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 14, 111, 0]" + "'", str18, "[100, 14, 111, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 15, 112, 0]" + "'", str19, "[100, 15, 112, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 16, 113, 0]" + "'", str20, "[100, 16, 113, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 17, 114, 0]" + "'", str21, "[100, 17, 114, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 18, 115, 0]" + "'", str22, "[100, 18, 115, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 19, 116, 0]" + "'", str23, "[100, 19, 116, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 20, 117, 0]" + "'", str24, "[100, 20, 117, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 21, 118, 0]" + "'", str25, "[100, 21, 118, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 22, 119, 0]" + "'", str26, "[100, 22, 119, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 23, 120, 0]" + "'", str27, "[100, 23, 120, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 24, 121, 0]" + "'", str28, "[100, 24, 121, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 25, 122, 0]" + "'", str29, "[100, 25, 122, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 26, 123, 0]" + "'", str30, "[100, 26, 123, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 27, 124, 0]" + "'", str31, "[100, 27, 124, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 28, 125, 0]" + "'", str32, "[100, 28, 125, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 29, 126, 0]" + "'", str33, "[100, 29, 126, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 30, 127, 0]" + "'", str34, "[100, 30, 127, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 31, 128, 0]" + "'", str35, "[100, 31, 128, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 32, 129, 0]" + "'", str36, "[100, 32, 129, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 33, 130, 0]" + "'", str37, "[100, 33, 130, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 34, 131, 0]" + "'", str38, "[100, 34, 131, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 35, 132, 0]" + "'", str39, "[100, 35, 132, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 36, 133, 0]" + "'", str40, "[100, 36, 133, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 37, 134, 0]" + "'", str41, "[100, 37, 134, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 38, 135, 0]" + "'", str42, "[100, 38, 135, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 39, 136, 0]" + "'", str43, "[100, 39, 136, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 40, 137, 0]" + "'", str44, "[100, 40, 137, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 41, 138, 0]" + "'", str45, "[100, 41, 138, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 42, 139, 0]" + "'", str46, "[100, 42, 139, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 43, 140, 0]" + "'", str47, "[100, 43, 140, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 44, 141, 0]" + "'", str48, "[100, 44, 141, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 45, 142, 0]" + "'", str49, "[100, 45, 142, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 46, 143, 0]" + "'", str50, "[100, 46, 143, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 47, 144, 0]" + "'", str51, "[100, 47, 144, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 48, 145, 0]" + "'", str52, "[100, 48, 145, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 49, 146, 0]" + "'", str53, "[100, 49, 146, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 50, 147, 0]" + "'", str54, "[100, 50, 147, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 51, 148, 0]" + "'", str55, "[100, 51, 148, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 52, 149, 0]" + "'", str56, "[100, 52, 149, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 53, 150, 0]" + "'", str57, "[100, 53, 150, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1564");
        int[] intArray3 = new int[] { ' ', 1, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass43 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[36, 0, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 2, -1]" + "'", str4, "[32, 2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 3, -1]" + "'", str5, "[32, 3, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 4, -1]" + "'", str6, "[32, 4, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 5, -1]" + "'", str7, "[32, 5, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 6, -1]" + "'", str8, "[32, 6, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 7, -1]" + "'", str9, "[32, 7, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 8, -1]" + "'", str10, "[32, 8, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 9, -1]" + "'", str11, "[32, 9, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[33, 0, 0]" + "'", str12, "[33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 1, 0]" + "'", str13, "[33, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 2, 0]" + "'", str14, "[33, 2, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 3, 0]" + "'", str15, "[33, 3, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 4, 0]" + "'", str16, "[33, 4, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 5, 0]" + "'", str17, "[33, 5, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 6, 0]" + "'", str18, "[33, 6, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 7, 0]" + "'", str19, "[33, 7, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 8, 0]" + "'", str20, "[33, 8, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 9, 0]" + "'", str21, "[33, 9, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[34, 0, 1]" + "'", str22, "[34, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 1, 1]" + "'", str23, "[34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 2, 1]" + "'", str24, "[34, 2, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 3, 1]" + "'", str25, "[34, 3, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 4, 1]" + "'", str26, "[34, 4, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 5, 1]" + "'", str27, "[34, 5, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 6, 1]" + "'", str28, "[34, 6, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 7, 1]" + "'", str29, "[34, 7, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 8, 1]" + "'", str30, "[34, 8, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 9, 1]" + "'", str31, "[34, 9, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 0, 2]" + "'", str32, "[35, 0, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 2]" + "'", str33, "[35, 1, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 2]" + "'", str34, "[35, 2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 3, 2]" + "'", str35, "[35, 3, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 4, 2]" + "'", str36, "[35, 4, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 5, 2]" + "'", str37, "[35, 5, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 6, 2]" + "'", str38, "[35, 6, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 7, 2]" + "'", str39, "[35, 7, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 8, 2]" + "'", str40, "[35, 8, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 9, 2]" + "'", str41, "[35, 9, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[36, 0, 3]" + "'", str42, "[36, 0, 3]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1565");
        int[] intArray5 = new int[] { (short) 100, (byte) 10, (byte) 100, 0, (byte) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass45 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 139, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 101, 0, 10]" + "'", str6, "[100, 10, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 102, 0, 10]" + "'", str7, "[100, 10, 102, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 103, 0, 10]" + "'", str8, "[100, 10, 103, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 104, 0, 10]" + "'", str9, "[100, 10, 104, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 105, 0, 10]" + "'", str10, "[100, 10, 105, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 106, 0, 10]" + "'", str11, "[100, 10, 106, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 107, 0, 10]" + "'", str12, "[100, 10, 107, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 108, 0, 10]" + "'", str13, "[100, 10, 108, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 109, 0, 10]" + "'", str14, "[100, 10, 109, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 110, 0, 10]" + "'", str15, "[100, 10, 110, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 111, 0, 10]" + "'", str16, "[100, 10, 111, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 112, 0, 10]" + "'", str17, "[100, 10, 112, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 113, 0, 10]" + "'", str18, "[100, 10, 113, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 114, 0, 10]" + "'", str19, "[100, 10, 114, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 115, 0, 10]" + "'", str20, "[100, 10, 115, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 116, 0, 10]" + "'", str21, "[100, 10, 116, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 117, 0, 10]" + "'", str22, "[100, 10, 117, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 118, 0, 10]" + "'", str23, "[100, 10, 118, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 119, 0, 10]" + "'", str24, "[100, 10, 119, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 120, 0, 10]" + "'", str25, "[100, 10, 120, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 121, 0, 10]" + "'", str26, "[100, 10, 121, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 122, 0, 10]" + "'", str27, "[100, 10, 122, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 123, 0, 10]" + "'", str28, "[100, 10, 123, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 124, 0, 10]" + "'", str29, "[100, 10, 124, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 125, 0, 10]" + "'", str30, "[100, 10, 125, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 126, 0, 10]" + "'", str31, "[100, 10, 126, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 127, 0, 10]" + "'", str32, "[100, 10, 127, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 128, 0, 10]" + "'", str33, "[100, 10, 128, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 129, 0, 10]" + "'", str34, "[100, 10, 129, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 130, 0, 10]" + "'", str35, "[100, 10, 130, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 131, 0, 10]" + "'", str36, "[100, 10, 131, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 132, 0, 10]" + "'", str37, "[100, 10, 132, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 133, 0, 10]" + "'", str38, "[100, 10, 133, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 134, 0, 10]" + "'", str39, "[100, 10, 134, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 135, 0, 10]" + "'", str40, "[100, 10, 135, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 136, 0, 10]" + "'", str41, "[100, 10, 136, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 137, 0, 10]" + "'", str42, "[100, 10, 137, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 138, 0, 10]" + "'", str43, "[100, 10, 138, 0, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 10, 139, 0, 10]" + "'", str44, "[100, 10, 139, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1566");
        int[] intArray3 = new int[] { (short) -1, 100, (short) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass59 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 155, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 101, 10]" + "'", str4, "[-1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 102, 10]" + "'", str5, "[-1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 103, 10]" + "'", str6, "[-1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 104, 10]" + "'", str7, "[-1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 105, 10]" + "'", str8, "[-1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 106, 10]" + "'", str9, "[-1, 106, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 107, 10]" + "'", str10, "[-1, 107, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 108, 10]" + "'", str11, "[-1, 108, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 109, 10]" + "'", str12, "[-1, 109, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 110, 10]" + "'", str13, "[-1, 110, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 111, 10]" + "'", str14, "[-1, 111, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 112, 10]" + "'", str15, "[-1, 112, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 113, 10]" + "'", str16, "[-1, 113, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 114, 10]" + "'", str17, "[-1, 114, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 115, 10]" + "'", str18, "[-1, 115, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 116, 10]" + "'", str19, "[-1, 116, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 117, 10]" + "'", str20, "[-1, 117, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 118, 10]" + "'", str21, "[-1, 118, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 119, 10]" + "'", str22, "[-1, 119, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 120, 10]" + "'", str23, "[-1, 120, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 121, 10]" + "'", str24, "[-1, 121, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 122, 10]" + "'", str25, "[-1, 122, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 123, 10]" + "'", str26, "[-1, 123, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 124, 10]" + "'", str27, "[-1, 124, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 125, 10]" + "'", str28, "[-1, 125, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 126, 10]" + "'", str29, "[-1, 126, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 127, 10]" + "'", str30, "[-1, 127, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 128, 10]" + "'", str31, "[-1, 128, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 129, 10]" + "'", str32, "[-1, 129, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 130, 10]" + "'", str33, "[-1, 130, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 131, 10]" + "'", str34, "[-1, 131, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 132, 10]" + "'", str35, "[-1, 132, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 133, 10]" + "'", str36, "[-1, 133, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 134, 10]" + "'", str37, "[-1, 134, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 135, 10]" + "'", str38, "[-1, 135, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 136, 10]" + "'", str39, "[-1, 136, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 137, 10]" + "'", str40, "[-1, 137, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 138, 10]" + "'", str41, "[-1, 138, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 139, 10]" + "'", str42, "[-1, 139, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 140, 10]" + "'", str43, "[-1, 140, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 141, 10]" + "'", str44, "[-1, 141, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 142, 10]" + "'", str45, "[-1, 142, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 143, 10]" + "'", str46, "[-1, 143, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 144, 10]" + "'", str47, "[-1, 144, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 145, 10]" + "'", str48, "[-1, 145, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 146, 10]" + "'", str49, "[-1, 146, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 147, 10]" + "'", str50, "[-1, 147, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 148, 10]" + "'", str51, "[-1, 148, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 149, 10]" + "'", str52, "[-1, 149, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 150, 10]" + "'", str53, "[-1, 150, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 151, 10]" + "'", str54, "[-1, 151, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 152, 10]" + "'", str55, "[-1, 152, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 153, 10]" + "'", str56, "[-1, 153, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 154, 10]" + "'", str57, "[-1, 154, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 155, 10]" + "'", str58, "[-1, 155, 10]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1567");
        int[] intArray6 = new int[] { '#', (byte) -1, (byte) 1, (-1), (short) 100, 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass10 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, -1, 2, 0, 100, 100]" + "'", str7, "[35, -1, 2, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, -1, 3, 1, 100, 100]" + "'", str8, "[35, -1, 3, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, -1, 4, 2, 100, 100]" + "'", str9, "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1568");
        int[] intArray3 = new int[] { (byte) -1, (byte) 0, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass44 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 0, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 1, 0]" + "'", str4, "[-1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 0]" + "'", str5, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 0]" + "'", str6, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 0]" + "'", str7, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 0]" + "'", str8, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 0]" + "'", str9, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 0]" + "'", str10, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 0]" + "'", str11, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 0]" + "'", str12, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 0, 1]" + "'", str13, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 1]" + "'", str14, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 1]" + "'", str15, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 3, 1]" + "'", str16, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 4, 1]" + "'", str17, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 5, 1]" + "'", str18, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 6, 1]" + "'", str19, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 7, 1]" + "'", str20, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 8, 1]" + "'", str21, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 9, 1]" + "'", str22, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 2]" + "'", str23, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 2]" + "'", str24, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 2, 2]" + "'", str25, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2]" + "'", str26, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 4, 2]" + "'", str27, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 5, 2]" + "'", str28, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 6, 2]" + "'", str29, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 7, 2]" + "'", str30, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 8, 2]" + "'", str31, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 9, 2]" + "'", str32, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 0, 3]" + "'", str33, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 1, 3]" + "'", str34, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2, 3]" + "'", str35, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 3, 3]" + "'", str36, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 4, 3]" + "'", str37, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 5, 3]" + "'", str38, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 6, 3]" + "'", str39, "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 7, 3]" + "'", str40, "[2, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 8, 3]" + "'", str41, "[2, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 9, 3]" + "'", str42, "[2, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 0, 4]" + "'", str43, "[3, 0, 4]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1569");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass25 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1570");
        int[] intArray5 = new int[] { (short) 100, 100, (short) 1, (byte) -1, (short) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass41 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 103, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, -1, 1]" + "'", str6, "[100, 100, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, -1, 1]" + "'", str7, "[100, 100, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, -1, 1]" + "'", str8, "[100, 100, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, -1, 1]" + "'", str9, "[100, 100, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, -1, 1]" + "'", str10, "[100, 100, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, -1, 1]" + "'", str11, "[100, 100, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, -1, 1]" + "'", str12, "[100, 100, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, -1, 1]" + "'", str13, "[100, 100, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 0, 1]" + "'", str14, "[100, 101, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 0, 1]" + "'", str15, "[100, 101, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 0, 1]" + "'", str16, "[100, 101, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 0, 1]" + "'", str17, "[100, 101, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 0, 1]" + "'", str18, "[100, 101, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 0, 1]" + "'", str19, "[100, 101, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 0, 1]" + "'", str20, "[100, 101, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 0, 1]" + "'", str21, "[100, 101, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 0, 1]" + "'", str22, "[100, 101, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 0, 1]" + "'", str23, "[100, 101, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 1, 1]" + "'", str24, "[100, 102, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 1, 1]" + "'", str25, "[100, 102, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 1, 1]" + "'", str26, "[100, 102, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 1, 1]" + "'", str27, "[100, 102, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 1, 1]" + "'", str28, "[100, 102, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 1, 1]" + "'", str29, "[100, 102, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 1, 1]" + "'", str30, "[100, 102, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 1, 1]" + "'", str31, "[100, 102, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 1, 1]" + "'", str32, "[100, 102, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 1, 1]" + "'", str33, "[100, 102, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 2, 1]" + "'", str34, "[100, 103, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 2, 1]" + "'", str35, "[100, 103, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 2, 1]" + "'", str36, "[100, 103, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 2, 1]" + "'", str37, "[100, 103, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 2, 1]" + "'", str38, "[100, 103, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 2, 1]" + "'", str39, "[100, 103, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 2, 1]" + "'", str40, "[100, 103, 6, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1571");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass17 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1572");
        int[] intArray3 = new int[] { ' ', 1, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass41 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 8, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 2, -1]" + "'", str4, "[32, 2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 3, -1]" + "'", str5, "[32, 3, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 4, -1]" + "'", str6, "[32, 4, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 5, -1]" + "'", str7, "[32, 5, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 6, -1]" + "'", str8, "[32, 6, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 7, -1]" + "'", str9, "[32, 7, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 8, -1]" + "'", str10, "[32, 8, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 9, -1]" + "'", str11, "[32, 9, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[33, 0, 0]" + "'", str12, "[33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 1, 0]" + "'", str13, "[33, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 2, 0]" + "'", str14, "[33, 2, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 3, 0]" + "'", str15, "[33, 3, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 4, 0]" + "'", str16, "[33, 4, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 5, 0]" + "'", str17, "[33, 5, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 6, 0]" + "'", str18, "[33, 6, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 7, 0]" + "'", str19, "[33, 7, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 8, 0]" + "'", str20, "[33, 8, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 9, 0]" + "'", str21, "[33, 9, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[34, 0, 1]" + "'", str22, "[34, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 1, 1]" + "'", str23, "[34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 2, 1]" + "'", str24, "[34, 2, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 3, 1]" + "'", str25, "[34, 3, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 4, 1]" + "'", str26, "[34, 4, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 5, 1]" + "'", str27, "[34, 5, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 6, 1]" + "'", str28, "[34, 6, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 7, 1]" + "'", str29, "[34, 7, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 8, 1]" + "'", str30, "[34, 8, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 9, 1]" + "'", str31, "[34, 9, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 0, 2]" + "'", str32, "[35, 0, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 2]" + "'", str33, "[35, 1, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 2]" + "'", str34, "[35, 2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 3, 2]" + "'", str35, "[35, 3, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 4, 2]" + "'", str36, "[35, 4, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 5, 2]" + "'", str37, "[35, 5, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 6, 2]" + "'", str38, "[35, 6, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 7, 2]" + "'", str39, "[35, 7, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 8, 2]" + "'", str40, "[35, 8, 2]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1573");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass20 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1574");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass26 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[3, 3]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1575");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass25 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1576");
        int[] intArray6 = new int[] { (short) -1, (byte) -1, '4', '4', (short) -1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass60 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, -1, 105, 105, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, -1, 53, 53, -1, 0]" + "'", str7, "[-1, -1, 53, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, -1, 54, 54, -1, 0]" + "'", str8, "[-1, -1, 54, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, -1, 55, 55, -1, 0]" + "'", str9, "[-1, -1, 55, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, -1, 56, 56, -1, 0]" + "'", str10, "[-1, -1, 56, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, -1, 57, 57, -1, 0]" + "'", str11, "[-1, -1, 57, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, -1, 58, 58, -1, 0]" + "'", str12, "[-1, -1, 58, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, -1, 59, 59, -1, 0]" + "'", str13, "[-1, -1, 59, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, -1, 60, 60, -1, 0]" + "'", str14, "[-1, -1, 60, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, -1, 61, 61, -1, 0]" + "'", str15, "[-1, -1, 61, 61, -1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, -1, 62, 62, -1, 0]" + "'", str16, "[-1, -1, 62, 62, -1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, -1, 63, 63, -1, 0]" + "'", str17, "[-1, -1, 63, 63, -1, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, -1, 64, 64, -1, 0]" + "'", str18, "[-1, -1, 64, 64, -1, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, -1, 65, 65, -1, 0]" + "'", str19, "[-1, -1, 65, 65, -1, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, -1, 66, 66, -1, 0]" + "'", str20, "[-1, -1, 66, 66, -1, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, -1, 67, 67, -1, 0]" + "'", str21, "[-1, -1, 67, 67, -1, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, -1, 68, 68, -1, 0]" + "'", str22, "[-1, -1, 68, 68, -1, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, -1, 69, 69, -1, 0]" + "'", str23, "[-1, -1, 69, 69, -1, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, -1, 70, 70, -1, 0]" + "'", str24, "[-1, -1, 70, 70, -1, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, -1, 71, 71, -1, 0]" + "'", str25, "[-1, -1, 71, 71, -1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, -1, 72, 72, -1, 0]" + "'", str26, "[-1, -1, 72, 72, -1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, -1, 73, 73, -1, 0]" + "'", str27, "[-1, -1, 73, 73, -1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, -1, 74, 74, -1, 0]" + "'", str28, "[-1, -1, 74, 74, -1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, -1, 75, 75, -1, 0]" + "'", str29, "[-1, -1, 75, 75, -1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, -1, 76, 76, -1, 0]" + "'", str30, "[-1, -1, 76, 76, -1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, -1, 77, 77, -1, 0]" + "'", str31, "[-1, -1, 77, 77, -1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, -1, 78, 78, -1, 0]" + "'", str32, "[-1, -1, 78, 78, -1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, -1, 79, 79, -1, 0]" + "'", str33, "[-1, -1, 79, 79, -1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, -1, 80, 80, -1, 0]" + "'", str34, "[-1, -1, 80, 80, -1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, -1, 81, 81, -1, 0]" + "'", str35, "[-1, -1, 81, 81, -1, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, -1, 82, 82, -1, 0]" + "'", str36, "[-1, -1, 82, 82, -1, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, -1, 83, 83, -1, 0]" + "'", str37, "[-1, -1, 83, 83, -1, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, -1, 84, 84, -1, 0]" + "'", str38, "[-1, -1, 84, 84, -1, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, -1, 85, 85, -1, 0]" + "'", str39, "[-1, -1, 85, 85, -1, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, -1, 86, 86, -1, 0]" + "'", str40, "[-1, -1, 86, 86, -1, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, -1, 87, 87, -1, 0]" + "'", str41, "[-1, -1, 87, 87, -1, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, -1, 88, 88, -1, 0]" + "'", str42, "[-1, -1, 88, 88, -1, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, -1, 89, 89, -1, 0]" + "'", str43, "[-1, -1, 89, 89, -1, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, -1, 90, 90, -1, 0]" + "'", str44, "[-1, -1, 90, 90, -1, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, -1, 91, 91, -1, 0]" + "'", str45, "[-1, -1, 91, 91, -1, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, -1, 92, 92, -1, 0]" + "'", str46, "[-1, -1, 92, 92, -1, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, -1, 93, 93, -1, 0]" + "'", str47, "[-1, -1, 93, 93, -1, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, -1, 94, 94, -1, 0]" + "'", str48, "[-1, -1, 94, 94, -1, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, -1, 95, 95, -1, 0]" + "'", str49, "[-1, -1, 95, 95, -1, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, -1, 96, 96, -1, 0]" + "'", str50, "[-1, -1, 96, 96, -1, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, -1, 97, 97, -1, 0]" + "'", str51, "[-1, -1, 97, 97, -1, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, -1, 98, 98, -1, 0]" + "'", str52, "[-1, -1, 98, 98, -1, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, -1, 99, 99, -1, 0]" + "'", str53, "[-1, -1, 99, 99, -1, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, -1, 100, 100, -1, 0]" + "'", str54, "[-1, -1, 100, 100, -1, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, -1, 101, 101, -1, 0]" + "'", str55, "[-1, -1, 101, 101, -1, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, -1, 102, 102, -1, 0]" + "'", str56, "[-1, -1, 102, 102, -1, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, -1, 103, 103, -1, 0]" + "'", str57, "[-1, -1, 103, 103, -1, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, -1, 104, 104, -1, 0]" + "'", str58, "[-1, -1, 104, 104, -1, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, -1, 105, 105, -1, 0]" + "'", str59, "[-1, -1, 105, 105, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1577");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass54 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1578");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass18 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1579");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass55 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1580");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass57 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[4]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1581");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass48 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[55, 145]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 143]" + "'", str45, "[53, 143]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 144]" + "'", str46, "[54, 144]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[55, 145]" + "'", str47, "[55, 145]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1582");
        int[] intArray0 = new int[] {};
        java.lang.String str1 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.Class<?> wildcardClass56 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "[1, 1]" + "'", str1, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1, 1]" + "'", str2, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 1]" + "'", str3, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1]" + "'", str4, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1]" + "'", str5, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1]" + "'", str6, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1]" + "'", str7, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1]" + "'", str8, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1]" + "'", str9, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1]" + "'", str15, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1]" + "'", str16, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1]" + "'", str17, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1]" + "'", str18, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1]" + "'", str19, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1]" + "'", str25, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1]" + "'", str26, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1]" + "'", str27, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1]" + "'", str28, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1]" + "'", str29, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1]" + "'", str31, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1]" + "'", str35, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1]" + "'", str36, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1]" + "'", str37, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1]" + "'", str38, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1]" + "'", str39, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1]" + "'", str40, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1]" + "'", str41, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1]" + "'", str45, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1]" + "'", str46, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1]" + "'", str47, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1]" + "'", str48, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1]" + "'", str49, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1]" + "'", str50, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1]" + "'", str51, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1]" + "'", str55, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1583");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass11 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1584");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass60 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1585");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass14 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1586");
        int[] intArray6 = new int[] { (short) -1, (byte) -1, '4', '4', (short) -1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass58 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, -1, 103, 103, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, -1, 53, 53, -1, 0]" + "'", str7, "[-1, -1, 53, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, -1, 54, 54, -1, 0]" + "'", str8, "[-1, -1, 54, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, -1, 55, 55, -1, 0]" + "'", str9, "[-1, -1, 55, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, -1, 56, 56, -1, 0]" + "'", str10, "[-1, -1, 56, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, -1, 57, 57, -1, 0]" + "'", str11, "[-1, -1, 57, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, -1, 58, 58, -1, 0]" + "'", str12, "[-1, -1, 58, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, -1, 59, 59, -1, 0]" + "'", str13, "[-1, -1, 59, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, -1, 60, 60, -1, 0]" + "'", str14, "[-1, -1, 60, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, -1, 61, 61, -1, 0]" + "'", str15, "[-1, -1, 61, 61, -1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, -1, 62, 62, -1, 0]" + "'", str16, "[-1, -1, 62, 62, -1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, -1, 63, 63, -1, 0]" + "'", str17, "[-1, -1, 63, 63, -1, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, -1, 64, 64, -1, 0]" + "'", str18, "[-1, -1, 64, 64, -1, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, -1, 65, 65, -1, 0]" + "'", str19, "[-1, -1, 65, 65, -1, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, -1, 66, 66, -1, 0]" + "'", str20, "[-1, -1, 66, 66, -1, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, -1, 67, 67, -1, 0]" + "'", str21, "[-1, -1, 67, 67, -1, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, -1, 68, 68, -1, 0]" + "'", str22, "[-1, -1, 68, 68, -1, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, -1, 69, 69, -1, 0]" + "'", str23, "[-1, -1, 69, 69, -1, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, -1, 70, 70, -1, 0]" + "'", str24, "[-1, -1, 70, 70, -1, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, -1, 71, 71, -1, 0]" + "'", str25, "[-1, -1, 71, 71, -1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, -1, 72, 72, -1, 0]" + "'", str26, "[-1, -1, 72, 72, -1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, -1, 73, 73, -1, 0]" + "'", str27, "[-1, -1, 73, 73, -1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, -1, 74, 74, -1, 0]" + "'", str28, "[-1, -1, 74, 74, -1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, -1, 75, 75, -1, 0]" + "'", str29, "[-1, -1, 75, 75, -1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, -1, 76, 76, -1, 0]" + "'", str30, "[-1, -1, 76, 76, -1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, -1, 77, 77, -1, 0]" + "'", str31, "[-1, -1, 77, 77, -1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, -1, 78, 78, -1, 0]" + "'", str32, "[-1, -1, 78, 78, -1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, -1, 79, 79, -1, 0]" + "'", str33, "[-1, -1, 79, 79, -1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, -1, 80, 80, -1, 0]" + "'", str34, "[-1, -1, 80, 80, -1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, -1, 81, 81, -1, 0]" + "'", str35, "[-1, -1, 81, 81, -1, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, -1, 82, 82, -1, 0]" + "'", str36, "[-1, -1, 82, 82, -1, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, -1, 83, 83, -1, 0]" + "'", str37, "[-1, -1, 83, 83, -1, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, -1, 84, 84, -1, 0]" + "'", str38, "[-1, -1, 84, 84, -1, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, -1, 85, 85, -1, 0]" + "'", str39, "[-1, -1, 85, 85, -1, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, -1, 86, 86, -1, 0]" + "'", str40, "[-1, -1, 86, 86, -1, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, -1, 87, 87, -1, 0]" + "'", str41, "[-1, -1, 87, 87, -1, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, -1, 88, 88, -1, 0]" + "'", str42, "[-1, -1, 88, 88, -1, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, -1, 89, 89, -1, 0]" + "'", str43, "[-1, -1, 89, 89, -1, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, -1, 90, 90, -1, 0]" + "'", str44, "[-1, -1, 90, 90, -1, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, -1, 91, 91, -1, 0]" + "'", str45, "[-1, -1, 91, 91, -1, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, -1, 92, 92, -1, 0]" + "'", str46, "[-1, -1, 92, 92, -1, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, -1, 93, 93, -1, 0]" + "'", str47, "[-1, -1, 93, 93, -1, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, -1, 94, 94, -1, 0]" + "'", str48, "[-1, -1, 94, 94, -1, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, -1, 95, 95, -1, 0]" + "'", str49, "[-1, -1, 95, 95, -1, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, -1, 96, 96, -1, 0]" + "'", str50, "[-1, -1, 96, 96, -1, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, -1, 97, 97, -1, 0]" + "'", str51, "[-1, -1, 97, 97, -1, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, -1, 98, 98, -1, 0]" + "'", str52, "[-1, -1, 98, 98, -1, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, -1, 99, 99, -1, 0]" + "'", str53, "[-1, -1, 99, 99, -1, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, -1, 100, 100, -1, 0]" + "'", str54, "[-1, -1, 100, 100, -1, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, -1, 101, 101, -1, 0]" + "'", str55, "[-1, -1, 101, 101, -1, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, -1, 102, 102, -1, 0]" + "'", str56, "[-1, -1, 102, 102, -1, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, -1, 103, 103, -1, 0]" + "'", str57, "[-1, -1, 103, 103, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1587");
        int[] intArray2 = new int[] { (byte) 10, (byte) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass31 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[8, 8]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 1]" + "'", str3, "[11, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 2]" + "'", str4, "[12, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 3]" + "'", str5, "[13, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 4]" + "'", str6, "[14, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 5]" + "'", str7, "[15, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 6]" + "'", str8, "[16, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 7]" + "'", str9, "[17, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 8]" + "'", str10, "[18, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 9]" + "'", str11, "[19, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1588");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass19 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1589");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass14 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 7, 100]" + "'", str10, "[0, 106, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 8, 100]" + "'", str11, "[0, 107, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 9, 100]" + "'", str12, "[0, 108, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 101]" + "'", str13, "[1, 0, 0, 101]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1590");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass16 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 62, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 58, 1, 100]" + "'", str11, "[100, 10, 58, 1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 59, 1, 100]" + "'", str12, "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 60, 1, 100]" + "'", str13, "[100, 10, 60, 1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 61, 1, 100]" + "'", str14, "[100, 10, 61, 1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 62, 1, 100]" + "'", str15, "[100, 10, 62, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1591");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass31 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1592");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass23 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1593");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass13 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1594");
        int[] intArray4 = new int[] { 'a', (short) -1, '#', 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass48 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 42, 78, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 0, 36, 97]" + "'", str5, "[97, 0, 36, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 1, 37, 97]" + "'", str6, "[97, 1, 37, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 2, 38, 97]" + "'", str7, "[97, 2, 38, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 3, 39, 97]" + "'", str8, "[97, 3, 39, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 4, 40, 97]" + "'", str9, "[97, 4, 40, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 5, 41, 97]" + "'", str10, "[97, 5, 41, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 6, 42, 97]" + "'", str11, "[97, 6, 42, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 7, 43, 97]" + "'", str12, "[97, 7, 43, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 8, 44, 97]" + "'", str13, "[97, 8, 44, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 9, 45, 97]" + "'", str14, "[97, 9, 45, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 10, 46, 97]" + "'", str15, "[97, 10, 46, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 11, 47, 97]" + "'", str16, "[97, 11, 47, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 12, 48, 97]" + "'", str17, "[97, 12, 48, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 13, 49, 97]" + "'", str18, "[97, 13, 49, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 14, 50, 97]" + "'", str19, "[97, 14, 50, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 15, 51, 97]" + "'", str20, "[97, 15, 51, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 16, 52, 97]" + "'", str21, "[97, 16, 52, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 17, 53, 97]" + "'", str22, "[97, 17, 53, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 18, 54, 97]" + "'", str23, "[97, 18, 54, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 19, 55, 97]" + "'", str24, "[97, 19, 55, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 20, 56, 97]" + "'", str25, "[97, 20, 56, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 21, 57, 97]" + "'", str26, "[97, 21, 57, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 22, 58, 97]" + "'", str27, "[97, 22, 58, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 23, 59, 97]" + "'", str28, "[97, 23, 59, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 24, 60, 97]" + "'", str29, "[97, 24, 60, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 25, 61, 97]" + "'", str30, "[97, 25, 61, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 26, 62, 97]" + "'", str31, "[97, 26, 62, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 27, 63, 97]" + "'", str32, "[97, 27, 63, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 28, 64, 97]" + "'", str33, "[97, 28, 64, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 29, 65, 97]" + "'", str34, "[97, 29, 65, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 30, 66, 97]" + "'", str35, "[97, 30, 66, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 31, 67, 97]" + "'", str36, "[97, 31, 67, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 32, 68, 97]" + "'", str37, "[97, 32, 68, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 33, 69, 97]" + "'", str38, "[97, 33, 69, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 34, 70, 97]" + "'", str39, "[97, 34, 70, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 35, 71, 97]" + "'", str40, "[97, 35, 71, 97]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 36, 72, 97]" + "'", str41, "[97, 36, 72, 97]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 37, 73, 97]" + "'", str42, "[97, 37, 73, 97]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 38, 74, 97]" + "'", str43, "[97, 38, 74, 97]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 39, 75, 97]" + "'", str44, "[97, 39, 75, 97]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 40, 76, 97]" + "'", str45, "[97, 40, 76, 97]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 41, 77, 97]" + "'", str46, "[97, 41, 77, 97]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 42, 78, 97]" + "'", str47, "[97, 42, 78, 97]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1595");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass15 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1596");
        int[] intArray4 = new int[] { 100, (byte) 100, (byte) 100, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass8 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 101, 101, 0]" + "'", str5, "[100, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 102, 102, 0]" + "'", str6, "[100, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 103, 103, 0]" + "'", str7, "[100, 103, 103, 0]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1597");
        int[] intArray3 = new int[] { (byte) 1, (short) 0, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass55 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1598");
        int[] intArray6 = new int[] { '#', (byte) -1, (byte) 1, (-1), (short) 100, 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass13 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, -1, 7, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, -1, 2, 0, 100, 100]" + "'", str7, "[35, -1, 2, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, -1, 3, 1, 100, 100]" + "'", str8, "[35, -1, 3, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, -1, 4, 2, 100, 100]" + "'", str9, "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, -1, 5, 3, 100, 100]" + "'", str10, "[35, -1, 5, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, -1, 6, 4, 100, 100]" + "'", str11, "[35, -1, 6, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, -1, 7, 5, 100, 100]" + "'", str12, "[35, -1, 7, 5, 100, 100]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1599");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass32 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 77, 57, 100, 52]" + "'", str31, "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1600");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass31 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1601");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass6 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1602");
        int[] intArray4 = new int[] { (short) 100, (byte) 0, 'a', (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass60 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 55, 152, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 1, 98, 0]" + "'", str5, "[100, 1, 98, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 2, 99, 0]" + "'", str6, "[100, 2, 99, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 3, 100, 0]" + "'", str7, "[100, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 4, 101, 0]" + "'", str8, "[100, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 5, 102, 0]" + "'", str9, "[100, 5, 102, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 6, 103, 0]" + "'", str10, "[100, 6, 103, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 7, 104, 0]" + "'", str11, "[100, 7, 104, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 8, 105, 0]" + "'", str12, "[100, 8, 105, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 9, 106, 0]" + "'", str13, "[100, 9, 106, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 107, 0]" + "'", str14, "[100, 10, 107, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 11, 108, 0]" + "'", str15, "[100, 11, 108, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 12, 109, 0]" + "'", str16, "[100, 12, 109, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 13, 110, 0]" + "'", str17, "[100, 13, 110, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 14, 111, 0]" + "'", str18, "[100, 14, 111, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 15, 112, 0]" + "'", str19, "[100, 15, 112, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 16, 113, 0]" + "'", str20, "[100, 16, 113, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 17, 114, 0]" + "'", str21, "[100, 17, 114, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 18, 115, 0]" + "'", str22, "[100, 18, 115, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 19, 116, 0]" + "'", str23, "[100, 19, 116, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 20, 117, 0]" + "'", str24, "[100, 20, 117, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 21, 118, 0]" + "'", str25, "[100, 21, 118, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 22, 119, 0]" + "'", str26, "[100, 22, 119, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 23, 120, 0]" + "'", str27, "[100, 23, 120, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 24, 121, 0]" + "'", str28, "[100, 24, 121, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 25, 122, 0]" + "'", str29, "[100, 25, 122, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 26, 123, 0]" + "'", str30, "[100, 26, 123, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 27, 124, 0]" + "'", str31, "[100, 27, 124, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 28, 125, 0]" + "'", str32, "[100, 28, 125, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 29, 126, 0]" + "'", str33, "[100, 29, 126, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 30, 127, 0]" + "'", str34, "[100, 30, 127, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 31, 128, 0]" + "'", str35, "[100, 31, 128, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 32, 129, 0]" + "'", str36, "[100, 32, 129, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 33, 130, 0]" + "'", str37, "[100, 33, 130, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 34, 131, 0]" + "'", str38, "[100, 34, 131, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 35, 132, 0]" + "'", str39, "[100, 35, 132, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 36, 133, 0]" + "'", str40, "[100, 36, 133, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 37, 134, 0]" + "'", str41, "[100, 37, 134, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 38, 135, 0]" + "'", str42, "[100, 38, 135, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 39, 136, 0]" + "'", str43, "[100, 39, 136, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 40, 137, 0]" + "'", str44, "[100, 40, 137, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 41, 138, 0]" + "'", str45, "[100, 41, 138, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 42, 139, 0]" + "'", str46, "[100, 42, 139, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 43, 140, 0]" + "'", str47, "[100, 43, 140, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 44, 141, 0]" + "'", str48, "[100, 44, 141, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 45, 142, 0]" + "'", str49, "[100, 45, 142, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 46, 143, 0]" + "'", str50, "[100, 46, 143, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 47, 144, 0]" + "'", str51, "[100, 47, 144, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 48, 145, 0]" + "'", str52, "[100, 48, 145, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 49, 146, 0]" + "'", str53, "[100, 49, 146, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 50, 147, 0]" + "'", str54, "[100, 50, 147, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 51, 148, 0]" + "'", str55, "[100, 51, 148, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 52, 149, 0]" + "'", str56, "[100, 52, 149, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 53, 150, 0]" + "'", str57, "[100, 53, 150, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 54, 151, 0]" + "'", str58, "[100, 54, 151, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 55, 152, 0]" + "'", str59, "[100, 55, 152, 0]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1603");
        int[] intArray3 = new int[] { 100, 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass27 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[102, 4, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 2, 0]" + "'", str4, "[100, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 3, 0]" + "'", str5, "[100, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 4, 0]" + "'", str6, "[100, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 5, 0]" + "'", str7, "[100, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 6, 0]" + "'", str8, "[100, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 7, 0]" + "'", str9, "[100, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 8, 0]" + "'", str10, "[100, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 9, 0]" + "'", str11, "[100, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[101, 0, 1]" + "'", str12, "[101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 1, 1]" + "'", str13, "[101, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 2, 1]" + "'", str14, "[101, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 3, 1]" + "'", str15, "[101, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 4, 1]" + "'", str16, "[101, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 5, 1]" + "'", str17, "[101, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 6, 1]" + "'", str18, "[101, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 7, 1]" + "'", str19, "[101, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 8, 1]" + "'", str20, "[101, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 9, 1]" + "'", str21, "[101, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[102, 0, 2]" + "'", str22, "[102, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 1, 2]" + "'", str23, "[102, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 2, 2]" + "'", str24, "[102, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 3, 2]" + "'", str25, "[102, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 4, 2]" + "'", str26, "[102, 4, 2]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1604");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass59 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1605");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass46 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[3, 3]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1606");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass6 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[13, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1607");
        int[] intArray4 = new int[] { (byte) 0, 10, (short) 100, 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass38 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 43, 133, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 101, 97]" + "'", str5, "[0, 11, 101, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 102, 97]" + "'", str6, "[0, 12, 102, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 103, 97]" + "'", str7, "[0, 13, 103, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 104, 97]" + "'", str8, "[0, 14, 104, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 105, 97]" + "'", str9, "[0, 15, 105, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 106, 97]" + "'", str10, "[0, 16, 106, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 107, 97]" + "'", str11, "[0, 17, 107, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 108, 97]" + "'", str12, "[0, 18, 108, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 109, 97]" + "'", str13, "[0, 19, 109, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 110, 97]" + "'", str14, "[0, 20, 110, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 21, 111, 97]" + "'", str15, "[0, 21, 111, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 22, 112, 97]" + "'", str16, "[0, 22, 112, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 23, 113, 97]" + "'", str17, "[0, 23, 113, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 24, 114, 97]" + "'", str18, "[0, 24, 114, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 25, 115, 97]" + "'", str19, "[0, 25, 115, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 26, 116, 97]" + "'", str20, "[0, 26, 116, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 27, 117, 97]" + "'", str21, "[0, 27, 117, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 28, 118, 97]" + "'", str22, "[0, 28, 118, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 29, 119, 97]" + "'", str23, "[0, 29, 119, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 30, 120, 97]" + "'", str24, "[0, 30, 120, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 31, 121, 97]" + "'", str25, "[0, 31, 121, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 122, 97]" + "'", str26, "[0, 32, 122, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 33, 123, 97]" + "'", str27, "[0, 33, 123, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 34, 124, 97]" + "'", str28, "[0, 34, 124, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 125, 97]" + "'", str29, "[0, 35, 125, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 36, 126, 97]" + "'", str30, "[0, 36, 126, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 37, 127, 97]" + "'", str31, "[0, 37, 127, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 38, 128, 97]" + "'", str32, "[0, 38, 128, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 39, 129, 97]" + "'", str33, "[0, 39, 129, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 40, 130, 97]" + "'", str34, "[0, 40, 130, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 41, 131, 97]" + "'", str35, "[0, 41, 131, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 42, 132, 97]" + "'", str36, "[0, 42, 132, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 43, 133, 97]" + "'", str37, "[0, 43, 133, 97]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1608");
        int[] intArray3 = new int[] { (byte) -1, (byte) 0, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass48 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 4, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 1, 0]" + "'", str4, "[-1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 0]" + "'", str5, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 0]" + "'", str6, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 0]" + "'", str7, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 0]" + "'", str8, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 0]" + "'", str9, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 0]" + "'", str10, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 0]" + "'", str11, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 0]" + "'", str12, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 0, 1]" + "'", str13, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 1]" + "'", str14, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 1]" + "'", str15, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 3, 1]" + "'", str16, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 4, 1]" + "'", str17, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 5, 1]" + "'", str18, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 6, 1]" + "'", str19, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 7, 1]" + "'", str20, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 8, 1]" + "'", str21, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 9, 1]" + "'", str22, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 2]" + "'", str23, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 2]" + "'", str24, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 2, 2]" + "'", str25, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2]" + "'", str26, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 4, 2]" + "'", str27, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 5, 2]" + "'", str28, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 6, 2]" + "'", str29, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 7, 2]" + "'", str30, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 8, 2]" + "'", str31, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 9, 2]" + "'", str32, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 0, 3]" + "'", str33, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 1, 3]" + "'", str34, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2, 3]" + "'", str35, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 3, 3]" + "'", str36, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 4, 3]" + "'", str37, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 5, 3]" + "'", str38, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 6, 3]" + "'", str39, "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 7, 3]" + "'", str40, "[2, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 8, 3]" + "'", str41, "[2, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 9, 3]" + "'", str42, "[2, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 0, 4]" + "'", str43, "[3, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 1, 4]" + "'", str44, "[3, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 2, 4]" + "'", str45, "[3, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3, 4]" + "'", str46, "[3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 4, 4]" + "'", str47, "[3, 4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1609");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass24 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1610");
        int[] intArray6 = new int[] { (short) -1, (byte) -1, '4', '4', (short) -1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass61 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, -1, 106, 106, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, -1, 53, 53, -1, 0]" + "'", str7, "[-1, -1, 53, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, -1, 54, 54, -1, 0]" + "'", str8, "[-1, -1, 54, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, -1, 55, 55, -1, 0]" + "'", str9, "[-1, -1, 55, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, -1, 56, 56, -1, 0]" + "'", str10, "[-1, -1, 56, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, -1, 57, 57, -1, 0]" + "'", str11, "[-1, -1, 57, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, -1, 58, 58, -1, 0]" + "'", str12, "[-1, -1, 58, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, -1, 59, 59, -1, 0]" + "'", str13, "[-1, -1, 59, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, -1, 60, 60, -1, 0]" + "'", str14, "[-1, -1, 60, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, -1, 61, 61, -1, 0]" + "'", str15, "[-1, -1, 61, 61, -1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, -1, 62, 62, -1, 0]" + "'", str16, "[-1, -1, 62, 62, -1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, -1, 63, 63, -1, 0]" + "'", str17, "[-1, -1, 63, 63, -1, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, -1, 64, 64, -1, 0]" + "'", str18, "[-1, -1, 64, 64, -1, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, -1, 65, 65, -1, 0]" + "'", str19, "[-1, -1, 65, 65, -1, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, -1, 66, 66, -1, 0]" + "'", str20, "[-1, -1, 66, 66, -1, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, -1, 67, 67, -1, 0]" + "'", str21, "[-1, -1, 67, 67, -1, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, -1, 68, 68, -1, 0]" + "'", str22, "[-1, -1, 68, 68, -1, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, -1, 69, 69, -1, 0]" + "'", str23, "[-1, -1, 69, 69, -1, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, -1, 70, 70, -1, 0]" + "'", str24, "[-1, -1, 70, 70, -1, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, -1, 71, 71, -1, 0]" + "'", str25, "[-1, -1, 71, 71, -1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, -1, 72, 72, -1, 0]" + "'", str26, "[-1, -1, 72, 72, -1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, -1, 73, 73, -1, 0]" + "'", str27, "[-1, -1, 73, 73, -1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, -1, 74, 74, -1, 0]" + "'", str28, "[-1, -1, 74, 74, -1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, -1, 75, 75, -1, 0]" + "'", str29, "[-1, -1, 75, 75, -1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, -1, 76, 76, -1, 0]" + "'", str30, "[-1, -1, 76, 76, -1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, -1, 77, 77, -1, 0]" + "'", str31, "[-1, -1, 77, 77, -1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, -1, 78, 78, -1, 0]" + "'", str32, "[-1, -1, 78, 78, -1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, -1, 79, 79, -1, 0]" + "'", str33, "[-1, -1, 79, 79, -1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, -1, 80, 80, -1, 0]" + "'", str34, "[-1, -1, 80, 80, -1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, -1, 81, 81, -1, 0]" + "'", str35, "[-1, -1, 81, 81, -1, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, -1, 82, 82, -1, 0]" + "'", str36, "[-1, -1, 82, 82, -1, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, -1, 83, 83, -1, 0]" + "'", str37, "[-1, -1, 83, 83, -1, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, -1, 84, 84, -1, 0]" + "'", str38, "[-1, -1, 84, 84, -1, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, -1, 85, 85, -1, 0]" + "'", str39, "[-1, -1, 85, 85, -1, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, -1, 86, 86, -1, 0]" + "'", str40, "[-1, -1, 86, 86, -1, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, -1, 87, 87, -1, 0]" + "'", str41, "[-1, -1, 87, 87, -1, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, -1, 88, 88, -1, 0]" + "'", str42, "[-1, -1, 88, 88, -1, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, -1, 89, 89, -1, 0]" + "'", str43, "[-1, -1, 89, 89, -1, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, -1, 90, 90, -1, 0]" + "'", str44, "[-1, -1, 90, 90, -1, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, -1, 91, 91, -1, 0]" + "'", str45, "[-1, -1, 91, 91, -1, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, -1, 92, 92, -1, 0]" + "'", str46, "[-1, -1, 92, 92, -1, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, -1, 93, 93, -1, 0]" + "'", str47, "[-1, -1, 93, 93, -1, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, -1, 94, 94, -1, 0]" + "'", str48, "[-1, -1, 94, 94, -1, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, -1, 95, 95, -1, 0]" + "'", str49, "[-1, -1, 95, 95, -1, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, -1, 96, 96, -1, 0]" + "'", str50, "[-1, -1, 96, 96, -1, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, -1, 97, 97, -1, 0]" + "'", str51, "[-1, -1, 97, 97, -1, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, -1, 98, 98, -1, 0]" + "'", str52, "[-1, -1, 98, 98, -1, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, -1, 99, 99, -1, 0]" + "'", str53, "[-1, -1, 99, 99, -1, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, -1, 100, 100, -1, 0]" + "'", str54, "[-1, -1, 100, 100, -1, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, -1, 101, 101, -1, 0]" + "'", str55, "[-1, -1, 101, 101, -1, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, -1, 102, 102, -1, 0]" + "'", str56, "[-1, -1, 102, 102, -1, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, -1, 103, 103, -1, 0]" + "'", str57, "[-1, -1, 103, 103, -1, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, -1, 104, 104, -1, 0]" + "'", str58, "[-1, -1, 104, 104, -1, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, -1, 105, 105, -1, 0]" + "'", str59, "[-1, -1, 105, 105, -1, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, -1, 106, 106, -1, 0]" + "'", str60, "[-1, -1, 106, 106, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1611");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass61 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1612");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass21 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1613");
        int[] intArray4 = new int[] { 'a', (short) -1, '#', 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass47 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 41, 77, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 0, 36, 97]" + "'", str5, "[97, 0, 36, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 1, 37, 97]" + "'", str6, "[97, 1, 37, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 2, 38, 97]" + "'", str7, "[97, 2, 38, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 3, 39, 97]" + "'", str8, "[97, 3, 39, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 4, 40, 97]" + "'", str9, "[97, 4, 40, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 5, 41, 97]" + "'", str10, "[97, 5, 41, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 6, 42, 97]" + "'", str11, "[97, 6, 42, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 7, 43, 97]" + "'", str12, "[97, 7, 43, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 8, 44, 97]" + "'", str13, "[97, 8, 44, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 9, 45, 97]" + "'", str14, "[97, 9, 45, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 10, 46, 97]" + "'", str15, "[97, 10, 46, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 11, 47, 97]" + "'", str16, "[97, 11, 47, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 12, 48, 97]" + "'", str17, "[97, 12, 48, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 13, 49, 97]" + "'", str18, "[97, 13, 49, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 14, 50, 97]" + "'", str19, "[97, 14, 50, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 15, 51, 97]" + "'", str20, "[97, 15, 51, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 16, 52, 97]" + "'", str21, "[97, 16, 52, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 17, 53, 97]" + "'", str22, "[97, 17, 53, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 18, 54, 97]" + "'", str23, "[97, 18, 54, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 19, 55, 97]" + "'", str24, "[97, 19, 55, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 20, 56, 97]" + "'", str25, "[97, 20, 56, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 21, 57, 97]" + "'", str26, "[97, 21, 57, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 22, 58, 97]" + "'", str27, "[97, 22, 58, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 23, 59, 97]" + "'", str28, "[97, 23, 59, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 24, 60, 97]" + "'", str29, "[97, 24, 60, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 25, 61, 97]" + "'", str30, "[97, 25, 61, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 26, 62, 97]" + "'", str31, "[97, 26, 62, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 27, 63, 97]" + "'", str32, "[97, 27, 63, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 28, 64, 97]" + "'", str33, "[97, 28, 64, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 29, 65, 97]" + "'", str34, "[97, 29, 65, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 30, 66, 97]" + "'", str35, "[97, 30, 66, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 31, 67, 97]" + "'", str36, "[97, 31, 67, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 32, 68, 97]" + "'", str37, "[97, 32, 68, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 33, 69, 97]" + "'", str38, "[97, 33, 69, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 34, 70, 97]" + "'", str39, "[97, 34, 70, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 35, 71, 97]" + "'", str40, "[97, 35, 71, 97]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 36, 72, 97]" + "'", str41, "[97, 36, 72, 97]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 37, 73, 97]" + "'", str42, "[97, 37, 73, 97]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 38, 74, 97]" + "'", str43, "[97, 38, 74, 97]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 39, 75, 97]" + "'", str44, "[97, 39, 75, 97]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 40, 76, 97]" + "'", str45, "[97, 40, 76, 97]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 41, 77, 97]" + "'", str46, "[97, 41, 77, 97]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1614");
        int[] intArray6 = new int[] { (byte) 0, (short) 1, 1, (short) 1, 1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass14 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 1, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 2, 2, 1, 0]" + "'", str7, "[0, 1, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 3, 3, 1, 0]" + "'", str8, "[0, 1, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 4, 4, 1, 0]" + "'", str9, "[0, 1, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 5, 5, 1, 0]" + "'", str10, "[0, 1, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 6, 6, 1, 0]" + "'", str11, "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 7, 7, 1, 0]" + "'", str12, "[0, 1, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 8, 8, 1, 0]" + "'", str13, "[0, 1, 8, 8, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1615");
        int[] intArray6 = new int[] { '#', (byte) -1, (byte) 1, (-1), (short) 100, 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass11 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, -1, 5, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, -1, 2, 0, 100, 100]" + "'", str7, "[35, -1, 2, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, -1, 3, 1, 100, 100]" + "'", str8, "[35, -1, 3, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, -1, 4, 2, 100, 100]" + "'", str9, "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, -1, 5, 3, 100, 100]" + "'", str10, "[35, -1, 5, 3, 100, 100]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1616");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass44 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1617");
        int[] intArray6 = new int[] { (byte) 0, (short) 1, 1, (short) 1, 1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass13 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 1, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 2, 2, 1, 0]" + "'", str7, "[0, 1, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 3, 3, 1, 0]" + "'", str8, "[0, 1, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 4, 4, 1, 0]" + "'", str9, "[0, 1, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 5, 5, 1, 0]" + "'", str10, "[0, 1, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 6, 6, 1, 0]" + "'", str11, "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 7, 7, 1, 0]" + "'", str12, "[0, 1, 7, 7, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1618");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass51 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[84]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1619");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass20 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1620");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass19 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1621");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass7 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[14, 5]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1622");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass58 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 52, 63, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 48, 59, 10]" + "'", str53, "[1, 48, 59, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 49, 60, 10]" + "'", str54, "[1, 49, 60, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 50, 61, 10]" + "'", str55, "[1, 50, 61, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 51, 62, 10]" + "'", str56, "[1, 51, 62, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 52, 63, 10]" + "'", str57, "[1, 52, 63, 10]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1623");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass39 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[137]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1624");
        int[] intArray2 = new int[] { (byte) 10, (byte) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass30 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 1]" + "'", str3, "[11, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 2]" + "'", str4, "[12, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 3]" + "'", str5, "[13, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 4]" + "'", str6, "[14, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 5]" + "'", str7, "[15, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 6]" + "'", str8, "[16, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 7]" + "'", str9, "[17, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 8]" + "'", str10, "[18, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 9]" + "'", str11, "[19, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1625");
        int[] intArray4 = new int[] { (short) 0, 100, (byte) 0, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass6 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 101, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 1, 0]" + "'", str5, "[0, 101, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1626");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass9 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[16, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 6]" + "'", str7, "[15, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 7]" + "'", str8, "[16, 7]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1627");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass15 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 61, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 58, 1, 100]" + "'", str11, "[100, 10, 58, 1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 59, 1, 100]" + "'", str12, "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 60, 1, 100]" + "'", str13, "[100, 10, 60, 1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 61, 1, 100]" + "'", str14, "[100, 10, 61, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1628");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 10, (short) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass42 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, -1, 11, 100, -1]" + "'", str6, "[100, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, -1, 12, 100, -1]" + "'", str7, "[100, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, -1, 13, 100, -1]" + "'", str8, "[100, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, -1, 14, 100, -1]" + "'", str9, "[100, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, -1, 15, 100, -1]" + "'", str10, "[100, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, -1, 16, 100, -1]" + "'", str11, "[100, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, -1, 17, 100, -1]" + "'", str12, "[100, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, -1, 18, 100, -1]" + "'", str13, "[100, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, -1, 19, 100, -1]" + "'", str14, "[100, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, -1, 20, 100, -1]" + "'", str15, "[100, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, -1, 21, 100, -1]" + "'", str16, "[100, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, -1, 22, 100, -1]" + "'", str17, "[100, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, -1, 23, 100, -1]" + "'", str18, "[100, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, -1, 24, 100, -1]" + "'", str19, "[100, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, -1, 25, 100, -1]" + "'", str20, "[100, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, -1, 26, 100, -1]" + "'", str21, "[100, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, -1, 27, 100, -1]" + "'", str22, "[100, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, -1, 28, 100, -1]" + "'", str23, "[100, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, -1, 29, 100, -1]" + "'", str24, "[100, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, -1, 30, 100, -1]" + "'", str25, "[100, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, -1, 31, 100, -1]" + "'", str26, "[100, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, -1, 32, 100, -1]" + "'", str27, "[100, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, -1, 33, 100, -1]" + "'", str28, "[100, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, -1, 34, 100, -1]" + "'", str29, "[100, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, -1, 35, 100, -1]" + "'", str30, "[100, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, -1, 36, 100, -1]" + "'", str31, "[100, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, -1, 37, 100, -1]" + "'", str32, "[100, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, -1, 38, 100, -1]" + "'", str33, "[100, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, -1, 39, 100, -1]" + "'", str34, "[100, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, -1, 40, 100, -1]" + "'", str35, "[100, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, -1, 41, 100, -1]" + "'", str36, "[100, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, -1, 42, 100, -1]" + "'", str37, "[100, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, -1, 43, 100, -1]" + "'", str38, "[100, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, -1, 44, 100, -1]" + "'", str39, "[100, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, -1, 45, 100, -1]" + "'", str40, "[100, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, -1, 46, 100, -1]" + "'", str41, "[100, -1, 46, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1629");
        int[] intArray3 = new int[] { (byte) -1, (byte) 0, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass41 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 7, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 1, 0]" + "'", str4, "[-1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 0]" + "'", str5, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 0]" + "'", str6, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 0]" + "'", str7, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 0]" + "'", str8, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 0]" + "'", str9, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 0]" + "'", str10, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 0]" + "'", str11, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 0]" + "'", str12, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 0, 1]" + "'", str13, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 1]" + "'", str14, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 1]" + "'", str15, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 3, 1]" + "'", str16, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 4, 1]" + "'", str17, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 5, 1]" + "'", str18, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 6, 1]" + "'", str19, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 7, 1]" + "'", str20, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 8, 1]" + "'", str21, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 9, 1]" + "'", str22, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 2]" + "'", str23, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 2]" + "'", str24, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 2, 2]" + "'", str25, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2]" + "'", str26, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 4, 2]" + "'", str27, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 5, 2]" + "'", str28, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 6, 2]" + "'", str29, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 7, 2]" + "'", str30, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 8, 2]" + "'", str31, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 9, 2]" + "'", str32, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 0, 3]" + "'", str33, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 1, 3]" + "'", str34, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2, 3]" + "'", str35, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 3, 3]" + "'", str36, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 4, 3]" + "'", str37, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 5, 3]" + "'", str38, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 6, 3]" + "'", str39, "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 7, 3]" + "'", str40, "[2, 7, 3]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1630");
        int[] intArray6 = new int[] { (-1), 10, (short) -1, (short) -1, (short) 10, (short) -1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass43 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 13, 5, 5, 13, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 10, 0, 0, 10, -1]" + "'", str7, "[-1, 10, 0, 0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 10, 1, 1, 10, -1]" + "'", str8, "[-1, 10, 1, 1, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 10, 2, 2, 10, -1]" + "'", str9, "[-1, 10, 2, 2, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 10, 3, 3, 10, -1]" + "'", str10, "[-1, 10, 3, 3, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 10, 4, 4, 10, -1]" + "'", str11, "[-1, 10, 4, 4, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 10, 5, 5, 10, -1]" + "'", str12, "[-1, 10, 5, 5, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 6, 6, 10, -1]" + "'", str13, "[-1, 10, 6, 6, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 7, 7, 10, -1]" + "'", str14, "[-1, 10, 7, 7, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 10, 8, 8, 10, -1]" + "'", str15, "[-1, 10, 8, 8, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 10, 9, 9, 10, -1]" + "'", str16, "[-1, 10, 9, 9, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 11, 0, 0, 11, -1]" + "'", str17, "[-1, 11, 0, 0, 11, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 11, 1, 1, 11, -1]" + "'", str18, "[-1, 11, 1, 1, 11, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 11, 2, 2, 11, -1]" + "'", str19, "[-1, 11, 2, 2, 11, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 11, 3, 3, 11, -1]" + "'", str20, "[-1, 11, 3, 3, 11, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 11, 4, 4, 11, -1]" + "'", str21, "[-1, 11, 4, 4, 11, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 11, 5, 5, 11, -1]" + "'", str22, "[-1, 11, 5, 5, 11, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 11, 6, 6, 11, -1]" + "'", str23, "[-1, 11, 6, 6, 11, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 11, 7, 7, 11, -1]" + "'", str24, "[-1, 11, 7, 7, 11, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 11, 8, 8, 11, -1]" + "'", str25, "[-1, 11, 8, 8, 11, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 11, 9, 9, 11, -1]" + "'", str26, "[-1, 11, 9, 9, 11, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 12, 0, 0, 12, -1]" + "'", str27, "[-1, 12, 0, 0, 12, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 12, 1, 1, 12, -1]" + "'", str28, "[-1, 12, 1, 1, 12, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 12, 2, 2, 12, -1]" + "'", str29, "[-1, 12, 2, 2, 12, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 12, 3, 3, 12, -1]" + "'", str30, "[-1, 12, 3, 3, 12, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 12, 4, 4, 12, -1]" + "'", str31, "[-1, 12, 4, 4, 12, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 12, 5, 5, 12, -1]" + "'", str32, "[-1, 12, 5, 5, 12, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 12, 6, 6, 12, -1]" + "'", str33, "[-1, 12, 6, 6, 12, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 12, 7, 7, 12, -1]" + "'", str34, "[-1, 12, 7, 7, 12, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 12, 8, 8, 12, -1]" + "'", str35, "[-1, 12, 8, 8, 12, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 12, 9, 9, 12, -1]" + "'", str36, "[-1, 12, 9, 9, 12, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 13, 0, 0, 13, -1]" + "'", str37, "[-1, 13, 0, 0, 13, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 13, 1, 1, 13, -1]" + "'", str38, "[-1, 13, 1, 1, 13, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 13, 2, 2, 13, -1]" + "'", str39, "[-1, 13, 2, 2, 13, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 13, 3, 3, 13, -1]" + "'", str40, "[-1, 13, 3, 3, 13, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 13, 4, 4, 13, -1]" + "'", str41, "[-1, 13, 4, 4, 13, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 13, 5, 5, 13, -1]" + "'", str42, "[-1, 13, 5, 5, 13, -1]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1631");
        int[] intArray2 = new int[] { '4', (short) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass57 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[5, 5]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 2]" + "'", str3, "[53, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 3]" + "'", str4, "[54, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 4]" + "'", str5, "[55, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 5]" + "'", str6, "[56, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 6]" + "'", str7, "[57, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 7]" + "'", str8, "[58, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 8]" + "'", str9, "[59, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 9]" + "'", str10, "[60, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 0, 1]" + "'", str21, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 0, 1]" + "'", str31, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 3]" + "'", str34, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 4]" + "'", str35, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5, 5]" + "'", str36, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6, 6]" + "'", str37, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7, 7]" + "'", str38, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8, 8]" + "'", str39, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9, 9]" + "'", str40, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 0, 1]" + "'", str41, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 2]" + "'", str43, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 3]" + "'", str44, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 4]" + "'", str45, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 5]" + "'", str46, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6, 6]" + "'", str47, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7, 7]" + "'", str48, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8, 8]" + "'", str49, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9, 9]" + "'", str50, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 0, 1]" + "'", str51, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2, 2]" + "'", str53, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3, 3]" + "'", str54, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 4]" + "'", str55, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 5]" + "'", str56, "[5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1632");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass33 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 78, 58, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 77, 57, 100, 52]" + "'", str31, "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 78, 58, 100, 52]" + "'", str32, "[-1, 100, 78, 58, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1633");
        int[] intArray4 = new int[] { 'a', 100, (byte) 0, '4' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass59 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 4, 4, 57]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 101, 1, 52]" + "'", str5, "[97, 101, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 102, 2, 52]" + "'", str6, "[97, 102, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 103, 3, 52]" + "'", str7, "[97, 103, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 104, 4, 52]" + "'", str8, "[97, 104, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 105, 5, 52]" + "'", str9, "[97, 105, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 106, 6, 52]" + "'", str10, "[97, 106, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 107, 7, 52]" + "'", str11, "[97, 107, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 108, 8, 52]" + "'", str12, "[97, 108, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 109, 9, 52]" + "'", str13, "[97, 109, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[98, 0, 0, 53]" + "'", str14, "[98, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 1, 1, 53]" + "'", str15, "[98, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 2, 2, 53]" + "'", str16, "[98, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 3, 3, 53]" + "'", str17, "[98, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 4, 4, 53]" + "'", str18, "[98, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 5, 5, 53]" + "'", str19, "[98, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 6, 6, 53]" + "'", str20, "[98, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 7, 7, 53]" + "'", str21, "[98, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 8, 8, 53]" + "'", str22, "[98, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 9, 9, 53]" + "'", str23, "[98, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[99, 0, 0, 54]" + "'", str24, "[99, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 1, 1, 54]" + "'", str25, "[99, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 2, 2, 54]" + "'", str26, "[99, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 3, 3, 54]" + "'", str27, "[99, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 4, 4, 54]" + "'", str28, "[99, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 5, 5, 54]" + "'", str29, "[99, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 6, 6, 54]" + "'", str30, "[99, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 7, 7, 54]" + "'", str31, "[99, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 8, 8, 54]" + "'", str32, "[99, 8, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 9, 9, 54]" + "'", str33, "[99, 9, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 0, 55]" + "'", str34, "[100, 0, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 1, 1, 55]" + "'", str35, "[100, 1, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 2, 2, 55]" + "'", str36, "[100, 2, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 3, 55]" + "'", str37, "[100, 3, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 4, 4, 55]" + "'", str38, "[100, 4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 5, 5, 55]" + "'", str39, "[100, 5, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 6, 6, 55]" + "'", str40, "[100, 6, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 7, 7, 55]" + "'", str41, "[100, 7, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 8, 8, 55]" + "'", str42, "[100, 8, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 9, 9, 55]" + "'", str43, "[100, 9, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[101, 0, 0, 56]" + "'", str44, "[101, 0, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 1, 1, 56]" + "'", str45, "[101, 1, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 2, 2, 56]" + "'", str46, "[101, 2, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 3, 3, 56]" + "'", str47, "[101, 3, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 4, 4, 56]" + "'", str48, "[101, 4, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 5, 5, 56]" + "'", str49, "[101, 5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 6, 6, 56]" + "'", str50, "[101, 6, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 7, 7, 56]" + "'", str51, "[101, 7, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 8, 8, 56]" + "'", str52, "[101, 8, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 9, 9, 56]" + "'", str53, "[101, 9, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[102, 0, 0, 57]" + "'", str54, "[102, 0, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 1, 1, 57]" + "'", str55, "[102, 1, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 2, 2, 57]" + "'", str56, "[102, 2, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 3, 3, 57]" + "'", str57, "[102, 3, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 4, 4, 57]" + "'", str58, "[102, 4, 4, 57]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1634");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass47 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1635");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass5 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[12, 3]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1636");
        int[] intArray4 = new int[] { (byte) 0, 10, (short) 100, 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass40 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 45, 135, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 101, 97]" + "'", str5, "[0, 11, 101, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 102, 97]" + "'", str6, "[0, 12, 102, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 103, 97]" + "'", str7, "[0, 13, 103, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 104, 97]" + "'", str8, "[0, 14, 104, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 105, 97]" + "'", str9, "[0, 15, 105, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 106, 97]" + "'", str10, "[0, 16, 106, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 107, 97]" + "'", str11, "[0, 17, 107, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 108, 97]" + "'", str12, "[0, 18, 108, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 109, 97]" + "'", str13, "[0, 19, 109, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 110, 97]" + "'", str14, "[0, 20, 110, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 21, 111, 97]" + "'", str15, "[0, 21, 111, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 22, 112, 97]" + "'", str16, "[0, 22, 112, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 23, 113, 97]" + "'", str17, "[0, 23, 113, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 24, 114, 97]" + "'", str18, "[0, 24, 114, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 25, 115, 97]" + "'", str19, "[0, 25, 115, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 26, 116, 97]" + "'", str20, "[0, 26, 116, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 27, 117, 97]" + "'", str21, "[0, 27, 117, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 28, 118, 97]" + "'", str22, "[0, 28, 118, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 29, 119, 97]" + "'", str23, "[0, 29, 119, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 30, 120, 97]" + "'", str24, "[0, 30, 120, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 31, 121, 97]" + "'", str25, "[0, 31, 121, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 122, 97]" + "'", str26, "[0, 32, 122, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 33, 123, 97]" + "'", str27, "[0, 33, 123, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 34, 124, 97]" + "'", str28, "[0, 34, 124, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 125, 97]" + "'", str29, "[0, 35, 125, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 36, 126, 97]" + "'", str30, "[0, 36, 126, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 37, 127, 97]" + "'", str31, "[0, 37, 127, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 38, 128, 97]" + "'", str32, "[0, 38, 128, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 39, 129, 97]" + "'", str33, "[0, 39, 129, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 40, 130, 97]" + "'", str34, "[0, 40, 130, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 41, 131, 97]" + "'", str35, "[0, 41, 131, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 42, 132, 97]" + "'", str36, "[0, 42, 132, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 43, 133, 97]" + "'", str37, "[0, 43, 133, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 44, 134, 97]" + "'", str38, "[0, 44, 134, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 45, 135, 97]" + "'", str39, "[0, 45, 135, 97]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1637");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass7 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1638");
        int[] intArray4 = new int[] { '4', (byte) -1, 100, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass57 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 51, 152, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 101, 0]" + "'", str5, "[52, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 102, 0]" + "'", str6, "[52, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 103, 0]" + "'", str7, "[52, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 104, 0]" + "'", str8, "[52, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 105, 0]" + "'", str9, "[52, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 106, 0]" + "'", str10, "[52, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 107, 0]" + "'", str11, "[52, 6, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 108, 0]" + "'", str12, "[52, 7, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 109, 0]" + "'", str13, "[52, 8, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 110, 0]" + "'", str14, "[52, 9, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 111, 0]" + "'", str15, "[52, 10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 112, 0]" + "'", str16, "[52, 11, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 113, 0]" + "'", str17, "[52, 12, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 114, 0]" + "'", str18, "[52, 13, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 115, 0]" + "'", str19, "[52, 14, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 116, 0]" + "'", str20, "[52, 15, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 117, 0]" + "'", str21, "[52, 16, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 118, 0]" + "'", str22, "[52, 17, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 119, 0]" + "'", str23, "[52, 18, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 120, 0]" + "'", str24, "[52, 19, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 121, 0]" + "'", str25, "[52, 20, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 122, 0]" + "'", str26, "[52, 21, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 123, 0]" + "'", str27, "[52, 22, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 124, 0]" + "'", str28, "[52, 23, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 125, 0]" + "'", str29, "[52, 24, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 126, 0]" + "'", str30, "[52, 25, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 127, 0]" + "'", str31, "[52, 26, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 128, 0]" + "'", str32, "[52, 27, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 129, 0]" + "'", str33, "[52, 28, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 130, 0]" + "'", str34, "[52, 29, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 131, 0]" + "'", str35, "[52, 30, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 132, 0]" + "'", str36, "[52, 31, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 133, 0]" + "'", str37, "[52, 32, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 134, 0]" + "'", str38, "[52, 33, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 135, 0]" + "'", str39, "[52, 34, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 136, 0]" + "'", str40, "[52, 35, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 137, 0]" + "'", str41, "[52, 36, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 138, 0]" + "'", str42, "[52, 37, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 139, 0]" + "'", str43, "[52, 38, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 140, 0]" + "'", str44, "[52, 39, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 141, 0]" + "'", str45, "[52, 40, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 142, 0]" + "'", str46, "[52, 41, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 143, 0]" + "'", str47, "[52, 42, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 144, 0]" + "'", str48, "[52, 43, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 145, 0]" + "'", str49, "[52, 44, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 146, 0]" + "'", str50, "[52, 45, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 147, 0]" + "'", str51, "[52, 46, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 148, 0]" + "'", str52, "[52, 47, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 149, 0]" + "'", str53, "[52, 48, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 150, 0]" + "'", str54, "[52, 49, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 151, 0]" + "'", str55, "[52, 50, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 152, 0]" + "'", str56, "[52, 51, 152, 0]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1639");
        int[] intArray3 = new int[] { 100, 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass29 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[102, 6, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 2, 0]" + "'", str4, "[100, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 3, 0]" + "'", str5, "[100, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 4, 0]" + "'", str6, "[100, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 5, 0]" + "'", str7, "[100, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 6, 0]" + "'", str8, "[100, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 7, 0]" + "'", str9, "[100, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 8, 0]" + "'", str10, "[100, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 9, 0]" + "'", str11, "[100, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[101, 0, 1]" + "'", str12, "[101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 1, 1]" + "'", str13, "[101, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 2, 1]" + "'", str14, "[101, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 3, 1]" + "'", str15, "[101, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 4, 1]" + "'", str16, "[101, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 5, 1]" + "'", str17, "[101, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 6, 1]" + "'", str18, "[101, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 7, 1]" + "'", str19, "[101, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 8, 1]" + "'", str20, "[101, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 9, 1]" + "'", str21, "[101, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[102, 0, 2]" + "'", str22, "[102, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 1, 2]" + "'", str23, "[102, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 2, 2]" + "'", str24, "[102, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 3, 2]" + "'", str25, "[102, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 4, 2]" + "'", str26, "[102, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 5, 2]" + "'", str27, "[102, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 6, 2]" + "'", str28, "[102, 6, 2]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1640");
        int[] intArray4 = new int[] { 'a', 100, (byte) 0, '4' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass58 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 3, 3, 57]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 101, 1, 52]" + "'", str5, "[97, 101, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 102, 2, 52]" + "'", str6, "[97, 102, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 103, 3, 52]" + "'", str7, "[97, 103, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 104, 4, 52]" + "'", str8, "[97, 104, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 105, 5, 52]" + "'", str9, "[97, 105, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 106, 6, 52]" + "'", str10, "[97, 106, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 107, 7, 52]" + "'", str11, "[97, 107, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 108, 8, 52]" + "'", str12, "[97, 108, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 109, 9, 52]" + "'", str13, "[97, 109, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[98, 0, 0, 53]" + "'", str14, "[98, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 1, 1, 53]" + "'", str15, "[98, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 2, 2, 53]" + "'", str16, "[98, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 3, 3, 53]" + "'", str17, "[98, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 4, 4, 53]" + "'", str18, "[98, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 5, 5, 53]" + "'", str19, "[98, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 6, 6, 53]" + "'", str20, "[98, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 7, 7, 53]" + "'", str21, "[98, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 8, 8, 53]" + "'", str22, "[98, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 9, 9, 53]" + "'", str23, "[98, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[99, 0, 0, 54]" + "'", str24, "[99, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 1, 1, 54]" + "'", str25, "[99, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 2, 2, 54]" + "'", str26, "[99, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 3, 3, 54]" + "'", str27, "[99, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 4, 4, 54]" + "'", str28, "[99, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 5, 5, 54]" + "'", str29, "[99, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 6, 6, 54]" + "'", str30, "[99, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 7, 7, 54]" + "'", str31, "[99, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 8, 8, 54]" + "'", str32, "[99, 8, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 9, 9, 54]" + "'", str33, "[99, 9, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 0, 55]" + "'", str34, "[100, 0, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 1, 1, 55]" + "'", str35, "[100, 1, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 2, 2, 55]" + "'", str36, "[100, 2, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 3, 55]" + "'", str37, "[100, 3, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 4, 4, 55]" + "'", str38, "[100, 4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 5, 5, 55]" + "'", str39, "[100, 5, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 6, 6, 55]" + "'", str40, "[100, 6, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 7, 7, 55]" + "'", str41, "[100, 7, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 8, 8, 55]" + "'", str42, "[100, 8, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 9, 9, 55]" + "'", str43, "[100, 9, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[101, 0, 0, 56]" + "'", str44, "[101, 0, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 1, 1, 56]" + "'", str45, "[101, 1, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 2, 2, 56]" + "'", str46, "[101, 2, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 3, 3, 56]" + "'", str47, "[101, 3, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 4, 4, 56]" + "'", str48, "[101, 4, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 5, 5, 56]" + "'", str49, "[101, 5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 6, 6, 56]" + "'", str50, "[101, 6, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 7, 7, 56]" + "'", str51, "[101, 7, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 8, 8, 56]" + "'", str52, "[101, 8, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 9, 9, 56]" + "'", str53, "[101, 9, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[102, 0, 0, 57]" + "'", str54, "[102, 0, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 1, 1, 57]" + "'", str55, "[102, 1, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 2, 2, 57]" + "'", str56, "[102, 2, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 3, 3, 57]" + "'", str57, "[102, 3, 3, 57]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1641");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 10, (short) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass43 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, -1, 11, 100, -1]" + "'", str6, "[100, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, -1, 12, 100, -1]" + "'", str7, "[100, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, -1, 13, 100, -1]" + "'", str8, "[100, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, -1, 14, 100, -1]" + "'", str9, "[100, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, -1, 15, 100, -1]" + "'", str10, "[100, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, -1, 16, 100, -1]" + "'", str11, "[100, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, -1, 17, 100, -1]" + "'", str12, "[100, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, -1, 18, 100, -1]" + "'", str13, "[100, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, -1, 19, 100, -1]" + "'", str14, "[100, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, -1, 20, 100, -1]" + "'", str15, "[100, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, -1, 21, 100, -1]" + "'", str16, "[100, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, -1, 22, 100, -1]" + "'", str17, "[100, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, -1, 23, 100, -1]" + "'", str18, "[100, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, -1, 24, 100, -1]" + "'", str19, "[100, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, -1, 25, 100, -1]" + "'", str20, "[100, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, -1, 26, 100, -1]" + "'", str21, "[100, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, -1, 27, 100, -1]" + "'", str22, "[100, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, -1, 28, 100, -1]" + "'", str23, "[100, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, -1, 29, 100, -1]" + "'", str24, "[100, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, -1, 30, 100, -1]" + "'", str25, "[100, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, -1, 31, 100, -1]" + "'", str26, "[100, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, -1, 32, 100, -1]" + "'", str27, "[100, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, -1, 33, 100, -1]" + "'", str28, "[100, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, -1, 34, 100, -1]" + "'", str29, "[100, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, -1, 35, 100, -1]" + "'", str30, "[100, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, -1, 36, 100, -1]" + "'", str31, "[100, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, -1, 37, 100, -1]" + "'", str32, "[100, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, -1, 38, 100, -1]" + "'", str33, "[100, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, -1, 39, 100, -1]" + "'", str34, "[100, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, -1, 40, 100, -1]" + "'", str35, "[100, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, -1, 41, 100, -1]" + "'", str36, "[100, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, -1, 42, 100, -1]" + "'", str37, "[100, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, -1, 43, 100, -1]" + "'", str38, "[100, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, -1, 44, 100, -1]" + "'", str39, "[100, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, -1, 45, 100, -1]" + "'", str40, "[100, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, -1, 46, 100, -1]" + "'", str41, "[100, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, -1, 47, 100, -1]" + "'", str42, "[100, -1, 47, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1642");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass10 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[17, 8]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 6]" + "'", str7, "[15, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 7]" + "'", str8, "[16, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 8]" + "'", str9, "[17, 8]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1643");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass46 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[4]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1644");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass26 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1645");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass3 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1646");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass52 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[85]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1647");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass23 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 8, 101, 0]" + "'", str22, "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1648");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass49 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[56, 146]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 143]" + "'", str45, "[53, 143]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 144]" + "'", str46, "[54, 144]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[55, 145]" + "'", str47, "[55, 145]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 146]" + "'", str48, "[56, 146]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1649");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass53 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[86]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1650");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass27 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1651");
        int[] intArray5 = new int[] { (short) 1, ' ', (byte) -1, (short) 100, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass26 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 33, 9, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 32, 0, 100, 100]" + "'", str6, "[1, 32, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 32, 1, 100, 100]" + "'", str7, "[1, 32, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 32, 2, 100, 100]" + "'", str8, "[1, 32, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 32, 3, 100, 100]" + "'", str9, "[1, 32, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 32, 4, 100, 100]" + "'", str10, "[1, 32, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 32, 5, 100, 100]" + "'", str11, "[1, 32, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 32, 6, 100, 100]" + "'", str12, "[1, 32, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 32, 7, 100, 100]" + "'", str13, "[1, 32, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 32, 8, 100, 100]" + "'", str14, "[1, 32, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 32, 9, 100, 100]" + "'", str15, "[1, 32, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 33, 0, 101, 100]" + "'", str16, "[1, 33, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 33, 1, 101, 100]" + "'", str17, "[1, 33, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 33, 2, 101, 100]" + "'", str18, "[1, 33, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 33, 3, 101, 100]" + "'", str19, "[1, 33, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 33, 4, 101, 100]" + "'", str20, "[1, 33, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 33, 5, 101, 100]" + "'", str21, "[1, 33, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 33, 6, 101, 100]" + "'", str22, "[1, 33, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 33, 7, 101, 100]" + "'", str23, "[1, 33, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 33, 8, 101, 100]" + "'", str24, "[1, 33, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 33, 9, 101, 100]" + "'", str25, "[1, 33, 9, 101, 100]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1652");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass54 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[87]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[87]" + "'", str53, "[87]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1653");
        int[] intArray4 = new int[] { (short) 100, (byte) 0, 'a', (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass61 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 56, 153, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 1, 98, 0]" + "'", str5, "[100, 1, 98, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 2, 99, 0]" + "'", str6, "[100, 2, 99, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 3, 100, 0]" + "'", str7, "[100, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 4, 101, 0]" + "'", str8, "[100, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 5, 102, 0]" + "'", str9, "[100, 5, 102, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 6, 103, 0]" + "'", str10, "[100, 6, 103, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 7, 104, 0]" + "'", str11, "[100, 7, 104, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 8, 105, 0]" + "'", str12, "[100, 8, 105, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 9, 106, 0]" + "'", str13, "[100, 9, 106, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 107, 0]" + "'", str14, "[100, 10, 107, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 11, 108, 0]" + "'", str15, "[100, 11, 108, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 12, 109, 0]" + "'", str16, "[100, 12, 109, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 13, 110, 0]" + "'", str17, "[100, 13, 110, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 14, 111, 0]" + "'", str18, "[100, 14, 111, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 15, 112, 0]" + "'", str19, "[100, 15, 112, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 16, 113, 0]" + "'", str20, "[100, 16, 113, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 17, 114, 0]" + "'", str21, "[100, 17, 114, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 18, 115, 0]" + "'", str22, "[100, 18, 115, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 19, 116, 0]" + "'", str23, "[100, 19, 116, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 20, 117, 0]" + "'", str24, "[100, 20, 117, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 21, 118, 0]" + "'", str25, "[100, 21, 118, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 22, 119, 0]" + "'", str26, "[100, 22, 119, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 23, 120, 0]" + "'", str27, "[100, 23, 120, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 24, 121, 0]" + "'", str28, "[100, 24, 121, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 25, 122, 0]" + "'", str29, "[100, 25, 122, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 26, 123, 0]" + "'", str30, "[100, 26, 123, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 27, 124, 0]" + "'", str31, "[100, 27, 124, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 28, 125, 0]" + "'", str32, "[100, 28, 125, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 29, 126, 0]" + "'", str33, "[100, 29, 126, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 30, 127, 0]" + "'", str34, "[100, 30, 127, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 31, 128, 0]" + "'", str35, "[100, 31, 128, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 32, 129, 0]" + "'", str36, "[100, 32, 129, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 33, 130, 0]" + "'", str37, "[100, 33, 130, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 34, 131, 0]" + "'", str38, "[100, 34, 131, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 35, 132, 0]" + "'", str39, "[100, 35, 132, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 36, 133, 0]" + "'", str40, "[100, 36, 133, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 37, 134, 0]" + "'", str41, "[100, 37, 134, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 38, 135, 0]" + "'", str42, "[100, 38, 135, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 39, 136, 0]" + "'", str43, "[100, 39, 136, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 40, 137, 0]" + "'", str44, "[100, 40, 137, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 41, 138, 0]" + "'", str45, "[100, 41, 138, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 42, 139, 0]" + "'", str46, "[100, 42, 139, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 43, 140, 0]" + "'", str47, "[100, 43, 140, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 44, 141, 0]" + "'", str48, "[100, 44, 141, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 45, 142, 0]" + "'", str49, "[100, 45, 142, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 46, 143, 0]" + "'", str50, "[100, 46, 143, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 47, 144, 0]" + "'", str51, "[100, 47, 144, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 48, 145, 0]" + "'", str52, "[100, 48, 145, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 49, 146, 0]" + "'", str53, "[100, 49, 146, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 50, 147, 0]" + "'", str54, "[100, 50, 147, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 51, 148, 0]" + "'", str55, "[100, 51, 148, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 52, 149, 0]" + "'", str56, "[100, 52, 149, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 53, 150, 0]" + "'", str57, "[100, 53, 150, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 54, 151, 0]" + "'", str58, "[100, 54, 151, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 55, 152, 0]" + "'", str59, "[100, 55, 152, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 56, 153, 0]" + "'", str60, "[100, 56, 153, 0]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1654");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass56 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 50, 61, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 48, 59, 10]" + "'", str53, "[1, 48, 59, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 49, 60, 10]" + "'", str54, "[1, 49, 60, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 50, 61, 10]" + "'", str55, "[1, 50, 61, 10]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1655");
        int[] intArray4 = new int[] { (byte) 0, 10, (short) 100, 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass41 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 46, 136, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 101, 97]" + "'", str5, "[0, 11, 101, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 102, 97]" + "'", str6, "[0, 12, 102, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 103, 97]" + "'", str7, "[0, 13, 103, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 104, 97]" + "'", str8, "[0, 14, 104, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 105, 97]" + "'", str9, "[0, 15, 105, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 106, 97]" + "'", str10, "[0, 16, 106, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 107, 97]" + "'", str11, "[0, 17, 107, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 108, 97]" + "'", str12, "[0, 18, 108, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 109, 97]" + "'", str13, "[0, 19, 109, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 110, 97]" + "'", str14, "[0, 20, 110, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 21, 111, 97]" + "'", str15, "[0, 21, 111, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 22, 112, 97]" + "'", str16, "[0, 22, 112, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 23, 113, 97]" + "'", str17, "[0, 23, 113, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 24, 114, 97]" + "'", str18, "[0, 24, 114, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 25, 115, 97]" + "'", str19, "[0, 25, 115, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 26, 116, 97]" + "'", str20, "[0, 26, 116, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 27, 117, 97]" + "'", str21, "[0, 27, 117, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 28, 118, 97]" + "'", str22, "[0, 28, 118, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 29, 119, 97]" + "'", str23, "[0, 29, 119, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 30, 120, 97]" + "'", str24, "[0, 30, 120, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 31, 121, 97]" + "'", str25, "[0, 31, 121, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 122, 97]" + "'", str26, "[0, 32, 122, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 33, 123, 97]" + "'", str27, "[0, 33, 123, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 34, 124, 97]" + "'", str28, "[0, 34, 124, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 125, 97]" + "'", str29, "[0, 35, 125, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 36, 126, 97]" + "'", str30, "[0, 36, 126, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 37, 127, 97]" + "'", str31, "[0, 37, 127, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 38, 128, 97]" + "'", str32, "[0, 38, 128, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 39, 129, 97]" + "'", str33, "[0, 39, 129, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 40, 130, 97]" + "'", str34, "[0, 40, 130, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 41, 131, 97]" + "'", str35, "[0, 41, 131, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 42, 132, 97]" + "'", str36, "[0, 42, 132, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 43, 133, 97]" + "'", str37, "[0, 43, 133, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 44, 134, 97]" + "'", str38, "[0, 44, 134, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 45, 135, 97]" + "'", str39, "[0, 45, 135, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 46, 136, 97]" + "'", str40, "[0, 46, 136, 97]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1656");
        int[] intArray3 = new int[] { (short) 0, (short) 0, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass41 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 1, -1]" + "'", str4, "[0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 2, -1]" + "'", str5, "[0, 2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 3, -1]" + "'", str6, "[0, 3, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 4, -1]" + "'", str7, "[0, 4, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 5, -1]" + "'", str8, "[0, 5, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 6, -1]" + "'", str9, "[0, 6, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 7, -1]" + "'", str10, "[0, 7, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 8, -1]" + "'", str11, "[0, 8, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 9, -1]" + "'", str12, "[0, 9, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0]" + "'", str13, "[1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 0]" + "'", str14, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0]" + "'", str15, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 0]" + "'", str16, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 0]" + "'", str17, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 0]" + "'", str18, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 0]" + "'", str19, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 0]" + "'", str20, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 0]" + "'", str21, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 0]" + "'", str22, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 1]" + "'", str23, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1]" + "'", str24, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 1]" + "'", str25, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 1]" + "'", str26, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 1]" + "'", str27, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 1]" + "'", str28, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 1]" + "'", str29, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 1]" + "'", str30, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 1]" + "'", str31, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 1]" + "'", str32, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 2]" + "'", str33, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 2]" + "'", str34, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2]" + "'", str35, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 2]" + "'", str36, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 2]" + "'", str37, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 2]" + "'", str38, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 6, 2]" + "'", str39, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 7, 2]" + "'", str40, "[3, 7, 2]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1657");
        int[] intArray6 = new int[] { (byte) 0, (short) 1, 1, (short) 1, 1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass15 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 1, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 2, 2, 1, 0]" + "'", str7, "[0, 1, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 3, 3, 1, 0]" + "'", str8, "[0, 1, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 4, 4, 1, 0]" + "'", str9, "[0, 1, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 5, 5, 1, 0]" + "'", str10, "[0, 1, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 6, 6, 1, 0]" + "'", str11, "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 7, 7, 1, 0]" + "'", str12, "[0, 1, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 8, 8, 1, 0]" + "'", str13, "[0, 1, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 9, 9, 1, 0]" + "'", str14, "[0, 1, 9, 9, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1658");
        int[] intArray3 = new int[] { ' ', 1, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass42 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 9, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 2, -1]" + "'", str4, "[32, 2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 3, -1]" + "'", str5, "[32, 3, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 4, -1]" + "'", str6, "[32, 4, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 5, -1]" + "'", str7, "[32, 5, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 6, -1]" + "'", str8, "[32, 6, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 7, -1]" + "'", str9, "[32, 7, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 8, -1]" + "'", str10, "[32, 8, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 9, -1]" + "'", str11, "[32, 9, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[33, 0, 0]" + "'", str12, "[33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 1, 0]" + "'", str13, "[33, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 2, 0]" + "'", str14, "[33, 2, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 3, 0]" + "'", str15, "[33, 3, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 4, 0]" + "'", str16, "[33, 4, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 5, 0]" + "'", str17, "[33, 5, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 6, 0]" + "'", str18, "[33, 6, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 7, 0]" + "'", str19, "[33, 7, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 8, 0]" + "'", str20, "[33, 8, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 9, 0]" + "'", str21, "[33, 9, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[34, 0, 1]" + "'", str22, "[34, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 1, 1]" + "'", str23, "[34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 2, 1]" + "'", str24, "[34, 2, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 3, 1]" + "'", str25, "[34, 3, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 4, 1]" + "'", str26, "[34, 4, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 5, 1]" + "'", str27, "[34, 5, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 6, 1]" + "'", str28, "[34, 6, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 7, 1]" + "'", str29, "[34, 7, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 8, 1]" + "'", str30, "[34, 8, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 9, 1]" + "'", str31, "[34, 9, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 0, 2]" + "'", str32, "[35, 0, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 2]" + "'", str33, "[35, 1, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 2]" + "'", str34, "[35, 2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 3, 2]" + "'", str35, "[35, 3, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 4, 2]" + "'", str36, "[35, 4, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 5, 2]" + "'", str37, "[35, 5, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 6, 2]" + "'", str38, "[35, 6, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 7, 2]" + "'", str39, "[35, 7, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 8, 2]" + "'", str40, "[35, 8, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 9, 2]" + "'", str41, "[35, 9, 2]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1659");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass28 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1660");
        int[] intArray4 = new int[] { 100, (byte) 100, (byte) 100, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass9 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 101, 101, 0]" + "'", str5, "[100, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 102, 102, 0]" + "'", str6, "[100, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 103, 103, 0]" + "'", str7, "[100, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 104, 104, 0]" + "'", str8, "[100, 104, 104, 0]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1661");
        int[] intArray2 = new int[] { (short) -1, (short) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass53 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 1]" + "'", str3, "[0, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 2]" + "'", str4, "[1, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 3]" + "'", str5, "[2, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 4]" + "'", str6, "[3, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 5]" + "'", str7, "[4, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 6]" + "'", str8, "[5, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 7]" + "'", str9, "[6, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 8]" + "'", str10, "[7, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[8, 9]" + "'", str11, "[8, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1662");
        int[] intArray6 = new int[] { '#', (byte) -1, (byte) 1, (-1), (short) 100, 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass12 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, -1, 6, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, -1, 2, 0, 100, 100]" + "'", str7, "[35, -1, 2, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, -1, 3, 1, 100, 100]" + "'", str8, "[35, -1, 3, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, -1, 4, 2, 100, 100]" + "'", str9, "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, -1, 5, 3, 100, 100]" + "'", str10, "[35, -1, 5, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, -1, 6, 4, 100, 100]" + "'", str11, "[35, -1, 6, 4, 100, 100]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1663");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass15 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 7, 100]" + "'", str10, "[0, 106, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 8, 100]" + "'", str11, "[0, 107, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 9, 100]" + "'", str12, "[0, 108, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 101]" + "'", str13, "[1, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 1, 101]" + "'", str14, "[1, 1, 1, 101]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1664");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass57 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1665");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass12 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 107, 8, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 7, 100]" + "'", str10, "[0, 106, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 8, 100]" + "'", str11, "[0, 107, 8, 100]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1666");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass29 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1667");
        int[] intArray6 = new int[] { '#', (byte) -1, (byte) 1, (-1), (short) 100, 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass14 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, -1, 8, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, -1, 2, 0, 100, 100]" + "'", str7, "[35, -1, 2, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, -1, 3, 1, 100, 100]" + "'", str8, "[35, -1, 3, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, -1, 4, 2, 100, 100]" + "'", str9, "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, -1, 5, 3, 100, 100]" + "'", str10, "[35, -1, 5, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, -1, 6, 4, 100, 100]" + "'", str11, "[35, -1, 6, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, -1, 7, 5, 100, 100]" + "'", str12, "[35, -1, 7, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, -1, 8, 6, 100, 100]" + "'", str13, "[35, -1, 8, 6, 100, 100]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1668");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass22 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1669");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass17 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1670");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass55 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[88]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[87]" + "'", str53, "[87]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[88]" + "'", str54, "[88]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1671");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass8 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[15, 6]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 6]" + "'", str7, "[15, 6]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1672");
        int[] intArray4 = new int[] { (short) 100, (byte) 0, 'a', (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass59 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 54, 151, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 1, 98, 0]" + "'", str5, "[100, 1, 98, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 2, 99, 0]" + "'", str6, "[100, 2, 99, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 3, 100, 0]" + "'", str7, "[100, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 4, 101, 0]" + "'", str8, "[100, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 5, 102, 0]" + "'", str9, "[100, 5, 102, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 6, 103, 0]" + "'", str10, "[100, 6, 103, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 7, 104, 0]" + "'", str11, "[100, 7, 104, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 8, 105, 0]" + "'", str12, "[100, 8, 105, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 9, 106, 0]" + "'", str13, "[100, 9, 106, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 107, 0]" + "'", str14, "[100, 10, 107, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 11, 108, 0]" + "'", str15, "[100, 11, 108, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 12, 109, 0]" + "'", str16, "[100, 12, 109, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 13, 110, 0]" + "'", str17, "[100, 13, 110, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 14, 111, 0]" + "'", str18, "[100, 14, 111, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 15, 112, 0]" + "'", str19, "[100, 15, 112, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 16, 113, 0]" + "'", str20, "[100, 16, 113, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 17, 114, 0]" + "'", str21, "[100, 17, 114, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 18, 115, 0]" + "'", str22, "[100, 18, 115, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 19, 116, 0]" + "'", str23, "[100, 19, 116, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 20, 117, 0]" + "'", str24, "[100, 20, 117, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 21, 118, 0]" + "'", str25, "[100, 21, 118, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 22, 119, 0]" + "'", str26, "[100, 22, 119, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 23, 120, 0]" + "'", str27, "[100, 23, 120, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 24, 121, 0]" + "'", str28, "[100, 24, 121, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 25, 122, 0]" + "'", str29, "[100, 25, 122, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 26, 123, 0]" + "'", str30, "[100, 26, 123, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 27, 124, 0]" + "'", str31, "[100, 27, 124, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 28, 125, 0]" + "'", str32, "[100, 28, 125, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 29, 126, 0]" + "'", str33, "[100, 29, 126, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 30, 127, 0]" + "'", str34, "[100, 30, 127, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 31, 128, 0]" + "'", str35, "[100, 31, 128, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 32, 129, 0]" + "'", str36, "[100, 32, 129, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 33, 130, 0]" + "'", str37, "[100, 33, 130, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 34, 131, 0]" + "'", str38, "[100, 34, 131, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 35, 132, 0]" + "'", str39, "[100, 35, 132, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 36, 133, 0]" + "'", str40, "[100, 36, 133, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 37, 134, 0]" + "'", str41, "[100, 37, 134, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 38, 135, 0]" + "'", str42, "[100, 38, 135, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 39, 136, 0]" + "'", str43, "[100, 39, 136, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 40, 137, 0]" + "'", str44, "[100, 40, 137, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 41, 138, 0]" + "'", str45, "[100, 41, 138, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 42, 139, 0]" + "'", str46, "[100, 42, 139, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 43, 140, 0]" + "'", str47, "[100, 43, 140, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 44, 141, 0]" + "'", str48, "[100, 44, 141, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 45, 142, 0]" + "'", str49, "[100, 45, 142, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 46, 143, 0]" + "'", str50, "[100, 46, 143, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 47, 144, 0]" + "'", str51, "[100, 47, 144, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 48, 145, 0]" + "'", str52, "[100, 48, 145, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 49, 146, 0]" + "'", str53, "[100, 49, 146, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 50, 147, 0]" + "'", str54, "[100, 50, 147, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 51, 148, 0]" + "'", str55, "[100, 51, 148, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 52, 149, 0]" + "'", str56, "[100, 52, 149, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 53, 150, 0]" + "'", str57, "[100, 53, 150, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 54, 151, 0]" + "'", str58, "[100, 54, 151, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1673");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass56 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1674");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass53 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1675");
        int[] intArray4 = new int[] { '4', (byte) -1, 100, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass58 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 52, 153, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 101, 0]" + "'", str5, "[52, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 102, 0]" + "'", str6, "[52, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 103, 0]" + "'", str7, "[52, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 104, 0]" + "'", str8, "[52, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 105, 0]" + "'", str9, "[52, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 106, 0]" + "'", str10, "[52, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 107, 0]" + "'", str11, "[52, 6, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 108, 0]" + "'", str12, "[52, 7, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 109, 0]" + "'", str13, "[52, 8, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 110, 0]" + "'", str14, "[52, 9, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 111, 0]" + "'", str15, "[52, 10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 112, 0]" + "'", str16, "[52, 11, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 113, 0]" + "'", str17, "[52, 12, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 114, 0]" + "'", str18, "[52, 13, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 115, 0]" + "'", str19, "[52, 14, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 116, 0]" + "'", str20, "[52, 15, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 117, 0]" + "'", str21, "[52, 16, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 118, 0]" + "'", str22, "[52, 17, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 119, 0]" + "'", str23, "[52, 18, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 120, 0]" + "'", str24, "[52, 19, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 121, 0]" + "'", str25, "[52, 20, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 122, 0]" + "'", str26, "[52, 21, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 123, 0]" + "'", str27, "[52, 22, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 124, 0]" + "'", str28, "[52, 23, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 125, 0]" + "'", str29, "[52, 24, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 126, 0]" + "'", str30, "[52, 25, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 127, 0]" + "'", str31, "[52, 26, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 128, 0]" + "'", str32, "[52, 27, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 129, 0]" + "'", str33, "[52, 28, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 130, 0]" + "'", str34, "[52, 29, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 131, 0]" + "'", str35, "[52, 30, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 132, 0]" + "'", str36, "[52, 31, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 133, 0]" + "'", str37, "[52, 32, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 134, 0]" + "'", str38, "[52, 33, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 135, 0]" + "'", str39, "[52, 34, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 136, 0]" + "'", str40, "[52, 35, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 137, 0]" + "'", str41, "[52, 36, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 138, 0]" + "'", str42, "[52, 37, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 139, 0]" + "'", str43, "[52, 38, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 140, 0]" + "'", str44, "[52, 39, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 141, 0]" + "'", str45, "[52, 40, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 142, 0]" + "'", str46, "[52, 41, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 143, 0]" + "'", str47, "[52, 42, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 144, 0]" + "'", str48, "[52, 43, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 145, 0]" + "'", str49, "[52, 44, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 146, 0]" + "'", str50, "[52, 45, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 147, 0]" + "'", str51, "[52, 46, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 148, 0]" + "'", str52, "[52, 47, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 149, 0]" + "'", str53, "[52, 48, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 150, 0]" + "'", str54, "[52, 49, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 151, 0]" + "'", str55, "[52, 50, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 152, 0]" + "'", str56, "[52, 51, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 153, 0]" + "'", str57, "[52, 52, 153, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1676");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass28 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[5, 5]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1677");
        int[] intArray4 = new int[] { '4', (byte) -1, 100, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass60 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 54, 155, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 101, 0]" + "'", str5, "[52, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 102, 0]" + "'", str6, "[52, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 103, 0]" + "'", str7, "[52, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 104, 0]" + "'", str8, "[52, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 105, 0]" + "'", str9, "[52, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 106, 0]" + "'", str10, "[52, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 107, 0]" + "'", str11, "[52, 6, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 108, 0]" + "'", str12, "[52, 7, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 109, 0]" + "'", str13, "[52, 8, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 110, 0]" + "'", str14, "[52, 9, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 111, 0]" + "'", str15, "[52, 10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 112, 0]" + "'", str16, "[52, 11, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 113, 0]" + "'", str17, "[52, 12, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 114, 0]" + "'", str18, "[52, 13, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 115, 0]" + "'", str19, "[52, 14, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 116, 0]" + "'", str20, "[52, 15, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 117, 0]" + "'", str21, "[52, 16, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 118, 0]" + "'", str22, "[52, 17, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 119, 0]" + "'", str23, "[52, 18, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 120, 0]" + "'", str24, "[52, 19, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 121, 0]" + "'", str25, "[52, 20, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 122, 0]" + "'", str26, "[52, 21, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 123, 0]" + "'", str27, "[52, 22, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 124, 0]" + "'", str28, "[52, 23, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 125, 0]" + "'", str29, "[52, 24, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 126, 0]" + "'", str30, "[52, 25, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 127, 0]" + "'", str31, "[52, 26, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 128, 0]" + "'", str32, "[52, 27, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 129, 0]" + "'", str33, "[52, 28, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 130, 0]" + "'", str34, "[52, 29, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 131, 0]" + "'", str35, "[52, 30, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 132, 0]" + "'", str36, "[52, 31, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 133, 0]" + "'", str37, "[52, 32, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 134, 0]" + "'", str38, "[52, 33, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 135, 0]" + "'", str39, "[52, 34, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 136, 0]" + "'", str40, "[52, 35, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 137, 0]" + "'", str41, "[52, 36, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 138, 0]" + "'", str42, "[52, 37, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 139, 0]" + "'", str43, "[52, 38, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 140, 0]" + "'", str44, "[52, 39, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 141, 0]" + "'", str45, "[52, 40, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 142, 0]" + "'", str46, "[52, 41, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 143, 0]" + "'", str47, "[52, 42, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 144, 0]" + "'", str48, "[52, 43, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 145, 0]" + "'", str49, "[52, 44, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 146, 0]" + "'", str50, "[52, 45, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 147, 0]" + "'", str51, "[52, 46, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 148, 0]" + "'", str52, "[52, 47, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 149, 0]" + "'", str53, "[52, 48, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 150, 0]" + "'", str54, "[52, 49, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 151, 0]" + "'", str55, "[52, 50, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 152, 0]" + "'", str56, "[52, 51, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 153, 0]" + "'", str57, "[52, 52, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 154, 0]" + "'", str58, "[52, 53, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[52, 54, 155, 0]" + "'", str59, "[52, 54, 155, 0]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1678");
        int[] intArray6 = new int[] { (byte) 0, (short) 1, 1, (short) 1, 1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass12 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 2, 2, 1, 0]" + "'", str7, "[0, 1, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 3, 3, 1, 0]" + "'", str8, "[0, 1, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 4, 4, 1, 0]" + "'", str9, "[0, 1, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 5, 5, 1, 0]" + "'", str10, "[0, 1, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 6, 6, 1, 0]" + "'", str11, "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1679");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass48 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[5, 5]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1680");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass25 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 32, 29, 10, -1]" + "'", str24, "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1681");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass26 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 30, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 32, 29, 10, -1]" + "'", str24, "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 32, 30, 10, -1]" + "'", str25, "[10, 32, 30, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1682");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass40 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[138]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1683");
        int[] intArray5 = new int[] { (short) 100, (byte) 10, (byte) 100, 0, (byte) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass47 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 141, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 101, 0, 10]" + "'", str6, "[100, 10, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 102, 0, 10]" + "'", str7, "[100, 10, 102, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 103, 0, 10]" + "'", str8, "[100, 10, 103, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 104, 0, 10]" + "'", str9, "[100, 10, 104, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 105, 0, 10]" + "'", str10, "[100, 10, 105, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 106, 0, 10]" + "'", str11, "[100, 10, 106, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 107, 0, 10]" + "'", str12, "[100, 10, 107, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 108, 0, 10]" + "'", str13, "[100, 10, 108, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 109, 0, 10]" + "'", str14, "[100, 10, 109, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 110, 0, 10]" + "'", str15, "[100, 10, 110, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 111, 0, 10]" + "'", str16, "[100, 10, 111, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 112, 0, 10]" + "'", str17, "[100, 10, 112, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 113, 0, 10]" + "'", str18, "[100, 10, 113, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 114, 0, 10]" + "'", str19, "[100, 10, 114, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 115, 0, 10]" + "'", str20, "[100, 10, 115, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 116, 0, 10]" + "'", str21, "[100, 10, 116, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 117, 0, 10]" + "'", str22, "[100, 10, 117, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 118, 0, 10]" + "'", str23, "[100, 10, 118, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 119, 0, 10]" + "'", str24, "[100, 10, 119, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 120, 0, 10]" + "'", str25, "[100, 10, 120, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 121, 0, 10]" + "'", str26, "[100, 10, 121, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 122, 0, 10]" + "'", str27, "[100, 10, 122, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 123, 0, 10]" + "'", str28, "[100, 10, 123, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 124, 0, 10]" + "'", str29, "[100, 10, 124, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 125, 0, 10]" + "'", str30, "[100, 10, 125, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 126, 0, 10]" + "'", str31, "[100, 10, 126, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 127, 0, 10]" + "'", str32, "[100, 10, 127, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 128, 0, 10]" + "'", str33, "[100, 10, 128, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 129, 0, 10]" + "'", str34, "[100, 10, 129, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 130, 0, 10]" + "'", str35, "[100, 10, 130, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 131, 0, 10]" + "'", str36, "[100, 10, 131, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 132, 0, 10]" + "'", str37, "[100, 10, 132, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 133, 0, 10]" + "'", str38, "[100, 10, 133, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 134, 0, 10]" + "'", str39, "[100, 10, 134, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 135, 0, 10]" + "'", str40, "[100, 10, 135, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 136, 0, 10]" + "'", str41, "[100, 10, 136, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 137, 0, 10]" + "'", str42, "[100, 10, 137, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 138, 0, 10]" + "'", str43, "[100, 10, 138, 0, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 10, 139, 0, 10]" + "'", str44, "[100, 10, 139, 0, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 10, 140, 0, 10]" + "'", str45, "[100, 10, 140, 0, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 10, 141, 0, 10]" + "'", str46, "[100, 10, 141, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1684");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass50 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1685");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass29 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[6, 6]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1686");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass49 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[6, 6]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1687");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass4 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1688");
        int[] intArray4 = new int[] { (-1), '4', (byte) 100, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass62 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 109, 157, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 53, 101, 100]" + "'", str5, "[-1, 53, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 54, 102, 100]" + "'", str6, "[-1, 54, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 55, 103, 100]" + "'", str7, "[-1, 55, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 56, 104, 100]" + "'", str8, "[-1, 56, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 57, 105, 100]" + "'", str9, "[-1, 57, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 58, 106, 100]" + "'", str10, "[-1, 58, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 59, 107, 100]" + "'", str11, "[-1, 59, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 60, 108, 100]" + "'", str12, "[-1, 60, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 61, 109, 100]" + "'", str13, "[-1, 61, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 62, 110, 100]" + "'", str14, "[-1, 62, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 63, 111, 100]" + "'", str15, "[-1, 63, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 64, 112, 100]" + "'", str16, "[-1, 64, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 65, 113, 100]" + "'", str17, "[-1, 65, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 66, 114, 100]" + "'", str18, "[-1, 66, 114, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 67, 115, 100]" + "'", str19, "[-1, 67, 115, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 68, 116, 100]" + "'", str20, "[-1, 68, 116, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 69, 117, 100]" + "'", str21, "[-1, 69, 117, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 70, 118, 100]" + "'", str22, "[-1, 70, 118, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 71, 119, 100]" + "'", str23, "[-1, 71, 119, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 72, 120, 100]" + "'", str24, "[-1, 72, 120, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 73, 121, 100]" + "'", str25, "[-1, 73, 121, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 74, 122, 100]" + "'", str26, "[-1, 74, 122, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 75, 123, 100]" + "'", str27, "[-1, 75, 123, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 76, 124, 100]" + "'", str28, "[-1, 76, 124, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 77, 125, 100]" + "'", str29, "[-1, 77, 125, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 78, 126, 100]" + "'", str30, "[-1, 78, 126, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 79, 127, 100]" + "'", str31, "[-1, 79, 127, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 80, 128, 100]" + "'", str32, "[-1, 80, 128, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 81, 129, 100]" + "'", str33, "[-1, 81, 129, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 82, 130, 100]" + "'", str34, "[-1, 82, 130, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 83, 131, 100]" + "'", str35, "[-1, 83, 131, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 84, 132, 100]" + "'", str36, "[-1, 84, 132, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 85, 133, 100]" + "'", str37, "[-1, 85, 133, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 86, 134, 100]" + "'", str38, "[-1, 86, 134, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 87, 135, 100]" + "'", str39, "[-1, 87, 135, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 88, 136, 100]" + "'", str40, "[-1, 88, 136, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 89, 137, 100]" + "'", str41, "[-1, 89, 137, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 90, 138, 100]" + "'", str42, "[-1, 90, 138, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 91, 139, 100]" + "'", str43, "[-1, 91, 139, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 92, 140, 100]" + "'", str44, "[-1, 92, 140, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 93, 141, 100]" + "'", str45, "[-1, 93, 141, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 94, 142, 100]" + "'", str46, "[-1, 94, 142, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 95, 143, 100]" + "'", str47, "[-1, 95, 143, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 96, 144, 100]" + "'", str48, "[-1, 96, 144, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 97, 145, 100]" + "'", str49, "[-1, 97, 145, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 98, 146, 100]" + "'", str50, "[-1, 98, 146, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 99, 147, 100]" + "'", str51, "[-1, 99, 147, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 148, 100]" + "'", str52, "[-1, 100, 148, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 101, 149, 100]" + "'", str53, "[-1, 101, 149, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 102, 150, 100]" + "'", str54, "[-1, 102, 150, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 103, 151, 100]" + "'", str55, "[-1, 103, 151, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 104, 152, 100]" + "'", str56, "[-1, 104, 152, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 105, 153, 100]" + "'", str57, "[-1, 105, 153, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 106, 154, 100]" + "'", str58, "[-1, 106, 154, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 107, 155, 100]" + "'", str59, "[-1, 107, 155, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 108, 156, 100]" + "'", str60, "[-1, 108, 156, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 109, 157, 100]" + "'", str61, "[-1, 109, 157, 100]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1689");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass55 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1690");
        int[] intArray3 = new int[] { 100, 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass28 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[102, 5, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 2, 0]" + "'", str4, "[100, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 3, 0]" + "'", str5, "[100, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 4, 0]" + "'", str6, "[100, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 5, 0]" + "'", str7, "[100, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 6, 0]" + "'", str8, "[100, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 7, 0]" + "'", str9, "[100, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 8, 0]" + "'", str10, "[100, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 9, 0]" + "'", str11, "[100, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[101, 0, 1]" + "'", str12, "[101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 1, 1]" + "'", str13, "[101, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 2, 1]" + "'", str14, "[101, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 3, 1]" + "'", str15, "[101, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 4, 1]" + "'", str16, "[101, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 5, 1]" + "'", str17, "[101, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 6, 1]" + "'", str18, "[101, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 7, 1]" + "'", str19, "[101, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 8, 1]" + "'", str20, "[101, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 9, 1]" + "'", str21, "[101, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[102, 0, 2]" + "'", str22, "[102, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 1, 2]" + "'", str23, "[102, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 2, 2]" + "'", str24, "[102, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 3, 2]" + "'", str25, "[102, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 4, 2]" + "'", str26, "[102, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 5, 2]" + "'", str27, "[102, 5, 2]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1691");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass21 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1692");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass8 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1693");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass60 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 54, 65, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 48, 59, 10]" + "'", str53, "[1, 48, 59, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 49, 60, 10]" + "'", str54, "[1, 49, 60, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 50, 61, 10]" + "'", str55, "[1, 50, 61, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 51, 62, 10]" + "'", str56, "[1, 51, 62, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 52, 63, 10]" + "'", str57, "[1, 52, 63, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 53, 64, 10]" + "'", str58, "[1, 53, 64, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 54, 65, 10]" + "'", str59, "[1, 54, 65, 10]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1694");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass42 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[140]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1695");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass58 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[5]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1696");
        int[] intArray3 = new int[] { (byte) 1, (short) 0, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass58 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1697");
        int[] intArray4 = new int[] { '4', (byte) -1, 100, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass61 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 55, 156, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 101, 0]" + "'", str5, "[52, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 102, 0]" + "'", str6, "[52, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 103, 0]" + "'", str7, "[52, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 104, 0]" + "'", str8, "[52, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 105, 0]" + "'", str9, "[52, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 106, 0]" + "'", str10, "[52, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 107, 0]" + "'", str11, "[52, 6, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 108, 0]" + "'", str12, "[52, 7, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 109, 0]" + "'", str13, "[52, 8, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 110, 0]" + "'", str14, "[52, 9, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 111, 0]" + "'", str15, "[52, 10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 112, 0]" + "'", str16, "[52, 11, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 113, 0]" + "'", str17, "[52, 12, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 114, 0]" + "'", str18, "[52, 13, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 115, 0]" + "'", str19, "[52, 14, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 116, 0]" + "'", str20, "[52, 15, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 117, 0]" + "'", str21, "[52, 16, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 118, 0]" + "'", str22, "[52, 17, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 119, 0]" + "'", str23, "[52, 18, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 120, 0]" + "'", str24, "[52, 19, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 121, 0]" + "'", str25, "[52, 20, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 122, 0]" + "'", str26, "[52, 21, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 123, 0]" + "'", str27, "[52, 22, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 124, 0]" + "'", str28, "[52, 23, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 125, 0]" + "'", str29, "[52, 24, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 126, 0]" + "'", str30, "[52, 25, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 127, 0]" + "'", str31, "[52, 26, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 128, 0]" + "'", str32, "[52, 27, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 129, 0]" + "'", str33, "[52, 28, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 130, 0]" + "'", str34, "[52, 29, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 131, 0]" + "'", str35, "[52, 30, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 132, 0]" + "'", str36, "[52, 31, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 133, 0]" + "'", str37, "[52, 32, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 134, 0]" + "'", str38, "[52, 33, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 135, 0]" + "'", str39, "[52, 34, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 136, 0]" + "'", str40, "[52, 35, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 137, 0]" + "'", str41, "[52, 36, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 138, 0]" + "'", str42, "[52, 37, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 139, 0]" + "'", str43, "[52, 38, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 140, 0]" + "'", str44, "[52, 39, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 141, 0]" + "'", str45, "[52, 40, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 142, 0]" + "'", str46, "[52, 41, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 143, 0]" + "'", str47, "[52, 42, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 144, 0]" + "'", str48, "[52, 43, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 145, 0]" + "'", str49, "[52, 44, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 146, 0]" + "'", str50, "[52, 45, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 147, 0]" + "'", str51, "[52, 46, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 148, 0]" + "'", str52, "[52, 47, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 149, 0]" + "'", str53, "[52, 48, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 150, 0]" + "'", str54, "[52, 49, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 151, 0]" + "'", str55, "[52, 50, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 152, 0]" + "'", str56, "[52, 51, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 153, 0]" + "'", str57, "[52, 52, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 154, 0]" + "'", str58, "[52, 53, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[52, 54, 155, 0]" + "'", str59, "[52, 54, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[52, 55, 156, 0]" + "'", str60, "[52, 55, 156, 0]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1698");
        int[] intArray3 = new int[] { (byte) 1, (short) 0, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass57 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1699");
        int[] intArray4 = new int[] { 'a', 100, (byte) 0, '4' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass60 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 5, 5, 57]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 101, 1, 52]" + "'", str5, "[97, 101, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 102, 2, 52]" + "'", str6, "[97, 102, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 103, 3, 52]" + "'", str7, "[97, 103, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 104, 4, 52]" + "'", str8, "[97, 104, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 105, 5, 52]" + "'", str9, "[97, 105, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 106, 6, 52]" + "'", str10, "[97, 106, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 107, 7, 52]" + "'", str11, "[97, 107, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 108, 8, 52]" + "'", str12, "[97, 108, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 109, 9, 52]" + "'", str13, "[97, 109, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[98, 0, 0, 53]" + "'", str14, "[98, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 1, 1, 53]" + "'", str15, "[98, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 2, 2, 53]" + "'", str16, "[98, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 3, 3, 53]" + "'", str17, "[98, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 4, 4, 53]" + "'", str18, "[98, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 5, 5, 53]" + "'", str19, "[98, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 6, 6, 53]" + "'", str20, "[98, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 7, 7, 53]" + "'", str21, "[98, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 8, 8, 53]" + "'", str22, "[98, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 9, 9, 53]" + "'", str23, "[98, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[99, 0, 0, 54]" + "'", str24, "[99, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 1, 1, 54]" + "'", str25, "[99, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 2, 2, 54]" + "'", str26, "[99, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 3, 3, 54]" + "'", str27, "[99, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 4, 4, 54]" + "'", str28, "[99, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 5, 5, 54]" + "'", str29, "[99, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 6, 6, 54]" + "'", str30, "[99, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 7, 7, 54]" + "'", str31, "[99, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 8, 8, 54]" + "'", str32, "[99, 8, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 9, 9, 54]" + "'", str33, "[99, 9, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 0, 55]" + "'", str34, "[100, 0, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 1, 1, 55]" + "'", str35, "[100, 1, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 2, 2, 55]" + "'", str36, "[100, 2, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 3, 55]" + "'", str37, "[100, 3, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 4, 4, 55]" + "'", str38, "[100, 4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 5, 5, 55]" + "'", str39, "[100, 5, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 6, 6, 55]" + "'", str40, "[100, 6, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 7, 7, 55]" + "'", str41, "[100, 7, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 8, 8, 55]" + "'", str42, "[100, 8, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 9, 9, 55]" + "'", str43, "[100, 9, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[101, 0, 0, 56]" + "'", str44, "[101, 0, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 1, 1, 56]" + "'", str45, "[101, 1, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 2, 2, 56]" + "'", str46, "[101, 2, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 3, 3, 56]" + "'", str47, "[101, 3, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 4, 4, 56]" + "'", str48, "[101, 4, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 5, 5, 56]" + "'", str49, "[101, 5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 6, 6, 56]" + "'", str50, "[101, 6, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 7, 7, 56]" + "'", str51, "[101, 7, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 8, 8, 56]" + "'", str52, "[101, 8, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 9, 9, 56]" + "'", str53, "[101, 9, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[102, 0, 0, 57]" + "'", str54, "[102, 0, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 1, 1, 57]" + "'", str55, "[102, 1, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 2, 2, 57]" + "'", str56, "[102, 2, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 3, 3, 57]" + "'", str57, "[102, 3, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 4, 4, 57]" + "'", str58, "[102, 4, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 5, 5, 57]" + "'", str59, "[102, 5, 5, 57]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1700");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass47 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[5]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1701");
        int[] intArray4 = new int[] { '4', (byte) -1, 100, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass56 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 50, 151, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 101, 0]" + "'", str5, "[52, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 102, 0]" + "'", str6, "[52, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 103, 0]" + "'", str7, "[52, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 104, 0]" + "'", str8, "[52, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 105, 0]" + "'", str9, "[52, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 106, 0]" + "'", str10, "[52, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 107, 0]" + "'", str11, "[52, 6, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 108, 0]" + "'", str12, "[52, 7, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 109, 0]" + "'", str13, "[52, 8, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 110, 0]" + "'", str14, "[52, 9, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 111, 0]" + "'", str15, "[52, 10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 112, 0]" + "'", str16, "[52, 11, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 113, 0]" + "'", str17, "[52, 12, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 114, 0]" + "'", str18, "[52, 13, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 115, 0]" + "'", str19, "[52, 14, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 116, 0]" + "'", str20, "[52, 15, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 117, 0]" + "'", str21, "[52, 16, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 118, 0]" + "'", str22, "[52, 17, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 119, 0]" + "'", str23, "[52, 18, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 120, 0]" + "'", str24, "[52, 19, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 121, 0]" + "'", str25, "[52, 20, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 122, 0]" + "'", str26, "[52, 21, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 123, 0]" + "'", str27, "[52, 22, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 124, 0]" + "'", str28, "[52, 23, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 125, 0]" + "'", str29, "[52, 24, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 126, 0]" + "'", str30, "[52, 25, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 127, 0]" + "'", str31, "[52, 26, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 128, 0]" + "'", str32, "[52, 27, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 129, 0]" + "'", str33, "[52, 28, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 130, 0]" + "'", str34, "[52, 29, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 131, 0]" + "'", str35, "[52, 30, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 132, 0]" + "'", str36, "[52, 31, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 133, 0]" + "'", str37, "[52, 32, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 134, 0]" + "'", str38, "[52, 33, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 135, 0]" + "'", str39, "[52, 34, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 136, 0]" + "'", str40, "[52, 35, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 137, 0]" + "'", str41, "[52, 36, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 138, 0]" + "'", str42, "[52, 37, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 139, 0]" + "'", str43, "[52, 38, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 140, 0]" + "'", str44, "[52, 39, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 141, 0]" + "'", str45, "[52, 40, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 142, 0]" + "'", str46, "[52, 41, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 143, 0]" + "'", str47, "[52, 42, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 144, 0]" + "'", str48, "[52, 43, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 145, 0]" + "'", str49, "[52, 44, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 146, 0]" + "'", str50, "[52, 45, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 147, 0]" + "'", str51, "[52, 46, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 148, 0]" + "'", str52, "[52, 47, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 149, 0]" + "'", str53, "[52, 48, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 150, 0]" + "'", str54, "[52, 49, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 151, 0]" + "'", str55, "[52, 50, 151, 0]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1702");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass12 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1703");
        int[] intArray0 = new int[] {};
        java.lang.String str1 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.Class<?> wildcardClass58 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "[1, 1]" + "'", str1, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1, 1]" + "'", str2, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 1]" + "'", str3, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1]" + "'", str4, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1]" + "'", str5, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1]" + "'", str6, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1]" + "'", str7, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1]" + "'", str8, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1]" + "'", str9, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1]" + "'", str15, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1]" + "'", str16, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1]" + "'", str17, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1]" + "'", str18, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1]" + "'", str19, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1]" + "'", str25, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1]" + "'", str26, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1]" + "'", str27, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1]" + "'", str28, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1]" + "'", str29, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1]" + "'", str31, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1]" + "'", str35, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1]" + "'", str36, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1]" + "'", str37, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1]" + "'", str38, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1]" + "'", str39, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1]" + "'", str40, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1]" + "'", str41, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1]" + "'", str45, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1]" + "'", str46, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1]" + "'", str47, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1]" + "'", str48, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1]" + "'", str49, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1]" + "'", str50, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1]" + "'", str51, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1]" + "'", str55, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1]" + "'", str56, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1]" + "'", str57, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1704");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 10, (short) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass44 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 48, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, -1, 11, 100, -1]" + "'", str6, "[100, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, -1, 12, 100, -1]" + "'", str7, "[100, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, -1, 13, 100, -1]" + "'", str8, "[100, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, -1, 14, 100, -1]" + "'", str9, "[100, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, -1, 15, 100, -1]" + "'", str10, "[100, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, -1, 16, 100, -1]" + "'", str11, "[100, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, -1, 17, 100, -1]" + "'", str12, "[100, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, -1, 18, 100, -1]" + "'", str13, "[100, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, -1, 19, 100, -1]" + "'", str14, "[100, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, -1, 20, 100, -1]" + "'", str15, "[100, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, -1, 21, 100, -1]" + "'", str16, "[100, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, -1, 22, 100, -1]" + "'", str17, "[100, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, -1, 23, 100, -1]" + "'", str18, "[100, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, -1, 24, 100, -1]" + "'", str19, "[100, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, -1, 25, 100, -1]" + "'", str20, "[100, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, -1, 26, 100, -1]" + "'", str21, "[100, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, -1, 27, 100, -1]" + "'", str22, "[100, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, -1, 28, 100, -1]" + "'", str23, "[100, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, -1, 29, 100, -1]" + "'", str24, "[100, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, -1, 30, 100, -1]" + "'", str25, "[100, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, -1, 31, 100, -1]" + "'", str26, "[100, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, -1, 32, 100, -1]" + "'", str27, "[100, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, -1, 33, 100, -1]" + "'", str28, "[100, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, -1, 34, 100, -1]" + "'", str29, "[100, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, -1, 35, 100, -1]" + "'", str30, "[100, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, -1, 36, 100, -1]" + "'", str31, "[100, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, -1, 37, 100, -1]" + "'", str32, "[100, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, -1, 38, 100, -1]" + "'", str33, "[100, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, -1, 39, 100, -1]" + "'", str34, "[100, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, -1, 40, 100, -1]" + "'", str35, "[100, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, -1, 41, 100, -1]" + "'", str36, "[100, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, -1, 42, 100, -1]" + "'", str37, "[100, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, -1, 43, 100, -1]" + "'", str38, "[100, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, -1, 44, 100, -1]" + "'", str39, "[100, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, -1, 45, 100, -1]" + "'", str40, "[100, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, -1, 46, 100, -1]" + "'", str41, "[100, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, -1, 47, 100, -1]" + "'", str42, "[100, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, -1, 48, 100, -1]" + "'", str43, "[100, -1, 48, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1705");
        int[] intArray4 = new int[] { '4', (byte) -1, 100, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass55 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 49, 150, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 101, 0]" + "'", str5, "[52, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 102, 0]" + "'", str6, "[52, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 103, 0]" + "'", str7, "[52, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 104, 0]" + "'", str8, "[52, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 105, 0]" + "'", str9, "[52, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 106, 0]" + "'", str10, "[52, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 107, 0]" + "'", str11, "[52, 6, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 108, 0]" + "'", str12, "[52, 7, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 109, 0]" + "'", str13, "[52, 8, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 110, 0]" + "'", str14, "[52, 9, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 111, 0]" + "'", str15, "[52, 10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 112, 0]" + "'", str16, "[52, 11, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 113, 0]" + "'", str17, "[52, 12, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 114, 0]" + "'", str18, "[52, 13, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 115, 0]" + "'", str19, "[52, 14, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 116, 0]" + "'", str20, "[52, 15, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 117, 0]" + "'", str21, "[52, 16, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 118, 0]" + "'", str22, "[52, 17, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 119, 0]" + "'", str23, "[52, 18, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 120, 0]" + "'", str24, "[52, 19, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 121, 0]" + "'", str25, "[52, 20, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 122, 0]" + "'", str26, "[52, 21, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 123, 0]" + "'", str27, "[52, 22, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 124, 0]" + "'", str28, "[52, 23, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 125, 0]" + "'", str29, "[52, 24, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 126, 0]" + "'", str30, "[52, 25, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 127, 0]" + "'", str31, "[52, 26, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 128, 0]" + "'", str32, "[52, 27, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 129, 0]" + "'", str33, "[52, 28, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 130, 0]" + "'", str34, "[52, 29, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 131, 0]" + "'", str35, "[52, 30, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 132, 0]" + "'", str36, "[52, 31, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 133, 0]" + "'", str37, "[52, 32, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 134, 0]" + "'", str38, "[52, 33, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 135, 0]" + "'", str39, "[52, 34, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 136, 0]" + "'", str40, "[52, 35, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 137, 0]" + "'", str41, "[52, 36, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 138, 0]" + "'", str42, "[52, 37, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 139, 0]" + "'", str43, "[52, 38, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 140, 0]" + "'", str44, "[52, 39, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 141, 0]" + "'", str45, "[52, 40, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 142, 0]" + "'", str46, "[52, 41, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 143, 0]" + "'", str47, "[52, 42, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 144, 0]" + "'", str48, "[52, 43, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 145, 0]" + "'", str49, "[52, 44, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 146, 0]" + "'", str50, "[52, 45, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 147, 0]" + "'", str51, "[52, 46, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 148, 0]" + "'", str52, "[52, 47, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 149, 0]" + "'", str53, "[52, 48, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 150, 0]" + "'", str54, "[52, 49, 150, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1706");
        int[] intArray4 = new int[] { 'a', 100, (byte) 0, '4' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass61 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 101, 1, 52]" + "'", str5, "[97, 101, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 102, 2, 52]" + "'", str6, "[97, 102, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 103, 3, 52]" + "'", str7, "[97, 103, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 104, 4, 52]" + "'", str8, "[97, 104, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 105, 5, 52]" + "'", str9, "[97, 105, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 106, 6, 52]" + "'", str10, "[97, 106, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 107, 7, 52]" + "'", str11, "[97, 107, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 108, 8, 52]" + "'", str12, "[97, 108, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 109, 9, 52]" + "'", str13, "[97, 109, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[98, 0, 0, 53]" + "'", str14, "[98, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 1, 1, 53]" + "'", str15, "[98, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 2, 2, 53]" + "'", str16, "[98, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 3, 3, 53]" + "'", str17, "[98, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 4, 4, 53]" + "'", str18, "[98, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 5, 5, 53]" + "'", str19, "[98, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 6, 6, 53]" + "'", str20, "[98, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 7, 7, 53]" + "'", str21, "[98, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 8, 8, 53]" + "'", str22, "[98, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 9, 9, 53]" + "'", str23, "[98, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[99, 0, 0, 54]" + "'", str24, "[99, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 1, 1, 54]" + "'", str25, "[99, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 2, 2, 54]" + "'", str26, "[99, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 3, 3, 54]" + "'", str27, "[99, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 4, 4, 54]" + "'", str28, "[99, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 5, 5, 54]" + "'", str29, "[99, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 6, 6, 54]" + "'", str30, "[99, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 7, 7, 54]" + "'", str31, "[99, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 8, 8, 54]" + "'", str32, "[99, 8, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 9, 9, 54]" + "'", str33, "[99, 9, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 0, 55]" + "'", str34, "[100, 0, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 1, 1, 55]" + "'", str35, "[100, 1, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 2, 2, 55]" + "'", str36, "[100, 2, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 3, 55]" + "'", str37, "[100, 3, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 4, 4, 55]" + "'", str38, "[100, 4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 5, 5, 55]" + "'", str39, "[100, 5, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 6, 6, 55]" + "'", str40, "[100, 6, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 7, 7, 55]" + "'", str41, "[100, 7, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 8, 8, 55]" + "'", str42, "[100, 8, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 9, 9, 55]" + "'", str43, "[100, 9, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[101, 0, 0, 56]" + "'", str44, "[101, 0, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 1, 1, 56]" + "'", str45, "[101, 1, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 2, 2, 56]" + "'", str46, "[101, 2, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 3, 3, 56]" + "'", str47, "[101, 3, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 4, 4, 56]" + "'", str48, "[101, 4, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 5, 5, 56]" + "'", str49, "[101, 5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 6, 6, 56]" + "'", str50, "[101, 6, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 7, 7, 56]" + "'", str51, "[101, 7, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 8, 8, 56]" + "'", str52, "[101, 8, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 9, 9, 56]" + "'", str53, "[101, 9, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[102, 0, 0, 57]" + "'", str54, "[102, 0, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 1, 1, 57]" + "'", str55, "[102, 1, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 2, 2, 57]" + "'", str56, "[102, 2, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 3, 3, 57]" + "'", str57, "[102, 3, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 4, 4, 57]" + "'", str58, "[102, 4, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 5, 5, 57]" + "'", str59, "[102, 5, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 6, 6, 57]" + "'", str60, "[102, 6, 6, 57]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1707");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass54 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1708");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass45 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1709");
        int[] intArray5 = new int[] { (short) 1, ' ', (byte) -1, (short) 100, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass28 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 34, 1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 32, 0, 100, 100]" + "'", str6, "[1, 32, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 32, 1, 100, 100]" + "'", str7, "[1, 32, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 32, 2, 100, 100]" + "'", str8, "[1, 32, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 32, 3, 100, 100]" + "'", str9, "[1, 32, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 32, 4, 100, 100]" + "'", str10, "[1, 32, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 32, 5, 100, 100]" + "'", str11, "[1, 32, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 32, 6, 100, 100]" + "'", str12, "[1, 32, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 32, 7, 100, 100]" + "'", str13, "[1, 32, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 32, 8, 100, 100]" + "'", str14, "[1, 32, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 32, 9, 100, 100]" + "'", str15, "[1, 32, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 33, 0, 101, 100]" + "'", str16, "[1, 33, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 33, 1, 101, 100]" + "'", str17, "[1, 33, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 33, 2, 101, 100]" + "'", str18, "[1, 33, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 33, 3, 101, 100]" + "'", str19, "[1, 33, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 33, 4, 101, 100]" + "'", str20, "[1, 33, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 33, 5, 101, 100]" + "'", str21, "[1, 33, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 33, 6, 101, 100]" + "'", str22, "[1, 33, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 33, 7, 101, 100]" + "'", str23, "[1, 33, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 33, 8, 101, 100]" + "'", str24, "[1, 33, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 33, 9, 101, 100]" + "'", str25, "[1, 33, 9, 101, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 34, 0, 102, 100]" + "'", str26, "[1, 34, 0, 102, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 34, 1, 102, 100]" + "'", str27, "[1, 34, 1, 102, 100]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1710");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass23 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 0]" + "'", str22, "[1, 7, 7, 0]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1711");
        int[] intArray6 = new int[] { (-1), 10, (short) -1, (short) -1, (short) 10, (short) -1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass45 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 13, 7, 7, 13, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 10, 0, 0, 10, -1]" + "'", str7, "[-1, 10, 0, 0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 10, 1, 1, 10, -1]" + "'", str8, "[-1, 10, 1, 1, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 10, 2, 2, 10, -1]" + "'", str9, "[-1, 10, 2, 2, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 10, 3, 3, 10, -1]" + "'", str10, "[-1, 10, 3, 3, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 10, 4, 4, 10, -1]" + "'", str11, "[-1, 10, 4, 4, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 10, 5, 5, 10, -1]" + "'", str12, "[-1, 10, 5, 5, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 6, 6, 10, -1]" + "'", str13, "[-1, 10, 6, 6, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 7, 7, 10, -1]" + "'", str14, "[-1, 10, 7, 7, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 10, 8, 8, 10, -1]" + "'", str15, "[-1, 10, 8, 8, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 10, 9, 9, 10, -1]" + "'", str16, "[-1, 10, 9, 9, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 11, 0, 0, 11, -1]" + "'", str17, "[-1, 11, 0, 0, 11, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 11, 1, 1, 11, -1]" + "'", str18, "[-1, 11, 1, 1, 11, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 11, 2, 2, 11, -1]" + "'", str19, "[-1, 11, 2, 2, 11, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 11, 3, 3, 11, -1]" + "'", str20, "[-1, 11, 3, 3, 11, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 11, 4, 4, 11, -1]" + "'", str21, "[-1, 11, 4, 4, 11, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 11, 5, 5, 11, -1]" + "'", str22, "[-1, 11, 5, 5, 11, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 11, 6, 6, 11, -1]" + "'", str23, "[-1, 11, 6, 6, 11, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 11, 7, 7, 11, -1]" + "'", str24, "[-1, 11, 7, 7, 11, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 11, 8, 8, 11, -1]" + "'", str25, "[-1, 11, 8, 8, 11, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 11, 9, 9, 11, -1]" + "'", str26, "[-1, 11, 9, 9, 11, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 12, 0, 0, 12, -1]" + "'", str27, "[-1, 12, 0, 0, 12, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 12, 1, 1, 12, -1]" + "'", str28, "[-1, 12, 1, 1, 12, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 12, 2, 2, 12, -1]" + "'", str29, "[-1, 12, 2, 2, 12, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 12, 3, 3, 12, -1]" + "'", str30, "[-1, 12, 3, 3, 12, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 12, 4, 4, 12, -1]" + "'", str31, "[-1, 12, 4, 4, 12, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 12, 5, 5, 12, -1]" + "'", str32, "[-1, 12, 5, 5, 12, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 12, 6, 6, 12, -1]" + "'", str33, "[-1, 12, 6, 6, 12, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 12, 7, 7, 12, -1]" + "'", str34, "[-1, 12, 7, 7, 12, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 12, 8, 8, 12, -1]" + "'", str35, "[-1, 12, 8, 8, 12, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 12, 9, 9, 12, -1]" + "'", str36, "[-1, 12, 9, 9, 12, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 13, 0, 0, 13, -1]" + "'", str37, "[-1, 13, 0, 0, 13, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 13, 1, 1, 13, -1]" + "'", str38, "[-1, 13, 1, 1, 13, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 13, 2, 2, 13, -1]" + "'", str39, "[-1, 13, 2, 2, 13, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 13, 3, 3, 13, -1]" + "'", str40, "[-1, 13, 3, 3, 13, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 13, 4, 4, 13, -1]" + "'", str41, "[-1, 13, 4, 4, 13, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 13, 5, 5, 13, -1]" + "'", str42, "[-1, 13, 5, 5, 13, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 13, 6, 6, 13, -1]" + "'", str43, "[-1, 13, 6, 6, 13, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 13, 7, 7, 13, -1]" + "'", str44, "[-1, 13, 7, 7, 13, -1]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1712");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass28 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1713");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass32 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 7, 2]" + "'", str29, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 8, 2]" + "'", str30, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 9, 2]" + "'", str31, "[1, 9, 2]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1714");
        int[] intArray5 = new int[] { (short) 100, (byte) 10, (byte) 100, 0, (byte) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass46 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 140, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 101, 0, 10]" + "'", str6, "[100, 10, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 102, 0, 10]" + "'", str7, "[100, 10, 102, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 103, 0, 10]" + "'", str8, "[100, 10, 103, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 104, 0, 10]" + "'", str9, "[100, 10, 104, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 105, 0, 10]" + "'", str10, "[100, 10, 105, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 106, 0, 10]" + "'", str11, "[100, 10, 106, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 107, 0, 10]" + "'", str12, "[100, 10, 107, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 108, 0, 10]" + "'", str13, "[100, 10, 108, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 109, 0, 10]" + "'", str14, "[100, 10, 109, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 110, 0, 10]" + "'", str15, "[100, 10, 110, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 111, 0, 10]" + "'", str16, "[100, 10, 111, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 112, 0, 10]" + "'", str17, "[100, 10, 112, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 113, 0, 10]" + "'", str18, "[100, 10, 113, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 114, 0, 10]" + "'", str19, "[100, 10, 114, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 115, 0, 10]" + "'", str20, "[100, 10, 115, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 116, 0, 10]" + "'", str21, "[100, 10, 116, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 117, 0, 10]" + "'", str22, "[100, 10, 117, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 118, 0, 10]" + "'", str23, "[100, 10, 118, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 119, 0, 10]" + "'", str24, "[100, 10, 119, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 120, 0, 10]" + "'", str25, "[100, 10, 120, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 121, 0, 10]" + "'", str26, "[100, 10, 121, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 122, 0, 10]" + "'", str27, "[100, 10, 122, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 123, 0, 10]" + "'", str28, "[100, 10, 123, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 124, 0, 10]" + "'", str29, "[100, 10, 124, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 125, 0, 10]" + "'", str30, "[100, 10, 125, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 126, 0, 10]" + "'", str31, "[100, 10, 126, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 127, 0, 10]" + "'", str32, "[100, 10, 127, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 128, 0, 10]" + "'", str33, "[100, 10, 128, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 129, 0, 10]" + "'", str34, "[100, 10, 129, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 130, 0, 10]" + "'", str35, "[100, 10, 130, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 131, 0, 10]" + "'", str36, "[100, 10, 131, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 132, 0, 10]" + "'", str37, "[100, 10, 132, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 133, 0, 10]" + "'", str38, "[100, 10, 133, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 134, 0, 10]" + "'", str39, "[100, 10, 134, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 135, 0, 10]" + "'", str40, "[100, 10, 135, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 136, 0, 10]" + "'", str41, "[100, 10, 136, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 137, 0, 10]" + "'", str42, "[100, 10, 137, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 138, 0, 10]" + "'", str43, "[100, 10, 138, 0, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 10, 139, 0, 10]" + "'", str44, "[100, 10, 139, 0, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 10, 140, 0, 10]" + "'", str45, "[100, 10, 140, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1715");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass50 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[57, 147]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 143]" + "'", str45, "[53, 143]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 144]" + "'", str46, "[54, 144]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[55, 145]" + "'", str47, "[55, 145]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 146]" + "'", str48, "[56, 146]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[57, 147]" + "'", str49, "[57, 147]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1716");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass13 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 108, 9, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 7, 100]" + "'", str10, "[0, 106, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 8, 100]" + "'", str11, "[0, 107, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 9, 100]" + "'", str12, "[0, 108, 9, 100]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1717");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass34 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 7, 2]" + "'", str29, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 8, 2]" + "'", str30, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 9, 2]" + "'", str31, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 0, 3]" + "'", str32, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 1, 3]" + "'", str33, "[2, 1, 3]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1718");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass21 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1719");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass23 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 10, 68, 68, 10, 0]" + "'", str22, "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1720");
        int[] intArray6 = new int[] { '#', (byte) -1, (byte) 1, (-1), (short) 100, 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass15 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, -1, 9, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, -1, 2, 0, 100, 100]" + "'", str7, "[35, -1, 2, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, -1, 3, 1, 100, 100]" + "'", str8, "[35, -1, 3, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, -1, 4, 2, 100, 100]" + "'", str9, "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, -1, 5, 3, 100, 100]" + "'", str10, "[35, -1, 5, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, -1, 6, 4, 100, 100]" + "'", str11, "[35, -1, 6, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, -1, 7, 5, 100, 100]" + "'", str12, "[35, -1, 7, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, -1, 8, 6, 100, 100]" + "'", str13, "[35, -1, 8, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, -1, 9, 7, 100, 100]" + "'", str14, "[35, -1, 9, 7, 100, 100]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1721");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass54 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1722");
        int[] intArray0 = new int[] {};
        java.lang.String str1 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.Class<?> wildcardClass57 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "[1, 1]" + "'", str1, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1, 1]" + "'", str2, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 1]" + "'", str3, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1]" + "'", str4, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1]" + "'", str5, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1]" + "'", str6, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1]" + "'", str7, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1]" + "'", str8, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1]" + "'", str9, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1]" + "'", str15, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1]" + "'", str16, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1]" + "'", str17, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1]" + "'", str18, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1]" + "'", str19, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1]" + "'", str25, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1]" + "'", str26, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1]" + "'", str27, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1]" + "'", str28, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1]" + "'", str29, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1]" + "'", str31, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1]" + "'", str35, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1]" + "'", str36, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1]" + "'", str37, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1]" + "'", str38, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1]" + "'", str39, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1]" + "'", str40, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1]" + "'", str41, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1]" + "'", str45, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1]" + "'", str46, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1]" + "'", str47, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1]" + "'", str48, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1]" + "'", str49, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1]" + "'", str50, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1]" + "'", str51, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1]" + "'", str55, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1]" + "'", str56, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1723");
        int[] intArray4 = new int[] { (short) 100, (byte) 0, 'a', (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass62 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 57, 154, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 1, 98, 0]" + "'", str5, "[100, 1, 98, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 2, 99, 0]" + "'", str6, "[100, 2, 99, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 3, 100, 0]" + "'", str7, "[100, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 4, 101, 0]" + "'", str8, "[100, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 5, 102, 0]" + "'", str9, "[100, 5, 102, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 6, 103, 0]" + "'", str10, "[100, 6, 103, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 7, 104, 0]" + "'", str11, "[100, 7, 104, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 8, 105, 0]" + "'", str12, "[100, 8, 105, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 9, 106, 0]" + "'", str13, "[100, 9, 106, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 107, 0]" + "'", str14, "[100, 10, 107, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 11, 108, 0]" + "'", str15, "[100, 11, 108, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 12, 109, 0]" + "'", str16, "[100, 12, 109, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 13, 110, 0]" + "'", str17, "[100, 13, 110, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 14, 111, 0]" + "'", str18, "[100, 14, 111, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 15, 112, 0]" + "'", str19, "[100, 15, 112, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 16, 113, 0]" + "'", str20, "[100, 16, 113, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 17, 114, 0]" + "'", str21, "[100, 17, 114, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 18, 115, 0]" + "'", str22, "[100, 18, 115, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 19, 116, 0]" + "'", str23, "[100, 19, 116, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 20, 117, 0]" + "'", str24, "[100, 20, 117, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 21, 118, 0]" + "'", str25, "[100, 21, 118, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 22, 119, 0]" + "'", str26, "[100, 22, 119, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 23, 120, 0]" + "'", str27, "[100, 23, 120, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 24, 121, 0]" + "'", str28, "[100, 24, 121, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 25, 122, 0]" + "'", str29, "[100, 25, 122, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 26, 123, 0]" + "'", str30, "[100, 26, 123, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 27, 124, 0]" + "'", str31, "[100, 27, 124, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 28, 125, 0]" + "'", str32, "[100, 28, 125, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 29, 126, 0]" + "'", str33, "[100, 29, 126, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 30, 127, 0]" + "'", str34, "[100, 30, 127, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 31, 128, 0]" + "'", str35, "[100, 31, 128, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 32, 129, 0]" + "'", str36, "[100, 32, 129, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 33, 130, 0]" + "'", str37, "[100, 33, 130, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 34, 131, 0]" + "'", str38, "[100, 34, 131, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 35, 132, 0]" + "'", str39, "[100, 35, 132, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 36, 133, 0]" + "'", str40, "[100, 36, 133, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 37, 134, 0]" + "'", str41, "[100, 37, 134, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 38, 135, 0]" + "'", str42, "[100, 38, 135, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 39, 136, 0]" + "'", str43, "[100, 39, 136, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 40, 137, 0]" + "'", str44, "[100, 40, 137, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 41, 138, 0]" + "'", str45, "[100, 41, 138, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 42, 139, 0]" + "'", str46, "[100, 42, 139, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 43, 140, 0]" + "'", str47, "[100, 43, 140, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 44, 141, 0]" + "'", str48, "[100, 44, 141, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 45, 142, 0]" + "'", str49, "[100, 45, 142, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 46, 143, 0]" + "'", str50, "[100, 46, 143, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 47, 144, 0]" + "'", str51, "[100, 47, 144, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 48, 145, 0]" + "'", str52, "[100, 48, 145, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 49, 146, 0]" + "'", str53, "[100, 49, 146, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 50, 147, 0]" + "'", str54, "[100, 50, 147, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 51, 148, 0]" + "'", str55, "[100, 51, 148, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 52, 149, 0]" + "'", str56, "[100, 52, 149, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 53, 150, 0]" + "'", str57, "[100, 53, 150, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 54, 151, 0]" + "'", str58, "[100, 54, 151, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 55, 152, 0]" + "'", str59, "[100, 55, 152, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 56, 153, 0]" + "'", str60, "[100, 56, 153, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 57, 154, 0]" + "'", str61, "[100, 57, 154, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1724");
        int[] intArray4 = new int[] { (byte) 0, 10, (short) 100, 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass39 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 44, 134, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 101, 97]" + "'", str5, "[0, 11, 101, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 102, 97]" + "'", str6, "[0, 12, 102, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 103, 97]" + "'", str7, "[0, 13, 103, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 104, 97]" + "'", str8, "[0, 14, 104, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 105, 97]" + "'", str9, "[0, 15, 105, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 106, 97]" + "'", str10, "[0, 16, 106, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 107, 97]" + "'", str11, "[0, 17, 107, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 108, 97]" + "'", str12, "[0, 18, 108, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 109, 97]" + "'", str13, "[0, 19, 109, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 110, 97]" + "'", str14, "[0, 20, 110, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 21, 111, 97]" + "'", str15, "[0, 21, 111, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 22, 112, 97]" + "'", str16, "[0, 22, 112, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 23, 113, 97]" + "'", str17, "[0, 23, 113, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 24, 114, 97]" + "'", str18, "[0, 24, 114, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 25, 115, 97]" + "'", str19, "[0, 25, 115, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 26, 116, 97]" + "'", str20, "[0, 26, 116, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 27, 117, 97]" + "'", str21, "[0, 27, 117, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 28, 118, 97]" + "'", str22, "[0, 28, 118, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 29, 119, 97]" + "'", str23, "[0, 29, 119, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 30, 120, 97]" + "'", str24, "[0, 30, 120, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 31, 121, 97]" + "'", str25, "[0, 31, 121, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 122, 97]" + "'", str26, "[0, 32, 122, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 33, 123, 97]" + "'", str27, "[0, 33, 123, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 34, 124, 97]" + "'", str28, "[0, 34, 124, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 125, 97]" + "'", str29, "[0, 35, 125, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 36, 126, 97]" + "'", str30, "[0, 36, 126, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 37, 127, 97]" + "'", str31, "[0, 37, 127, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 38, 128, 97]" + "'", str32, "[0, 38, 128, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 39, 129, 97]" + "'", str33, "[0, 39, 129, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 40, 130, 97]" + "'", str34, "[0, 40, 130, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 41, 131, 97]" + "'", str35, "[0, 41, 131, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 42, 132, 97]" + "'", str36, "[0, 42, 132, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 43, 133, 97]" + "'", str37, "[0, 43, 133, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 44, 134, 97]" + "'", str38, "[0, 44, 134, 97]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1725");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass22 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1726");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass6 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[5]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1727");
        int[] intArray3 = new int[] { 100, 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass30 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[102, 7, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 2, 0]" + "'", str4, "[100, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 3, 0]" + "'", str5, "[100, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 4, 0]" + "'", str6, "[100, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 5, 0]" + "'", str7, "[100, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 6, 0]" + "'", str8, "[100, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 7, 0]" + "'", str9, "[100, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 8, 0]" + "'", str10, "[100, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 9, 0]" + "'", str11, "[100, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[101, 0, 1]" + "'", str12, "[101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 1, 1]" + "'", str13, "[101, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 2, 1]" + "'", str14, "[101, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 3, 1]" + "'", str15, "[101, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 4, 1]" + "'", str16, "[101, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 5, 1]" + "'", str17, "[101, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 6, 1]" + "'", str18, "[101, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 7, 1]" + "'", str19, "[101, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 8, 1]" + "'", str20, "[101, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 9, 1]" + "'", str21, "[101, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[102, 0, 2]" + "'", str22, "[102, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 1, 2]" + "'", str23, "[102, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 2, 2]" + "'", str24, "[102, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 3, 2]" + "'", str25, "[102, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 4, 2]" + "'", str26, "[102, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 5, 2]" + "'", str27, "[102, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 6, 2]" + "'", str28, "[102, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[102, 7, 2]" + "'", str29, "[102, 7, 2]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1728");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass52 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[59, 149]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 143]" + "'", str45, "[53, 143]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 144]" + "'", str46, "[54, 144]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[55, 145]" + "'", str47, "[55, 145]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 146]" + "'", str48, "[56, 146]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[57, 147]" + "'", str49, "[57, 147]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[58, 148]" + "'", str50, "[58, 148]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[59, 149]" + "'", str51, "[59, 149]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1729");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass51 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[8, 8]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1730");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass33 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 7, 2]" + "'", str29, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 8, 2]" + "'", str30, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 9, 2]" + "'", str31, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 0, 3]" + "'", str32, "[2, 0, 3]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1731");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass19 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1732");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass35 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 80, 60, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 77, 57, 100, 52]" + "'", str31, "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 78, 58, 100, 52]" + "'", str32, "[-1, 100, 78, 58, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 79, 59, 100, 52]" + "'", str33, "[-1, 100, 79, 59, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 80, 60, 100, 52]" + "'", str34, "[-1, 100, 80, 60, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1733");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass25 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 0]" + "'", str22, "[1, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 0]" + "'", str23, "[1, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 0]" + "'", str24, "[1, 9, 9, 0]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1734");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass9 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1735");
        int[] intArray3 = new int[] { (byte) -1, (byte) 0, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass50 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 6, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 1, 0]" + "'", str4, "[-1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 0]" + "'", str5, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 0]" + "'", str6, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 0]" + "'", str7, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 0]" + "'", str8, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 0]" + "'", str9, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 0]" + "'", str10, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 0]" + "'", str11, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 0]" + "'", str12, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 0, 1]" + "'", str13, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 1]" + "'", str14, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 1]" + "'", str15, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 3, 1]" + "'", str16, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 4, 1]" + "'", str17, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 5, 1]" + "'", str18, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 6, 1]" + "'", str19, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 7, 1]" + "'", str20, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 8, 1]" + "'", str21, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 9, 1]" + "'", str22, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 2]" + "'", str23, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 2]" + "'", str24, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 2, 2]" + "'", str25, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2]" + "'", str26, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 4, 2]" + "'", str27, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 5, 2]" + "'", str28, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 6, 2]" + "'", str29, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 7, 2]" + "'", str30, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 8, 2]" + "'", str31, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 9, 2]" + "'", str32, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 0, 3]" + "'", str33, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 1, 3]" + "'", str34, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2, 3]" + "'", str35, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 3, 3]" + "'", str36, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 4, 3]" + "'", str37, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 5, 3]" + "'", str38, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 6, 3]" + "'", str39, "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 7, 3]" + "'", str40, "[2, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 8, 3]" + "'", str41, "[2, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 9, 3]" + "'", str42, "[2, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 0, 4]" + "'", str43, "[3, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 1, 4]" + "'", str44, "[3, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 2, 4]" + "'", str45, "[3, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3, 4]" + "'", str46, "[3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 4, 4]" + "'", str47, "[3, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 5, 4]" + "'", str48, "[3, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 6, 4]" + "'", str49, "[3, 6, 4]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1736");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass41 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[139]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1737");
        int[] intArray6 = new int[] { (-1), 10, (short) -1, (short) -1, (short) 10, (short) -1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass44 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 13, 6, 6, 13, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 10, 0, 0, 10, -1]" + "'", str7, "[-1, 10, 0, 0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 10, 1, 1, 10, -1]" + "'", str8, "[-1, 10, 1, 1, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 10, 2, 2, 10, -1]" + "'", str9, "[-1, 10, 2, 2, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 10, 3, 3, 10, -1]" + "'", str10, "[-1, 10, 3, 3, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 10, 4, 4, 10, -1]" + "'", str11, "[-1, 10, 4, 4, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 10, 5, 5, 10, -1]" + "'", str12, "[-1, 10, 5, 5, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 6, 6, 10, -1]" + "'", str13, "[-1, 10, 6, 6, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 7, 7, 10, -1]" + "'", str14, "[-1, 10, 7, 7, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 10, 8, 8, 10, -1]" + "'", str15, "[-1, 10, 8, 8, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 10, 9, 9, 10, -1]" + "'", str16, "[-1, 10, 9, 9, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 11, 0, 0, 11, -1]" + "'", str17, "[-1, 11, 0, 0, 11, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 11, 1, 1, 11, -1]" + "'", str18, "[-1, 11, 1, 1, 11, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 11, 2, 2, 11, -1]" + "'", str19, "[-1, 11, 2, 2, 11, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 11, 3, 3, 11, -1]" + "'", str20, "[-1, 11, 3, 3, 11, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 11, 4, 4, 11, -1]" + "'", str21, "[-1, 11, 4, 4, 11, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 11, 5, 5, 11, -1]" + "'", str22, "[-1, 11, 5, 5, 11, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 11, 6, 6, 11, -1]" + "'", str23, "[-1, 11, 6, 6, 11, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 11, 7, 7, 11, -1]" + "'", str24, "[-1, 11, 7, 7, 11, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 11, 8, 8, 11, -1]" + "'", str25, "[-1, 11, 8, 8, 11, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 11, 9, 9, 11, -1]" + "'", str26, "[-1, 11, 9, 9, 11, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 12, 0, 0, 12, -1]" + "'", str27, "[-1, 12, 0, 0, 12, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 12, 1, 1, 12, -1]" + "'", str28, "[-1, 12, 1, 1, 12, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 12, 2, 2, 12, -1]" + "'", str29, "[-1, 12, 2, 2, 12, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 12, 3, 3, 12, -1]" + "'", str30, "[-1, 12, 3, 3, 12, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 12, 4, 4, 12, -1]" + "'", str31, "[-1, 12, 4, 4, 12, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 12, 5, 5, 12, -1]" + "'", str32, "[-1, 12, 5, 5, 12, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 12, 6, 6, 12, -1]" + "'", str33, "[-1, 12, 6, 6, 12, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 12, 7, 7, 12, -1]" + "'", str34, "[-1, 12, 7, 7, 12, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 12, 8, 8, 12, -1]" + "'", str35, "[-1, 12, 8, 8, 12, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 12, 9, 9, 12, -1]" + "'", str36, "[-1, 12, 9, 9, 12, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 13, 0, 0, 13, -1]" + "'", str37, "[-1, 13, 0, 0, 13, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 13, 1, 1, 13, -1]" + "'", str38, "[-1, 13, 1, 1, 13, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 13, 2, 2, 13, -1]" + "'", str39, "[-1, 13, 2, 2, 13, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 13, 3, 3, 13, -1]" + "'", str40, "[-1, 13, 3, 3, 13, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 13, 4, 4, 13, -1]" + "'", str41, "[-1, 13, 4, 4, 13, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 13, 5, 5, 13, -1]" + "'", str42, "[-1, 13, 5, 5, 13, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 13, 6, 6, 13, -1]" + "'", str43, "[-1, 13, 6, 6, 13, -1]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1738");
        int[] intArray6 = new int[] { (byte) 0, (short) 1, 1, (short) 1, 1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass16 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 2, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 2, 2, 1, 0]" + "'", str7, "[0, 1, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 3, 3, 1, 0]" + "'", str8, "[0, 1, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 4, 4, 1, 0]" + "'", str9, "[0, 1, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 5, 5, 1, 0]" + "'", str10, "[0, 1, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 6, 6, 1, 0]" + "'", str11, "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 7, 7, 1, 0]" + "'", str12, "[0, 1, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 8, 8, 1, 0]" + "'", str13, "[0, 1, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 9, 9, 1, 0]" + "'", str14, "[0, 1, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 0, 0, 2, 0]" + "'", str15, "[0, 2, 0, 0, 2, 0]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1739");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass57 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 51, 62, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 48, 59, 10]" + "'", str53, "[1, 48, 59, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 49, 60, 10]" + "'", str54, "[1, 49, 60, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 50, 61, 10]" + "'", str55, "[1, 50, 61, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 51, 62, 10]" + "'", str56, "[1, 51, 62, 10]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1740");
        int[] intArray4 = new int[] { (short) 0, (short) 100, 10, 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass13 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 108, 18, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 11, 1]" + "'", str5, "[0, 101, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 12, 1]" + "'", str6, "[0, 102, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 13, 1]" + "'", str7, "[0, 103, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 14, 1]" + "'", str8, "[0, 104, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 15, 1]" + "'", str9, "[0, 105, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 16, 1]" + "'", str10, "[0, 106, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 17, 1]" + "'", str11, "[0, 107, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 18, 1]" + "'", str12, "[0, 108, 18, 1]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1741");
        int[] intArray4 = new int[] { '4', (byte) -1, 100, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass59 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 53, 154, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 101, 0]" + "'", str5, "[52, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 102, 0]" + "'", str6, "[52, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 103, 0]" + "'", str7, "[52, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 104, 0]" + "'", str8, "[52, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 105, 0]" + "'", str9, "[52, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 106, 0]" + "'", str10, "[52, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 107, 0]" + "'", str11, "[52, 6, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 108, 0]" + "'", str12, "[52, 7, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 109, 0]" + "'", str13, "[52, 8, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 110, 0]" + "'", str14, "[52, 9, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 111, 0]" + "'", str15, "[52, 10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 112, 0]" + "'", str16, "[52, 11, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 113, 0]" + "'", str17, "[52, 12, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 114, 0]" + "'", str18, "[52, 13, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 115, 0]" + "'", str19, "[52, 14, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 116, 0]" + "'", str20, "[52, 15, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 117, 0]" + "'", str21, "[52, 16, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 118, 0]" + "'", str22, "[52, 17, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 119, 0]" + "'", str23, "[52, 18, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 120, 0]" + "'", str24, "[52, 19, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 121, 0]" + "'", str25, "[52, 20, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 122, 0]" + "'", str26, "[52, 21, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 123, 0]" + "'", str27, "[52, 22, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 124, 0]" + "'", str28, "[52, 23, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 125, 0]" + "'", str29, "[52, 24, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 126, 0]" + "'", str30, "[52, 25, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 127, 0]" + "'", str31, "[52, 26, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 128, 0]" + "'", str32, "[52, 27, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 129, 0]" + "'", str33, "[52, 28, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 130, 0]" + "'", str34, "[52, 29, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 131, 0]" + "'", str35, "[52, 30, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 132, 0]" + "'", str36, "[52, 31, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 133, 0]" + "'", str37, "[52, 32, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 134, 0]" + "'", str38, "[52, 33, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 135, 0]" + "'", str39, "[52, 34, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 136, 0]" + "'", str40, "[52, 35, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 137, 0]" + "'", str41, "[52, 36, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 138, 0]" + "'", str42, "[52, 37, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 139, 0]" + "'", str43, "[52, 38, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 140, 0]" + "'", str44, "[52, 39, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 141, 0]" + "'", str45, "[52, 40, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 142, 0]" + "'", str46, "[52, 41, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 143, 0]" + "'", str47, "[52, 42, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 144, 0]" + "'", str48, "[52, 43, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 145, 0]" + "'", str49, "[52, 44, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 146, 0]" + "'", str50, "[52, 45, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 147, 0]" + "'", str51, "[52, 46, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 148, 0]" + "'", str52, "[52, 47, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 149, 0]" + "'", str53, "[52, 48, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 150, 0]" + "'", str54, "[52, 49, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 151, 0]" + "'", str55, "[52, 50, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 152, 0]" + "'", str56, "[52, 51, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 153, 0]" + "'", str57, "[52, 52, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 154, 0]" + "'", str58, "[52, 53, 154, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1742");
        int[] intArray3 = new int[] { ' ', 1, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass45 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[36, 2, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 2, -1]" + "'", str4, "[32, 2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 3, -1]" + "'", str5, "[32, 3, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 4, -1]" + "'", str6, "[32, 4, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 5, -1]" + "'", str7, "[32, 5, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 6, -1]" + "'", str8, "[32, 6, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 7, -1]" + "'", str9, "[32, 7, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 8, -1]" + "'", str10, "[32, 8, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 9, -1]" + "'", str11, "[32, 9, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[33, 0, 0]" + "'", str12, "[33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 1, 0]" + "'", str13, "[33, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 2, 0]" + "'", str14, "[33, 2, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 3, 0]" + "'", str15, "[33, 3, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 4, 0]" + "'", str16, "[33, 4, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 5, 0]" + "'", str17, "[33, 5, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 6, 0]" + "'", str18, "[33, 6, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 7, 0]" + "'", str19, "[33, 7, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 8, 0]" + "'", str20, "[33, 8, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 9, 0]" + "'", str21, "[33, 9, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[34, 0, 1]" + "'", str22, "[34, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 1, 1]" + "'", str23, "[34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 2, 1]" + "'", str24, "[34, 2, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 3, 1]" + "'", str25, "[34, 3, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 4, 1]" + "'", str26, "[34, 4, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 5, 1]" + "'", str27, "[34, 5, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 6, 1]" + "'", str28, "[34, 6, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 7, 1]" + "'", str29, "[34, 7, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 8, 1]" + "'", str30, "[34, 8, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 9, 1]" + "'", str31, "[34, 9, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 0, 2]" + "'", str32, "[35, 0, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 2]" + "'", str33, "[35, 1, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 2]" + "'", str34, "[35, 2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 3, 2]" + "'", str35, "[35, 3, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 4, 2]" + "'", str36, "[35, 4, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 5, 2]" + "'", str37, "[35, 5, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 6, 2]" + "'", str38, "[35, 6, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 7, 2]" + "'", str39, "[35, 7, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 8, 2]" + "'", str40, "[35, 8, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 9, 2]" + "'", str41, "[35, 9, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[36, 0, 3]" + "'", str42, "[36, 0, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[36, 1, 3]" + "'", str43, "[36, 1, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 2, 3]" + "'", str44, "[36, 2, 3]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1743");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 10, (short) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass46 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 50, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, -1, 11, 100, -1]" + "'", str6, "[100, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, -1, 12, 100, -1]" + "'", str7, "[100, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, -1, 13, 100, -1]" + "'", str8, "[100, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, -1, 14, 100, -1]" + "'", str9, "[100, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, -1, 15, 100, -1]" + "'", str10, "[100, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, -1, 16, 100, -1]" + "'", str11, "[100, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, -1, 17, 100, -1]" + "'", str12, "[100, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, -1, 18, 100, -1]" + "'", str13, "[100, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, -1, 19, 100, -1]" + "'", str14, "[100, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, -1, 20, 100, -1]" + "'", str15, "[100, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, -1, 21, 100, -1]" + "'", str16, "[100, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, -1, 22, 100, -1]" + "'", str17, "[100, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, -1, 23, 100, -1]" + "'", str18, "[100, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, -1, 24, 100, -1]" + "'", str19, "[100, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, -1, 25, 100, -1]" + "'", str20, "[100, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, -1, 26, 100, -1]" + "'", str21, "[100, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, -1, 27, 100, -1]" + "'", str22, "[100, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, -1, 28, 100, -1]" + "'", str23, "[100, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, -1, 29, 100, -1]" + "'", str24, "[100, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, -1, 30, 100, -1]" + "'", str25, "[100, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, -1, 31, 100, -1]" + "'", str26, "[100, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, -1, 32, 100, -1]" + "'", str27, "[100, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, -1, 33, 100, -1]" + "'", str28, "[100, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, -1, 34, 100, -1]" + "'", str29, "[100, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, -1, 35, 100, -1]" + "'", str30, "[100, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, -1, 36, 100, -1]" + "'", str31, "[100, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, -1, 37, 100, -1]" + "'", str32, "[100, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, -1, 38, 100, -1]" + "'", str33, "[100, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, -1, 39, 100, -1]" + "'", str34, "[100, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, -1, 40, 100, -1]" + "'", str35, "[100, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, -1, 41, 100, -1]" + "'", str36, "[100, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, -1, 42, 100, -1]" + "'", str37, "[100, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, -1, 43, 100, -1]" + "'", str38, "[100, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, -1, 44, 100, -1]" + "'", str39, "[100, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, -1, 45, 100, -1]" + "'", str40, "[100, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, -1, 46, 100, -1]" + "'", str41, "[100, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, -1, 47, 100, -1]" + "'", str42, "[100, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, -1, 48, 100, -1]" + "'", str43, "[100, -1, 48, 100, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, -1, 49, 100, -1]" + "'", str44, "[100, -1, 49, 100, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, -1, 50, 100, -1]" + "'", str45, "[100, -1, 50, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1744");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass5 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[4]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1745");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass63 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 1]" + "'", str62, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1746");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass20 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 7, 1]" + "'", str19, "[1, 7, 1]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1747");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass48 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1748");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 64, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 58, 1, 100]" + "'", str11, "[100, 10, 58, 1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 59, 1, 100]" + "'", str12, "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 60, 1, 100]" + "'", str13, "[100, 10, 60, 1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 61, 1, 100]" + "'", str14, "[100, 10, 61, 1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 62, 1, 100]" + "'", str15, "[100, 10, 62, 1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 63, 1, 100]" + "'", str16, "[100, 10, 63, 1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 64, 1, 100]" + "'", str17, "[100, 10, 64, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1749");
        int[] intArray4 = new int[] { (-1), '4', (byte) 100, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass63 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 110, 158, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 53, 101, 100]" + "'", str5, "[-1, 53, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 54, 102, 100]" + "'", str6, "[-1, 54, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 55, 103, 100]" + "'", str7, "[-1, 55, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 56, 104, 100]" + "'", str8, "[-1, 56, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 57, 105, 100]" + "'", str9, "[-1, 57, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 58, 106, 100]" + "'", str10, "[-1, 58, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 59, 107, 100]" + "'", str11, "[-1, 59, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 60, 108, 100]" + "'", str12, "[-1, 60, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 61, 109, 100]" + "'", str13, "[-1, 61, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 62, 110, 100]" + "'", str14, "[-1, 62, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 63, 111, 100]" + "'", str15, "[-1, 63, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 64, 112, 100]" + "'", str16, "[-1, 64, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 65, 113, 100]" + "'", str17, "[-1, 65, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 66, 114, 100]" + "'", str18, "[-1, 66, 114, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 67, 115, 100]" + "'", str19, "[-1, 67, 115, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 68, 116, 100]" + "'", str20, "[-1, 68, 116, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 69, 117, 100]" + "'", str21, "[-1, 69, 117, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 70, 118, 100]" + "'", str22, "[-1, 70, 118, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 71, 119, 100]" + "'", str23, "[-1, 71, 119, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 72, 120, 100]" + "'", str24, "[-1, 72, 120, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 73, 121, 100]" + "'", str25, "[-1, 73, 121, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 74, 122, 100]" + "'", str26, "[-1, 74, 122, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 75, 123, 100]" + "'", str27, "[-1, 75, 123, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 76, 124, 100]" + "'", str28, "[-1, 76, 124, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 77, 125, 100]" + "'", str29, "[-1, 77, 125, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 78, 126, 100]" + "'", str30, "[-1, 78, 126, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 79, 127, 100]" + "'", str31, "[-1, 79, 127, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 80, 128, 100]" + "'", str32, "[-1, 80, 128, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 81, 129, 100]" + "'", str33, "[-1, 81, 129, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 82, 130, 100]" + "'", str34, "[-1, 82, 130, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 83, 131, 100]" + "'", str35, "[-1, 83, 131, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 84, 132, 100]" + "'", str36, "[-1, 84, 132, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 85, 133, 100]" + "'", str37, "[-1, 85, 133, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 86, 134, 100]" + "'", str38, "[-1, 86, 134, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 87, 135, 100]" + "'", str39, "[-1, 87, 135, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 88, 136, 100]" + "'", str40, "[-1, 88, 136, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 89, 137, 100]" + "'", str41, "[-1, 89, 137, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 90, 138, 100]" + "'", str42, "[-1, 90, 138, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 91, 139, 100]" + "'", str43, "[-1, 91, 139, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 92, 140, 100]" + "'", str44, "[-1, 92, 140, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 93, 141, 100]" + "'", str45, "[-1, 93, 141, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 94, 142, 100]" + "'", str46, "[-1, 94, 142, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 95, 143, 100]" + "'", str47, "[-1, 95, 143, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 96, 144, 100]" + "'", str48, "[-1, 96, 144, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 97, 145, 100]" + "'", str49, "[-1, 97, 145, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 98, 146, 100]" + "'", str50, "[-1, 98, 146, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 99, 147, 100]" + "'", str51, "[-1, 99, 147, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 148, 100]" + "'", str52, "[-1, 100, 148, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 101, 149, 100]" + "'", str53, "[-1, 101, 149, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 102, 150, 100]" + "'", str54, "[-1, 102, 150, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 103, 151, 100]" + "'", str55, "[-1, 103, 151, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 104, 152, 100]" + "'", str56, "[-1, 104, 152, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 105, 153, 100]" + "'", str57, "[-1, 105, 153, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 106, 154, 100]" + "'", str58, "[-1, 106, 154, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 107, 155, 100]" + "'", str59, "[-1, 107, 155, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 108, 156, 100]" + "'", str60, "[-1, 108, 156, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 109, 157, 100]" + "'", str61, "[-1, 109, 157, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 110, 158, 100]" + "'", str62, "[-1, 110, 158, 100]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1750");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass51 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[58, 148]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 143]" + "'", str45, "[53, 143]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 144]" + "'", str46, "[54, 144]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[55, 145]" + "'", str47, "[55, 145]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 146]" + "'", str48, "[56, 146]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[57, 147]" + "'", str49, "[57, 147]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[58, 148]" + "'", str50, "[58, 148]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1751");
        int[] intArray5 = new int[] { (short) 1, ' ', (byte) -1, (short) 100, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass29 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 34, 2, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 32, 0, 100, 100]" + "'", str6, "[1, 32, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 32, 1, 100, 100]" + "'", str7, "[1, 32, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 32, 2, 100, 100]" + "'", str8, "[1, 32, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 32, 3, 100, 100]" + "'", str9, "[1, 32, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 32, 4, 100, 100]" + "'", str10, "[1, 32, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 32, 5, 100, 100]" + "'", str11, "[1, 32, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 32, 6, 100, 100]" + "'", str12, "[1, 32, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 32, 7, 100, 100]" + "'", str13, "[1, 32, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 32, 8, 100, 100]" + "'", str14, "[1, 32, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 32, 9, 100, 100]" + "'", str15, "[1, 32, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 33, 0, 101, 100]" + "'", str16, "[1, 33, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 33, 1, 101, 100]" + "'", str17, "[1, 33, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 33, 2, 101, 100]" + "'", str18, "[1, 33, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 33, 3, 101, 100]" + "'", str19, "[1, 33, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 33, 4, 101, 100]" + "'", str20, "[1, 33, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 33, 5, 101, 100]" + "'", str21, "[1, 33, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 33, 6, 101, 100]" + "'", str22, "[1, 33, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 33, 7, 101, 100]" + "'", str23, "[1, 33, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 33, 8, 101, 100]" + "'", str24, "[1, 33, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 33, 9, 101, 100]" + "'", str25, "[1, 33, 9, 101, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 34, 0, 102, 100]" + "'", str26, "[1, 34, 0, 102, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 34, 1, 102, 100]" + "'", str27, "[1, 34, 1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 2, 102, 100]" + "'", str28, "[1, 34, 2, 102, 100]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1752");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass62 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1753");
        int[] intArray5 = new int[] { (short) 100, 100, (short) 1, (byte) -1, (short) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass43 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 103, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, -1, 1]" + "'", str6, "[100, 100, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, -1, 1]" + "'", str7, "[100, 100, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, -1, 1]" + "'", str8, "[100, 100, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, -1, 1]" + "'", str9, "[100, 100, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, -1, 1]" + "'", str10, "[100, 100, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, -1, 1]" + "'", str11, "[100, 100, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, -1, 1]" + "'", str12, "[100, 100, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, -1, 1]" + "'", str13, "[100, 100, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 0, 1]" + "'", str14, "[100, 101, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 0, 1]" + "'", str15, "[100, 101, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 0, 1]" + "'", str16, "[100, 101, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 0, 1]" + "'", str17, "[100, 101, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 0, 1]" + "'", str18, "[100, 101, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 0, 1]" + "'", str19, "[100, 101, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 0, 1]" + "'", str20, "[100, 101, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 0, 1]" + "'", str21, "[100, 101, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 0, 1]" + "'", str22, "[100, 101, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 0, 1]" + "'", str23, "[100, 101, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 1, 1]" + "'", str24, "[100, 102, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 1, 1]" + "'", str25, "[100, 102, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 1, 1]" + "'", str26, "[100, 102, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 1, 1]" + "'", str27, "[100, 102, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 1, 1]" + "'", str28, "[100, 102, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 1, 1]" + "'", str29, "[100, 102, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 1, 1]" + "'", str30, "[100, 102, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 1, 1]" + "'", str31, "[100, 102, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 1, 1]" + "'", str32, "[100, 102, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 1, 1]" + "'", str33, "[100, 102, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 2, 1]" + "'", str34, "[100, 103, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 2, 1]" + "'", str35, "[100, 103, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 2, 1]" + "'", str36, "[100, 103, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 2, 1]" + "'", str37, "[100, 103, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 2, 1]" + "'", str38, "[100, 103, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 2, 1]" + "'", str39, "[100, 103, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 2, 1]" + "'", str40, "[100, 103, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 2, 1]" + "'", str41, "[100, 103, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 103, 8, 2, 1]" + "'", str42, "[100, 103, 8, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1754");
        int[] intArray4 = new int[] { (byte) 0, 10, (short) 100, 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass42 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 47, 137, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 101, 97]" + "'", str5, "[0, 11, 101, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 102, 97]" + "'", str6, "[0, 12, 102, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 103, 97]" + "'", str7, "[0, 13, 103, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 104, 97]" + "'", str8, "[0, 14, 104, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 105, 97]" + "'", str9, "[0, 15, 105, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 106, 97]" + "'", str10, "[0, 16, 106, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 107, 97]" + "'", str11, "[0, 17, 107, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 108, 97]" + "'", str12, "[0, 18, 108, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 109, 97]" + "'", str13, "[0, 19, 109, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 110, 97]" + "'", str14, "[0, 20, 110, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 21, 111, 97]" + "'", str15, "[0, 21, 111, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 22, 112, 97]" + "'", str16, "[0, 22, 112, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 23, 113, 97]" + "'", str17, "[0, 23, 113, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 24, 114, 97]" + "'", str18, "[0, 24, 114, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 25, 115, 97]" + "'", str19, "[0, 25, 115, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 26, 116, 97]" + "'", str20, "[0, 26, 116, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 27, 117, 97]" + "'", str21, "[0, 27, 117, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 28, 118, 97]" + "'", str22, "[0, 28, 118, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 29, 119, 97]" + "'", str23, "[0, 29, 119, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 30, 120, 97]" + "'", str24, "[0, 30, 120, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 31, 121, 97]" + "'", str25, "[0, 31, 121, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 122, 97]" + "'", str26, "[0, 32, 122, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 33, 123, 97]" + "'", str27, "[0, 33, 123, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 34, 124, 97]" + "'", str28, "[0, 34, 124, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 125, 97]" + "'", str29, "[0, 35, 125, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 36, 126, 97]" + "'", str30, "[0, 36, 126, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 37, 127, 97]" + "'", str31, "[0, 37, 127, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 38, 128, 97]" + "'", str32, "[0, 38, 128, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 39, 129, 97]" + "'", str33, "[0, 39, 129, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 40, 130, 97]" + "'", str34, "[0, 40, 130, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 41, 131, 97]" + "'", str35, "[0, 41, 131, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 42, 132, 97]" + "'", str36, "[0, 42, 132, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 43, 133, 97]" + "'", str37, "[0, 43, 133, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 44, 134, 97]" + "'", str38, "[0, 44, 134, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 45, 135, 97]" + "'", str39, "[0, 45, 135, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 46, 136, 97]" + "'", str40, "[0, 46, 136, 97]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 47, 137, 97]" + "'", str41, "[0, 47, 137, 97]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1755");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass59 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 53, 64, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 48, 59, 10]" + "'", str53, "[1, 48, 59, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 49, 60, 10]" + "'", str54, "[1, 49, 60, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 50, 61, 10]" + "'", str55, "[1, 50, 61, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 51, 62, 10]" + "'", str56, "[1, 51, 62, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 52, 63, 10]" + "'", str57, "[1, 52, 63, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 53, 64, 10]" + "'", str58, "[1, 53, 64, 10]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1756");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass36 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 81, 61, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 77, 57, 100, 52]" + "'", str31, "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 78, 58, 100, 52]" + "'", str32, "[-1, 100, 78, 58, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 79, 59, 100, 52]" + "'", str33, "[-1, 100, 79, 59, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 80, 60, 100, 52]" + "'", str34, "[-1, 100, 80, 60, 100, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 81, 61, 100, 52]" + "'", str35, "[-1, 100, 81, 61, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1757");
        int[] intArray3 = new int[] { (byte) -1, (byte) 0, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass49 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 5, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 1, 0]" + "'", str4, "[-1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 0]" + "'", str5, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 0]" + "'", str6, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 0]" + "'", str7, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 0]" + "'", str8, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 0]" + "'", str9, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 0]" + "'", str10, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 0]" + "'", str11, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 0]" + "'", str12, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 0, 1]" + "'", str13, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 1]" + "'", str14, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 1]" + "'", str15, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 3, 1]" + "'", str16, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 4, 1]" + "'", str17, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 5, 1]" + "'", str18, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 6, 1]" + "'", str19, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 7, 1]" + "'", str20, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 8, 1]" + "'", str21, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 9, 1]" + "'", str22, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 2]" + "'", str23, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 2]" + "'", str24, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 2, 2]" + "'", str25, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2]" + "'", str26, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 4, 2]" + "'", str27, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 5, 2]" + "'", str28, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 6, 2]" + "'", str29, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 7, 2]" + "'", str30, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 8, 2]" + "'", str31, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 9, 2]" + "'", str32, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 0, 3]" + "'", str33, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 1, 3]" + "'", str34, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2, 3]" + "'", str35, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 3, 3]" + "'", str36, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 4, 3]" + "'", str37, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 5, 3]" + "'", str38, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 6, 3]" + "'", str39, "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 7, 3]" + "'", str40, "[2, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 8, 3]" + "'", str41, "[2, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 9, 3]" + "'", str42, "[2, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 0, 4]" + "'", str43, "[3, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 1, 4]" + "'", str44, "[3, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 2, 4]" + "'", str45, "[3, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3, 4]" + "'", str46, "[3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 4, 4]" + "'", str47, "[3, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 5, 4]" + "'", str48, "[3, 5, 4]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1758");
        int[] intArray5 = new int[] { (short) 1, ' ', (byte) -1, (short) 100, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass30 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 34, 3, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 32, 0, 100, 100]" + "'", str6, "[1, 32, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 32, 1, 100, 100]" + "'", str7, "[1, 32, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 32, 2, 100, 100]" + "'", str8, "[1, 32, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 32, 3, 100, 100]" + "'", str9, "[1, 32, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 32, 4, 100, 100]" + "'", str10, "[1, 32, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 32, 5, 100, 100]" + "'", str11, "[1, 32, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 32, 6, 100, 100]" + "'", str12, "[1, 32, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 32, 7, 100, 100]" + "'", str13, "[1, 32, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 32, 8, 100, 100]" + "'", str14, "[1, 32, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 32, 9, 100, 100]" + "'", str15, "[1, 32, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 33, 0, 101, 100]" + "'", str16, "[1, 33, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 33, 1, 101, 100]" + "'", str17, "[1, 33, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 33, 2, 101, 100]" + "'", str18, "[1, 33, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 33, 3, 101, 100]" + "'", str19, "[1, 33, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 33, 4, 101, 100]" + "'", str20, "[1, 33, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 33, 5, 101, 100]" + "'", str21, "[1, 33, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 33, 6, 101, 100]" + "'", str22, "[1, 33, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 33, 7, 101, 100]" + "'", str23, "[1, 33, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 33, 8, 101, 100]" + "'", str24, "[1, 33, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 33, 9, 101, 100]" + "'", str25, "[1, 33, 9, 101, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 34, 0, 102, 100]" + "'", str26, "[1, 34, 0, 102, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 34, 1, 102, 100]" + "'", str27, "[1, 34, 1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 2, 102, 100]" + "'", str28, "[1, 34, 2, 102, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 34, 3, 102, 100]" + "'", str29, "[1, 34, 3, 102, 100]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1759");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass56 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[89]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[87]" + "'", str53, "[87]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[88]" + "'", str54, "[88]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[89]" + "'", str55, "[89]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1760");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass43 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[141]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1761");
        int[] intArray4 = new int[] { (short) 0, (short) 100, 10, 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass15 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 110, 20, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 11, 1]" + "'", str5, "[0, 101, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 12, 1]" + "'", str6, "[0, 102, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 13, 1]" + "'", str7, "[0, 103, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 14, 1]" + "'", str8, "[0, 104, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 15, 1]" + "'", str9, "[0, 105, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 16, 1]" + "'", str10, "[0, 106, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 17, 1]" + "'", str11, "[0, 107, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 18, 1]" + "'", str12, "[0, 108, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 19, 1]" + "'", str13, "[0, 109, 19, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 20, 1]" + "'", str14, "[0, 110, 20, 1]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1762");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass32 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1763");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass21 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 7, 1]" + "'", str19, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 8, 1]" + "'", str20, "[1, 8, 1]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1764");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 10, (short) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass45 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 49, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, -1, 11, 100, -1]" + "'", str6, "[100, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, -1, 12, 100, -1]" + "'", str7, "[100, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, -1, 13, 100, -1]" + "'", str8, "[100, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, -1, 14, 100, -1]" + "'", str9, "[100, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, -1, 15, 100, -1]" + "'", str10, "[100, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, -1, 16, 100, -1]" + "'", str11, "[100, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, -1, 17, 100, -1]" + "'", str12, "[100, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, -1, 18, 100, -1]" + "'", str13, "[100, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, -1, 19, 100, -1]" + "'", str14, "[100, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, -1, 20, 100, -1]" + "'", str15, "[100, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, -1, 21, 100, -1]" + "'", str16, "[100, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, -1, 22, 100, -1]" + "'", str17, "[100, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, -1, 23, 100, -1]" + "'", str18, "[100, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, -1, 24, 100, -1]" + "'", str19, "[100, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, -1, 25, 100, -1]" + "'", str20, "[100, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, -1, 26, 100, -1]" + "'", str21, "[100, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, -1, 27, 100, -1]" + "'", str22, "[100, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, -1, 28, 100, -1]" + "'", str23, "[100, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, -1, 29, 100, -1]" + "'", str24, "[100, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, -1, 30, 100, -1]" + "'", str25, "[100, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, -1, 31, 100, -1]" + "'", str26, "[100, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, -1, 32, 100, -1]" + "'", str27, "[100, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, -1, 33, 100, -1]" + "'", str28, "[100, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, -1, 34, 100, -1]" + "'", str29, "[100, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, -1, 35, 100, -1]" + "'", str30, "[100, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, -1, 36, 100, -1]" + "'", str31, "[100, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, -1, 37, 100, -1]" + "'", str32, "[100, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, -1, 38, 100, -1]" + "'", str33, "[100, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, -1, 39, 100, -1]" + "'", str34, "[100, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, -1, 40, 100, -1]" + "'", str35, "[100, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, -1, 41, 100, -1]" + "'", str36, "[100, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, -1, 42, 100, -1]" + "'", str37, "[100, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, -1, 43, 100, -1]" + "'", str38, "[100, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, -1, 44, 100, -1]" + "'", str39, "[100, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, -1, 45, 100, -1]" + "'", str40, "[100, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, -1, 46, 100, -1]" + "'", str41, "[100, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, -1, 47, 100, -1]" + "'", str42, "[100, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, -1, 48, 100, -1]" + "'", str43, "[100, -1, 48, 100, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, -1, 49, 100, -1]" + "'", str44, "[100, -1, 49, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1765");
        int[] intArray3 = new int[] { (short) 0, (short) 0, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass42 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 1, -1]" + "'", str4, "[0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 2, -1]" + "'", str5, "[0, 2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 3, -1]" + "'", str6, "[0, 3, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 4, -1]" + "'", str7, "[0, 4, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 5, -1]" + "'", str8, "[0, 5, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 6, -1]" + "'", str9, "[0, 6, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 7, -1]" + "'", str10, "[0, 7, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 8, -1]" + "'", str11, "[0, 8, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 9, -1]" + "'", str12, "[0, 9, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0]" + "'", str13, "[1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 0]" + "'", str14, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0]" + "'", str15, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 0]" + "'", str16, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 0]" + "'", str17, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 0]" + "'", str18, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 0]" + "'", str19, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 0]" + "'", str20, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 0]" + "'", str21, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 0]" + "'", str22, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 1]" + "'", str23, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1]" + "'", str24, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 1]" + "'", str25, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 1]" + "'", str26, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 1]" + "'", str27, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 1]" + "'", str28, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 1]" + "'", str29, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 1]" + "'", str30, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 1]" + "'", str31, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 1]" + "'", str32, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 2]" + "'", str33, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 2]" + "'", str34, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2]" + "'", str35, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 2]" + "'", str36, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 2]" + "'", str37, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 2]" + "'", str38, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 6, 2]" + "'", str39, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 7, 2]" + "'", str40, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 8, 2]" + "'", str41, "[3, 8, 2]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1766");
        int[] intArray4 = new int[] { 'a', 100, (byte) 0, '4' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass62 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 7, 7, 57]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 101, 1, 52]" + "'", str5, "[97, 101, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 102, 2, 52]" + "'", str6, "[97, 102, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 103, 3, 52]" + "'", str7, "[97, 103, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 104, 4, 52]" + "'", str8, "[97, 104, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 105, 5, 52]" + "'", str9, "[97, 105, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 106, 6, 52]" + "'", str10, "[97, 106, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 107, 7, 52]" + "'", str11, "[97, 107, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 108, 8, 52]" + "'", str12, "[97, 108, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 109, 9, 52]" + "'", str13, "[97, 109, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[98, 0, 0, 53]" + "'", str14, "[98, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 1, 1, 53]" + "'", str15, "[98, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 2, 2, 53]" + "'", str16, "[98, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 3, 3, 53]" + "'", str17, "[98, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 4, 4, 53]" + "'", str18, "[98, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 5, 5, 53]" + "'", str19, "[98, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 6, 6, 53]" + "'", str20, "[98, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 7, 7, 53]" + "'", str21, "[98, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 8, 8, 53]" + "'", str22, "[98, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 9, 9, 53]" + "'", str23, "[98, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[99, 0, 0, 54]" + "'", str24, "[99, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 1, 1, 54]" + "'", str25, "[99, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 2, 2, 54]" + "'", str26, "[99, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 3, 3, 54]" + "'", str27, "[99, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 4, 4, 54]" + "'", str28, "[99, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 5, 5, 54]" + "'", str29, "[99, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 6, 6, 54]" + "'", str30, "[99, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 7, 7, 54]" + "'", str31, "[99, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 8, 8, 54]" + "'", str32, "[99, 8, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 9, 9, 54]" + "'", str33, "[99, 9, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 0, 55]" + "'", str34, "[100, 0, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 1, 1, 55]" + "'", str35, "[100, 1, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 2, 2, 55]" + "'", str36, "[100, 2, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 3, 55]" + "'", str37, "[100, 3, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 4, 4, 55]" + "'", str38, "[100, 4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 5, 5, 55]" + "'", str39, "[100, 5, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 6, 6, 55]" + "'", str40, "[100, 6, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 7, 7, 55]" + "'", str41, "[100, 7, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 8, 8, 55]" + "'", str42, "[100, 8, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 9, 9, 55]" + "'", str43, "[100, 9, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[101, 0, 0, 56]" + "'", str44, "[101, 0, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 1, 1, 56]" + "'", str45, "[101, 1, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 2, 2, 56]" + "'", str46, "[101, 2, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 3, 3, 56]" + "'", str47, "[101, 3, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 4, 4, 56]" + "'", str48, "[101, 4, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 5, 5, 56]" + "'", str49, "[101, 5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 6, 6, 56]" + "'", str50, "[101, 6, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 7, 7, 56]" + "'", str51, "[101, 7, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 8, 8, 56]" + "'", str52, "[101, 8, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 9, 9, 56]" + "'", str53, "[101, 9, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[102, 0, 0, 57]" + "'", str54, "[102, 0, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 1, 1, 57]" + "'", str55, "[102, 1, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 2, 2, 57]" + "'", str56, "[102, 2, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 3, 3, 57]" + "'", str57, "[102, 3, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 4, 4, 57]" + "'", str58, "[102, 4, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 5, 5, 57]" + "'", str59, "[102, 5, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 6, 6, 57]" + "'", str60, "[102, 6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 7, 7, 57]" + "'", str61, "[102, 7, 7, 57]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1767");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass27 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 31, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 32, 29, 10, -1]" + "'", str24, "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 32, 30, 10, -1]" + "'", str25, "[10, 32, 30, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 32, 31, 10, -1]" + "'", str26, "[10, 32, 31, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1768");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass26 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[2, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 0]" + "'", str22, "[1, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 0]" + "'", str23, "[1, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 0]" + "'", str24, "[1, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 1]" + "'", str25, "[2, 0, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1769");
        int[] intArray4 = new int[] { 100, (byte) 100, (byte) 100, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass11 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 101, 101, 0]" + "'", str5, "[100, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 102, 102, 0]" + "'", str6, "[100, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 103, 103, 0]" + "'", str7, "[100, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 104, 104, 0]" + "'", str8, "[100, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 105, 105, 0]" + "'", str9, "[100, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 106, 106, 0]" + "'", str10, "[100, 106, 106, 0]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1770");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass19 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 65, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 58, 1, 100]" + "'", str11, "[100, 10, 58, 1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 59, 1, 100]" + "'", str12, "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 60, 1, 100]" + "'", str13, "[100, 10, 60, 1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 61, 1, 100]" + "'", str14, "[100, 10, 61, 1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 62, 1, 100]" + "'", str15, "[100, 10, 62, 1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 63, 1, 100]" + "'", str16, "[100, 10, 63, 1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 64, 1, 100]" + "'", str17, "[100, 10, 64, 1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 65, 1, 100]" + "'", str18, "[100, 10, 65, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1771");
        int[] intArray4 = new int[] { 'a', 100, (byte) 0, '4' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass63 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 8, 8, 57]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 101, 1, 52]" + "'", str5, "[97, 101, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 102, 2, 52]" + "'", str6, "[97, 102, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 103, 3, 52]" + "'", str7, "[97, 103, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 104, 4, 52]" + "'", str8, "[97, 104, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 105, 5, 52]" + "'", str9, "[97, 105, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 106, 6, 52]" + "'", str10, "[97, 106, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 107, 7, 52]" + "'", str11, "[97, 107, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 108, 8, 52]" + "'", str12, "[97, 108, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 109, 9, 52]" + "'", str13, "[97, 109, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[98, 0, 0, 53]" + "'", str14, "[98, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 1, 1, 53]" + "'", str15, "[98, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 2, 2, 53]" + "'", str16, "[98, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 3, 3, 53]" + "'", str17, "[98, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 4, 4, 53]" + "'", str18, "[98, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 5, 5, 53]" + "'", str19, "[98, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 6, 6, 53]" + "'", str20, "[98, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 7, 7, 53]" + "'", str21, "[98, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 8, 8, 53]" + "'", str22, "[98, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 9, 9, 53]" + "'", str23, "[98, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[99, 0, 0, 54]" + "'", str24, "[99, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 1, 1, 54]" + "'", str25, "[99, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 2, 2, 54]" + "'", str26, "[99, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 3, 3, 54]" + "'", str27, "[99, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 4, 4, 54]" + "'", str28, "[99, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 5, 5, 54]" + "'", str29, "[99, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 6, 6, 54]" + "'", str30, "[99, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 7, 7, 54]" + "'", str31, "[99, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 8, 8, 54]" + "'", str32, "[99, 8, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 9, 9, 54]" + "'", str33, "[99, 9, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 0, 55]" + "'", str34, "[100, 0, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 1, 1, 55]" + "'", str35, "[100, 1, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 2, 2, 55]" + "'", str36, "[100, 2, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 3, 55]" + "'", str37, "[100, 3, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 4, 4, 55]" + "'", str38, "[100, 4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 5, 5, 55]" + "'", str39, "[100, 5, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 6, 6, 55]" + "'", str40, "[100, 6, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 7, 7, 55]" + "'", str41, "[100, 7, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 8, 8, 55]" + "'", str42, "[100, 8, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 9, 9, 55]" + "'", str43, "[100, 9, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[101, 0, 0, 56]" + "'", str44, "[101, 0, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 1, 1, 56]" + "'", str45, "[101, 1, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 2, 2, 56]" + "'", str46, "[101, 2, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 3, 3, 56]" + "'", str47, "[101, 3, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 4, 4, 56]" + "'", str48, "[101, 4, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 5, 5, 56]" + "'", str49, "[101, 5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 6, 6, 56]" + "'", str50, "[101, 6, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 7, 7, 56]" + "'", str51, "[101, 7, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 8, 8, 56]" + "'", str52, "[101, 8, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 9, 9, 56]" + "'", str53, "[101, 9, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[102, 0, 0, 57]" + "'", str54, "[102, 0, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 1, 1, 57]" + "'", str55, "[102, 1, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 2, 2, 57]" + "'", str56, "[102, 2, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 3, 3, 57]" + "'", str57, "[102, 3, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 4, 4, 57]" + "'", str58, "[102, 4, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 5, 5, 57]" + "'", str59, "[102, 5, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 6, 6, 57]" + "'", str60, "[102, 6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 7, 7, 57]" + "'", str61, "[102, 7, 7, 57]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[102, 8, 8, 57]" + "'", str62, "[102, 8, 8, 57]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1772");
        int[] intArray3 = new int[] { ' ', 1, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass44 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[36, 1, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 2, -1]" + "'", str4, "[32, 2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 3, -1]" + "'", str5, "[32, 3, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 4, -1]" + "'", str6, "[32, 4, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 5, -1]" + "'", str7, "[32, 5, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 6, -1]" + "'", str8, "[32, 6, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 7, -1]" + "'", str9, "[32, 7, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 8, -1]" + "'", str10, "[32, 8, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 9, -1]" + "'", str11, "[32, 9, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[33, 0, 0]" + "'", str12, "[33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 1, 0]" + "'", str13, "[33, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 2, 0]" + "'", str14, "[33, 2, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 3, 0]" + "'", str15, "[33, 3, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 4, 0]" + "'", str16, "[33, 4, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 5, 0]" + "'", str17, "[33, 5, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 6, 0]" + "'", str18, "[33, 6, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 7, 0]" + "'", str19, "[33, 7, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 8, 0]" + "'", str20, "[33, 8, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 9, 0]" + "'", str21, "[33, 9, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[34, 0, 1]" + "'", str22, "[34, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 1, 1]" + "'", str23, "[34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 2, 1]" + "'", str24, "[34, 2, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 3, 1]" + "'", str25, "[34, 3, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 4, 1]" + "'", str26, "[34, 4, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 5, 1]" + "'", str27, "[34, 5, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 6, 1]" + "'", str28, "[34, 6, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 7, 1]" + "'", str29, "[34, 7, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 8, 1]" + "'", str30, "[34, 8, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 9, 1]" + "'", str31, "[34, 9, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 0, 2]" + "'", str32, "[35, 0, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 2]" + "'", str33, "[35, 1, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 2]" + "'", str34, "[35, 2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 3, 2]" + "'", str35, "[35, 3, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 4, 2]" + "'", str36, "[35, 4, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 5, 2]" + "'", str37, "[35, 5, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 6, 2]" + "'", str38, "[35, 6, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 7, 2]" + "'", str39, "[35, 7, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 8, 2]" + "'", str40, "[35, 8, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 9, 2]" + "'", str41, "[35, 9, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[36, 0, 3]" + "'", str42, "[36, 0, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[36, 1, 3]" + "'", str43, "[36, 1, 3]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1773");
        int[] intArray6 = new int[] { (-1), 10, (short) -1, (short) -1, (short) 10, (short) -1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass46 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 13, 8, 8, 13, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 10, 0, 0, 10, -1]" + "'", str7, "[-1, 10, 0, 0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 10, 1, 1, 10, -1]" + "'", str8, "[-1, 10, 1, 1, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 10, 2, 2, 10, -1]" + "'", str9, "[-1, 10, 2, 2, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 10, 3, 3, 10, -1]" + "'", str10, "[-1, 10, 3, 3, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 10, 4, 4, 10, -1]" + "'", str11, "[-1, 10, 4, 4, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 10, 5, 5, 10, -1]" + "'", str12, "[-1, 10, 5, 5, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 6, 6, 10, -1]" + "'", str13, "[-1, 10, 6, 6, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 7, 7, 10, -1]" + "'", str14, "[-1, 10, 7, 7, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 10, 8, 8, 10, -1]" + "'", str15, "[-1, 10, 8, 8, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 10, 9, 9, 10, -1]" + "'", str16, "[-1, 10, 9, 9, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 11, 0, 0, 11, -1]" + "'", str17, "[-1, 11, 0, 0, 11, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 11, 1, 1, 11, -1]" + "'", str18, "[-1, 11, 1, 1, 11, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 11, 2, 2, 11, -1]" + "'", str19, "[-1, 11, 2, 2, 11, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 11, 3, 3, 11, -1]" + "'", str20, "[-1, 11, 3, 3, 11, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 11, 4, 4, 11, -1]" + "'", str21, "[-1, 11, 4, 4, 11, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 11, 5, 5, 11, -1]" + "'", str22, "[-1, 11, 5, 5, 11, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 11, 6, 6, 11, -1]" + "'", str23, "[-1, 11, 6, 6, 11, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 11, 7, 7, 11, -1]" + "'", str24, "[-1, 11, 7, 7, 11, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 11, 8, 8, 11, -1]" + "'", str25, "[-1, 11, 8, 8, 11, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 11, 9, 9, 11, -1]" + "'", str26, "[-1, 11, 9, 9, 11, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 12, 0, 0, 12, -1]" + "'", str27, "[-1, 12, 0, 0, 12, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 12, 1, 1, 12, -1]" + "'", str28, "[-1, 12, 1, 1, 12, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 12, 2, 2, 12, -1]" + "'", str29, "[-1, 12, 2, 2, 12, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 12, 3, 3, 12, -1]" + "'", str30, "[-1, 12, 3, 3, 12, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 12, 4, 4, 12, -1]" + "'", str31, "[-1, 12, 4, 4, 12, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 12, 5, 5, 12, -1]" + "'", str32, "[-1, 12, 5, 5, 12, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 12, 6, 6, 12, -1]" + "'", str33, "[-1, 12, 6, 6, 12, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 12, 7, 7, 12, -1]" + "'", str34, "[-1, 12, 7, 7, 12, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 12, 8, 8, 12, -1]" + "'", str35, "[-1, 12, 8, 8, 12, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 12, 9, 9, 12, -1]" + "'", str36, "[-1, 12, 9, 9, 12, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 13, 0, 0, 13, -1]" + "'", str37, "[-1, 13, 0, 0, 13, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 13, 1, 1, 13, -1]" + "'", str38, "[-1, 13, 1, 1, 13, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 13, 2, 2, 13, -1]" + "'", str39, "[-1, 13, 2, 2, 13, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 13, 3, 3, 13, -1]" + "'", str40, "[-1, 13, 3, 3, 13, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 13, 4, 4, 13, -1]" + "'", str41, "[-1, 13, 4, 4, 13, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 13, 5, 5, 13, -1]" + "'", str42, "[-1, 13, 5, 5, 13, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 13, 6, 6, 13, -1]" + "'", str43, "[-1, 13, 6, 6, 13, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 13, 7, 7, 13, -1]" + "'", str44, "[-1, 13, 7, 7, 13, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 13, 8, 8, 13, -1]" + "'", str45, "[-1, 13, 8, 8, 13, -1]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1774");
        int[] intArray3 = new int[] { (short) 0, (short) 0, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass40 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 1, -1]" + "'", str4, "[0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 2, -1]" + "'", str5, "[0, 2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 3, -1]" + "'", str6, "[0, 3, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 4, -1]" + "'", str7, "[0, 4, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 5, -1]" + "'", str8, "[0, 5, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 6, -1]" + "'", str9, "[0, 6, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 7, -1]" + "'", str10, "[0, 7, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 8, -1]" + "'", str11, "[0, 8, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 9, -1]" + "'", str12, "[0, 9, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0]" + "'", str13, "[1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 0]" + "'", str14, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0]" + "'", str15, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 0]" + "'", str16, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 0]" + "'", str17, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 0]" + "'", str18, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 0]" + "'", str19, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 0]" + "'", str20, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 0]" + "'", str21, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 0]" + "'", str22, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 1]" + "'", str23, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1]" + "'", str24, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 1]" + "'", str25, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 1]" + "'", str26, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 1]" + "'", str27, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 1]" + "'", str28, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 1]" + "'", str29, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 1]" + "'", str30, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 1]" + "'", str31, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 1]" + "'", str32, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 2]" + "'", str33, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 2]" + "'", str34, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2]" + "'", str35, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 2]" + "'", str36, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 2]" + "'", str37, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 2]" + "'", str38, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 6, 2]" + "'", str39, "[3, 6, 2]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1775");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass47 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[54, 144]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 143]" + "'", str45, "[53, 143]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 144]" + "'", str46, "[54, 144]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1776");
        int[] intArray5 = new int[] { (short) 1, ' ', (byte) -1, (short) 100, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass27 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 34, 0, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 32, 0, 100, 100]" + "'", str6, "[1, 32, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 32, 1, 100, 100]" + "'", str7, "[1, 32, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 32, 2, 100, 100]" + "'", str8, "[1, 32, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 32, 3, 100, 100]" + "'", str9, "[1, 32, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 32, 4, 100, 100]" + "'", str10, "[1, 32, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 32, 5, 100, 100]" + "'", str11, "[1, 32, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 32, 6, 100, 100]" + "'", str12, "[1, 32, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 32, 7, 100, 100]" + "'", str13, "[1, 32, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 32, 8, 100, 100]" + "'", str14, "[1, 32, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 32, 9, 100, 100]" + "'", str15, "[1, 32, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 33, 0, 101, 100]" + "'", str16, "[1, 33, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 33, 1, 101, 100]" + "'", str17, "[1, 33, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 33, 2, 101, 100]" + "'", str18, "[1, 33, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 33, 3, 101, 100]" + "'", str19, "[1, 33, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 33, 4, 101, 100]" + "'", str20, "[1, 33, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 33, 5, 101, 100]" + "'", str21, "[1, 33, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 33, 6, 101, 100]" + "'", str22, "[1, 33, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 33, 7, 101, 100]" + "'", str23, "[1, 33, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 33, 8, 101, 100]" + "'", str24, "[1, 33, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 33, 9, 101, 100]" + "'", str25, "[1, 33, 9, 101, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 34, 0, 102, 100]" + "'", str26, "[1, 34, 0, 102, 100]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1777");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass61 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 55, 66, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 48, 59, 10]" + "'", str53, "[1, 48, 59, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 49, 60, 10]" + "'", str54, "[1, 49, 60, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 50, 61, 10]" + "'", str55, "[1, 50, 61, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 51, 62, 10]" + "'", str56, "[1, 51, 62, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 52, 63, 10]" + "'", str57, "[1, 52, 63, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 53, 64, 10]" + "'", str58, "[1, 53, 64, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 54, 65, 10]" + "'", str59, "[1, 54, 65, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 55, 66, 10]" + "'", str60, "[1, 55, 66, 10]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1778");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass45 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[143]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1779");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass27 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1780");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass49 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1781");
        int[] intArray4 = new int[] { (short) 0, 100, (byte) 0, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass7 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 102, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 1, 0]" + "'", str5, "[0, 101, 1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 2, 0]" + "'", str6, "[0, 102, 2, 0]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1782");
        int[] intArray3 = new int[] { 10, (byte) 100, 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass5 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 101, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 101, 0]" + "'", str4, "[10, 101, 0]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1783");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass16 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1784");
        int[] intArray6 = new int[] { '#', (byte) -1, (byte) 1, (-1), (short) 100, 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass16 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, -1, 10, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, -1, 2, 0, 100, 100]" + "'", str7, "[35, -1, 2, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, -1, 3, 1, 100, 100]" + "'", str8, "[35, -1, 3, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, -1, 4, 2, 100, 100]" + "'", str9, "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, -1, 5, 3, 100, 100]" + "'", str10, "[35, -1, 5, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, -1, 6, 4, 100, 100]" + "'", str11, "[35, -1, 6, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, -1, 7, 5, 100, 100]" + "'", str12, "[35, -1, 7, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, -1, 8, 6, 100, 100]" + "'", str13, "[35, -1, 8, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, -1, 9, 7, 100, 100]" + "'", str14, "[35, -1, 9, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, -1, 10, 8, 100, 100]" + "'", str15, "[35, -1, 10, 8, 100, 100]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1785");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass26 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 71, 71, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 10, 68, 68, 10, 0]" + "'", str22, "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 10, 69, 69, 10, 0]" + "'", str23, "[10, 10, 69, 69, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10, 70, 70, 10, 0]" + "'", str24, "[10, 10, 70, 70, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 10, 71, 71, 10, 0]" + "'", str25, "[10, 10, 71, 71, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1786");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass55 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1787");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass31 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 7, 2]" + "'", str29, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 8, 2]" + "'", str30, "[1, 8, 2]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1788");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass25 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 70, 70, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 10, 68, 68, 10, 0]" + "'", str22, "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 10, 69, 69, 10, 0]" + "'", str23, "[10, 10, 69, 69, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10, 70, 70, 10, 0]" + "'", str24, "[10, 10, 70, 70, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1789");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass57 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[5]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1790");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass58 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1791");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass16 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 7, 100]" + "'", str10, "[0, 106, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 8, 100]" + "'", str11, "[0, 107, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 9, 100]" + "'", str12, "[0, 108, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 101]" + "'", str13, "[1, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 1, 101]" + "'", str14, "[1, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 2, 101]" + "'", str15, "[1, 2, 2, 101]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1792");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass30 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1793");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 10, (short) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass47 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 51, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, -1, 11, 100, -1]" + "'", str6, "[100, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, -1, 12, 100, -1]" + "'", str7, "[100, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, -1, 13, 100, -1]" + "'", str8, "[100, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, -1, 14, 100, -1]" + "'", str9, "[100, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, -1, 15, 100, -1]" + "'", str10, "[100, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, -1, 16, 100, -1]" + "'", str11, "[100, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, -1, 17, 100, -1]" + "'", str12, "[100, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, -1, 18, 100, -1]" + "'", str13, "[100, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, -1, 19, 100, -1]" + "'", str14, "[100, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, -1, 20, 100, -1]" + "'", str15, "[100, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, -1, 21, 100, -1]" + "'", str16, "[100, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, -1, 22, 100, -1]" + "'", str17, "[100, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, -1, 23, 100, -1]" + "'", str18, "[100, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, -1, 24, 100, -1]" + "'", str19, "[100, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, -1, 25, 100, -1]" + "'", str20, "[100, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, -1, 26, 100, -1]" + "'", str21, "[100, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, -1, 27, 100, -1]" + "'", str22, "[100, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, -1, 28, 100, -1]" + "'", str23, "[100, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, -1, 29, 100, -1]" + "'", str24, "[100, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, -1, 30, 100, -1]" + "'", str25, "[100, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, -1, 31, 100, -1]" + "'", str26, "[100, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, -1, 32, 100, -1]" + "'", str27, "[100, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, -1, 33, 100, -1]" + "'", str28, "[100, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, -1, 34, 100, -1]" + "'", str29, "[100, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, -1, 35, 100, -1]" + "'", str30, "[100, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, -1, 36, 100, -1]" + "'", str31, "[100, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, -1, 37, 100, -1]" + "'", str32, "[100, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, -1, 38, 100, -1]" + "'", str33, "[100, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, -1, 39, 100, -1]" + "'", str34, "[100, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, -1, 40, 100, -1]" + "'", str35, "[100, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, -1, 41, 100, -1]" + "'", str36, "[100, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, -1, 42, 100, -1]" + "'", str37, "[100, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, -1, 43, 100, -1]" + "'", str38, "[100, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, -1, 44, 100, -1]" + "'", str39, "[100, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, -1, 45, 100, -1]" + "'", str40, "[100, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, -1, 46, 100, -1]" + "'", str41, "[100, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, -1, 47, 100, -1]" + "'", str42, "[100, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, -1, 48, 100, -1]" + "'", str43, "[100, -1, 48, 100, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, -1, 49, 100, -1]" + "'", str44, "[100, -1, 49, 100, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, -1, 50, 100, -1]" + "'", str45, "[100, -1, 50, 100, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, -1, 51, 100, -1]" + "'", str46, "[100, -1, 51, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1794");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass22 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1795");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass37 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 82, 62, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 77, 57, 100, 52]" + "'", str31, "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 78, 58, 100, 52]" + "'", str32, "[-1, 100, 78, 58, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 79, 59, 100, 52]" + "'", str33, "[-1, 100, 79, 59, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 80, 60, 100, 52]" + "'", str34, "[-1, 100, 80, 60, 100, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 81, 61, 100, 52]" + "'", str35, "[-1, 100, 81, 61, 100, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 82, 62, 100, 52]" + "'", str36, "[-1, 100, 82, 62, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1796");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass27 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[2, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 0]" + "'", str22, "[1, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 0]" + "'", str23, "[1, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 0]" + "'", str24, "[1, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 1]" + "'", str25, "[2, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 1]" + "'", str26, "[2, 1, 1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1797");
        int[] intArray3 = new int[] { (byte) 1, (short) 0, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass56 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1798");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass25 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 3, 0, 102, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 8, 101, 0]" + "'", str22, "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 9, 101, 0]" + "'", str23, "[1, 2, 9, 101, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 3, 0, 102, 0]" + "'", str24, "[1, 3, 0, 102, 0]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1799");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass7 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1800");
        int[] intArray4 = new int[] { (short) 0, (short) 100, 10, 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass14 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 109, 19, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 11, 1]" + "'", str5, "[0, 101, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 12, 1]" + "'", str6, "[0, 102, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 13, 1]" + "'", str7, "[0, 103, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 14, 1]" + "'", str8, "[0, 104, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 15, 1]" + "'", str9, "[0, 105, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 16, 1]" + "'", str10, "[0, 106, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 17, 1]" + "'", str11, "[0, 107, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 18, 1]" + "'", str12, "[0, 108, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 19, 1]" + "'", str13, "[0, 109, 19, 1]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1801");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass31 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[8, 8]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1802");
        int[] intArray4 = new int[] { '4', (byte) -1, 100, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass62 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 56, 157, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 101, 0]" + "'", str5, "[52, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 102, 0]" + "'", str6, "[52, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 103, 0]" + "'", str7, "[52, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 104, 0]" + "'", str8, "[52, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 105, 0]" + "'", str9, "[52, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 106, 0]" + "'", str10, "[52, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 107, 0]" + "'", str11, "[52, 6, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 108, 0]" + "'", str12, "[52, 7, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 109, 0]" + "'", str13, "[52, 8, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 110, 0]" + "'", str14, "[52, 9, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 111, 0]" + "'", str15, "[52, 10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 112, 0]" + "'", str16, "[52, 11, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 113, 0]" + "'", str17, "[52, 12, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 114, 0]" + "'", str18, "[52, 13, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 115, 0]" + "'", str19, "[52, 14, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 116, 0]" + "'", str20, "[52, 15, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 117, 0]" + "'", str21, "[52, 16, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 118, 0]" + "'", str22, "[52, 17, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 119, 0]" + "'", str23, "[52, 18, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 120, 0]" + "'", str24, "[52, 19, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 121, 0]" + "'", str25, "[52, 20, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 122, 0]" + "'", str26, "[52, 21, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 123, 0]" + "'", str27, "[52, 22, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 124, 0]" + "'", str28, "[52, 23, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 125, 0]" + "'", str29, "[52, 24, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 126, 0]" + "'", str30, "[52, 25, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 127, 0]" + "'", str31, "[52, 26, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 128, 0]" + "'", str32, "[52, 27, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 129, 0]" + "'", str33, "[52, 28, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 130, 0]" + "'", str34, "[52, 29, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 131, 0]" + "'", str35, "[52, 30, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 132, 0]" + "'", str36, "[52, 31, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 133, 0]" + "'", str37, "[52, 32, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 134, 0]" + "'", str38, "[52, 33, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 135, 0]" + "'", str39, "[52, 34, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 136, 0]" + "'", str40, "[52, 35, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 137, 0]" + "'", str41, "[52, 36, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 138, 0]" + "'", str42, "[52, 37, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 139, 0]" + "'", str43, "[52, 38, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 140, 0]" + "'", str44, "[52, 39, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 141, 0]" + "'", str45, "[52, 40, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 142, 0]" + "'", str46, "[52, 41, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 143, 0]" + "'", str47, "[52, 42, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 144, 0]" + "'", str48, "[52, 43, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 145, 0]" + "'", str49, "[52, 44, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 146, 0]" + "'", str50, "[52, 45, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 147, 0]" + "'", str51, "[52, 46, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 148, 0]" + "'", str52, "[52, 47, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 149, 0]" + "'", str53, "[52, 48, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 150, 0]" + "'", str54, "[52, 49, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 151, 0]" + "'", str55, "[52, 50, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 152, 0]" + "'", str56, "[52, 51, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 153, 0]" + "'", str57, "[52, 52, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 154, 0]" + "'", str58, "[52, 53, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[52, 54, 155, 0]" + "'", str59, "[52, 54, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[52, 55, 156, 0]" + "'", str60, "[52, 55, 156, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[52, 56, 157, 0]" + "'", str61, "[52, 56, 157, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1803");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass24 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 69, 69, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 10, 68, 68, 10, 0]" + "'", str22, "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 10, 69, 69, 10, 0]" + "'", str23, "[10, 10, 69, 69, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1804");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass29 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 74, 74, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 10, 68, 68, 10, 0]" + "'", str22, "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 10, 69, 69, 10, 0]" + "'", str23, "[10, 10, 69, 69, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10, 70, 70, 10, 0]" + "'", str24, "[10, 10, 70, 70, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 10, 71, 71, 10, 0]" + "'", str25, "[10, 10, 71, 71, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 10, 72, 72, 10, 0]" + "'", str26, "[10, 10, 72, 72, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 10, 73, 73, 10, 0]" + "'", str27, "[10, 10, 73, 73, 10, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 10, 74, 74, 10, 0]" + "'", str28, "[10, 10, 74, 74, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1805");
        int[] intArray3 = new int[] { (short) -1, 100, (short) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass60 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 156, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 101, 10]" + "'", str4, "[-1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 102, 10]" + "'", str5, "[-1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 103, 10]" + "'", str6, "[-1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 104, 10]" + "'", str7, "[-1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 105, 10]" + "'", str8, "[-1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 106, 10]" + "'", str9, "[-1, 106, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 107, 10]" + "'", str10, "[-1, 107, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 108, 10]" + "'", str11, "[-1, 108, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 109, 10]" + "'", str12, "[-1, 109, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 110, 10]" + "'", str13, "[-1, 110, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 111, 10]" + "'", str14, "[-1, 111, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 112, 10]" + "'", str15, "[-1, 112, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 113, 10]" + "'", str16, "[-1, 113, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 114, 10]" + "'", str17, "[-1, 114, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 115, 10]" + "'", str18, "[-1, 115, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 116, 10]" + "'", str19, "[-1, 116, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 117, 10]" + "'", str20, "[-1, 117, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 118, 10]" + "'", str21, "[-1, 118, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 119, 10]" + "'", str22, "[-1, 119, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 120, 10]" + "'", str23, "[-1, 120, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 121, 10]" + "'", str24, "[-1, 121, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 122, 10]" + "'", str25, "[-1, 122, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 123, 10]" + "'", str26, "[-1, 123, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 124, 10]" + "'", str27, "[-1, 124, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 125, 10]" + "'", str28, "[-1, 125, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 126, 10]" + "'", str29, "[-1, 126, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 127, 10]" + "'", str30, "[-1, 127, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 128, 10]" + "'", str31, "[-1, 128, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 129, 10]" + "'", str32, "[-1, 129, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 130, 10]" + "'", str33, "[-1, 130, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 131, 10]" + "'", str34, "[-1, 131, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 132, 10]" + "'", str35, "[-1, 132, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 133, 10]" + "'", str36, "[-1, 133, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 134, 10]" + "'", str37, "[-1, 134, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 135, 10]" + "'", str38, "[-1, 135, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 136, 10]" + "'", str39, "[-1, 136, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 137, 10]" + "'", str40, "[-1, 137, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 138, 10]" + "'", str41, "[-1, 138, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 139, 10]" + "'", str42, "[-1, 139, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 140, 10]" + "'", str43, "[-1, 140, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 141, 10]" + "'", str44, "[-1, 141, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 142, 10]" + "'", str45, "[-1, 142, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 143, 10]" + "'", str46, "[-1, 143, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 144, 10]" + "'", str47, "[-1, 144, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 145, 10]" + "'", str48, "[-1, 145, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 146, 10]" + "'", str49, "[-1, 146, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 147, 10]" + "'", str50, "[-1, 147, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 148, 10]" + "'", str51, "[-1, 148, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 149, 10]" + "'", str52, "[-1, 149, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 150, 10]" + "'", str53, "[-1, 150, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 151, 10]" + "'", str54, "[-1, 151, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 152, 10]" + "'", str55, "[-1, 152, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 153, 10]" + "'", str56, "[-1, 153, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 154, 10]" + "'", str57, "[-1, 154, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 155, 10]" + "'", str58, "[-1, 155, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 156, 10]" + "'", str59, "[-1, 156, 10]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1806");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass27 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 72, 72, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 10, 68, 68, 10, 0]" + "'", str22, "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 10, 69, 69, 10, 0]" + "'", str23, "[10, 10, 69, 69, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10, 70, 70, 10, 0]" + "'", str24, "[10, 10, 70, 70, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 10, 71, 71, 10, 0]" + "'", str25, "[10, 10, 71, 71, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 10, 72, 72, 10, 0]" + "'", str26, "[10, 10, 72, 72, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1807");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass25 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 1, 102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 101]" + "'", str22, "[2, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 102]" + "'", str23, "[3, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 102]" + "'", str24, "[3, 1, 102]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1808");
        int[] intArray6 = new int[] { '#', (byte) 0, 10, (-1), '#', (byte) 1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass39 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 3, 1, 1, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 0, 11, 0, 35, 1]" + "'", str7, "[35, 0, 11, 0, 35, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 0, 12, 1, 35, 1]" + "'", str8, "[35, 0, 12, 1, 35, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 0, 13, 2, 35, 1]" + "'", str9, "[35, 0, 13, 2, 35, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 0, 14, 3, 35, 1]" + "'", str10, "[35, 0, 14, 3, 35, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 0, 15, 4, 35, 1]" + "'", str11, "[35, 0, 15, 4, 35, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 0, 16, 5, 35, 1]" + "'", str12, "[35, 0, 16, 5, 35, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 0, 17, 6, 35, 1]" + "'", str13, "[35, 0, 17, 6, 35, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 0, 18, 7, 35, 1]" + "'", str14, "[35, 0, 18, 7, 35, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 0, 19, 8, 35, 1]" + "'", str15, "[35, 0, 19, 8, 35, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 0, 20, 9, 35, 1]" + "'", str16, "[35, 0, 20, 9, 35, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 1, 0, 0, 36, 1]" + "'", str17, "[35, 1, 0, 0, 36, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 1, 1, 1, 36, 1]" + "'", str18, "[35, 1, 1, 1, 36, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 1, 2, 2, 36, 1]" + "'", str19, "[35, 1, 2, 2, 36, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 1, 3, 3, 36, 1]" + "'", str20, "[35, 1, 3, 3, 36, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 1, 4, 4, 36, 1]" + "'", str21, "[35, 1, 4, 4, 36, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 1, 5, 5, 36, 1]" + "'", str22, "[35, 1, 5, 5, 36, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 1, 6, 6, 36, 1]" + "'", str23, "[35, 1, 6, 6, 36, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 1, 7, 7, 36, 1]" + "'", str24, "[35, 1, 7, 7, 36, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 1, 8, 8, 36, 1]" + "'", str25, "[35, 1, 8, 8, 36, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 1, 9, 9, 36, 1]" + "'", str26, "[35, 1, 9, 9, 36, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 2, 0, 0, 37, 1]" + "'", str27, "[35, 2, 0, 0, 37, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 2, 1, 1, 37, 1]" + "'", str28, "[35, 2, 1, 1, 37, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 2, 2, 2, 37, 1]" + "'", str29, "[35, 2, 2, 2, 37, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 2, 3, 3, 37, 1]" + "'", str30, "[35, 2, 3, 3, 37, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 2, 4, 4, 37, 1]" + "'", str31, "[35, 2, 4, 4, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 2, 5, 5, 37, 1]" + "'", str32, "[35, 2, 5, 5, 37, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 2, 6, 6, 37, 1]" + "'", str33, "[35, 2, 6, 6, 37, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 7, 7, 37, 1]" + "'", str34, "[35, 2, 7, 7, 37, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 2, 8, 8, 37, 1]" + "'", str35, "[35, 2, 8, 8, 37, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 9, 9, 37, 1]" + "'", str36, "[35, 2, 9, 9, 37, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 0, 0, 38, 1]" + "'", str37, "[35, 3, 0, 0, 38, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 3, 1, 1, 38, 1]" + "'", str38, "[35, 3, 1, 1, 38, 1]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1809");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass60 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 156, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 156, 1]" + "'", str59, "[35, 156, 1]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1810");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass44 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[142]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1811");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass64 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 1]" + "'", str62, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1812");
        int[] intArray5 = new int[] { (short) 100, 100, (short) 1, (byte) -1, (short) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass42 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 103, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, -1, 1]" + "'", str6, "[100, 100, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, -1, 1]" + "'", str7, "[100, 100, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, -1, 1]" + "'", str8, "[100, 100, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, -1, 1]" + "'", str9, "[100, 100, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, -1, 1]" + "'", str10, "[100, 100, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, -1, 1]" + "'", str11, "[100, 100, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, -1, 1]" + "'", str12, "[100, 100, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, -1, 1]" + "'", str13, "[100, 100, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 0, 1]" + "'", str14, "[100, 101, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 0, 1]" + "'", str15, "[100, 101, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 0, 1]" + "'", str16, "[100, 101, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 0, 1]" + "'", str17, "[100, 101, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 0, 1]" + "'", str18, "[100, 101, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 0, 1]" + "'", str19, "[100, 101, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 0, 1]" + "'", str20, "[100, 101, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 0, 1]" + "'", str21, "[100, 101, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 0, 1]" + "'", str22, "[100, 101, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 0, 1]" + "'", str23, "[100, 101, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 1, 1]" + "'", str24, "[100, 102, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 1, 1]" + "'", str25, "[100, 102, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 1, 1]" + "'", str26, "[100, 102, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 1, 1]" + "'", str27, "[100, 102, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 1, 1]" + "'", str28, "[100, 102, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 1, 1]" + "'", str29, "[100, 102, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 1, 1]" + "'", str30, "[100, 102, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 1, 1]" + "'", str31, "[100, 102, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 1, 1]" + "'", str32, "[100, 102, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 1, 1]" + "'", str33, "[100, 102, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 2, 1]" + "'", str34, "[100, 103, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 2, 1]" + "'", str35, "[100, 103, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 2, 1]" + "'", str36, "[100, 103, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 2, 1]" + "'", str37, "[100, 103, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 2, 1]" + "'", str38, "[100, 103, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 2, 1]" + "'", str39, "[100, 103, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 2, 1]" + "'", str40, "[100, 103, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 2, 1]" + "'", str41, "[100, 103, 7, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1813");
        int[] intArray3 = new int[] { (short) 100, (byte) 0, (short) 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass5 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 1, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 1, 1]" + "'", str4, "[100, 1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1814");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass24 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 2, 9, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 8, 101, 0]" + "'", str22, "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 9, 101, 0]" + "'", str23, "[1, 2, 9, 101, 0]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1815");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass59 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7]" + "'", str58, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1816");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass34 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1817");
        int[] intArray6 = new int[] { (byte) 0, (short) 1, 1, (short) 1, 1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass17 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 2, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 2, 2, 1, 0]" + "'", str7, "[0, 1, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 3, 3, 1, 0]" + "'", str8, "[0, 1, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 4, 4, 1, 0]" + "'", str9, "[0, 1, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 5, 5, 1, 0]" + "'", str10, "[0, 1, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 6, 6, 1, 0]" + "'", str11, "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 7, 7, 1, 0]" + "'", str12, "[0, 1, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 8, 8, 1, 0]" + "'", str13, "[0, 1, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 9, 9, 1, 0]" + "'", str14, "[0, 1, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 0, 0, 2, 0]" + "'", str15, "[0, 2, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 1, 1, 2, 0]" + "'", str16, "[0, 2, 1, 1, 2, 0]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1818");
        int[] intArray3 = new int[] { 100, 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass32 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[102, 9, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 2, 0]" + "'", str4, "[100, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 3, 0]" + "'", str5, "[100, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 4, 0]" + "'", str6, "[100, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 5, 0]" + "'", str7, "[100, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 6, 0]" + "'", str8, "[100, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 7, 0]" + "'", str9, "[100, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 8, 0]" + "'", str10, "[100, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 9, 0]" + "'", str11, "[100, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[101, 0, 1]" + "'", str12, "[101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 1, 1]" + "'", str13, "[101, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 2, 1]" + "'", str14, "[101, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 3, 1]" + "'", str15, "[101, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 4, 1]" + "'", str16, "[101, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 5, 1]" + "'", str17, "[101, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 6, 1]" + "'", str18, "[101, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 7, 1]" + "'", str19, "[101, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 8, 1]" + "'", str20, "[101, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 9, 1]" + "'", str21, "[101, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[102, 0, 2]" + "'", str22, "[102, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 1, 2]" + "'", str23, "[102, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 2, 2]" + "'", str24, "[102, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 3, 2]" + "'", str25, "[102, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 4, 2]" + "'", str26, "[102, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 5, 2]" + "'", str27, "[102, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 6, 2]" + "'", str28, "[102, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[102, 7, 2]" + "'", str29, "[102, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[102, 8, 2]" + "'", str30, "[102, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[102, 9, 2]" + "'", str31, "[102, 9, 2]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1819");
        int[] intArray4 = new int[] { (short) 0, (short) 100, 10, 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass17 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 112, 22, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 11, 1]" + "'", str5, "[0, 101, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 12, 1]" + "'", str6, "[0, 102, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 13, 1]" + "'", str7, "[0, 103, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 14, 1]" + "'", str8, "[0, 104, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 15, 1]" + "'", str9, "[0, 105, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 16, 1]" + "'", str10, "[0, 106, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 17, 1]" + "'", str11, "[0, 107, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 18, 1]" + "'", str12, "[0, 108, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 19, 1]" + "'", str13, "[0, 109, 19, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 20, 1]" + "'", str14, "[0, 110, 20, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 111, 21, 1]" + "'", str15, "[0, 111, 21, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 112, 22, 1]" + "'", str16, "[0, 112, 22, 1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1820");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass52 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[9, 9]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1821");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass34 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 79, 59, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 77, 57, 100, 52]" + "'", str31, "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 78, 58, 100, 52]" + "'", str32, "[-1, 100, 78, 58, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 79, 59, 100, 52]" + "'", str33, "[-1, 100, 79, 59, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1822");
        int[] intArray2 = new int[] { (short) -1, (short) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass55 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 1]" + "'", str3, "[0, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 2]" + "'", str4, "[1, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 3]" + "'", str5, "[2, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 4]" + "'", str6, "[3, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 5]" + "'", str7, "[4, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 6]" + "'", str8, "[5, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 7]" + "'", str9, "[6, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 8]" + "'", str10, "[7, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[8, 9]" + "'", str11, "[8, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2, 2]" + "'", str54, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1823");
        int[] intArray2 = new int[] { (byte) 10, (byte) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass32 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[9, 9]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 1]" + "'", str3, "[11, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 2]" + "'", str4, "[12, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 3]" + "'", str5, "[13, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 4]" + "'", str6, "[14, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 5]" + "'", str7, "[15, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 6]" + "'", str8, "[16, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 7]" + "'", str9, "[17, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 8]" + "'", str10, "[18, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 9]" + "'", str11, "[19, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1824");
        int[] intArray3 = new int[] { (short) 0, (short) 0, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass44 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 1, -1]" + "'", str4, "[0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 2, -1]" + "'", str5, "[0, 2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 3, -1]" + "'", str6, "[0, 3, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 4, -1]" + "'", str7, "[0, 4, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 5, -1]" + "'", str8, "[0, 5, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 6, -1]" + "'", str9, "[0, 6, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 7, -1]" + "'", str10, "[0, 7, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 8, -1]" + "'", str11, "[0, 8, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 9, -1]" + "'", str12, "[0, 9, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0]" + "'", str13, "[1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 0]" + "'", str14, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0]" + "'", str15, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 0]" + "'", str16, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 0]" + "'", str17, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 0]" + "'", str18, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 0]" + "'", str19, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 0]" + "'", str20, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 0]" + "'", str21, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 0]" + "'", str22, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 1]" + "'", str23, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1]" + "'", str24, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 1]" + "'", str25, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 1]" + "'", str26, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 1]" + "'", str27, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 1]" + "'", str28, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 1]" + "'", str29, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 1]" + "'", str30, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 1]" + "'", str31, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 1]" + "'", str32, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 2]" + "'", str33, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 2]" + "'", str34, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2]" + "'", str35, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 2]" + "'", str36, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 2]" + "'", str37, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 2]" + "'", str38, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 6, 2]" + "'", str39, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 7, 2]" + "'", str40, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 8, 2]" + "'", str41, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 9, 2]" + "'", str42, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 0, 3]" + "'", str43, "[4, 0, 3]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1825");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass13 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 10, 5, 106, 100, 52]" + "'", str12, "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1826");
        int[] intArray3 = new int[] { 100, 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass31 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[102, 8, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 2, 0]" + "'", str4, "[100, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 3, 0]" + "'", str5, "[100, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 4, 0]" + "'", str6, "[100, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 5, 0]" + "'", str7, "[100, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 6, 0]" + "'", str8, "[100, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 7, 0]" + "'", str9, "[100, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 8, 0]" + "'", str10, "[100, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 9, 0]" + "'", str11, "[100, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[101, 0, 1]" + "'", str12, "[101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 1, 1]" + "'", str13, "[101, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 2, 1]" + "'", str14, "[101, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 3, 1]" + "'", str15, "[101, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 4, 1]" + "'", str16, "[101, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 5, 1]" + "'", str17, "[101, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 6, 1]" + "'", str18, "[101, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 7, 1]" + "'", str19, "[101, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 8, 1]" + "'", str20, "[101, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 9, 1]" + "'", str21, "[101, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[102, 0, 2]" + "'", str22, "[102, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 1, 2]" + "'", str23, "[102, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 2, 2]" + "'", str24, "[102, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 3, 2]" + "'", str25, "[102, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 4, 2]" + "'", str26, "[102, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 5, 2]" + "'", str27, "[102, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 6, 2]" + "'", str28, "[102, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[102, 7, 2]" + "'", str29, "[102, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[102, 8, 2]" + "'", str30, "[102, 8, 2]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1827");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass30 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 7, 2]" + "'", str29, "[1, 7, 2]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1828");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass32 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[9, 9]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1829");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass11 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[18, 9]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 6]" + "'", str7, "[15, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 7]" + "'", str8, "[16, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 8]" + "'", str9, "[17, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 9]" + "'", str10, "[18, 9]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1830");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass14 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 6, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 10, 5, 106, 100, 52]" + "'", str12, "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 10, 6, 107, 100, 52]" + "'", str13, "[1, 10, 6, 107, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1831");
        int[] intArray3 = new int[] { (byte) -1, (byte) 0, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass51 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 7, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 1, 0]" + "'", str4, "[-1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 0]" + "'", str5, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 0]" + "'", str6, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 0]" + "'", str7, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 0]" + "'", str8, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 0]" + "'", str9, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 0]" + "'", str10, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 0]" + "'", str11, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 0]" + "'", str12, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 0, 1]" + "'", str13, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 1]" + "'", str14, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 1]" + "'", str15, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 3, 1]" + "'", str16, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 4, 1]" + "'", str17, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 5, 1]" + "'", str18, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 6, 1]" + "'", str19, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 7, 1]" + "'", str20, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 8, 1]" + "'", str21, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 9, 1]" + "'", str22, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 2]" + "'", str23, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 2]" + "'", str24, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 2, 2]" + "'", str25, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2]" + "'", str26, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 4, 2]" + "'", str27, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 5, 2]" + "'", str28, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 6, 2]" + "'", str29, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 7, 2]" + "'", str30, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 8, 2]" + "'", str31, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 9, 2]" + "'", str32, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 0, 3]" + "'", str33, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 1, 3]" + "'", str34, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2, 3]" + "'", str35, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 3, 3]" + "'", str36, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 4, 3]" + "'", str37, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 5, 3]" + "'", str38, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 6, 3]" + "'", str39, "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 7, 3]" + "'", str40, "[2, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 8, 3]" + "'", str41, "[2, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 9, 3]" + "'", str42, "[2, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 0, 4]" + "'", str43, "[3, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 1, 4]" + "'", str44, "[3, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 2, 4]" + "'", str45, "[3, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3, 4]" + "'", str46, "[3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 4, 4]" + "'", str47, "[3, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 5, 4]" + "'", str48, "[3, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 6, 4]" + "'", str49, "[3, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 7, 4]" + "'", str50, "[3, 7, 4]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1832");
        int[] intArray5 = new int[] { (short) 100, 100, (short) 1, (byte) -1, (short) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass44 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 103, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, -1, 1]" + "'", str6, "[100, 100, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, -1, 1]" + "'", str7, "[100, 100, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, -1, 1]" + "'", str8, "[100, 100, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, -1, 1]" + "'", str9, "[100, 100, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, -1, 1]" + "'", str10, "[100, 100, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, -1, 1]" + "'", str11, "[100, 100, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, -1, 1]" + "'", str12, "[100, 100, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, -1, 1]" + "'", str13, "[100, 100, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 0, 1]" + "'", str14, "[100, 101, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 0, 1]" + "'", str15, "[100, 101, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 0, 1]" + "'", str16, "[100, 101, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 0, 1]" + "'", str17, "[100, 101, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 0, 1]" + "'", str18, "[100, 101, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 0, 1]" + "'", str19, "[100, 101, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 0, 1]" + "'", str20, "[100, 101, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 0, 1]" + "'", str21, "[100, 101, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 0, 1]" + "'", str22, "[100, 101, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 0, 1]" + "'", str23, "[100, 101, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 1, 1]" + "'", str24, "[100, 102, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 1, 1]" + "'", str25, "[100, 102, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 1, 1]" + "'", str26, "[100, 102, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 1, 1]" + "'", str27, "[100, 102, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 1, 1]" + "'", str28, "[100, 102, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 1, 1]" + "'", str29, "[100, 102, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 1, 1]" + "'", str30, "[100, 102, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 1, 1]" + "'", str31, "[100, 102, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 1, 1]" + "'", str32, "[100, 102, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 1, 1]" + "'", str33, "[100, 102, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 2, 1]" + "'", str34, "[100, 103, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 2, 1]" + "'", str35, "[100, 103, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 2, 1]" + "'", str36, "[100, 103, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 2, 1]" + "'", str37, "[100, 103, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 2, 1]" + "'", str38, "[100, 103, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 2, 1]" + "'", str39, "[100, 103, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 2, 1]" + "'", str40, "[100, 103, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 2, 1]" + "'", str41, "[100, 103, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 103, 8, 2, 1]" + "'", str42, "[100, 103, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 103, 9, 2, 1]" + "'", str43, "[100, 103, 9, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1833");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass56 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[4]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1834");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass34 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1835");
        int[] intArray4 = new int[] { (short) 0, (short) 100, 10, 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass16 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 111, 21, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 11, 1]" + "'", str5, "[0, 101, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 12, 1]" + "'", str6, "[0, 102, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 13, 1]" + "'", str7, "[0, 103, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 14, 1]" + "'", str8, "[0, 104, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 15, 1]" + "'", str9, "[0, 105, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 16, 1]" + "'", str10, "[0, 106, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 17, 1]" + "'", str11, "[0, 107, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 18, 1]" + "'", str12, "[0, 108, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 19, 1]" + "'", str13, "[0, 109, 19, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 20, 1]" + "'", str14, "[0, 110, 20, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 111, 21, 1]" + "'", str15, "[0, 111, 21, 1]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1836");
        int[] intArray4 = new int[] { 100, (byte) 100, (byte) 100, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass14 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 109, 109, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 101, 101, 0]" + "'", str5, "[100, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 102, 102, 0]" + "'", str6, "[100, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 103, 103, 0]" + "'", str7, "[100, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 104, 104, 0]" + "'", str8, "[100, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 105, 105, 0]" + "'", str9, "[100, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 106, 106, 0]" + "'", str10, "[100, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 107, 107, 0]" + "'", str11, "[100, 107, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 108, 108, 0]" + "'", str12, "[100, 108, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 109, 109, 0]" + "'", str13, "[100, 109, 109, 0]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1837");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass26 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 2, 102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 101]" + "'", str22, "[2, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 102]" + "'", str23, "[3, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 102]" + "'", str24, "[3, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 102]" + "'", str25, "[3, 2, 102]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1838");
        int[] intArray6 = new int[] { (-1), 10, (short) -1, (short) -1, (short) 10, (short) -1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass47 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 13, 9, 9, 13, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 10, 0, 0, 10, -1]" + "'", str7, "[-1, 10, 0, 0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 10, 1, 1, 10, -1]" + "'", str8, "[-1, 10, 1, 1, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 10, 2, 2, 10, -1]" + "'", str9, "[-1, 10, 2, 2, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 10, 3, 3, 10, -1]" + "'", str10, "[-1, 10, 3, 3, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 10, 4, 4, 10, -1]" + "'", str11, "[-1, 10, 4, 4, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 10, 5, 5, 10, -1]" + "'", str12, "[-1, 10, 5, 5, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 6, 6, 10, -1]" + "'", str13, "[-1, 10, 6, 6, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 10, 7, 7, 10, -1]" + "'", str14, "[-1, 10, 7, 7, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 10, 8, 8, 10, -1]" + "'", str15, "[-1, 10, 8, 8, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 10, 9, 9, 10, -1]" + "'", str16, "[-1, 10, 9, 9, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 11, 0, 0, 11, -1]" + "'", str17, "[-1, 11, 0, 0, 11, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 11, 1, 1, 11, -1]" + "'", str18, "[-1, 11, 1, 1, 11, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 11, 2, 2, 11, -1]" + "'", str19, "[-1, 11, 2, 2, 11, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 11, 3, 3, 11, -1]" + "'", str20, "[-1, 11, 3, 3, 11, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 11, 4, 4, 11, -1]" + "'", str21, "[-1, 11, 4, 4, 11, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 11, 5, 5, 11, -1]" + "'", str22, "[-1, 11, 5, 5, 11, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 11, 6, 6, 11, -1]" + "'", str23, "[-1, 11, 6, 6, 11, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 11, 7, 7, 11, -1]" + "'", str24, "[-1, 11, 7, 7, 11, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 11, 8, 8, 11, -1]" + "'", str25, "[-1, 11, 8, 8, 11, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 11, 9, 9, 11, -1]" + "'", str26, "[-1, 11, 9, 9, 11, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 12, 0, 0, 12, -1]" + "'", str27, "[-1, 12, 0, 0, 12, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 12, 1, 1, 12, -1]" + "'", str28, "[-1, 12, 1, 1, 12, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 12, 2, 2, 12, -1]" + "'", str29, "[-1, 12, 2, 2, 12, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 12, 3, 3, 12, -1]" + "'", str30, "[-1, 12, 3, 3, 12, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 12, 4, 4, 12, -1]" + "'", str31, "[-1, 12, 4, 4, 12, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 12, 5, 5, 12, -1]" + "'", str32, "[-1, 12, 5, 5, 12, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 12, 6, 6, 12, -1]" + "'", str33, "[-1, 12, 6, 6, 12, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 12, 7, 7, 12, -1]" + "'", str34, "[-1, 12, 7, 7, 12, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 12, 8, 8, 12, -1]" + "'", str35, "[-1, 12, 8, 8, 12, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 12, 9, 9, 12, -1]" + "'", str36, "[-1, 12, 9, 9, 12, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 13, 0, 0, 13, -1]" + "'", str37, "[-1, 13, 0, 0, 13, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 13, 1, 1, 13, -1]" + "'", str38, "[-1, 13, 1, 1, 13, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 13, 2, 2, 13, -1]" + "'", str39, "[-1, 13, 2, 2, 13, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 13, 3, 3, 13, -1]" + "'", str40, "[-1, 13, 3, 3, 13, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 13, 4, 4, 13, -1]" + "'", str41, "[-1, 13, 4, 4, 13, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 13, 5, 5, 13, -1]" + "'", str42, "[-1, 13, 5, 5, 13, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 13, 6, 6, 13, -1]" + "'", str43, "[-1, 13, 6, 6, 13, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 13, 7, 7, 13, -1]" + "'", str44, "[-1, 13, 7, 7, 13, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 13, 8, 8, 13, -1]" + "'", str45, "[-1, 13, 8, 8, 13, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 13, 9, 9, 13, -1]" + "'", str46, "[-1, 13, 9, 9, 13, -1]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1839");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass17 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 63, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 58, 1, 100]" + "'", str11, "[100, 10, 58, 1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 59, 1, 100]" + "'", str12, "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 60, 1, 100]" + "'", str13, "[100, 10, 60, 1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 61, 1, 100]" + "'", str14, "[100, 10, 61, 1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 62, 1, 100]" + "'", str15, "[100, 10, 62, 1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 63, 1, 100]" + "'", str16, "[100, 10, 63, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1840");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass28 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 3, 3, 102, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 8, 101, 0]" + "'", str22, "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 9, 101, 0]" + "'", str23, "[1, 2, 9, 101, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 3, 0, 102, 0]" + "'", str24, "[1, 3, 0, 102, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 1, 102, 0]" + "'", str25, "[1, 3, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2, 102, 0]" + "'", str26, "[1, 3, 2, 102, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102, 0]" + "'", str27, "[1, 3, 3, 102, 0]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1841");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass33 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1842");
        int[] intArray4 = new int[] { (byte) 0, 10, (short) 100, 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass43 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 48, 138, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 101, 97]" + "'", str5, "[0, 11, 101, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 102, 97]" + "'", str6, "[0, 12, 102, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 103, 97]" + "'", str7, "[0, 13, 103, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 104, 97]" + "'", str8, "[0, 14, 104, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 105, 97]" + "'", str9, "[0, 15, 105, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 106, 97]" + "'", str10, "[0, 16, 106, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 107, 97]" + "'", str11, "[0, 17, 107, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 108, 97]" + "'", str12, "[0, 18, 108, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 109, 97]" + "'", str13, "[0, 19, 109, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 110, 97]" + "'", str14, "[0, 20, 110, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 21, 111, 97]" + "'", str15, "[0, 21, 111, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 22, 112, 97]" + "'", str16, "[0, 22, 112, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 23, 113, 97]" + "'", str17, "[0, 23, 113, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 24, 114, 97]" + "'", str18, "[0, 24, 114, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 25, 115, 97]" + "'", str19, "[0, 25, 115, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 26, 116, 97]" + "'", str20, "[0, 26, 116, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 27, 117, 97]" + "'", str21, "[0, 27, 117, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 28, 118, 97]" + "'", str22, "[0, 28, 118, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 29, 119, 97]" + "'", str23, "[0, 29, 119, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 30, 120, 97]" + "'", str24, "[0, 30, 120, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 31, 121, 97]" + "'", str25, "[0, 31, 121, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 122, 97]" + "'", str26, "[0, 32, 122, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 33, 123, 97]" + "'", str27, "[0, 33, 123, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 34, 124, 97]" + "'", str28, "[0, 34, 124, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 125, 97]" + "'", str29, "[0, 35, 125, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 36, 126, 97]" + "'", str30, "[0, 36, 126, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 37, 127, 97]" + "'", str31, "[0, 37, 127, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 38, 128, 97]" + "'", str32, "[0, 38, 128, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 39, 129, 97]" + "'", str33, "[0, 39, 129, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 40, 130, 97]" + "'", str34, "[0, 40, 130, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 41, 131, 97]" + "'", str35, "[0, 41, 131, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 42, 132, 97]" + "'", str36, "[0, 42, 132, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 43, 133, 97]" + "'", str37, "[0, 43, 133, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 44, 134, 97]" + "'", str38, "[0, 44, 134, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 45, 135, 97]" + "'", str39, "[0, 45, 135, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 46, 136, 97]" + "'", str40, "[0, 46, 136, 97]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 47, 137, 97]" + "'", str41, "[0, 47, 137, 97]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 48, 138, 97]" + "'", str42, "[0, 48, 138, 97]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1843");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass28 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 73, 73, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 10, 68, 68, 10, 0]" + "'", str22, "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 10, 69, 69, 10, 0]" + "'", str23, "[10, 10, 69, 69, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10, 70, 70, 10, 0]" + "'", str24, "[10, 10, 70, 70, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 10, 71, 71, 10, 0]" + "'", str25, "[10, 10, 71, 71, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 10, 72, 72, 10, 0]" + "'", str26, "[10, 10, 72, 72, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 10, 73, 73, 10, 0]" + "'", str27, "[10, 10, 73, 73, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1844");
        int[] intArray4 = new int[] { '4', (byte) -1, 100, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass63 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 57, 158, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 101, 0]" + "'", str5, "[52, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 102, 0]" + "'", str6, "[52, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 103, 0]" + "'", str7, "[52, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 104, 0]" + "'", str8, "[52, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 105, 0]" + "'", str9, "[52, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 106, 0]" + "'", str10, "[52, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 107, 0]" + "'", str11, "[52, 6, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 108, 0]" + "'", str12, "[52, 7, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 8, 109, 0]" + "'", str13, "[52, 8, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 9, 110, 0]" + "'", str14, "[52, 9, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 10, 111, 0]" + "'", str15, "[52, 10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 11, 112, 0]" + "'", str16, "[52, 11, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 12, 113, 0]" + "'", str17, "[52, 12, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 13, 114, 0]" + "'", str18, "[52, 13, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 14, 115, 0]" + "'", str19, "[52, 14, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 15, 116, 0]" + "'", str20, "[52, 15, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 16, 117, 0]" + "'", str21, "[52, 16, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 17, 118, 0]" + "'", str22, "[52, 17, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 18, 119, 0]" + "'", str23, "[52, 18, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 19, 120, 0]" + "'", str24, "[52, 19, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 20, 121, 0]" + "'", str25, "[52, 20, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 21, 122, 0]" + "'", str26, "[52, 21, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 22, 123, 0]" + "'", str27, "[52, 22, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 23, 124, 0]" + "'", str28, "[52, 23, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 24, 125, 0]" + "'", str29, "[52, 24, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 25, 126, 0]" + "'", str30, "[52, 25, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 26, 127, 0]" + "'", str31, "[52, 26, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 27, 128, 0]" + "'", str32, "[52, 27, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 28, 129, 0]" + "'", str33, "[52, 28, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[52, 29, 130, 0]" + "'", str34, "[52, 29, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[52, 30, 131, 0]" + "'", str35, "[52, 30, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[52, 31, 132, 0]" + "'", str36, "[52, 31, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[52, 32, 133, 0]" + "'", str37, "[52, 32, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[52, 33, 134, 0]" + "'", str38, "[52, 33, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[52, 34, 135, 0]" + "'", str39, "[52, 34, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[52, 35, 136, 0]" + "'", str40, "[52, 35, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[52, 36, 137, 0]" + "'", str41, "[52, 36, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[52, 37, 138, 0]" + "'", str42, "[52, 37, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52, 38, 139, 0]" + "'", str43, "[52, 38, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 39, 140, 0]" + "'", str44, "[52, 39, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[52, 40, 141, 0]" + "'", str45, "[52, 40, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[52, 41, 142, 0]" + "'", str46, "[52, 41, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[52, 42, 143, 0]" + "'", str47, "[52, 42, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[52, 43, 144, 0]" + "'", str48, "[52, 43, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[52, 44, 145, 0]" + "'", str49, "[52, 44, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[52, 45, 146, 0]" + "'", str50, "[52, 45, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[52, 46, 147, 0]" + "'", str51, "[52, 46, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[52, 47, 148, 0]" + "'", str52, "[52, 47, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[52, 48, 149, 0]" + "'", str53, "[52, 48, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[52, 49, 150, 0]" + "'", str54, "[52, 49, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[52, 50, 151, 0]" + "'", str55, "[52, 50, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[52, 51, 152, 0]" + "'", str56, "[52, 51, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[52, 52, 153, 0]" + "'", str57, "[52, 52, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[52, 53, 154, 0]" + "'", str58, "[52, 53, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[52, 54, 155, 0]" + "'", str59, "[52, 54, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[52, 55, 156, 0]" + "'", str60, "[52, 55, 156, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[52, 56, 157, 0]" + "'", str61, "[52, 56, 157, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[52, 57, 158, 0]" + "'", str62, "[52, 57, 158, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1845");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass9 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1846");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass13 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 6]" + "'", str7, "[15, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 7]" + "'", str8, "[16, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 8]" + "'", str9, "[17, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 9]" + "'", str10, "[18, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1847");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass36 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 7, 2]" + "'", str29, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 8, 2]" + "'", str30, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 9, 2]" + "'", str31, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 0, 3]" + "'", str32, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 1, 3]" + "'", str33, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2, 3]" + "'", str34, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 3, 3]" + "'", str35, "[2, 3, 3]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1848");
        int[] intArray3 = new int[] { ' ', 1, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass46 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[36, 3, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 2, -1]" + "'", str4, "[32, 2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 3, -1]" + "'", str5, "[32, 3, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 4, -1]" + "'", str6, "[32, 4, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 5, -1]" + "'", str7, "[32, 5, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 6, -1]" + "'", str8, "[32, 6, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 7, -1]" + "'", str9, "[32, 7, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 8, -1]" + "'", str10, "[32, 8, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 9, -1]" + "'", str11, "[32, 9, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[33, 0, 0]" + "'", str12, "[33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 1, 0]" + "'", str13, "[33, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 2, 0]" + "'", str14, "[33, 2, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 3, 0]" + "'", str15, "[33, 3, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 4, 0]" + "'", str16, "[33, 4, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 5, 0]" + "'", str17, "[33, 5, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 6, 0]" + "'", str18, "[33, 6, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 7, 0]" + "'", str19, "[33, 7, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 8, 0]" + "'", str20, "[33, 8, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 9, 0]" + "'", str21, "[33, 9, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[34, 0, 1]" + "'", str22, "[34, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 1, 1]" + "'", str23, "[34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 2, 1]" + "'", str24, "[34, 2, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 3, 1]" + "'", str25, "[34, 3, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 4, 1]" + "'", str26, "[34, 4, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 5, 1]" + "'", str27, "[34, 5, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 6, 1]" + "'", str28, "[34, 6, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 7, 1]" + "'", str29, "[34, 7, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 8, 1]" + "'", str30, "[34, 8, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 9, 1]" + "'", str31, "[34, 9, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 0, 2]" + "'", str32, "[35, 0, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 2]" + "'", str33, "[35, 1, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 2]" + "'", str34, "[35, 2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 3, 2]" + "'", str35, "[35, 3, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 4, 2]" + "'", str36, "[35, 4, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 5, 2]" + "'", str37, "[35, 5, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 6, 2]" + "'", str38, "[35, 6, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 7, 2]" + "'", str39, "[35, 7, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 8, 2]" + "'", str40, "[35, 8, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 9, 2]" + "'", str41, "[35, 9, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[36, 0, 3]" + "'", str42, "[36, 0, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[36, 1, 3]" + "'", str43, "[36, 1, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 2, 3]" + "'", str44, "[36, 2, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 3, 3]" + "'", str45, "[36, 3, 3]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1849");
        int[] intArray4 = new int[] { (-1), '4', (byte) 100, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass65 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 112, 160, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 53, 101, 100]" + "'", str5, "[-1, 53, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 54, 102, 100]" + "'", str6, "[-1, 54, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 55, 103, 100]" + "'", str7, "[-1, 55, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 56, 104, 100]" + "'", str8, "[-1, 56, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 57, 105, 100]" + "'", str9, "[-1, 57, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 58, 106, 100]" + "'", str10, "[-1, 58, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 59, 107, 100]" + "'", str11, "[-1, 59, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 60, 108, 100]" + "'", str12, "[-1, 60, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 61, 109, 100]" + "'", str13, "[-1, 61, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 62, 110, 100]" + "'", str14, "[-1, 62, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 63, 111, 100]" + "'", str15, "[-1, 63, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 64, 112, 100]" + "'", str16, "[-1, 64, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 65, 113, 100]" + "'", str17, "[-1, 65, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 66, 114, 100]" + "'", str18, "[-1, 66, 114, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 67, 115, 100]" + "'", str19, "[-1, 67, 115, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 68, 116, 100]" + "'", str20, "[-1, 68, 116, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 69, 117, 100]" + "'", str21, "[-1, 69, 117, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 70, 118, 100]" + "'", str22, "[-1, 70, 118, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 71, 119, 100]" + "'", str23, "[-1, 71, 119, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 72, 120, 100]" + "'", str24, "[-1, 72, 120, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 73, 121, 100]" + "'", str25, "[-1, 73, 121, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 74, 122, 100]" + "'", str26, "[-1, 74, 122, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 75, 123, 100]" + "'", str27, "[-1, 75, 123, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 76, 124, 100]" + "'", str28, "[-1, 76, 124, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 77, 125, 100]" + "'", str29, "[-1, 77, 125, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 78, 126, 100]" + "'", str30, "[-1, 78, 126, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 79, 127, 100]" + "'", str31, "[-1, 79, 127, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 80, 128, 100]" + "'", str32, "[-1, 80, 128, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 81, 129, 100]" + "'", str33, "[-1, 81, 129, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 82, 130, 100]" + "'", str34, "[-1, 82, 130, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 83, 131, 100]" + "'", str35, "[-1, 83, 131, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 84, 132, 100]" + "'", str36, "[-1, 84, 132, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 85, 133, 100]" + "'", str37, "[-1, 85, 133, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 86, 134, 100]" + "'", str38, "[-1, 86, 134, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 87, 135, 100]" + "'", str39, "[-1, 87, 135, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 88, 136, 100]" + "'", str40, "[-1, 88, 136, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 89, 137, 100]" + "'", str41, "[-1, 89, 137, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 90, 138, 100]" + "'", str42, "[-1, 90, 138, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 91, 139, 100]" + "'", str43, "[-1, 91, 139, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 92, 140, 100]" + "'", str44, "[-1, 92, 140, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 93, 141, 100]" + "'", str45, "[-1, 93, 141, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 94, 142, 100]" + "'", str46, "[-1, 94, 142, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 95, 143, 100]" + "'", str47, "[-1, 95, 143, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 96, 144, 100]" + "'", str48, "[-1, 96, 144, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 97, 145, 100]" + "'", str49, "[-1, 97, 145, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 98, 146, 100]" + "'", str50, "[-1, 98, 146, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 99, 147, 100]" + "'", str51, "[-1, 99, 147, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 148, 100]" + "'", str52, "[-1, 100, 148, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 101, 149, 100]" + "'", str53, "[-1, 101, 149, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 102, 150, 100]" + "'", str54, "[-1, 102, 150, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 103, 151, 100]" + "'", str55, "[-1, 103, 151, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 104, 152, 100]" + "'", str56, "[-1, 104, 152, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 105, 153, 100]" + "'", str57, "[-1, 105, 153, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 106, 154, 100]" + "'", str58, "[-1, 106, 154, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 107, 155, 100]" + "'", str59, "[-1, 107, 155, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 108, 156, 100]" + "'", str60, "[-1, 108, 156, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 109, 157, 100]" + "'", str61, "[-1, 109, 157, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 110, 158, 100]" + "'", str62, "[-1, 110, 158, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 111, 159, 100]" + "'", str63, "[-1, 111, 159, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[-1, 112, 160, 100]" + "'", str64, "[-1, 112, 160, 100]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1850");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass64 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 58, 69, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 48, 59, 10]" + "'", str53, "[1, 48, 59, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 49, 60, 10]" + "'", str54, "[1, 49, 60, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 50, 61, 10]" + "'", str55, "[1, 50, 61, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 51, 62, 10]" + "'", str56, "[1, 51, 62, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 52, 63, 10]" + "'", str57, "[1, 52, 63, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 53, 64, 10]" + "'", str58, "[1, 53, 64, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 54, 65, 10]" + "'", str59, "[1, 54, 65, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 55, 66, 10]" + "'", str60, "[1, 55, 66, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 56, 67, 10]" + "'", str61, "[1, 56, 67, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 57, 68, 10]" + "'", str62, "[1, 57, 68, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 58, 69, 10]" + "'", str63, "[1, 58, 69, 10]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1851");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass28 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 0]" + "'", str22, "[1, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 0]" + "'", str23, "[1, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 0]" + "'", str24, "[1, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 1]" + "'", str25, "[2, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 1]" + "'", str26, "[2, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 1]" + "'", str27, "[2, 2, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1852");
        int[] intArray2 = new int[] { (short) -1, (short) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass54 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 1]" + "'", str3, "[0, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 2]" + "'", str4, "[1, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 3]" + "'", str5, "[2, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 4]" + "'", str6, "[3, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 5]" + "'", str7, "[4, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 6]" + "'", str8, "[5, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 7]" + "'", str9, "[6, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 8]" + "'", str10, "[7, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[8, 9]" + "'", str11, "[8, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1853");
        int[] intArray4 = new int[] { 'a', (short) -1, '#', 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass49 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 43, 79, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 0, 36, 97]" + "'", str5, "[97, 0, 36, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 1, 37, 97]" + "'", str6, "[97, 1, 37, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 2, 38, 97]" + "'", str7, "[97, 2, 38, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 3, 39, 97]" + "'", str8, "[97, 3, 39, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 4, 40, 97]" + "'", str9, "[97, 4, 40, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 5, 41, 97]" + "'", str10, "[97, 5, 41, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 6, 42, 97]" + "'", str11, "[97, 6, 42, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 7, 43, 97]" + "'", str12, "[97, 7, 43, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 8, 44, 97]" + "'", str13, "[97, 8, 44, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 9, 45, 97]" + "'", str14, "[97, 9, 45, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 10, 46, 97]" + "'", str15, "[97, 10, 46, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 11, 47, 97]" + "'", str16, "[97, 11, 47, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 12, 48, 97]" + "'", str17, "[97, 12, 48, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 13, 49, 97]" + "'", str18, "[97, 13, 49, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 14, 50, 97]" + "'", str19, "[97, 14, 50, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 15, 51, 97]" + "'", str20, "[97, 15, 51, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 16, 52, 97]" + "'", str21, "[97, 16, 52, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 17, 53, 97]" + "'", str22, "[97, 17, 53, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 18, 54, 97]" + "'", str23, "[97, 18, 54, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 19, 55, 97]" + "'", str24, "[97, 19, 55, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 20, 56, 97]" + "'", str25, "[97, 20, 56, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 21, 57, 97]" + "'", str26, "[97, 21, 57, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 22, 58, 97]" + "'", str27, "[97, 22, 58, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 23, 59, 97]" + "'", str28, "[97, 23, 59, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 24, 60, 97]" + "'", str29, "[97, 24, 60, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 25, 61, 97]" + "'", str30, "[97, 25, 61, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 26, 62, 97]" + "'", str31, "[97, 26, 62, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 27, 63, 97]" + "'", str32, "[97, 27, 63, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 28, 64, 97]" + "'", str33, "[97, 28, 64, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 29, 65, 97]" + "'", str34, "[97, 29, 65, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 30, 66, 97]" + "'", str35, "[97, 30, 66, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 31, 67, 97]" + "'", str36, "[97, 31, 67, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 32, 68, 97]" + "'", str37, "[97, 32, 68, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 33, 69, 97]" + "'", str38, "[97, 33, 69, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 34, 70, 97]" + "'", str39, "[97, 34, 70, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 35, 71, 97]" + "'", str40, "[97, 35, 71, 97]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 36, 72, 97]" + "'", str41, "[97, 36, 72, 97]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 37, 73, 97]" + "'", str42, "[97, 37, 73, 97]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 38, 74, 97]" + "'", str43, "[97, 38, 74, 97]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 39, 75, 97]" + "'", str44, "[97, 39, 75, 97]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 40, 76, 97]" + "'", str45, "[97, 40, 76, 97]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 41, 77, 97]" + "'", str46, "[97, 41, 77, 97]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 42, 78, 97]" + "'", str47, "[97, 42, 78, 97]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 43, 79, 97]" + "'", str48, "[97, 43, 79, 97]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1854");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass26 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 3, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 8, 101, 0]" + "'", str22, "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 9, 101, 0]" + "'", str23, "[1, 2, 9, 101, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 3, 0, 102, 0]" + "'", str24, "[1, 3, 0, 102, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 1, 102, 0]" + "'", str25, "[1, 3, 1, 102, 0]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1855");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass30 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 75, 75, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 10, 68, 68, 10, 0]" + "'", str22, "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 10, 69, 69, 10, 0]" + "'", str23, "[10, 10, 69, 69, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10, 70, 70, 10, 0]" + "'", str24, "[10, 10, 70, 70, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 10, 71, 71, 10, 0]" + "'", str25, "[10, 10, 71, 71, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 10, 72, 72, 10, 0]" + "'", str26, "[10, 10, 72, 72, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 10, 73, 73, 10, 0]" + "'", str27, "[10, 10, 73, 73, 10, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 10, 74, 74, 10, 0]" + "'", str28, "[10, 10, 74, 74, 10, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 10, 75, 75, 10, 0]" + "'", str29, "[10, 10, 75, 75, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1856");
        int[] intArray4 = new int[] { 'a', 100, (byte) 0, '4' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass64 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 9, 9, 57]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 101, 1, 52]" + "'", str5, "[97, 101, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 102, 2, 52]" + "'", str6, "[97, 102, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 103, 3, 52]" + "'", str7, "[97, 103, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 104, 4, 52]" + "'", str8, "[97, 104, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 105, 5, 52]" + "'", str9, "[97, 105, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 106, 6, 52]" + "'", str10, "[97, 106, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 107, 7, 52]" + "'", str11, "[97, 107, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 108, 8, 52]" + "'", str12, "[97, 108, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 109, 9, 52]" + "'", str13, "[97, 109, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[98, 0, 0, 53]" + "'", str14, "[98, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 1, 1, 53]" + "'", str15, "[98, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 2, 2, 53]" + "'", str16, "[98, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 3, 3, 53]" + "'", str17, "[98, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 4, 4, 53]" + "'", str18, "[98, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 5, 5, 53]" + "'", str19, "[98, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 6, 6, 53]" + "'", str20, "[98, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 7, 7, 53]" + "'", str21, "[98, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 8, 8, 53]" + "'", str22, "[98, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 9, 9, 53]" + "'", str23, "[98, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[99, 0, 0, 54]" + "'", str24, "[99, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 1, 1, 54]" + "'", str25, "[99, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 2, 2, 54]" + "'", str26, "[99, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 3, 3, 54]" + "'", str27, "[99, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 4, 4, 54]" + "'", str28, "[99, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 5, 5, 54]" + "'", str29, "[99, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 6, 6, 54]" + "'", str30, "[99, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 7, 7, 54]" + "'", str31, "[99, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 8, 8, 54]" + "'", str32, "[99, 8, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 9, 9, 54]" + "'", str33, "[99, 9, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 0, 55]" + "'", str34, "[100, 0, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 1, 1, 55]" + "'", str35, "[100, 1, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 2, 2, 55]" + "'", str36, "[100, 2, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 3, 55]" + "'", str37, "[100, 3, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 4, 4, 55]" + "'", str38, "[100, 4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 5, 5, 55]" + "'", str39, "[100, 5, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 6, 6, 55]" + "'", str40, "[100, 6, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 7, 7, 55]" + "'", str41, "[100, 7, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 8, 8, 55]" + "'", str42, "[100, 8, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 9, 9, 55]" + "'", str43, "[100, 9, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[101, 0, 0, 56]" + "'", str44, "[101, 0, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 1, 1, 56]" + "'", str45, "[101, 1, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 2, 2, 56]" + "'", str46, "[101, 2, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 3, 3, 56]" + "'", str47, "[101, 3, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 4, 4, 56]" + "'", str48, "[101, 4, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 5, 5, 56]" + "'", str49, "[101, 5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 6, 6, 56]" + "'", str50, "[101, 6, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 7, 7, 56]" + "'", str51, "[101, 7, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 8, 8, 56]" + "'", str52, "[101, 8, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 9, 9, 56]" + "'", str53, "[101, 9, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[102, 0, 0, 57]" + "'", str54, "[102, 0, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 1, 1, 57]" + "'", str55, "[102, 1, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 2, 2, 57]" + "'", str56, "[102, 2, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 3, 3, 57]" + "'", str57, "[102, 3, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 4, 4, 57]" + "'", str58, "[102, 4, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 5, 5, 57]" + "'", str59, "[102, 5, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 6, 6, 57]" + "'", str60, "[102, 6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 7, 7, 57]" + "'", str61, "[102, 7, 7, 57]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[102, 8, 8, 57]" + "'", str62, "[102, 8, 8, 57]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[102, 9, 9, 57]" + "'", str63, "[102, 9, 9, 57]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1857");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass53 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[60, 150]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 143]" + "'", str45, "[53, 143]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 144]" + "'", str46, "[54, 144]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[55, 145]" + "'", str47, "[55, 145]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 146]" + "'", str48, "[56, 146]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[57, 147]" + "'", str49, "[57, 147]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[58, 148]" + "'", str50, "[58, 148]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[59, 149]" + "'", str51, "[59, 149]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[60, 150]" + "'", str52, "[60, 150]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1858");
        int[] intArray0 = new int[] {};
        java.lang.String str1 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.Class<?> wildcardClass59 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "[1, 1]" + "'", str1, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1, 1]" + "'", str2, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 1]" + "'", str3, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1]" + "'", str4, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1]" + "'", str5, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1]" + "'", str6, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1]" + "'", str7, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1]" + "'", str8, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1]" + "'", str9, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1]" + "'", str15, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1]" + "'", str16, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1]" + "'", str17, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1]" + "'", str18, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1]" + "'", str19, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1]" + "'", str25, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1]" + "'", str26, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1]" + "'", str27, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1]" + "'", str28, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1]" + "'", str29, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1]" + "'", str31, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1]" + "'", str35, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1]" + "'", str36, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1]" + "'", str37, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1]" + "'", str38, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1]" + "'", str39, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1]" + "'", str40, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1]" + "'", str41, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1]" + "'", str45, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1]" + "'", str46, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1]" + "'", str47, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1]" + "'", str48, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1]" + "'", str49, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1]" + "'", str50, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1]" + "'", str51, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1]" + "'", str55, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1]" + "'", str56, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1]" + "'", str57, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1]" + "'", str58, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1859");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass65 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 1]" + "'", str62, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1860");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass62 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 56, 67, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 48, 59, 10]" + "'", str53, "[1, 48, 59, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 49, 60, 10]" + "'", str54, "[1, 49, 60, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 50, 61, 10]" + "'", str55, "[1, 50, 61, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 51, 62, 10]" + "'", str56, "[1, 51, 62, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 52, 63, 10]" + "'", str57, "[1, 52, 63, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 53, 64, 10]" + "'", str58, "[1, 53, 64, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 54, 65, 10]" + "'", str59, "[1, 54, 65, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 55, 66, 10]" + "'", str60, "[1, 55, 66, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 56, 67, 10]" + "'", str61, "[1, 56, 67, 10]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1861");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass29 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 3, 4, 102, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 8, 101, 0]" + "'", str22, "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 9, 101, 0]" + "'", str23, "[1, 2, 9, 101, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 3, 0, 102, 0]" + "'", str24, "[1, 3, 0, 102, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 1, 102, 0]" + "'", str25, "[1, 3, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2, 102, 0]" + "'", str26, "[1, 3, 2, 102, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102, 0]" + "'", str27, "[1, 3, 3, 102, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 4, 102, 0]" + "'", str28, "[1, 3, 4, 102, 0]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1862");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass54 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[61, 151]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 143]" + "'", str45, "[53, 143]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 144]" + "'", str46, "[54, 144]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[55, 145]" + "'", str47, "[55, 145]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 146]" + "'", str48, "[56, 146]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[57, 147]" + "'", str49, "[57, 147]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[58, 148]" + "'", str50, "[58, 148]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[59, 149]" + "'", str51, "[59, 149]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[60, 150]" + "'", str52, "[60, 150]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[61, 151]" + "'", str53, "[61, 151]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1863");
        int[] intArray4 = new int[] { 100, (byte) 100, (byte) 100, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass10 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 101, 101, 0]" + "'", str5, "[100, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 102, 102, 0]" + "'", str6, "[100, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 103, 103, 0]" + "'", str7, "[100, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 104, 104, 0]" + "'", str8, "[100, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 105, 105, 0]" + "'", str9, "[100, 105, 105, 0]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1864");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass28 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 4, 102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 101]" + "'", str22, "[2, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 102]" + "'", str23, "[3, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 102]" + "'", str24, "[3, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 102]" + "'", str25, "[3, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 102]" + "'", str26, "[3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 102]" + "'", str27, "[3, 4, 102]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1865");
        int[] intArray3 = new int[] { (short) 100, (byte) 0, (short) 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass7 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 3, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 1, 1]" + "'", str4, "[100, 1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 2, 1]" + "'", str5, "[100, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 3, 1]" + "'", str6, "[100, 3, 1]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1866");
        int[] intArray4 = new int[] { 100, (byte) 100, (byte) 100, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass12 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 107, 107, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 101, 101, 0]" + "'", str5, "[100, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 102, 102, 0]" + "'", str6, "[100, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 103, 103, 0]" + "'", str7, "[100, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 104, 104, 0]" + "'", str8, "[100, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 105, 105, 0]" + "'", str9, "[100, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 106, 106, 0]" + "'", str10, "[100, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 107, 107, 0]" + "'", str11, "[100, 107, 107, 0]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1867");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass12 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 6]" + "'", str7, "[15, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 7]" + "'", str8, "[16, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 8]" + "'", str9, "[17, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 9]" + "'", str10, "[18, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1868");
        int[] intArray3 = new int[] { (short) 100, (byte) 0, (short) 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass9 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 5, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 1, 1]" + "'", str4, "[100, 1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 2, 1]" + "'", str5, "[100, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 3, 1]" + "'", str6, "[100, 3, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 4, 1]" + "'", str7, "[100, 4, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 5, 1]" + "'", str8, "[100, 5, 1]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1869");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass65 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 59, 70, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 48, 59, 10]" + "'", str53, "[1, 48, 59, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 49, 60, 10]" + "'", str54, "[1, 49, 60, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 50, 61, 10]" + "'", str55, "[1, 50, 61, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 51, 62, 10]" + "'", str56, "[1, 51, 62, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 52, 63, 10]" + "'", str57, "[1, 52, 63, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 53, 64, 10]" + "'", str58, "[1, 53, 64, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 54, 65, 10]" + "'", str59, "[1, 54, 65, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 55, 66, 10]" + "'", str60, "[1, 55, 66, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 56, 67, 10]" + "'", str61, "[1, 56, 67, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 57, 68, 10]" + "'", str62, "[1, 57, 68, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 58, 69, 10]" + "'", str63, "[1, 58, 69, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 59, 70, 10]" + "'", str64, "[1, 59, 70, 10]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1870");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass31 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 76, 76, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 10, 68, 68, 10, 0]" + "'", str22, "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 10, 69, 69, 10, 0]" + "'", str23, "[10, 10, 69, 69, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10, 70, 70, 10, 0]" + "'", str24, "[10, 10, 70, 70, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 10, 71, 71, 10, 0]" + "'", str25, "[10, 10, 71, 71, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 10, 72, 72, 10, 0]" + "'", str26, "[10, 10, 72, 72, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 10, 73, 73, 10, 0]" + "'", str27, "[10, 10, 73, 73, 10, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 10, 74, 74, 10, 0]" + "'", str28, "[10, 10, 74, 74, 10, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 10, 75, 75, 10, 0]" + "'", str29, "[10, 10, 75, 75, 10, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 10, 76, 76, 10, 0]" + "'", str30, "[10, 10, 76, 76, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1871");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass55 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[62, 152]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 143]" + "'", str45, "[53, 143]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 144]" + "'", str46, "[54, 144]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[55, 145]" + "'", str47, "[55, 145]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 146]" + "'", str48, "[56, 146]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[57, 147]" + "'", str49, "[57, 147]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[58, 148]" + "'", str50, "[58, 148]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[59, 149]" + "'", str51, "[59, 149]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[60, 150]" + "'", str52, "[60, 150]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[61, 151]" + "'", str53, "[61, 151]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[62, 152]" + "'", str54, "[62, 152]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1872");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass66 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 1]" + "'", str62, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1873");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass12 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 39, 107, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 37, 105, 1]" + "'", str9, "[0, 37, 105, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 38, 106, 1]" + "'", str10, "[0, 38, 106, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 39, 107, 1]" + "'", str11, "[0, 39, 107, 1]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1874");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 10, (short) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass49 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 53, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, -1, 11, 100, -1]" + "'", str6, "[100, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, -1, 12, 100, -1]" + "'", str7, "[100, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, -1, 13, 100, -1]" + "'", str8, "[100, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, -1, 14, 100, -1]" + "'", str9, "[100, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, -1, 15, 100, -1]" + "'", str10, "[100, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, -1, 16, 100, -1]" + "'", str11, "[100, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, -1, 17, 100, -1]" + "'", str12, "[100, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, -1, 18, 100, -1]" + "'", str13, "[100, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, -1, 19, 100, -1]" + "'", str14, "[100, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, -1, 20, 100, -1]" + "'", str15, "[100, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, -1, 21, 100, -1]" + "'", str16, "[100, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, -1, 22, 100, -1]" + "'", str17, "[100, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, -1, 23, 100, -1]" + "'", str18, "[100, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, -1, 24, 100, -1]" + "'", str19, "[100, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, -1, 25, 100, -1]" + "'", str20, "[100, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, -1, 26, 100, -1]" + "'", str21, "[100, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, -1, 27, 100, -1]" + "'", str22, "[100, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, -1, 28, 100, -1]" + "'", str23, "[100, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, -1, 29, 100, -1]" + "'", str24, "[100, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, -1, 30, 100, -1]" + "'", str25, "[100, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, -1, 31, 100, -1]" + "'", str26, "[100, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, -1, 32, 100, -1]" + "'", str27, "[100, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, -1, 33, 100, -1]" + "'", str28, "[100, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, -1, 34, 100, -1]" + "'", str29, "[100, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, -1, 35, 100, -1]" + "'", str30, "[100, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, -1, 36, 100, -1]" + "'", str31, "[100, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, -1, 37, 100, -1]" + "'", str32, "[100, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, -1, 38, 100, -1]" + "'", str33, "[100, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, -1, 39, 100, -1]" + "'", str34, "[100, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, -1, 40, 100, -1]" + "'", str35, "[100, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, -1, 41, 100, -1]" + "'", str36, "[100, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, -1, 42, 100, -1]" + "'", str37, "[100, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, -1, 43, 100, -1]" + "'", str38, "[100, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, -1, 44, 100, -1]" + "'", str39, "[100, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, -1, 45, 100, -1]" + "'", str40, "[100, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, -1, 46, 100, -1]" + "'", str41, "[100, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, -1, 47, 100, -1]" + "'", str42, "[100, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, -1, 48, 100, -1]" + "'", str43, "[100, -1, 48, 100, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, -1, 49, 100, -1]" + "'", str44, "[100, -1, 49, 100, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, -1, 50, 100, -1]" + "'", str45, "[100, -1, 50, 100, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, -1, 51, 100, -1]" + "'", str46, "[100, -1, 51, 100, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, -1, 52, 100, -1]" + "'", str47, "[100, -1, 52, 100, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, -1, 53, 100, -1]" + "'", str48, "[100, -1, 53, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1875");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass14 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 6]" + "'", str7, "[15, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 7]" + "'", str8, "[16, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 8]" + "'", str9, "[17, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 9]" + "'", str10, "[18, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1876");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass61 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7]" + "'", str58, "[7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8]" + "'", str59, "[8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9]" + "'", str60, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1877");
        int[] intArray4 = new int[] { (short) 100, (byte) 0, 'a', (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass63 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 58, 155, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 1, 98, 0]" + "'", str5, "[100, 1, 98, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 2, 99, 0]" + "'", str6, "[100, 2, 99, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 3, 100, 0]" + "'", str7, "[100, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 4, 101, 0]" + "'", str8, "[100, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 5, 102, 0]" + "'", str9, "[100, 5, 102, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 6, 103, 0]" + "'", str10, "[100, 6, 103, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 7, 104, 0]" + "'", str11, "[100, 7, 104, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 8, 105, 0]" + "'", str12, "[100, 8, 105, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 9, 106, 0]" + "'", str13, "[100, 9, 106, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 107, 0]" + "'", str14, "[100, 10, 107, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 11, 108, 0]" + "'", str15, "[100, 11, 108, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 12, 109, 0]" + "'", str16, "[100, 12, 109, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 13, 110, 0]" + "'", str17, "[100, 13, 110, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 14, 111, 0]" + "'", str18, "[100, 14, 111, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 15, 112, 0]" + "'", str19, "[100, 15, 112, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 16, 113, 0]" + "'", str20, "[100, 16, 113, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 17, 114, 0]" + "'", str21, "[100, 17, 114, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 18, 115, 0]" + "'", str22, "[100, 18, 115, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 19, 116, 0]" + "'", str23, "[100, 19, 116, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 20, 117, 0]" + "'", str24, "[100, 20, 117, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 21, 118, 0]" + "'", str25, "[100, 21, 118, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 22, 119, 0]" + "'", str26, "[100, 22, 119, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 23, 120, 0]" + "'", str27, "[100, 23, 120, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 24, 121, 0]" + "'", str28, "[100, 24, 121, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 25, 122, 0]" + "'", str29, "[100, 25, 122, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 26, 123, 0]" + "'", str30, "[100, 26, 123, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 27, 124, 0]" + "'", str31, "[100, 27, 124, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 28, 125, 0]" + "'", str32, "[100, 28, 125, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 29, 126, 0]" + "'", str33, "[100, 29, 126, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 30, 127, 0]" + "'", str34, "[100, 30, 127, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 31, 128, 0]" + "'", str35, "[100, 31, 128, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 32, 129, 0]" + "'", str36, "[100, 32, 129, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 33, 130, 0]" + "'", str37, "[100, 33, 130, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 34, 131, 0]" + "'", str38, "[100, 34, 131, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 35, 132, 0]" + "'", str39, "[100, 35, 132, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 36, 133, 0]" + "'", str40, "[100, 36, 133, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 37, 134, 0]" + "'", str41, "[100, 37, 134, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 38, 135, 0]" + "'", str42, "[100, 38, 135, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 39, 136, 0]" + "'", str43, "[100, 39, 136, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 40, 137, 0]" + "'", str44, "[100, 40, 137, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 41, 138, 0]" + "'", str45, "[100, 41, 138, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 42, 139, 0]" + "'", str46, "[100, 42, 139, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 43, 140, 0]" + "'", str47, "[100, 43, 140, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 44, 141, 0]" + "'", str48, "[100, 44, 141, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 45, 142, 0]" + "'", str49, "[100, 45, 142, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 46, 143, 0]" + "'", str50, "[100, 46, 143, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 47, 144, 0]" + "'", str51, "[100, 47, 144, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 48, 145, 0]" + "'", str52, "[100, 48, 145, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 49, 146, 0]" + "'", str53, "[100, 49, 146, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 50, 147, 0]" + "'", str54, "[100, 50, 147, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 51, 148, 0]" + "'", str55, "[100, 51, 148, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 52, 149, 0]" + "'", str56, "[100, 52, 149, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 53, 150, 0]" + "'", str57, "[100, 53, 150, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 54, 151, 0]" + "'", str58, "[100, 54, 151, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 55, 152, 0]" + "'", str59, "[100, 55, 152, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 56, 153, 0]" + "'", str60, "[100, 56, 153, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 57, 154, 0]" + "'", str61, "[100, 57, 154, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 58, 155, 0]" + "'", str62, "[100, 58, 155, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1878");
        int[] intArray2 = new int[] { (byte) 10, (byte) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass33 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 1]" + "'", str3, "[11, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 2]" + "'", str4, "[12, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 3]" + "'", str5, "[13, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 4]" + "'", str6, "[14, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 5]" + "'", str7, "[15, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 6]" + "'", str8, "[16, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 7]" + "'", str9, "[17, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 8]" + "'", str10, "[18, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 9]" + "'", str11, "[19, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1879");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass60 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7]" + "'", str58, "[7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8]" + "'", str59, "[8]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1880");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass67 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[4]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 1]" + "'", str62, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1881");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass46 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[144]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1882");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass22 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 7, 1]" + "'", str19, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 8, 1]" + "'", str20, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 9, 1]" + "'", str21, "[1, 9, 1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1883");
        int[] intArray4 = new int[] { (byte) 0, 10, (short) 100, 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass44 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 49, 139, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 101, 97]" + "'", str5, "[0, 11, 101, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 102, 97]" + "'", str6, "[0, 12, 102, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 103, 97]" + "'", str7, "[0, 13, 103, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 104, 97]" + "'", str8, "[0, 14, 104, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 105, 97]" + "'", str9, "[0, 15, 105, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 106, 97]" + "'", str10, "[0, 16, 106, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 107, 97]" + "'", str11, "[0, 17, 107, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 108, 97]" + "'", str12, "[0, 18, 108, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 109, 97]" + "'", str13, "[0, 19, 109, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 110, 97]" + "'", str14, "[0, 20, 110, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 21, 111, 97]" + "'", str15, "[0, 21, 111, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 22, 112, 97]" + "'", str16, "[0, 22, 112, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 23, 113, 97]" + "'", str17, "[0, 23, 113, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 24, 114, 97]" + "'", str18, "[0, 24, 114, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 25, 115, 97]" + "'", str19, "[0, 25, 115, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 26, 116, 97]" + "'", str20, "[0, 26, 116, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 27, 117, 97]" + "'", str21, "[0, 27, 117, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 28, 118, 97]" + "'", str22, "[0, 28, 118, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 29, 119, 97]" + "'", str23, "[0, 29, 119, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 30, 120, 97]" + "'", str24, "[0, 30, 120, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 31, 121, 97]" + "'", str25, "[0, 31, 121, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 122, 97]" + "'", str26, "[0, 32, 122, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 33, 123, 97]" + "'", str27, "[0, 33, 123, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 34, 124, 97]" + "'", str28, "[0, 34, 124, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 125, 97]" + "'", str29, "[0, 35, 125, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 36, 126, 97]" + "'", str30, "[0, 36, 126, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 37, 127, 97]" + "'", str31, "[0, 37, 127, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 38, 128, 97]" + "'", str32, "[0, 38, 128, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 39, 129, 97]" + "'", str33, "[0, 39, 129, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 40, 130, 97]" + "'", str34, "[0, 40, 130, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 41, 131, 97]" + "'", str35, "[0, 41, 131, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 42, 132, 97]" + "'", str36, "[0, 42, 132, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 43, 133, 97]" + "'", str37, "[0, 43, 133, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 44, 134, 97]" + "'", str38, "[0, 44, 134, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 45, 135, 97]" + "'", str39, "[0, 45, 135, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 46, 136, 97]" + "'", str40, "[0, 46, 136, 97]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 47, 137, 97]" + "'", str41, "[0, 47, 137, 97]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 48, 138, 97]" + "'", str42, "[0, 48, 138, 97]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 49, 139, 97]" + "'", str43, "[0, 49, 139, 97]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1884");
        int[] intArray2 = new int[] { 10, 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass56 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[63, 153]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 101]" + "'", str3, "[11, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 102]" + "'", str4, "[12, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 103]" + "'", str5, "[13, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 104]" + "'", str6, "[14, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 105]" + "'", str7, "[15, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 106]" + "'", str8, "[16, 106]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 107]" + "'", str9, "[17, 107]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 108]" + "'", str10, "[18, 108]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 109]" + "'", str11, "[19, 109]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 110]" + "'", str12, "[20, 110]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 111]" + "'", str13, "[21, 111]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 112]" + "'", str14, "[22, 112]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 113]" + "'", str15, "[23, 113]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 114]" + "'", str16, "[24, 114]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 115]" + "'", str17, "[25, 115]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 116]" + "'", str18, "[26, 116]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 117]" + "'", str19, "[27, 117]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 118]" + "'", str20, "[28, 118]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 119]" + "'", str21, "[29, 119]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 120]" + "'", str22, "[30, 120]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 121]" + "'", str23, "[31, 121]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 122]" + "'", str24, "[32, 122]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 123]" + "'", str25, "[33, 123]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 124]" + "'", str26, "[34, 124]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 125]" + "'", str27, "[35, 125]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 126]" + "'", str28, "[36, 126]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 127]" + "'", str29, "[37, 127]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 128]" + "'", str30, "[38, 128]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 129]" + "'", str31, "[39, 129]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 130]" + "'", str32, "[40, 130]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 131]" + "'", str33, "[41, 131]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 132]" + "'", str34, "[42, 132]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 133]" + "'", str35, "[43, 133]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 134]" + "'", str36, "[44, 134]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 135]" + "'", str37, "[45, 135]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 136]" + "'", str38, "[46, 136]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 137]" + "'", str39, "[47, 137]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 138]" + "'", str40, "[48, 138]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 139]" + "'", str41, "[49, 139]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 140]" + "'", str42, "[50, 140]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 141]" + "'", str43, "[51, 141]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 142]" + "'", str44, "[52, 142]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 143]" + "'", str45, "[53, 143]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 144]" + "'", str46, "[54, 144]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[55, 145]" + "'", str47, "[55, 145]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[56, 146]" + "'", str48, "[56, 146]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[57, 147]" + "'", str49, "[57, 147]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[58, 148]" + "'", str50, "[58, 148]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[59, 149]" + "'", str51, "[59, 149]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[60, 150]" + "'", str52, "[60, 150]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[61, 151]" + "'", str53, "[61, 151]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[62, 152]" + "'", str54, "[62, 152]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[63, 153]" + "'", str55, "[63, 153]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1885");
        int[] intArray3 = new int[] { (short) 0, (short) 0, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass43 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 1, -1]" + "'", str4, "[0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 2, -1]" + "'", str5, "[0, 2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 3, -1]" + "'", str6, "[0, 3, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 4, -1]" + "'", str7, "[0, 4, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 5, -1]" + "'", str8, "[0, 5, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 6, -1]" + "'", str9, "[0, 6, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 7, -1]" + "'", str10, "[0, 7, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 8, -1]" + "'", str11, "[0, 8, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 9, -1]" + "'", str12, "[0, 9, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0]" + "'", str13, "[1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 0]" + "'", str14, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0]" + "'", str15, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 0]" + "'", str16, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 0]" + "'", str17, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 0]" + "'", str18, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 0]" + "'", str19, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 0]" + "'", str20, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 0]" + "'", str21, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 0]" + "'", str22, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 1]" + "'", str23, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1]" + "'", str24, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 1]" + "'", str25, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 1]" + "'", str26, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 1]" + "'", str27, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 1]" + "'", str28, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 1]" + "'", str29, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 1]" + "'", str30, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 1]" + "'", str31, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 1]" + "'", str32, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 2]" + "'", str33, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 2]" + "'", str34, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2]" + "'", str35, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 2]" + "'", str36, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 2]" + "'", str37, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 2]" + "'", str38, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 6, 2]" + "'", str39, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 7, 2]" + "'", str40, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 8, 2]" + "'", str41, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 9, 2]" + "'", str42, "[3, 9, 2]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1886");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass23 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 7, 1]" + "'", str19, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 8, 1]" + "'", str20, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 9, 1]" + "'", str21, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 0, 2]" + "'", str22, "[2, 0, 2]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1887");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass27 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 101]" + "'", str22, "[2, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 102]" + "'", str23, "[3, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 102]" + "'", str24, "[3, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 102]" + "'", str25, "[3, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 102]" + "'", str26, "[3, 3, 102]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1888");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass37 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 7, 2]" + "'", str29, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 8, 2]" + "'", str30, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 9, 2]" + "'", str31, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 0, 3]" + "'", str32, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 1, 3]" + "'", str33, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2, 3]" + "'", str34, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 3, 3]" + "'", str35, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 4, 3]" + "'", str36, "[2, 4, 3]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1889");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass8 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1890");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass38 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 7, 2]" + "'", str29, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 8, 2]" + "'", str30, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 9, 2]" + "'", str31, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 0, 3]" + "'", str32, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 1, 3]" + "'", str33, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2, 3]" + "'", str34, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 3, 3]" + "'", str35, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 4, 3]" + "'", str36, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 5, 3]" + "'", str37, "[2, 5, 3]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1891");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass55 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2, 2]" + "'", str54, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1892");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass63 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 57, 68, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 48, 59, 10]" + "'", str53, "[1, 48, 59, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 49, 60, 10]" + "'", str54, "[1, 49, 60, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 50, 61, 10]" + "'", str55, "[1, 50, 61, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 51, 62, 10]" + "'", str56, "[1, 51, 62, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 52, 63, 10]" + "'", str57, "[1, 52, 63, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 53, 64, 10]" + "'", str58, "[1, 53, 64, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 54, 65, 10]" + "'", str59, "[1, 54, 65, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 55, 66, 10]" + "'", str60, "[1, 55, 66, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 56, 67, 10]" + "'", str61, "[1, 56, 67, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 57, 68, 10]" + "'", str62, "[1, 57, 68, 10]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1893");
        int[] intArray5 = new int[] { (short) 100, 100, (short) 1, (byte) -1, (short) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass45 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 104, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, -1, 1]" + "'", str6, "[100, 100, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, -1, 1]" + "'", str7, "[100, 100, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, -1, 1]" + "'", str8, "[100, 100, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, -1, 1]" + "'", str9, "[100, 100, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, -1, 1]" + "'", str10, "[100, 100, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, -1, 1]" + "'", str11, "[100, 100, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, -1, 1]" + "'", str12, "[100, 100, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, -1, 1]" + "'", str13, "[100, 100, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 0, 1]" + "'", str14, "[100, 101, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 0, 1]" + "'", str15, "[100, 101, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 0, 1]" + "'", str16, "[100, 101, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 0, 1]" + "'", str17, "[100, 101, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 0, 1]" + "'", str18, "[100, 101, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 0, 1]" + "'", str19, "[100, 101, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 0, 1]" + "'", str20, "[100, 101, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 0, 1]" + "'", str21, "[100, 101, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 0, 1]" + "'", str22, "[100, 101, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 0, 1]" + "'", str23, "[100, 101, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 1, 1]" + "'", str24, "[100, 102, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 1, 1]" + "'", str25, "[100, 102, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 1, 1]" + "'", str26, "[100, 102, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 1, 1]" + "'", str27, "[100, 102, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 1, 1]" + "'", str28, "[100, 102, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 1, 1]" + "'", str29, "[100, 102, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 1, 1]" + "'", str30, "[100, 102, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 1, 1]" + "'", str31, "[100, 102, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 1, 1]" + "'", str32, "[100, 102, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 1, 1]" + "'", str33, "[100, 102, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 2, 1]" + "'", str34, "[100, 103, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 2, 1]" + "'", str35, "[100, 103, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 2, 1]" + "'", str36, "[100, 103, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 2, 1]" + "'", str37, "[100, 103, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 2, 1]" + "'", str38, "[100, 103, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 2, 1]" + "'", str39, "[100, 103, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 2, 1]" + "'", str40, "[100, 103, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 2, 1]" + "'", str41, "[100, 103, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 103, 8, 2, 1]" + "'", str42, "[100, 103, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 103, 9, 2, 1]" + "'", str43, "[100, 103, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 104, 0, 3, 1]" + "'", str44, "[100, 104, 0, 3, 1]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1894");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 10, (short) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass48 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 52, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, -1, 11, 100, -1]" + "'", str6, "[100, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, -1, 12, 100, -1]" + "'", str7, "[100, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, -1, 13, 100, -1]" + "'", str8, "[100, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, -1, 14, 100, -1]" + "'", str9, "[100, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, -1, 15, 100, -1]" + "'", str10, "[100, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, -1, 16, 100, -1]" + "'", str11, "[100, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, -1, 17, 100, -1]" + "'", str12, "[100, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, -1, 18, 100, -1]" + "'", str13, "[100, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, -1, 19, 100, -1]" + "'", str14, "[100, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, -1, 20, 100, -1]" + "'", str15, "[100, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, -1, 21, 100, -1]" + "'", str16, "[100, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, -1, 22, 100, -1]" + "'", str17, "[100, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, -1, 23, 100, -1]" + "'", str18, "[100, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, -1, 24, 100, -1]" + "'", str19, "[100, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, -1, 25, 100, -1]" + "'", str20, "[100, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, -1, 26, 100, -1]" + "'", str21, "[100, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, -1, 27, 100, -1]" + "'", str22, "[100, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, -1, 28, 100, -1]" + "'", str23, "[100, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, -1, 29, 100, -1]" + "'", str24, "[100, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, -1, 30, 100, -1]" + "'", str25, "[100, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, -1, 31, 100, -1]" + "'", str26, "[100, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, -1, 32, 100, -1]" + "'", str27, "[100, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, -1, 33, 100, -1]" + "'", str28, "[100, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, -1, 34, 100, -1]" + "'", str29, "[100, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, -1, 35, 100, -1]" + "'", str30, "[100, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, -1, 36, 100, -1]" + "'", str31, "[100, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, -1, 37, 100, -1]" + "'", str32, "[100, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, -1, 38, 100, -1]" + "'", str33, "[100, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, -1, 39, 100, -1]" + "'", str34, "[100, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, -1, 40, 100, -1]" + "'", str35, "[100, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, -1, 41, 100, -1]" + "'", str36, "[100, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, -1, 42, 100, -1]" + "'", str37, "[100, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, -1, 43, 100, -1]" + "'", str38, "[100, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, -1, 44, 100, -1]" + "'", str39, "[100, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, -1, 45, 100, -1]" + "'", str40, "[100, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, -1, 46, 100, -1]" + "'", str41, "[100, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, -1, 47, 100, -1]" + "'", str42, "[100, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, -1, 48, 100, -1]" + "'", str43, "[100, -1, 48, 100, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, -1, 49, 100, -1]" + "'", str44, "[100, -1, 49, 100, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, -1, 50, 100, -1]" + "'", str45, "[100, -1, 50, 100, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, -1, 51, 100, -1]" + "'", str46, "[100, -1, 51, 100, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, -1, 52, 100, -1]" + "'", str47, "[100, -1, 52, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1895");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass11 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 38, 106, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 37, 105, 1]" + "'", str9, "[0, 37, 105, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 38, 106, 1]" + "'", str10, "[0, 38, 106, 1]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1896");
        int[] intArray5 = new int[] { (short) 100, (byte) 10, (byte) 100, 0, (byte) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass48 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 142, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 101, 0, 10]" + "'", str6, "[100, 10, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 102, 0, 10]" + "'", str7, "[100, 10, 102, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 103, 0, 10]" + "'", str8, "[100, 10, 103, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 104, 0, 10]" + "'", str9, "[100, 10, 104, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 105, 0, 10]" + "'", str10, "[100, 10, 105, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 106, 0, 10]" + "'", str11, "[100, 10, 106, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 107, 0, 10]" + "'", str12, "[100, 10, 107, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 108, 0, 10]" + "'", str13, "[100, 10, 108, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 109, 0, 10]" + "'", str14, "[100, 10, 109, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 110, 0, 10]" + "'", str15, "[100, 10, 110, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 111, 0, 10]" + "'", str16, "[100, 10, 111, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 112, 0, 10]" + "'", str17, "[100, 10, 112, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 113, 0, 10]" + "'", str18, "[100, 10, 113, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 114, 0, 10]" + "'", str19, "[100, 10, 114, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 115, 0, 10]" + "'", str20, "[100, 10, 115, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 116, 0, 10]" + "'", str21, "[100, 10, 116, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 117, 0, 10]" + "'", str22, "[100, 10, 117, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 118, 0, 10]" + "'", str23, "[100, 10, 118, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 119, 0, 10]" + "'", str24, "[100, 10, 119, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 120, 0, 10]" + "'", str25, "[100, 10, 120, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 121, 0, 10]" + "'", str26, "[100, 10, 121, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 122, 0, 10]" + "'", str27, "[100, 10, 122, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 123, 0, 10]" + "'", str28, "[100, 10, 123, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 124, 0, 10]" + "'", str29, "[100, 10, 124, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 125, 0, 10]" + "'", str30, "[100, 10, 125, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 126, 0, 10]" + "'", str31, "[100, 10, 126, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 127, 0, 10]" + "'", str32, "[100, 10, 127, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 128, 0, 10]" + "'", str33, "[100, 10, 128, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 129, 0, 10]" + "'", str34, "[100, 10, 129, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 130, 0, 10]" + "'", str35, "[100, 10, 130, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 131, 0, 10]" + "'", str36, "[100, 10, 131, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 132, 0, 10]" + "'", str37, "[100, 10, 132, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 133, 0, 10]" + "'", str38, "[100, 10, 133, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 134, 0, 10]" + "'", str39, "[100, 10, 134, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 135, 0, 10]" + "'", str40, "[100, 10, 135, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 136, 0, 10]" + "'", str41, "[100, 10, 136, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 137, 0, 10]" + "'", str42, "[100, 10, 137, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 138, 0, 10]" + "'", str43, "[100, 10, 138, 0, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 10, 139, 0, 10]" + "'", str44, "[100, 10, 139, 0, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 10, 140, 0, 10]" + "'", str45, "[100, 10, 140, 0, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 10, 141, 0, 10]" + "'", str46, "[100, 10, 141, 0, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 10, 142, 0, 10]" + "'", str47, "[100, 10, 142, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1897");
        int[] intArray6 = new int[] { '#', (byte) -1, (byte) 1, (-1), (short) 100, 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass17 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, -1, 11, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, -1, 2, 0, 100, 100]" + "'", str7, "[35, -1, 2, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, -1, 3, 1, 100, 100]" + "'", str8, "[35, -1, 3, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, -1, 4, 2, 100, 100]" + "'", str9, "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, -1, 5, 3, 100, 100]" + "'", str10, "[35, -1, 5, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, -1, 6, 4, 100, 100]" + "'", str11, "[35, -1, 6, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, -1, 7, 5, 100, 100]" + "'", str12, "[35, -1, 7, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, -1, 8, 6, 100, 100]" + "'", str13, "[35, -1, 8, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, -1, 9, 7, 100, 100]" + "'", str14, "[35, -1, 9, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, -1, 10, 8, 100, 100]" + "'", str15, "[35, -1, 10, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, -1, 11, 9, 100, 100]" + "'", str16, "[35, -1, 11, 9, 100, 100]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1898");
        int[] intArray4 = new int[] { 'a', (short) -1, '#', 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass50 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 44, 80, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 0, 36, 97]" + "'", str5, "[97, 0, 36, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 1, 37, 97]" + "'", str6, "[97, 1, 37, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 2, 38, 97]" + "'", str7, "[97, 2, 38, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 3, 39, 97]" + "'", str8, "[97, 3, 39, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 4, 40, 97]" + "'", str9, "[97, 4, 40, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 5, 41, 97]" + "'", str10, "[97, 5, 41, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 6, 42, 97]" + "'", str11, "[97, 6, 42, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 7, 43, 97]" + "'", str12, "[97, 7, 43, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 8, 44, 97]" + "'", str13, "[97, 8, 44, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 9, 45, 97]" + "'", str14, "[97, 9, 45, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 10, 46, 97]" + "'", str15, "[97, 10, 46, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 11, 47, 97]" + "'", str16, "[97, 11, 47, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 12, 48, 97]" + "'", str17, "[97, 12, 48, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 13, 49, 97]" + "'", str18, "[97, 13, 49, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 14, 50, 97]" + "'", str19, "[97, 14, 50, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 15, 51, 97]" + "'", str20, "[97, 15, 51, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 16, 52, 97]" + "'", str21, "[97, 16, 52, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 17, 53, 97]" + "'", str22, "[97, 17, 53, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 18, 54, 97]" + "'", str23, "[97, 18, 54, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 19, 55, 97]" + "'", str24, "[97, 19, 55, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 20, 56, 97]" + "'", str25, "[97, 20, 56, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 21, 57, 97]" + "'", str26, "[97, 21, 57, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 22, 58, 97]" + "'", str27, "[97, 22, 58, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 23, 59, 97]" + "'", str28, "[97, 23, 59, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 24, 60, 97]" + "'", str29, "[97, 24, 60, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 25, 61, 97]" + "'", str30, "[97, 25, 61, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 26, 62, 97]" + "'", str31, "[97, 26, 62, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 27, 63, 97]" + "'", str32, "[97, 27, 63, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 28, 64, 97]" + "'", str33, "[97, 28, 64, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 29, 65, 97]" + "'", str34, "[97, 29, 65, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 30, 66, 97]" + "'", str35, "[97, 30, 66, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 31, 67, 97]" + "'", str36, "[97, 31, 67, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 32, 68, 97]" + "'", str37, "[97, 32, 68, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 33, 69, 97]" + "'", str38, "[97, 33, 69, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 34, 70, 97]" + "'", str39, "[97, 34, 70, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 35, 71, 97]" + "'", str40, "[97, 35, 71, 97]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 36, 72, 97]" + "'", str41, "[97, 36, 72, 97]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 37, 73, 97]" + "'", str42, "[97, 37, 73, 97]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 38, 74, 97]" + "'", str43, "[97, 38, 74, 97]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 39, 75, 97]" + "'", str44, "[97, 39, 75, 97]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 40, 76, 97]" + "'", str45, "[97, 40, 76, 97]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 41, 77, 97]" + "'", str46, "[97, 41, 77, 97]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 42, 78, 97]" + "'", str47, "[97, 42, 78, 97]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 43, 79, 97]" + "'", str48, "[97, 43, 79, 97]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 44, 80, 97]" + "'", str49, "[97, 44, 80, 97]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1899");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass54 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1900");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass30 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 6, 102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 101]" + "'", str22, "[2, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 102]" + "'", str23, "[3, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 102]" + "'", str24, "[3, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 102]" + "'", str25, "[3, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 102]" + "'", str26, "[3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 102]" + "'", str27, "[3, 4, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 102]" + "'", str28, "[3, 5, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 102]" + "'", str29, "[3, 6, 102]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1901");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass38 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 83, 63, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 77, 57, 100, 52]" + "'", str31, "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 78, 58, 100, 52]" + "'", str32, "[-1, 100, 78, 58, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 79, 59, 100, 52]" + "'", str33, "[-1, 100, 79, 59, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 80, 60, 100, 52]" + "'", str34, "[-1, 100, 80, 60, 100, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 81, 61, 100, 52]" + "'", str35, "[-1, 100, 81, 61, 100, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 82, 62, 100, 52]" + "'", str36, "[-1, 100, 82, 62, 100, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 83, 63, 100, 52]" + "'", str37, "[-1, 100, 83, 63, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1902");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass68 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[5]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 1]" + "'", str62, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1903");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass14 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 41, 109, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 37, 105, 1]" + "'", str9, "[0, 37, 105, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 38, 106, 1]" + "'", str10, "[0, 38, 106, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 39, 107, 1]" + "'", str11, "[0, 39, 107, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 40, 108, 1]" + "'", str12, "[0, 40, 108, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 41, 109, 1]" + "'", str13, "[0, 41, 109, 1]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1904");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass25 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 7, 1]" + "'", str19, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 8, 1]" + "'", str20, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 9, 1]" + "'", str21, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 0, 2]" + "'", str22, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 1, 2]" + "'", str23, "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2, 2]" + "'", str24, "[2, 2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1905");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass18 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 10, 111, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 10, 5, 106, 100, 52]" + "'", str12, "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 10, 6, 107, 100, 52]" + "'", str13, "[1, 10, 6, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 10, 7, 108, 100, 52]" + "'", str14, "[1, 10, 7, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 8, 109, 100, 52]" + "'", str15, "[1, 10, 8, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 10, 9, 110, 100, 52]" + "'", str16, "[1, 10, 9, 110, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 10, 10, 111, 100, 52]" + "'", str17, "[1, 10, 10, 111, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1906");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass31 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 3, 6, 102, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 8, 101, 0]" + "'", str22, "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 9, 101, 0]" + "'", str23, "[1, 2, 9, 101, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 3, 0, 102, 0]" + "'", str24, "[1, 3, 0, 102, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 1, 102, 0]" + "'", str25, "[1, 3, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2, 102, 0]" + "'", str26, "[1, 3, 2, 102, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102, 0]" + "'", str27, "[1, 3, 3, 102, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 4, 102, 0]" + "'", str28, "[1, 3, 4, 102, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 3, 5, 102, 0]" + "'", str29, "[1, 3, 5, 102, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 3, 6, 102, 0]" + "'", str30, "[1, 3, 6, 102, 0]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1907");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass13 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 40, 108, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 37, 105, 1]" + "'", str9, "[0, 37, 105, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 38, 106, 1]" + "'", str10, "[0, 38, 106, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 39, 107, 1]" + "'", str11, "[0, 39, 107, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 40, 108, 1]" + "'", str12, "[0, 40, 108, 1]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1908");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass28 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 32, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 32, 29, 10, -1]" + "'", str24, "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 32, 30, 10, -1]" + "'", str25, "[10, 32, 30, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 32, 31, 10, -1]" + "'", str26, "[10, 32, 31, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 32, 32, 10, -1]" + "'", str27, "[10, 32, 32, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1909");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass24 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 0]" + "'", str22, "[1, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 0]" + "'", str23, "[1, 8, 8, 0]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1910");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass29 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 5, 102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 101]" + "'", str22, "[2, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 102]" + "'", str23, "[3, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 102]" + "'", str24, "[3, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 102]" + "'", str25, "[3, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 102]" + "'", str26, "[3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 102]" + "'", str27, "[3, 4, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 102]" + "'", str28, "[3, 5, 102]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1911");
        int[] intArray2 = new int[] { '4', (short) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass58 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[6, 6]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 2]" + "'", str3, "[53, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 3]" + "'", str4, "[54, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 4]" + "'", str5, "[55, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 5]" + "'", str6, "[56, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 6]" + "'", str7, "[57, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 7]" + "'", str8, "[58, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 8]" + "'", str9, "[59, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 9]" + "'", str10, "[60, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 0, 1]" + "'", str21, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 0, 1]" + "'", str31, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 3]" + "'", str34, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 4]" + "'", str35, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5, 5]" + "'", str36, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6, 6]" + "'", str37, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7, 7]" + "'", str38, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8, 8]" + "'", str39, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9, 9]" + "'", str40, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 0, 1]" + "'", str41, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 2]" + "'", str43, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 3]" + "'", str44, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 4]" + "'", str45, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 5]" + "'", str46, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6, 6]" + "'", str47, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7, 7]" + "'", str48, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8, 8]" + "'", str49, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9, 9]" + "'", str50, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 0, 1]" + "'", str51, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2, 2]" + "'", str53, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3, 3]" + "'", str54, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 4]" + "'", str55, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 5]" + "'", str56, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 6]" + "'", str57, "[6, 6]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1912");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass17 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 9, 110, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 10, 5, 106, 100, 52]" + "'", str12, "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 10, 6, 107, 100, 52]" + "'", str13, "[1, 10, 6, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 10, 7, 108, 100, 52]" + "'", str14, "[1, 10, 7, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 8, 109, 100, 52]" + "'", str15, "[1, 10, 8, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 10, 9, 110, 100, 52]" + "'", str16, "[1, 10, 9, 110, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1913");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass47 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[145]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1914");
        int[] intArray3 = new int[] { (short) -1, 100, (short) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass61 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 157, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 101, 10]" + "'", str4, "[-1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 102, 10]" + "'", str5, "[-1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 103, 10]" + "'", str6, "[-1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 104, 10]" + "'", str7, "[-1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 105, 10]" + "'", str8, "[-1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 106, 10]" + "'", str9, "[-1, 106, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 107, 10]" + "'", str10, "[-1, 107, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 108, 10]" + "'", str11, "[-1, 108, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 109, 10]" + "'", str12, "[-1, 109, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 110, 10]" + "'", str13, "[-1, 110, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 111, 10]" + "'", str14, "[-1, 111, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 112, 10]" + "'", str15, "[-1, 112, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 113, 10]" + "'", str16, "[-1, 113, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 114, 10]" + "'", str17, "[-1, 114, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 115, 10]" + "'", str18, "[-1, 115, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 116, 10]" + "'", str19, "[-1, 116, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 117, 10]" + "'", str20, "[-1, 117, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 118, 10]" + "'", str21, "[-1, 118, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 119, 10]" + "'", str22, "[-1, 119, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 120, 10]" + "'", str23, "[-1, 120, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 121, 10]" + "'", str24, "[-1, 121, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 122, 10]" + "'", str25, "[-1, 122, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 123, 10]" + "'", str26, "[-1, 123, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 124, 10]" + "'", str27, "[-1, 124, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 125, 10]" + "'", str28, "[-1, 125, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 126, 10]" + "'", str29, "[-1, 126, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 127, 10]" + "'", str30, "[-1, 127, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 128, 10]" + "'", str31, "[-1, 128, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 129, 10]" + "'", str32, "[-1, 129, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 130, 10]" + "'", str33, "[-1, 130, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 131, 10]" + "'", str34, "[-1, 131, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 132, 10]" + "'", str35, "[-1, 132, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 133, 10]" + "'", str36, "[-1, 133, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 134, 10]" + "'", str37, "[-1, 134, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 135, 10]" + "'", str38, "[-1, 135, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 136, 10]" + "'", str39, "[-1, 136, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 137, 10]" + "'", str40, "[-1, 137, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 138, 10]" + "'", str41, "[-1, 138, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 139, 10]" + "'", str42, "[-1, 139, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 140, 10]" + "'", str43, "[-1, 140, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 141, 10]" + "'", str44, "[-1, 141, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 142, 10]" + "'", str45, "[-1, 142, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 143, 10]" + "'", str46, "[-1, 143, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 144, 10]" + "'", str47, "[-1, 144, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 145, 10]" + "'", str48, "[-1, 145, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 146, 10]" + "'", str49, "[-1, 146, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 147, 10]" + "'", str50, "[-1, 147, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 148, 10]" + "'", str51, "[-1, 148, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 149, 10]" + "'", str52, "[-1, 149, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 150, 10]" + "'", str53, "[-1, 150, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 151, 10]" + "'", str54, "[-1, 151, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 152, 10]" + "'", str55, "[-1, 152, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 153, 10]" + "'", str56, "[-1, 153, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 154, 10]" + "'", str57, "[-1, 154, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 155, 10]" + "'", str58, "[-1, 155, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 156, 10]" + "'", str59, "[-1, 156, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 157, 10]" + "'", str60, "[-1, 157, 10]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1915");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass53 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1916");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass69 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 1]" + "'", str62, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1917");
        int[] intArray3 = new int[] { (short) 0, (short) 0, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass45 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 1, -1]" + "'", str4, "[0, 1, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 2, -1]" + "'", str5, "[0, 2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 3, -1]" + "'", str6, "[0, 3, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 4, -1]" + "'", str7, "[0, 4, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 5, -1]" + "'", str8, "[0, 5, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 6, -1]" + "'", str9, "[0, 6, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 7, -1]" + "'", str10, "[0, 7, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 8, -1]" + "'", str11, "[0, 8, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 9, -1]" + "'", str12, "[0, 9, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0]" + "'", str13, "[1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 0]" + "'", str14, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0]" + "'", str15, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 0]" + "'", str16, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 0]" + "'", str17, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 0]" + "'", str18, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 0]" + "'", str19, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 0]" + "'", str20, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 0]" + "'", str21, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 0]" + "'", str22, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 1]" + "'", str23, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1]" + "'", str24, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 1]" + "'", str25, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 1]" + "'", str26, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 1]" + "'", str27, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 1]" + "'", str28, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 1]" + "'", str29, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 1]" + "'", str30, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 1]" + "'", str31, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 1]" + "'", str32, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 2]" + "'", str33, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 2]" + "'", str34, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2]" + "'", str35, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 2]" + "'", str36, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 2]" + "'", str37, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 2]" + "'", str38, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 6, 2]" + "'", str39, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 7, 2]" + "'", str40, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 8, 2]" + "'", str41, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 9, 2]" + "'", str42, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 0, 3]" + "'", str43, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 1, 3]" + "'", str44, "[4, 1, 3]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1918");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass29 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 32, 29, 10, -1]" + "'", str24, "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 32, 30, 10, -1]" + "'", str25, "[10, 32, 30, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 32, 31, 10, -1]" + "'", str26, "[10, 32, 31, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 32, 32, 10, -1]" + "'", str27, "[10, 32, 32, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 32, 33, 10, -1]" + "'", str28, "[10, 32, 33, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1919");
        int[] intArray4 = new int[] { 'a', (short) -1, '#', 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass51 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 45, 81, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 0, 36, 97]" + "'", str5, "[97, 0, 36, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 1, 37, 97]" + "'", str6, "[97, 1, 37, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 2, 38, 97]" + "'", str7, "[97, 2, 38, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 3, 39, 97]" + "'", str8, "[97, 3, 39, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 4, 40, 97]" + "'", str9, "[97, 4, 40, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 5, 41, 97]" + "'", str10, "[97, 5, 41, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 6, 42, 97]" + "'", str11, "[97, 6, 42, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 7, 43, 97]" + "'", str12, "[97, 7, 43, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 8, 44, 97]" + "'", str13, "[97, 8, 44, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 9, 45, 97]" + "'", str14, "[97, 9, 45, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 10, 46, 97]" + "'", str15, "[97, 10, 46, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 11, 47, 97]" + "'", str16, "[97, 11, 47, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 12, 48, 97]" + "'", str17, "[97, 12, 48, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 13, 49, 97]" + "'", str18, "[97, 13, 49, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 14, 50, 97]" + "'", str19, "[97, 14, 50, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 15, 51, 97]" + "'", str20, "[97, 15, 51, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 16, 52, 97]" + "'", str21, "[97, 16, 52, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 17, 53, 97]" + "'", str22, "[97, 17, 53, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 18, 54, 97]" + "'", str23, "[97, 18, 54, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 19, 55, 97]" + "'", str24, "[97, 19, 55, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 20, 56, 97]" + "'", str25, "[97, 20, 56, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 21, 57, 97]" + "'", str26, "[97, 21, 57, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 22, 58, 97]" + "'", str27, "[97, 22, 58, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 23, 59, 97]" + "'", str28, "[97, 23, 59, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 24, 60, 97]" + "'", str29, "[97, 24, 60, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 25, 61, 97]" + "'", str30, "[97, 25, 61, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 26, 62, 97]" + "'", str31, "[97, 26, 62, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 27, 63, 97]" + "'", str32, "[97, 27, 63, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 28, 64, 97]" + "'", str33, "[97, 28, 64, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 29, 65, 97]" + "'", str34, "[97, 29, 65, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 30, 66, 97]" + "'", str35, "[97, 30, 66, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 31, 67, 97]" + "'", str36, "[97, 31, 67, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 32, 68, 97]" + "'", str37, "[97, 32, 68, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 33, 69, 97]" + "'", str38, "[97, 33, 69, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 34, 70, 97]" + "'", str39, "[97, 34, 70, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 35, 71, 97]" + "'", str40, "[97, 35, 71, 97]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 36, 72, 97]" + "'", str41, "[97, 36, 72, 97]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 37, 73, 97]" + "'", str42, "[97, 37, 73, 97]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 38, 74, 97]" + "'", str43, "[97, 38, 74, 97]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 39, 75, 97]" + "'", str44, "[97, 39, 75, 97]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 40, 76, 97]" + "'", str45, "[97, 40, 76, 97]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 41, 77, 97]" + "'", str46, "[97, 41, 77, 97]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 42, 78, 97]" + "'", str47, "[97, 42, 78, 97]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 43, 79, 97]" + "'", str48, "[97, 43, 79, 97]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 44, 80, 97]" + "'", str49, "[97, 44, 80, 97]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 45, 81, 97]" + "'", str50, "[97, 45, 81, 97]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1920");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass18 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1921");
        int[] intArray3 = new int[] { 100, 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass33 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[103, 0, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 2, 0]" + "'", str4, "[100, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 3, 0]" + "'", str5, "[100, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 4, 0]" + "'", str6, "[100, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 5, 0]" + "'", str7, "[100, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 6, 0]" + "'", str8, "[100, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 7, 0]" + "'", str9, "[100, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 8, 0]" + "'", str10, "[100, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 9, 0]" + "'", str11, "[100, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[101, 0, 1]" + "'", str12, "[101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 1, 1]" + "'", str13, "[101, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 2, 1]" + "'", str14, "[101, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 3, 1]" + "'", str15, "[101, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 4, 1]" + "'", str16, "[101, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 5, 1]" + "'", str17, "[101, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 6, 1]" + "'", str18, "[101, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 7, 1]" + "'", str19, "[101, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 8, 1]" + "'", str20, "[101, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 9, 1]" + "'", str21, "[101, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[102, 0, 2]" + "'", str22, "[102, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 1, 2]" + "'", str23, "[102, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 2, 2]" + "'", str24, "[102, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 3, 2]" + "'", str25, "[102, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 4, 2]" + "'", str26, "[102, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 5, 2]" + "'", str27, "[102, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 6, 2]" + "'", str28, "[102, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[102, 7, 2]" + "'", str29, "[102, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[102, 8, 2]" + "'", str30, "[102, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[102, 9, 2]" + "'", str31, "[102, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[103, 0, 3]" + "'", str32, "[103, 0, 3]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1922");
        int[] intArray3 = new int[] { (byte) -1, (byte) 0, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass53 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 9, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 1, 0]" + "'", str4, "[-1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 0]" + "'", str5, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 0]" + "'", str6, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 0]" + "'", str7, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 0]" + "'", str8, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 0]" + "'", str9, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 0]" + "'", str10, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 0]" + "'", str11, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 0]" + "'", str12, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 0, 1]" + "'", str13, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 1]" + "'", str14, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 1]" + "'", str15, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 3, 1]" + "'", str16, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 4, 1]" + "'", str17, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 5, 1]" + "'", str18, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 6, 1]" + "'", str19, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 7, 1]" + "'", str20, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 8, 1]" + "'", str21, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 9, 1]" + "'", str22, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 2]" + "'", str23, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 2]" + "'", str24, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 2, 2]" + "'", str25, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2]" + "'", str26, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 4, 2]" + "'", str27, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 5, 2]" + "'", str28, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 6, 2]" + "'", str29, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 7, 2]" + "'", str30, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 8, 2]" + "'", str31, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 9, 2]" + "'", str32, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 0, 3]" + "'", str33, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 1, 3]" + "'", str34, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2, 3]" + "'", str35, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 3, 3]" + "'", str36, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 4, 3]" + "'", str37, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 5, 3]" + "'", str38, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 6, 3]" + "'", str39, "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 7, 3]" + "'", str40, "[2, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 8, 3]" + "'", str41, "[2, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 9, 3]" + "'", str42, "[2, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 0, 4]" + "'", str43, "[3, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 1, 4]" + "'", str44, "[3, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 2, 4]" + "'", str45, "[3, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3, 4]" + "'", str46, "[3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 4, 4]" + "'", str47, "[3, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 5, 4]" + "'", str48, "[3, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 6, 4]" + "'", str49, "[3, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 7, 4]" + "'", str50, "[3, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 8, 4]" + "'", str51, "[3, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 9, 4]" + "'", str52, "[3, 9, 4]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1923");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass35 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 7, 2]" + "'", str29, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 8, 2]" + "'", str30, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 9, 2]" + "'", str31, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 0, 3]" + "'", str32, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 1, 3]" + "'", str33, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2, 3]" + "'", str34, "[2, 2, 3]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1924");
        int[] intArray2 = new int[] { (byte) 10, (byte) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass35 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 1]" + "'", str3, "[11, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 2]" + "'", str4, "[12, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 3]" + "'", str5, "[13, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 4]" + "'", str6, "[14, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 5]" + "'", str7, "[15, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 6]" + "'", str8, "[16, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 7]" + "'", str9, "[17, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 8]" + "'", str10, "[18, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 9]" + "'", str11, "[19, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1925");
        int[] intArray3 = new int[] { (byte) -1, (byte) 0, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass52 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 8, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 1, 0]" + "'", str4, "[-1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 0]" + "'", str5, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 0]" + "'", str6, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 0]" + "'", str7, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 0]" + "'", str8, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 0]" + "'", str9, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 0]" + "'", str10, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 0]" + "'", str11, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 0]" + "'", str12, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 0, 1]" + "'", str13, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 1]" + "'", str14, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 1]" + "'", str15, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 3, 1]" + "'", str16, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 4, 1]" + "'", str17, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 5, 1]" + "'", str18, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 6, 1]" + "'", str19, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 7, 1]" + "'", str20, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 8, 1]" + "'", str21, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 9, 1]" + "'", str22, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 2]" + "'", str23, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 2]" + "'", str24, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 2, 2]" + "'", str25, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2]" + "'", str26, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 4, 2]" + "'", str27, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 5, 2]" + "'", str28, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 6, 2]" + "'", str29, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 7, 2]" + "'", str30, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 8, 2]" + "'", str31, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 9, 2]" + "'", str32, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 0, 3]" + "'", str33, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 1, 3]" + "'", str34, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2, 3]" + "'", str35, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 3, 3]" + "'", str36, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 4, 3]" + "'", str37, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 5, 3]" + "'", str38, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 6, 3]" + "'", str39, "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 7, 3]" + "'", str40, "[2, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 8, 3]" + "'", str41, "[2, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 9, 3]" + "'", str42, "[2, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 0, 4]" + "'", str43, "[3, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 1, 4]" + "'", str44, "[3, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 2, 4]" + "'", str45, "[3, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3, 4]" + "'", str46, "[3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 4, 4]" + "'", str47, "[3, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 5, 4]" + "'", str48, "[3, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 6, 4]" + "'", str49, "[3, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 7, 4]" + "'", str50, "[3, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 8, 4]" + "'", str51, "[3, 8, 4]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1926");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass15 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 42, 110, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 37, 105, 1]" + "'", str9, "[0, 37, 105, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 38, 106, 1]" + "'", str10, "[0, 38, 106, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 39, 107, 1]" + "'", str11, "[0, 39, 107, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 40, 108, 1]" + "'", str12, "[0, 40, 108, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 41, 109, 1]" + "'", str13, "[0, 41, 109, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 42, 110, 1]" + "'", str14, "[0, 42, 110, 1]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1927");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass16 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 8, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 10, 5, 106, 100, 52]" + "'", str12, "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 10, 6, 107, 100, 52]" + "'", str13, "[1, 10, 6, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 10, 7, 108, 100, 52]" + "'", str14, "[1, 10, 7, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 8, 109, 100, 52]" + "'", str15, "[1, 10, 8, 109, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1928");
        int[] intArray3 = new int[] { (byte) 1, (short) 0, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass59 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1929");
        int[] intArray6 = new int[] { (short) -1, (byte) -1, '4', '4', (short) -1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass62 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, -1, 107, 107, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, -1, 53, 53, -1, 0]" + "'", str7, "[-1, -1, 53, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, -1, 54, 54, -1, 0]" + "'", str8, "[-1, -1, 54, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, -1, 55, 55, -1, 0]" + "'", str9, "[-1, -1, 55, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, -1, 56, 56, -1, 0]" + "'", str10, "[-1, -1, 56, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, -1, 57, 57, -1, 0]" + "'", str11, "[-1, -1, 57, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, -1, 58, 58, -1, 0]" + "'", str12, "[-1, -1, 58, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, -1, 59, 59, -1, 0]" + "'", str13, "[-1, -1, 59, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, -1, 60, 60, -1, 0]" + "'", str14, "[-1, -1, 60, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, -1, 61, 61, -1, 0]" + "'", str15, "[-1, -1, 61, 61, -1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, -1, 62, 62, -1, 0]" + "'", str16, "[-1, -1, 62, 62, -1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, -1, 63, 63, -1, 0]" + "'", str17, "[-1, -1, 63, 63, -1, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, -1, 64, 64, -1, 0]" + "'", str18, "[-1, -1, 64, 64, -1, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, -1, 65, 65, -1, 0]" + "'", str19, "[-1, -1, 65, 65, -1, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, -1, 66, 66, -1, 0]" + "'", str20, "[-1, -1, 66, 66, -1, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, -1, 67, 67, -1, 0]" + "'", str21, "[-1, -1, 67, 67, -1, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, -1, 68, 68, -1, 0]" + "'", str22, "[-1, -1, 68, 68, -1, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, -1, 69, 69, -1, 0]" + "'", str23, "[-1, -1, 69, 69, -1, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, -1, 70, 70, -1, 0]" + "'", str24, "[-1, -1, 70, 70, -1, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, -1, 71, 71, -1, 0]" + "'", str25, "[-1, -1, 71, 71, -1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, -1, 72, 72, -1, 0]" + "'", str26, "[-1, -1, 72, 72, -1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, -1, 73, 73, -1, 0]" + "'", str27, "[-1, -1, 73, 73, -1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, -1, 74, 74, -1, 0]" + "'", str28, "[-1, -1, 74, 74, -1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, -1, 75, 75, -1, 0]" + "'", str29, "[-1, -1, 75, 75, -1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, -1, 76, 76, -1, 0]" + "'", str30, "[-1, -1, 76, 76, -1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, -1, 77, 77, -1, 0]" + "'", str31, "[-1, -1, 77, 77, -1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, -1, 78, 78, -1, 0]" + "'", str32, "[-1, -1, 78, 78, -1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, -1, 79, 79, -1, 0]" + "'", str33, "[-1, -1, 79, 79, -1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, -1, 80, 80, -1, 0]" + "'", str34, "[-1, -1, 80, 80, -1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, -1, 81, 81, -1, 0]" + "'", str35, "[-1, -1, 81, 81, -1, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, -1, 82, 82, -1, 0]" + "'", str36, "[-1, -1, 82, 82, -1, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, -1, 83, 83, -1, 0]" + "'", str37, "[-1, -1, 83, 83, -1, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, -1, 84, 84, -1, 0]" + "'", str38, "[-1, -1, 84, 84, -1, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, -1, 85, 85, -1, 0]" + "'", str39, "[-1, -1, 85, 85, -1, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, -1, 86, 86, -1, 0]" + "'", str40, "[-1, -1, 86, 86, -1, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, -1, 87, 87, -1, 0]" + "'", str41, "[-1, -1, 87, 87, -1, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, -1, 88, 88, -1, 0]" + "'", str42, "[-1, -1, 88, 88, -1, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, -1, 89, 89, -1, 0]" + "'", str43, "[-1, -1, 89, 89, -1, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, -1, 90, 90, -1, 0]" + "'", str44, "[-1, -1, 90, 90, -1, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, -1, 91, 91, -1, 0]" + "'", str45, "[-1, -1, 91, 91, -1, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, -1, 92, 92, -1, 0]" + "'", str46, "[-1, -1, 92, 92, -1, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, -1, 93, 93, -1, 0]" + "'", str47, "[-1, -1, 93, 93, -1, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, -1, 94, 94, -1, 0]" + "'", str48, "[-1, -1, 94, 94, -1, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, -1, 95, 95, -1, 0]" + "'", str49, "[-1, -1, 95, 95, -1, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, -1, 96, 96, -1, 0]" + "'", str50, "[-1, -1, 96, 96, -1, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, -1, 97, 97, -1, 0]" + "'", str51, "[-1, -1, 97, 97, -1, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, -1, 98, 98, -1, 0]" + "'", str52, "[-1, -1, 98, 98, -1, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, -1, 99, 99, -1, 0]" + "'", str53, "[-1, -1, 99, 99, -1, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, -1, 100, 100, -1, 0]" + "'", str54, "[-1, -1, 100, 100, -1, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, -1, 101, 101, -1, 0]" + "'", str55, "[-1, -1, 101, 101, -1, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, -1, 102, 102, -1, 0]" + "'", str56, "[-1, -1, 102, 102, -1, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, -1, 103, 103, -1, 0]" + "'", str57, "[-1, -1, 103, 103, -1, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, -1, 104, 104, -1, 0]" + "'", str58, "[-1, -1, 104, 104, -1, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, -1, 105, 105, -1, 0]" + "'", str59, "[-1, -1, 105, 105, -1, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, -1, 106, 106, -1, 0]" + "'", str60, "[-1, -1, 106, 106, -1, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, -1, 107, 107, -1, 0]" + "'", str61, "[-1, -1, 107, 107, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1930");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass24 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 7, 1]" + "'", str19, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 8, 1]" + "'", str20, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 9, 1]" + "'", str21, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 0, 2]" + "'", str22, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 1, 2]" + "'", str23, "[2, 1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1931");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass59 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1932");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass52 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1933");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass11 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 1]" + "'", str10, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1934");
        int[] intArray4 = new int[] { (-1), '4', (byte) 100, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass66 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 113, 161, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 53, 101, 100]" + "'", str5, "[-1, 53, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 54, 102, 100]" + "'", str6, "[-1, 54, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 55, 103, 100]" + "'", str7, "[-1, 55, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 56, 104, 100]" + "'", str8, "[-1, 56, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 57, 105, 100]" + "'", str9, "[-1, 57, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 58, 106, 100]" + "'", str10, "[-1, 58, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 59, 107, 100]" + "'", str11, "[-1, 59, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 60, 108, 100]" + "'", str12, "[-1, 60, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 61, 109, 100]" + "'", str13, "[-1, 61, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 62, 110, 100]" + "'", str14, "[-1, 62, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 63, 111, 100]" + "'", str15, "[-1, 63, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 64, 112, 100]" + "'", str16, "[-1, 64, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 65, 113, 100]" + "'", str17, "[-1, 65, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 66, 114, 100]" + "'", str18, "[-1, 66, 114, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 67, 115, 100]" + "'", str19, "[-1, 67, 115, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 68, 116, 100]" + "'", str20, "[-1, 68, 116, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 69, 117, 100]" + "'", str21, "[-1, 69, 117, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 70, 118, 100]" + "'", str22, "[-1, 70, 118, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 71, 119, 100]" + "'", str23, "[-1, 71, 119, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 72, 120, 100]" + "'", str24, "[-1, 72, 120, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 73, 121, 100]" + "'", str25, "[-1, 73, 121, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 74, 122, 100]" + "'", str26, "[-1, 74, 122, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 75, 123, 100]" + "'", str27, "[-1, 75, 123, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 76, 124, 100]" + "'", str28, "[-1, 76, 124, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 77, 125, 100]" + "'", str29, "[-1, 77, 125, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 78, 126, 100]" + "'", str30, "[-1, 78, 126, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 79, 127, 100]" + "'", str31, "[-1, 79, 127, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 80, 128, 100]" + "'", str32, "[-1, 80, 128, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 81, 129, 100]" + "'", str33, "[-1, 81, 129, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 82, 130, 100]" + "'", str34, "[-1, 82, 130, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 83, 131, 100]" + "'", str35, "[-1, 83, 131, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 84, 132, 100]" + "'", str36, "[-1, 84, 132, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 85, 133, 100]" + "'", str37, "[-1, 85, 133, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 86, 134, 100]" + "'", str38, "[-1, 86, 134, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 87, 135, 100]" + "'", str39, "[-1, 87, 135, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 88, 136, 100]" + "'", str40, "[-1, 88, 136, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 89, 137, 100]" + "'", str41, "[-1, 89, 137, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 90, 138, 100]" + "'", str42, "[-1, 90, 138, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 91, 139, 100]" + "'", str43, "[-1, 91, 139, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 92, 140, 100]" + "'", str44, "[-1, 92, 140, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 93, 141, 100]" + "'", str45, "[-1, 93, 141, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 94, 142, 100]" + "'", str46, "[-1, 94, 142, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 95, 143, 100]" + "'", str47, "[-1, 95, 143, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 96, 144, 100]" + "'", str48, "[-1, 96, 144, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 97, 145, 100]" + "'", str49, "[-1, 97, 145, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 98, 146, 100]" + "'", str50, "[-1, 98, 146, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 99, 147, 100]" + "'", str51, "[-1, 99, 147, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 148, 100]" + "'", str52, "[-1, 100, 148, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 101, 149, 100]" + "'", str53, "[-1, 101, 149, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 102, 150, 100]" + "'", str54, "[-1, 102, 150, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 103, 151, 100]" + "'", str55, "[-1, 103, 151, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 104, 152, 100]" + "'", str56, "[-1, 104, 152, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 105, 153, 100]" + "'", str57, "[-1, 105, 153, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 106, 154, 100]" + "'", str58, "[-1, 106, 154, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 107, 155, 100]" + "'", str59, "[-1, 107, 155, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 108, 156, 100]" + "'", str60, "[-1, 108, 156, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 109, 157, 100]" + "'", str61, "[-1, 109, 157, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 110, 158, 100]" + "'", str62, "[-1, 110, 158, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 111, 159, 100]" + "'", str63, "[-1, 111, 159, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[-1, 112, 160, 100]" + "'", str64, "[-1, 112, 160, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[-1, 113, 161, 100]" + "'", str65, "[-1, 113, 161, 100]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1935");
        int[] intArray3 = new int[] { (byte) 1, (short) 0, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass60 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1936");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass10 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1937");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass10 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 37, 105, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 37, 105, 1]" + "'", str9, "[0, 37, 105, 1]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1938");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass58 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1939");
        int[] intArray5 = new int[] { (short) 100, 100, (short) 1, (byte) -1, (short) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass46 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 104, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, -1, 1]" + "'", str6, "[100, 100, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, -1, 1]" + "'", str7, "[100, 100, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 100, 4, -1, 1]" + "'", str8, "[100, 100, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 100, 5, -1, 1]" + "'", str9, "[100, 100, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 100, 6, -1, 1]" + "'", str10, "[100, 100, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 100, 7, -1, 1]" + "'", str11, "[100, 100, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 100, 8, -1, 1]" + "'", str12, "[100, 100, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 100, 9, -1, 1]" + "'", str13, "[100, 100, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 101, 0, 0, 1]" + "'", str14, "[100, 101, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 101, 1, 0, 1]" + "'", str15, "[100, 101, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 101, 2, 0, 1]" + "'", str16, "[100, 101, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 101, 3, 0, 1]" + "'", str17, "[100, 101, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 101, 4, 0, 1]" + "'", str18, "[100, 101, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 101, 5, 0, 1]" + "'", str19, "[100, 101, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 101, 6, 0, 1]" + "'", str20, "[100, 101, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 101, 7, 0, 1]" + "'", str21, "[100, 101, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 101, 8, 0, 1]" + "'", str22, "[100, 101, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 101, 9, 0, 1]" + "'", str23, "[100, 101, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 102, 0, 1, 1]" + "'", str24, "[100, 102, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 102, 1, 1, 1]" + "'", str25, "[100, 102, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 102, 2, 1, 1]" + "'", str26, "[100, 102, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 102, 3, 1, 1]" + "'", str27, "[100, 102, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 102, 4, 1, 1]" + "'", str28, "[100, 102, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 102, 5, 1, 1]" + "'", str29, "[100, 102, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 102, 6, 1, 1]" + "'", str30, "[100, 102, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 102, 7, 1, 1]" + "'", str31, "[100, 102, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 102, 8, 1, 1]" + "'", str32, "[100, 102, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 102, 9, 1, 1]" + "'", str33, "[100, 102, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 103, 0, 2, 1]" + "'", str34, "[100, 103, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 103, 1, 2, 1]" + "'", str35, "[100, 103, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 103, 2, 2, 1]" + "'", str36, "[100, 103, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 103, 3, 2, 1]" + "'", str37, "[100, 103, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 103, 4, 2, 1]" + "'", str38, "[100, 103, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 103, 5, 2, 1]" + "'", str39, "[100, 103, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 103, 6, 2, 1]" + "'", str40, "[100, 103, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 103, 7, 2, 1]" + "'", str41, "[100, 103, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 103, 8, 2, 1]" + "'", str42, "[100, 103, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 103, 9, 2, 1]" + "'", str43, "[100, 103, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 104, 0, 3, 1]" + "'", str44, "[100, 104, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 104, 1, 3, 1]" + "'", str45, "[100, 104, 1, 3, 1]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1940");
        int[] intArray3 = new int[] { 10, (byte) 100, 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass6 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 102, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 101, 0]" + "'", str4, "[10, 101, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 102, 0]" + "'", str5, "[10, 102, 0]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1941");
        int[] intArray6 = new int[] { '#', (byte) 0, 10, (-1), '#', (byte) 1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass42 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 3, 4, 4, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 0, 11, 0, 35, 1]" + "'", str7, "[35, 0, 11, 0, 35, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 0, 12, 1, 35, 1]" + "'", str8, "[35, 0, 12, 1, 35, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 0, 13, 2, 35, 1]" + "'", str9, "[35, 0, 13, 2, 35, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 0, 14, 3, 35, 1]" + "'", str10, "[35, 0, 14, 3, 35, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 0, 15, 4, 35, 1]" + "'", str11, "[35, 0, 15, 4, 35, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 0, 16, 5, 35, 1]" + "'", str12, "[35, 0, 16, 5, 35, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 0, 17, 6, 35, 1]" + "'", str13, "[35, 0, 17, 6, 35, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 0, 18, 7, 35, 1]" + "'", str14, "[35, 0, 18, 7, 35, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 0, 19, 8, 35, 1]" + "'", str15, "[35, 0, 19, 8, 35, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 0, 20, 9, 35, 1]" + "'", str16, "[35, 0, 20, 9, 35, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 1, 0, 0, 36, 1]" + "'", str17, "[35, 1, 0, 0, 36, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 1, 1, 1, 36, 1]" + "'", str18, "[35, 1, 1, 1, 36, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 1, 2, 2, 36, 1]" + "'", str19, "[35, 1, 2, 2, 36, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 1, 3, 3, 36, 1]" + "'", str20, "[35, 1, 3, 3, 36, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 1, 4, 4, 36, 1]" + "'", str21, "[35, 1, 4, 4, 36, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 1, 5, 5, 36, 1]" + "'", str22, "[35, 1, 5, 5, 36, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 1, 6, 6, 36, 1]" + "'", str23, "[35, 1, 6, 6, 36, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 1, 7, 7, 36, 1]" + "'", str24, "[35, 1, 7, 7, 36, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 1, 8, 8, 36, 1]" + "'", str25, "[35, 1, 8, 8, 36, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 1, 9, 9, 36, 1]" + "'", str26, "[35, 1, 9, 9, 36, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 2, 0, 0, 37, 1]" + "'", str27, "[35, 2, 0, 0, 37, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 2, 1, 1, 37, 1]" + "'", str28, "[35, 2, 1, 1, 37, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 2, 2, 2, 37, 1]" + "'", str29, "[35, 2, 2, 2, 37, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 2, 3, 3, 37, 1]" + "'", str30, "[35, 2, 3, 3, 37, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 2, 4, 4, 37, 1]" + "'", str31, "[35, 2, 4, 4, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 2, 5, 5, 37, 1]" + "'", str32, "[35, 2, 5, 5, 37, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 2, 6, 6, 37, 1]" + "'", str33, "[35, 2, 6, 6, 37, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 7, 7, 37, 1]" + "'", str34, "[35, 2, 7, 7, 37, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 2, 8, 8, 37, 1]" + "'", str35, "[35, 2, 8, 8, 37, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 9, 9, 37, 1]" + "'", str36, "[35, 2, 9, 9, 37, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 0, 0, 38, 1]" + "'", str37, "[35, 3, 0, 0, 38, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 3, 1, 1, 38, 1]" + "'", str38, "[35, 3, 1, 1, 38, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 3, 2, 2, 38, 1]" + "'", str39, "[35, 3, 2, 2, 38, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 3, 3, 3, 38, 1]" + "'", str40, "[35, 3, 3, 3, 38, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 3, 4, 4, 38, 1]" + "'", str41, "[35, 3, 4, 4, 38, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1942");
        int[] intArray3 = new int[] { (short) -1, 100, (short) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass63 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 159, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 101, 10]" + "'", str4, "[-1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 102, 10]" + "'", str5, "[-1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 103, 10]" + "'", str6, "[-1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 104, 10]" + "'", str7, "[-1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 105, 10]" + "'", str8, "[-1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 106, 10]" + "'", str9, "[-1, 106, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 107, 10]" + "'", str10, "[-1, 107, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 108, 10]" + "'", str11, "[-1, 108, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 109, 10]" + "'", str12, "[-1, 109, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 110, 10]" + "'", str13, "[-1, 110, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 111, 10]" + "'", str14, "[-1, 111, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 112, 10]" + "'", str15, "[-1, 112, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 113, 10]" + "'", str16, "[-1, 113, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 114, 10]" + "'", str17, "[-1, 114, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 115, 10]" + "'", str18, "[-1, 115, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 116, 10]" + "'", str19, "[-1, 116, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 117, 10]" + "'", str20, "[-1, 117, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 118, 10]" + "'", str21, "[-1, 118, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 119, 10]" + "'", str22, "[-1, 119, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 120, 10]" + "'", str23, "[-1, 120, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 121, 10]" + "'", str24, "[-1, 121, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 122, 10]" + "'", str25, "[-1, 122, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 123, 10]" + "'", str26, "[-1, 123, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 124, 10]" + "'", str27, "[-1, 124, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 125, 10]" + "'", str28, "[-1, 125, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 126, 10]" + "'", str29, "[-1, 126, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 127, 10]" + "'", str30, "[-1, 127, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 128, 10]" + "'", str31, "[-1, 128, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 129, 10]" + "'", str32, "[-1, 129, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 130, 10]" + "'", str33, "[-1, 130, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 131, 10]" + "'", str34, "[-1, 131, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 132, 10]" + "'", str35, "[-1, 132, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 133, 10]" + "'", str36, "[-1, 133, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 134, 10]" + "'", str37, "[-1, 134, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 135, 10]" + "'", str38, "[-1, 135, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 136, 10]" + "'", str39, "[-1, 136, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 137, 10]" + "'", str40, "[-1, 137, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 138, 10]" + "'", str41, "[-1, 138, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 139, 10]" + "'", str42, "[-1, 139, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 140, 10]" + "'", str43, "[-1, 140, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 141, 10]" + "'", str44, "[-1, 141, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 142, 10]" + "'", str45, "[-1, 142, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 143, 10]" + "'", str46, "[-1, 143, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 144, 10]" + "'", str47, "[-1, 144, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 145, 10]" + "'", str48, "[-1, 145, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 146, 10]" + "'", str49, "[-1, 146, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 147, 10]" + "'", str50, "[-1, 147, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 148, 10]" + "'", str51, "[-1, 148, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 149, 10]" + "'", str52, "[-1, 149, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 150, 10]" + "'", str53, "[-1, 150, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 151, 10]" + "'", str54, "[-1, 151, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 152, 10]" + "'", str55, "[-1, 152, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 153, 10]" + "'", str56, "[-1, 153, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 154, 10]" + "'", str57, "[-1, 154, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 155, 10]" + "'", str58, "[-1, 155, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 156, 10]" + "'", str59, "[-1, 156, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 157, 10]" + "'", str60, "[-1, 157, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 158, 10]" + "'", str61, "[-1, 158, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 159, 10]" + "'", str62, "[-1, 159, 10]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1943");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass62 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7]" + "'", str58, "[7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8]" + "'", str59, "[8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9]" + "'", str60, "[9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 1]" + "'", str61, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1944");
        int[] intArray2 = new int[] { (byte) 10, (byte) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass34 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 1]" + "'", str3, "[11, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 2]" + "'", str4, "[12, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 3]" + "'", str5, "[13, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 4]" + "'", str6, "[14, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 5]" + "'", str7, "[15, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 6]" + "'", str8, "[16, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 7]" + "'", str9, "[17, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 8]" + "'", str10, "[18, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 9]" + "'", str11, "[19, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1945");
        int[] intArray1 = new int[] { 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass63 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7]" + "'", str58, "[7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8]" + "'", str59, "[8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9]" + "'", str60, "[9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 1]" + "'", str61, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1]" + "'", str62, "[1]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1946");
        int[] intArray3 = new int[] { (byte) 1, (short) 0, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass61 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[6, 7, 5]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 3]" + "'", str33, "[4, 0, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 3]" + "'", str34, "[4, 1, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 3]" + "'", str35, "[4, 2, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 3]" + "'", str36, "[4, 3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 3]" + "'", str37, "[4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 3]" + "'", str38, "[4, 5, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 3]" + "'", str39, "[4, 6, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 3]" + "'", str40, "[4, 7, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 3]" + "'", str41, "[4, 8, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 3]" + "'", str42, "[4, 9, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 4]" + "'", str43, "[5, 0, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 4]" + "'", str44, "[5, 1, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 4]" + "'", str45, "[5, 2, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 4]" + "'", str46, "[5, 3, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 4]" + "'", str47, "[5, 4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 4]" + "'", str48, "[5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 4]" + "'", str49, "[5, 6, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 4]" + "'", str50, "[5, 7, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 4]" + "'", str51, "[5, 8, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 4]" + "'", str52, "[5, 9, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 5]" + "'", str53, "[6, 0, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 5]" + "'", str54, "[6, 1, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 5]" + "'", str55, "[6, 2, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 5]" + "'", str56, "[6, 3, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 5]" + "'", str57, "[6, 4, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 5]" + "'", str58, "[6, 5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 5]" + "'", str59, "[6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 5]" + "'", str60, "[6, 7, 5]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1947");
        int[] intArray3 = new int[] { 10, (byte) 100, 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass7 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 103, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 101, 0]" + "'", str4, "[10, 101, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 102, 0]" + "'", str5, "[10, 102, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 103, 0]" + "'", str6, "[10, 103, 0]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1948");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass21 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 67, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 58, 1, 100]" + "'", str11, "[100, 10, 58, 1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 59, 1, 100]" + "'", str12, "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 60, 1, 100]" + "'", str13, "[100, 10, 60, 1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 61, 1, 100]" + "'", str14, "[100, 10, 61, 1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 62, 1, 100]" + "'", str15, "[100, 10, 62, 1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 63, 1, 100]" + "'", str16, "[100, 10, 63, 1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 64, 1, 100]" + "'", str17, "[100, 10, 64, 1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 65, 1, 100]" + "'", str18, "[100, 10, 65, 1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 66, 1, 100]" + "'", str19, "[100, 10, 66, 1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 67, 1, 100]" + "'", str20, "[100, 10, 67, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1949");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass58 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[91]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[87]" + "'", str53, "[87]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[88]" + "'", str54, "[88]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[89]" + "'", str55, "[89]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[90]" + "'", str56, "[90]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[91]" + "'", str57, "[91]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1950");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass33 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1951");
        int[] intArray2 = new int[] { (byte) 100, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass56 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[3, 3]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[101, 1]" + "'", str3, "[101, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[102, 2]" + "'", str4, "[102, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[103, 3]" + "'", str5, "[103, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[104, 4]" + "'", str6, "[104, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[105, 5]" + "'", str7, "[105, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[106, 6]" + "'", str8, "[106, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[107, 7]" + "'", str9, "[107, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[108, 8]" + "'", str10, "[108, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[109, 9]" + "'", str11, "[109, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2, 2]" + "'", str54, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3, 3]" + "'", str55, "[3, 3]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1952");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass57 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[90]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[87]" + "'", str53, "[87]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[88]" + "'", str54, "[88]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[89]" + "'", str55, "[89]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[90]" + "'", str56, "[90]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1953");
        int[] intArray3 = new int[] { (short) -1, 100, (short) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass62 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 158, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 101, 10]" + "'", str4, "[-1, 101, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 102, 10]" + "'", str5, "[-1, 102, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 103, 10]" + "'", str6, "[-1, 103, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 104, 10]" + "'", str7, "[-1, 104, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 105, 10]" + "'", str8, "[-1, 105, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 106, 10]" + "'", str9, "[-1, 106, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 107, 10]" + "'", str10, "[-1, 107, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 108, 10]" + "'", str11, "[-1, 108, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 109, 10]" + "'", str12, "[-1, 109, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 110, 10]" + "'", str13, "[-1, 110, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 111, 10]" + "'", str14, "[-1, 111, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 112, 10]" + "'", str15, "[-1, 112, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 113, 10]" + "'", str16, "[-1, 113, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 114, 10]" + "'", str17, "[-1, 114, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 115, 10]" + "'", str18, "[-1, 115, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 116, 10]" + "'", str19, "[-1, 116, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 117, 10]" + "'", str20, "[-1, 117, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 118, 10]" + "'", str21, "[-1, 118, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 119, 10]" + "'", str22, "[-1, 119, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 120, 10]" + "'", str23, "[-1, 120, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 121, 10]" + "'", str24, "[-1, 121, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 122, 10]" + "'", str25, "[-1, 122, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 123, 10]" + "'", str26, "[-1, 123, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 124, 10]" + "'", str27, "[-1, 124, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 125, 10]" + "'", str28, "[-1, 125, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 126, 10]" + "'", str29, "[-1, 126, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 127, 10]" + "'", str30, "[-1, 127, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 128, 10]" + "'", str31, "[-1, 128, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 129, 10]" + "'", str32, "[-1, 129, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 130, 10]" + "'", str33, "[-1, 130, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 131, 10]" + "'", str34, "[-1, 131, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 132, 10]" + "'", str35, "[-1, 132, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 133, 10]" + "'", str36, "[-1, 133, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 134, 10]" + "'", str37, "[-1, 134, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 135, 10]" + "'", str38, "[-1, 135, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 136, 10]" + "'", str39, "[-1, 136, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 137, 10]" + "'", str40, "[-1, 137, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 138, 10]" + "'", str41, "[-1, 138, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 139, 10]" + "'", str42, "[-1, 139, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 140, 10]" + "'", str43, "[-1, 140, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 141, 10]" + "'", str44, "[-1, 141, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 142, 10]" + "'", str45, "[-1, 142, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 143, 10]" + "'", str46, "[-1, 143, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 144, 10]" + "'", str47, "[-1, 144, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 145, 10]" + "'", str48, "[-1, 145, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 146, 10]" + "'", str49, "[-1, 146, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 147, 10]" + "'", str50, "[-1, 147, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 148, 10]" + "'", str51, "[-1, 148, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 149, 10]" + "'", str52, "[-1, 149, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 150, 10]" + "'", str53, "[-1, 150, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 151, 10]" + "'", str54, "[-1, 151, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 152, 10]" + "'", str55, "[-1, 152, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 153, 10]" + "'", str56, "[-1, 153, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 154, 10]" + "'", str57, "[-1, 154, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 155, 10]" + "'", str58, "[-1, 155, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 156, 10]" + "'", str59, "[-1, 156, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 157, 10]" + "'", str60, "[-1, 157, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 158, 10]" + "'", str61, "[-1, 158, 10]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1954");
        int[] intArray4 = new int[] { 'a', 100, (byte) 0, '4' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass66 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[103, 1, 1, 58]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 101, 1, 52]" + "'", str5, "[97, 101, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 102, 2, 52]" + "'", str6, "[97, 102, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 103, 3, 52]" + "'", str7, "[97, 103, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 104, 4, 52]" + "'", str8, "[97, 104, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 105, 5, 52]" + "'", str9, "[97, 105, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 106, 6, 52]" + "'", str10, "[97, 106, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 107, 7, 52]" + "'", str11, "[97, 107, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 108, 8, 52]" + "'", str12, "[97, 108, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 109, 9, 52]" + "'", str13, "[97, 109, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[98, 0, 0, 53]" + "'", str14, "[98, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 1, 1, 53]" + "'", str15, "[98, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 2, 2, 53]" + "'", str16, "[98, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 3, 3, 53]" + "'", str17, "[98, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 4, 4, 53]" + "'", str18, "[98, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 5, 5, 53]" + "'", str19, "[98, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 6, 6, 53]" + "'", str20, "[98, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 7, 7, 53]" + "'", str21, "[98, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 8, 8, 53]" + "'", str22, "[98, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 9, 9, 53]" + "'", str23, "[98, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[99, 0, 0, 54]" + "'", str24, "[99, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 1, 1, 54]" + "'", str25, "[99, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 2, 2, 54]" + "'", str26, "[99, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 3, 3, 54]" + "'", str27, "[99, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 4, 4, 54]" + "'", str28, "[99, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 5, 5, 54]" + "'", str29, "[99, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 6, 6, 54]" + "'", str30, "[99, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 7, 7, 54]" + "'", str31, "[99, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 8, 8, 54]" + "'", str32, "[99, 8, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 9, 9, 54]" + "'", str33, "[99, 9, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 0, 55]" + "'", str34, "[100, 0, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 1, 1, 55]" + "'", str35, "[100, 1, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 2, 2, 55]" + "'", str36, "[100, 2, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 3, 55]" + "'", str37, "[100, 3, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 4, 4, 55]" + "'", str38, "[100, 4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 5, 5, 55]" + "'", str39, "[100, 5, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 6, 6, 55]" + "'", str40, "[100, 6, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 7, 7, 55]" + "'", str41, "[100, 7, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 8, 8, 55]" + "'", str42, "[100, 8, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 9, 9, 55]" + "'", str43, "[100, 9, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[101, 0, 0, 56]" + "'", str44, "[101, 0, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 1, 1, 56]" + "'", str45, "[101, 1, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 2, 2, 56]" + "'", str46, "[101, 2, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 3, 3, 56]" + "'", str47, "[101, 3, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 4, 4, 56]" + "'", str48, "[101, 4, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 5, 5, 56]" + "'", str49, "[101, 5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 6, 6, 56]" + "'", str50, "[101, 6, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 7, 7, 56]" + "'", str51, "[101, 7, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 8, 8, 56]" + "'", str52, "[101, 8, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 9, 9, 56]" + "'", str53, "[101, 9, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[102, 0, 0, 57]" + "'", str54, "[102, 0, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 1, 1, 57]" + "'", str55, "[102, 1, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 2, 2, 57]" + "'", str56, "[102, 2, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 3, 3, 57]" + "'", str57, "[102, 3, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 4, 4, 57]" + "'", str58, "[102, 4, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 5, 5, 57]" + "'", str59, "[102, 5, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 6, 6, 57]" + "'", str60, "[102, 6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 7, 7, 57]" + "'", str61, "[102, 7, 7, 57]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[102, 8, 8, 57]" + "'", str62, "[102, 8, 8, 57]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[102, 9, 9, 57]" + "'", str63, "[102, 9, 9, 57]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[103, 0, 0, 58]" + "'", str64, "[103, 0, 0, 58]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[103, 1, 1, 58]" + "'", str65, "[103, 1, 1, 58]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1955");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass35 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1956");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass33 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 78, 78, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 10, 68, 68, 10, 0]" + "'", str22, "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 10, 69, 69, 10, 0]" + "'", str23, "[10, 10, 69, 69, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10, 70, 70, 10, 0]" + "'", str24, "[10, 10, 70, 70, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 10, 71, 71, 10, 0]" + "'", str25, "[10, 10, 71, 71, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 10, 72, 72, 10, 0]" + "'", str26, "[10, 10, 72, 72, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 10, 73, 73, 10, 0]" + "'", str27, "[10, 10, 73, 73, 10, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 10, 74, 74, 10, 0]" + "'", str28, "[10, 10, 74, 74, 10, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 10, 75, 75, 10, 0]" + "'", str29, "[10, 10, 75, 75, 10, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 10, 76, 76, 10, 0]" + "'", str30, "[10, 10, 76, 76, 10, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 10, 77, 77, 10, 0]" + "'", str31, "[10, 10, 77, 77, 10, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 10, 78, 78, 10, 0]" + "'", str32, "[10, 10, 78, 78, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1957");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass30 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 32, 29, 10, -1]" + "'", str24, "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 32, 30, 10, -1]" + "'", str25, "[10, 32, 30, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 32, 31, 10, -1]" + "'", str26, "[10, 32, 31, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 32, 32, 10, -1]" + "'", str27, "[10, 32, 32, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 32, 33, 10, -1]" + "'", str28, "[10, 32, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 32, 34, 10, -1]" + "'", str29, "[10, 32, 34, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1958");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass32 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 3, 7, 102, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 8, 101, 0]" + "'", str22, "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 9, 101, 0]" + "'", str23, "[1, 2, 9, 101, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 3, 0, 102, 0]" + "'", str24, "[1, 3, 0, 102, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 1, 102, 0]" + "'", str25, "[1, 3, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2, 102, 0]" + "'", str26, "[1, 3, 2, 102, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102, 0]" + "'", str27, "[1, 3, 3, 102, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 4, 102, 0]" + "'", str28, "[1, 3, 4, 102, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 3, 5, 102, 0]" + "'", str29, "[1, 3, 5, 102, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 3, 6, 102, 0]" + "'", str30, "[1, 3, 6, 102, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 3, 7, 102, 0]" + "'", str31, "[1, 3, 7, 102, 0]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1959");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass39 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 7, 2]" + "'", str29, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 8, 2]" + "'", str30, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 9, 2]" + "'", str31, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 0, 3]" + "'", str32, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 1, 3]" + "'", str33, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2, 3]" + "'", str34, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 3, 3]" + "'", str35, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 4, 3]" + "'", str36, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 5, 3]" + "'", str37, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 6, 3]" + "'", str38, "[2, 6, 3]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1960");
        int[] intArray3 = new int[] { (short) 100, (byte) 0, (short) 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass6 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 1, 1]" + "'", str4, "[100, 1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 2, 1]" + "'", str5, "[100, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1961");
        int[] intArray0 = new int[] {};
        java.lang.String str1 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray0);
        java.lang.Class<?> wildcardClass61 = intArray0.getClass();
        org.junit.Assert.assertNotNull(intArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "[1, 1]" + "'", str1, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1, 1]" + "'", str2, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 1]" + "'", str3, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1]" + "'", str4, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1]" + "'", str5, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1]" + "'", str6, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1]" + "'", str7, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1]" + "'", str8, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1]" + "'", str9, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1]" + "'", str15, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1]" + "'", str16, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1]" + "'", str17, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1]" + "'", str18, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1]" + "'", str19, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1]" + "'", str25, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1]" + "'", str26, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1]" + "'", str27, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1]" + "'", str28, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1]" + "'", str29, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1]" + "'", str31, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1]" + "'", str35, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1]" + "'", str36, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1]" + "'", str37, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1]" + "'", str38, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1]" + "'", str39, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1]" + "'", str40, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1]" + "'", str41, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1]" + "'", str45, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1]" + "'", str46, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1]" + "'", str47, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1]" + "'", str48, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1]" + "'", str49, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1]" + "'", str50, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1]" + "'", str51, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1]" + "'", str55, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1]" + "'", str56, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1]" + "'", str57, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1]" + "'", str58, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1]" + "'", str59, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1]" + "'", str60, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1962");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass33 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 3, 8, 102, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 8, 101, 0]" + "'", str22, "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 9, 101, 0]" + "'", str23, "[1, 2, 9, 101, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 3, 0, 102, 0]" + "'", str24, "[1, 3, 0, 102, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 1, 102, 0]" + "'", str25, "[1, 3, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2, 102, 0]" + "'", str26, "[1, 3, 2, 102, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102, 0]" + "'", str27, "[1, 3, 3, 102, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 4, 102, 0]" + "'", str28, "[1, 3, 4, 102, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 3, 5, 102, 0]" + "'", str29, "[1, 3, 5, 102, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 3, 6, 102, 0]" + "'", str30, "[1, 3, 6, 102, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 3, 7, 102, 0]" + "'", str31, "[1, 3, 7, 102, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 3, 8, 102, 0]" + "'", str32, "[1, 3, 8, 102, 0]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1963");
        int[] intArray5 = new int[] { (short) 100, (byte) 10, (byte) 100, 0, (byte) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass49 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 143, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 101, 0, 10]" + "'", str6, "[100, 10, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 102, 0, 10]" + "'", str7, "[100, 10, 102, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 103, 0, 10]" + "'", str8, "[100, 10, 103, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 104, 0, 10]" + "'", str9, "[100, 10, 104, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 105, 0, 10]" + "'", str10, "[100, 10, 105, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 106, 0, 10]" + "'", str11, "[100, 10, 106, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 107, 0, 10]" + "'", str12, "[100, 10, 107, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 108, 0, 10]" + "'", str13, "[100, 10, 108, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 109, 0, 10]" + "'", str14, "[100, 10, 109, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 110, 0, 10]" + "'", str15, "[100, 10, 110, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 111, 0, 10]" + "'", str16, "[100, 10, 111, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 112, 0, 10]" + "'", str17, "[100, 10, 112, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 113, 0, 10]" + "'", str18, "[100, 10, 113, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 114, 0, 10]" + "'", str19, "[100, 10, 114, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 115, 0, 10]" + "'", str20, "[100, 10, 115, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 116, 0, 10]" + "'", str21, "[100, 10, 116, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 117, 0, 10]" + "'", str22, "[100, 10, 117, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 118, 0, 10]" + "'", str23, "[100, 10, 118, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 119, 0, 10]" + "'", str24, "[100, 10, 119, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 120, 0, 10]" + "'", str25, "[100, 10, 120, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 121, 0, 10]" + "'", str26, "[100, 10, 121, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 122, 0, 10]" + "'", str27, "[100, 10, 122, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 123, 0, 10]" + "'", str28, "[100, 10, 123, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 124, 0, 10]" + "'", str29, "[100, 10, 124, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 125, 0, 10]" + "'", str30, "[100, 10, 125, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 126, 0, 10]" + "'", str31, "[100, 10, 126, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 127, 0, 10]" + "'", str32, "[100, 10, 127, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 128, 0, 10]" + "'", str33, "[100, 10, 128, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 129, 0, 10]" + "'", str34, "[100, 10, 129, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 130, 0, 10]" + "'", str35, "[100, 10, 130, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 131, 0, 10]" + "'", str36, "[100, 10, 131, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 132, 0, 10]" + "'", str37, "[100, 10, 132, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 133, 0, 10]" + "'", str38, "[100, 10, 133, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 134, 0, 10]" + "'", str39, "[100, 10, 134, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 135, 0, 10]" + "'", str40, "[100, 10, 135, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 136, 0, 10]" + "'", str41, "[100, 10, 136, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 137, 0, 10]" + "'", str42, "[100, 10, 137, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 138, 0, 10]" + "'", str43, "[100, 10, 138, 0, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 10, 139, 0, 10]" + "'", str44, "[100, 10, 139, 0, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 10, 140, 0, 10]" + "'", str45, "[100, 10, 140, 0, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 10, 141, 0, 10]" + "'", str46, "[100, 10, 141, 0, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 10, 142, 0, 10]" + "'", str47, "[100, 10, 142, 0, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 10, 143, 0, 10]" + "'", str48, "[100, 10, 143, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1964");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass29 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[2, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 0]" + "'", str22, "[1, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 0]" + "'", str23, "[1, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 0]" + "'", str24, "[1, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 1]" + "'", str25, "[2, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 1]" + "'", str26, "[2, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 1]" + "'", str27, "[2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 1]" + "'", str28, "[2, 3, 3, 1]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1965");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass19 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 11, 112, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 10, 5, 106, 100, 52]" + "'", str12, "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 10, 6, 107, 100, 52]" + "'", str13, "[1, 10, 6, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 10, 7, 108, 100, 52]" + "'", str14, "[1, 10, 7, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 8, 109, 100, 52]" + "'", str15, "[1, 10, 8, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 10, 9, 110, 100, 52]" + "'", str16, "[1, 10, 9, 110, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 10, 10, 111, 100, 52]" + "'", str17, "[1, 10, 10, 111, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 10, 11, 112, 100, 52]" + "'", str18, "[1, 10, 11, 112, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1966");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass31 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 7, 102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 101]" + "'", str22, "[2, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 102]" + "'", str23, "[3, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 102]" + "'", str24, "[3, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 102]" + "'", str25, "[3, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 102]" + "'", str26, "[3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 102]" + "'", str27, "[3, 4, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 102]" + "'", str28, "[3, 5, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 102]" + "'", str29, "[3, 6, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 102]" + "'", str30, "[3, 7, 102]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1967");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass16 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 6]" + "'", str7, "[15, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 7]" + "'", str8, "[16, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 8]" + "'", str9, "[17, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 9]" + "'", str10, "[18, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1968");
        int[] intArray6 = new int[] { '#', (byte) 0, 10, (-1), '#', (byte) 1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass43 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 3, 5, 5, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 0, 11, 0, 35, 1]" + "'", str7, "[35, 0, 11, 0, 35, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 0, 12, 1, 35, 1]" + "'", str8, "[35, 0, 12, 1, 35, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 0, 13, 2, 35, 1]" + "'", str9, "[35, 0, 13, 2, 35, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 0, 14, 3, 35, 1]" + "'", str10, "[35, 0, 14, 3, 35, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 0, 15, 4, 35, 1]" + "'", str11, "[35, 0, 15, 4, 35, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 0, 16, 5, 35, 1]" + "'", str12, "[35, 0, 16, 5, 35, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 0, 17, 6, 35, 1]" + "'", str13, "[35, 0, 17, 6, 35, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 0, 18, 7, 35, 1]" + "'", str14, "[35, 0, 18, 7, 35, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 0, 19, 8, 35, 1]" + "'", str15, "[35, 0, 19, 8, 35, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 0, 20, 9, 35, 1]" + "'", str16, "[35, 0, 20, 9, 35, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 1, 0, 0, 36, 1]" + "'", str17, "[35, 1, 0, 0, 36, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 1, 1, 1, 36, 1]" + "'", str18, "[35, 1, 1, 1, 36, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 1, 2, 2, 36, 1]" + "'", str19, "[35, 1, 2, 2, 36, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 1, 3, 3, 36, 1]" + "'", str20, "[35, 1, 3, 3, 36, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 1, 4, 4, 36, 1]" + "'", str21, "[35, 1, 4, 4, 36, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 1, 5, 5, 36, 1]" + "'", str22, "[35, 1, 5, 5, 36, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 1, 6, 6, 36, 1]" + "'", str23, "[35, 1, 6, 6, 36, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 1, 7, 7, 36, 1]" + "'", str24, "[35, 1, 7, 7, 36, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 1, 8, 8, 36, 1]" + "'", str25, "[35, 1, 8, 8, 36, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 1, 9, 9, 36, 1]" + "'", str26, "[35, 1, 9, 9, 36, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 2, 0, 0, 37, 1]" + "'", str27, "[35, 2, 0, 0, 37, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 2, 1, 1, 37, 1]" + "'", str28, "[35, 2, 1, 1, 37, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 2, 2, 2, 37, 1]" + "'", str29, "[35, 2, 2, 2, 37, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 2, 3, 3, 37, 1]" + "'", str30, "[35, 2, 3, 3, 37, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 2, 4, 4, 37, 1]" + "'", str31, "[35, 2, 4, 4, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 2, 5, 5, 37, 1]" + "'", str32, "[35, 2, 5, 5, 37, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 2, 6, 6, 37, 1]" + "'", str33, "[35, 2, 6, 6, 37, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 7, 7, 37, 1]" + "'", str34, "[35, 2, 7, 7, 37, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 2, 8, 8, 37, 1]" + "'", str35, "[35, 2, 8, 8, 37, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 9, 9, 37, 1]" + "'", str36, "[35, 2, 9, 9, 37, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 0, 0, 38, 1]" + "'", str37, "[35, 3, 0, 0, 38, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 3, 1, 1, 38, 1]" + "'", str38, "[35, 3, 1, 1, 38, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 3, 2, 2, 38, 1]" + "'", str39, "[35, 3, 2, 2, 38, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 3, 3, 3, 38, 1]" + "'", str40, "[35, 3, 3, 3, 38, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 3, 4, 4, 38, 1]" + "'", str41, "[35, 3, 4, 4, 38, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 3, 5, 5, 38, 1]" + "'", str42, "[35, 3, 5, 5, 38, 1]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1969");
        int[] intArray4 = new int[] { 'a', 100, (byte) 0, '4' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass65 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[103, 0, 0, 58]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 101, 1, 52]" + "'", str5, "[97, 101, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 102, 2, 52]" + "'", str6, "[97, 102, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 103, 3, 52]" + "'", str7, "[97, 103, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 104, 4, 52]" + "'", str8, "[97, 104, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 105, 5, 52]" + "'", str9, "[97, 105, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 106, 6, 52]" + "'", str10, "[97, 106, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 107, 7, 52]" + "'", str11, "[97, 107, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 108, 8, 52]" + "'", str12, "[97, 108, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 109, 9, 52]" + "'", str13, "[97, 109, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[98, 0, 0, 53]" + "'", str14, "[98, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 1, 1, 53]" + "'", str15, "[98, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 2, 2, 53]" + "'", str16, "[98, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 3, 3, 53]" + "'", str17, "[98, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 4, 4, 53]" + "'", str18, "[98, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 5, 5, 53]" + "'", str19, "[98, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 6, 6, 53]" + "'", str20, "[98, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 7, 7, 53]" + "'", str21, "[98, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 8, 8, 53]" + "'", str22, "[98, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 9, 9, 53]" + "'", str23, "[98, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[99, 0, 0, 54]" + "'", str24, "[99, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 1, 1, 54]" + "'", str25, "[99, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 2, 2, 54]" + "'", str26, "[99, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 3, 3, 54]" + "'", str27, "[99, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 4, 4, 54]" + "'", str28, "[99, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 5, 5, 54]" + "'", str29, "[99, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 6, 6, 54]" + "'", str30, "[99, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 7, 7, 54]" + "'", str31, "[99, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 8, 8, 54]" + "'", str32, "[99, 8, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 9, 9, 54]" + "'", str33, "[99, 9, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 0, 55]" + "'", str34, "[100, 0, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 1, 1, 55]" + "'", str35, "[100, 1, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 2, 2, 55]" + "'", str36, "[100, 2, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 3, 55]" + "'", str37, "[100, 3, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 4, 4, 55]" + "'", str38, "[100, 4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 5, 5, 55]" + "'", str39, "[100, 5, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 6, 6, 55]" + "'", str40, "[100, 6, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 7, 7, 55]" + "'", str41, "[100, 7, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 8, 8, 55]" + "'", str42, "[100, 8, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 9, 9, 55]" + "'", str43, "[100, 9, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[101, 0, 0, 56]" + "'", str44, "[101, 0, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 1, 1, 56]" + "'", str45, "[101, 1, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 2, 2, 56]" + "'", str46, "[101, 2, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 3, 3, 56]" + "'", str47, "[101, 3, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 4, 4, 56]" + "'", str48, "[101, 4, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 5, 5, 56]" + "'", str49, "[101, 5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 6, 6, 56]" + "'", str50, "[101, 6, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 7, 7, 56]" + "'", str51, "[101, 7, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 8, 8, 56]" + "'", str52, "[101, 8, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 9, 9, 56]" + "'", str53, "[101, 9, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[102, 0, 0, 57]" + "'", str54, "[102, 0, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 1, 1, 57]" + "'", str55, "[102, 1, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 2, 2, 57]" + "'", str56, "[102, 2, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 3, 3, 57]" + "'", str57, "[102, 3, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 4, 4, 57]" + "'", str58, "[102, 4, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 5, 5, 57]" + "'", str59, "[102, 5, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 6, 6, 57]" + "'", str60, "[102, 6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 7, 7, 57]" + "'", str61, "[102, 7, 7, 57]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[102, 8, 8, 57]" + "'", str62, "[102, 8, 8, 57]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[102, 9, 9, 57]" + "'", str63, "[102, 9, 9, 57]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[103, 0, 0, 58]" + "'", str64, "[103, 0, 0, 58]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1970");
        int[] intArray6 = new int[] { (short) 10, (byte) 10, '4', '4', (short) 10, 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass32 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 10, 77, 77, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 10, 53, 53, 10, 0]" + "'", str7, "[10, 10, 53, 53, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 10, 54, 54, 10, 0]" + "'", str8, "[10, 10, 54, 54, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 10, 55, 55, 10, 0]" + "'", str9, "[10, 10, 55, 55, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 10, 56, 56, 10, 0]" + "'", str10, "[10, 10, 56, 56, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 10, 57, 57, 10, 0]" + "'", str11, "[10, 10, 57, 57, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 10, 58, 58, 10, 0]" + "'", str12, "[10, 10, 58, 58, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 10, 59, 59, 10, 0]" + "'", str13, "[10, 10, 59, 59, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 10, 60, 60, 10, 0]" + "'", str14, "[10, 10, 60, 60, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 10, 61, 61, 10, 0]" + "'", str15, "[10, 10, 61, 61, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 10, 62, 62, 10, 0]" + "'", str16, "[10, 10, 62, 62, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 10, 63, 63, 10, 0]" + "'", str17, "[10, 10, 63, 63, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 10, 64, 64, 10, 0]" + "'", str18, "[10, 10, 64, 64, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 10, 65, 65, 10, 0]" + "'", str19, "[10, 10, 65, 65, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 10, 66, 66, 10, 0]" + "'", str20, "[10, 10, 66, 66, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 10, 67, 67, 10, 0]" + "'", str21, "[10, 10, 67, 67, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 10, 68, 68, 10, 0]" + "'", str22, "[10, 10, 68, 68, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 10, 69, 69, 10, 0]" + "'", str23, "[10, 10, 69, 69, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10, 70, 70, 10, 0]" + "'", str24, "[10, 10, 70, 70, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 10, 71, 71, 10, 0]" + "'", str25, "[10, 10, 71, 71, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 10, 72, 72, 10, 0]" + "'", str26, "[10, 10, 72, 72, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 10, 73, 73, 10, 0]" + "'", str27, "[10, 10, 73, 73, 10, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 10, 74, 74, 10, 0]" + "'", str28, "[10, 10, 74, 74, 10, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 10, 75, 75, 10, 0]" + "'", str29, "[10, 10, 75, 75, 10, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 10, 76, 76, 10, 0]" + "'", str30, "[10, 10, 76, 76, 10, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 10, 77, 77, 10, 0]" + "'", str31, "[10, 10, 77, 77, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1971");
        int[] intArray3 = new int[] { (byte) -1, (short) 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass40 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 7, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 2, 0]" + "'", str4, "[-1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 3, 0]" + "'", str5, "[-1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 4, 0]" + "'", str6, "[-1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 5, 0]" + "'", str7, "[-1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 6, 0]" + "'", str8, "[-1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 7, 0]" + "'", str9, "[-1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 8, 0]" + "'", str10, "[-1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 9, 0]" + "'", str11, "[-1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 0, 1]" + "'", str12, "[0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 1]" + "'", str13, "[0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 2, 1]" + "'", str14, "[0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 3, 1]" + "'", str15, "[0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 4, 1]" + "'", str16, "[0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 5, 1]" + "'", str17, "[0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 6, 1]" + "'", str18, "[0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 7, 1]" + "'", str19, "[0, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 8, 1]" + "'", str20, "[0, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 9, 1]" + "'", str21, "[0, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 2]" + "'", str22, "[1, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 2]" + "'", str23, "[1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 2, 2]" + "'", str24, "[1, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 2]" + "'", str25, "[1, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 4, 2]" + "'", str26, "[1, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 5, 2]" + "'", str27, "[1, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 6, 2]" + "'", str28, "[1, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 7, 2]" + "'", str29, "[1, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 8, 2]" + "'", str30, "[1, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 9, 2]" + "'", str31, "[1, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 0, 3]" + "'", str32, "[2, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 1, 3]" + "'", str33, "[2, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2, 3]" + "'", str34, "[2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 3, 3]" + "'", str35, "[2, 3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 4, 3]" + "'", str36, "[2, 4, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 5, 3]" + "'", str37, "[2, 5, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 6, 3]" + "'", str38, "[2, 6, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 7, 3]" + "'", str39, "[2, 7, 3]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1972");
        int[] intArray2 = new int[] { '4', (short) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass59 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 2]" + "'", str3, "[53, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 3]" + "'", str4, "[54, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 4]" + "'", str5, "[55, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 5]" + "'", str6, "[56, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 6]" + "'", str7, "[57, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 7]" + "'", str8, "[58, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 8]" + "'", str9, "[59, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 9]" + "'", str10, "[60, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 0, 1]" + "'", str21, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 0, 1]" + "'", str31, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 3]" + "'", str34, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 4]" + "'", str35, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5, 5]" + "'", str36, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6, 6]" + "'", str37, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7, 7]" + "'", str38, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8, 8]" + "'", str39, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9, 9]" + "'", str40, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 0, 1]" + "'", str41, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 2]" + "'", str43, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 3]" + "'", str44, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 4]" + "'", str45, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 5]" + "'", str46, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6, 6]" + "'", str47, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7, 7]" + "'", str48, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8, 8]" + "'", str49, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9, 9]" + "'", str50, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 0, 1]" + "'", str51, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2, 2]" + "'", str53, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3, 3]" + "'", str54, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 4]" + "'", str55, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 5]" + "'", str56, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 6]" + "'", str57, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7, 7]" + "'", str58, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1973");
        int[] intArray6 = new int[] { (short) -1, (byte) -1, '4', '4', (short) -1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass63 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, -1, 108, 108, -1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, -1, 53, 53, -1, 0]" + "'", str7, "[-1, -1, 53, 53, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, -1, 54, 54, -1, 0]" + "'", str8, "[-1, -1, 54, 54, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, -1, 55, 55, -1, 0]" + "'", str9, "[-1, -1, 55, 55, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, -1, 56, 56, -1, 0]" + "'", str10, "[-1, -1, 56, 56, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, -1, 57, 57, -1, 0]" + "'", str11, "[-1, -1, 57, 57, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, -1, 58, 58, -1, 0]" + "'", str12, "[-1, -1, 58, 58, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, -1, 59, 59, -1, 0]" + "'", str13, "[-1, -1, 59, 59, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, -1, 60, 60, -1, 0]" + "'", str14, "[-1, -1, 60, 60, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, -1, 61, 61, -1, 0]" + "'", str15, "[-1, -1, 61, 61, -1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, -1, 62, 62, -1, 0]" + "'", str16, "[-1, -1, 62, 62, -1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, -1, 63, 63, -1, 0]" + "'", str17, "[-1, -1, 63, 63, -1, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, -1, 64, 64, -1, 0]" + "'", str18, "[-1, -1, 64, 64, -1, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, -1, 65, 65, -1, 0]" + "'", str19, "[-1, -1, 65, 65, -1, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, -1, 66, 66, -1, 0]" + "'", str20, "[-1, -1, 66, 66, -1, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, -1, 67, 67, -1, 0]" + "'", str21, "[-1, -1, 67, 67, -1, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, -1, 68, 68, -1, 0]" + "'", str22, "[-1, -1, 68, 68, -1, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, -1, 69, 69, -1, 0]" + "'", str23, "[-1, -1, 69, 69, -1, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, -1, 70, 70, -1, 0]" + "'", str24, "[-1, -1, 70, 70, -1, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, -1, 71, 71, -1, 0]" + "'", str25, "[-1, -1, 71, 71, -1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, -1, 72, 72, -1, 0]" + "'", str26, "[-1, -1, 72, 72, -1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, -1, 73, 73, -1, 0]" + "'", str27, "[-1, -1, 73, 73, -1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, -1, 74, 74, -1, 0]" + "'", str28, "[-1, -1, 74, 74, -1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, -1, 75, 75, -1, 0]" + "'", str29, "[-1, -1, 75, 75, -1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, -1, 76, 76, -1, 0]" + "'", str30, "[-1, -1, 76, 76, -1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, -1, 77, 77, -1, 0]" + "'", str31, "[-1, -1, 77, 77, -1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, -1, 78, 78, -1, 0]" + "'", str32, "[-1, -1, 78, 78, -1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, -1, 79, 79, -1, 0]" + "'", str33, "[-1, -1, 79, 79, -1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, -1, 80, 80, -1, 0]" + "'", str34, "[-1, -1, 80, 80, -1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, -1, 81, 81, -1, 0]" + "'", str35, "[-1, -1, 81, 81, -1, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, -1, 82, 82, -1, 0]" + "'", str36, "[-1, -1, 82, 82, -1, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, -1, 83, 83, -1, 0]" + "'", str37, "[-1, -1, 83, 83, -1, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, -1, 84, 84, -1, 0]" + "'", str38, "[-1, -1, 84, 84, -1, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, -1, 85, 85, -1, 0]" + "'", str39, "[-1, -1, 85, 85, -1, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, -1, 86, 86, -1, 0]" + "'", str40, "[-1, -1, 86, 86, -1, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, -1, 87, 87, -1, 0]" + "'", str41, "[-1, -1, 87, 87, -1, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, -1, 88, 88, -1, 0]" + "'", str42, "[-1, -1, 88, 88, -1, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, -1, 89, 89, -1, 0]" + "'", str43, "[-1, -1, 89, 89, -1, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, -1, 90, 90, -1, 0]" + "'", str44, "[-1, -1, 90, 90, -1, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, -1, 91, 91, -1, 0]" + "'", str45, "[-1, -1, 91, 91, -1, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, -1, 92, 92, -1, 0]" + "'", str46, "[-1, -1, 92, 92, -1, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, -1, 93, 93, -1, 0]" + "'", str47, "[-1, -1, 93, 93, -1, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, -1, 94, 94, -1, 0]" + "'", str48, "[-1, -1, 94, 94, -1, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, -1, 95, 95, -1, 0]" + "'", str49, "[-1, -1, 95, 95, -1, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, -1, 96, 96, -1, 0]" + "'", str50, "[-1, -1, 96, 96, -1, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, -1, 97, 97, -1, 0]" + "'", str51, "[-1, -1, 97, 97, -1, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, -1, 98, 98, -1, 0]" + "'", str52, "[-1, -1, 98, 98, -1, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, -1, 99, 99, -1, 0]" + "'", str53, "[-1, -1, 99, 99, -1, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, -1, 100, 100, -1, 0]" + "'", str54, "[-1, -1, 100, 100, -1, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, -1, 101, 101, -1, 0]" + "'", str55, "[-1, -1, 101, 101, -1, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, -1, 102, 102, -1, 0]" + "'", str56, "[-1, -1, 102, 102, -1, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, -1, 103, 103, -1, 0]" + "'", str57, "[-1, -1, 103, 103, -1, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, -1, 104, 104, -1, 0]" + "'", str58, "[-1, -1, 104, 104, -1, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, -1, 105, 105, -1, 0]" + "'", str59, "[-1, -1, 105, 105, -1, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, -1, 106, 106, -1, 0]" + "'", str60, "[-1, -1, 106, 106, -1, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, -1, 107, 107, -1, 0]" + "'", str61, "[-1, -1, 107, 107, -1, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, -1, 108, 108, -1, 0]" + "'", str62, "[-1, -1, 108, 108, -1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1974");
        int[] intArray4 = new int[] { (byte) 0, 10, (short) 100, 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass46 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 51, 141, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 101, 97]" + "'", str5, "[0, 11, 101, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 102, 97]" + "'", str6, "[0, 12, 102, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 103, 97]" + "'", str7, "[0, 13, 103, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 104, 97]" + "'", str8, "[0, 14, 104, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 105, 97]" + "'", str9, "[0, 15, 105, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 106, 97]" + "'", str10, "[0, 16, 106, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 107, 97]" + "'", str11, "[0, 17, 107, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 108, 97]" + "'", str12, "[0, 18, 108, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 109, 97]" + "'", str13, "[0, 19, 109, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 110, 97]" + "'", str14, "[0, 20, 110, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 21, 111, 97]" + "'", str15, "[0, 21, 111, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 22, 112, 97]" + "'", str16, "[0, 22, 112, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 23, 113, 97]" + "'", str17, "[0, 23, 113, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 24, 114, 97]" + "'", str18, "[0, 24, 114, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 25, 115, 97]" + "'", str19, "[0, 25, 115, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 26, 116, 97]" + "'", str20, "[0, 26, 116, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 27, 117, 97]" + "'", str21, "[0, 27, 117, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 28, 118, 97]" + "'", str22, "[0, 28, 118, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 29, 119, 97]" + "'", str23, "[0, 29, 119, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 30, 120, 97]" + "'", str24, "[0, 30, 120, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 31, 121, 97]" + "'", str25, "[0, 31, 121, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 122, 97]" + "'", str26, "[0, 32, 122, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 33, 123, 97]" + "'", str27, "[0, 33, 123, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 34, 124, 97]" + "'", str28, "[0, 34, 124, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 125, 97]" + "'", str29, "[0, 35, 125, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 36, 126, 97]" + "'", str30, "[0, 36, 126, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 37, 127, 97]" + "'", str31, "[0, 37, 127, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 38, 128, 97]" + "'", str32, "[0, 38, 128, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 39, 129, 97]" + "'", str33, "[0, 39, 129, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 40, 130, 97]" + "'", str34, "[0, 40, 130, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 41, 131, 97]" + "'", str35, "[0, 41, 131, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 42, 132, 97]" + "'", str36, "[0, 42, 132, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 43, 133, 97]" + "'", str37, "[0, 43, 133, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 44, 134, 97]" + "'", str38, "[0, 44, 134, 97]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 45, 135, 97]" + "'", str39, "[0, 45, 135, 97]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 46, 136, 97]" + "'", str40, "[0, 46, 136, 97]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 47, 137, 97]" + "'", str41, "[0, 47, 137, 97]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 48, 138, 97]" + "'", str42, "[0, 48, 138, 97]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 49, 139, 97]" + "'", str43, "[0, 49, 139, 97]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 50, 140, 97]" + "'", str44, "[0, 50, 140, 97]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 51, 141, 97]" + "'", str45, "[0, 51, 141, 97]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1975");
        int[] intArray3 = new int[] { ' ', 1, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass47 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[36, 4, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 2, -1]" + "'", str4, "[32, 2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 3, -1]" + "'", str5, "[32, 3, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 4, -1]" + "'", str6, "[32, 4, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 5, -1]" + "'", str7, "[32, 5, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 6, -1]" + "'", str8, "[32, 6, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 7, -1]" + "'", str9, "[32, 7, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 8, -1]" + "'", str10, "[32, 8, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 9, -1]" + "'", str11, "[32, 9, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[33, 0, 0]" + "'", str12, "[33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 1, 0]" + "'", str13, "[33, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 2, 0]" + "'", str14, "[33, 2, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 3, 0]" + "'", str15, "[33, 3, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 4, 0]" + "'", str16, "[33, 4, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 5, 0]" + "'", str17, "[33, 5, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 6, 0]" + "'", str18, "[33, 6, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 7, 0]" + "'", str19, "[33, 7, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 8, 0]" + "'", str20, "[33, 8, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 9, 0]" + "'", str21, "[33, 9, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[34, 0, 1]" + "'", str22, "[34, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 1, 1]" + "'", str23, "[34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 2, 1]" + "'", str24, "[34, 2, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 3, 1]" + "'", str25, "[34, 3, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 4, 1]" + "'", str26, "[34, 4, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 5, 1]" + "'", str27, "[34, 5, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 6, 1]" + "'", str28, "[34, 6, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 7, 1]" + "'", str29, "[34, 7, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 8, 1]" + "'", str30, "[34, 8, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 9, 1]" + "'", str31, "[34, 9, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 0, 2]" + "'", str32, "[35, 0, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 2]" + "'", str33, "[35, 1, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 2]" + "'", str34, "[35, 2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 3, 2]" + "'", str35, "[35, 3, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 4, 2]" + "'", str36, "[35, 4, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 5, 2]" + "'", str37, "[35, 5, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 6, 2]" + "'", str38, "[35, 6, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 7, 2]" + "'", str39, "[35, 7, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 8, 2]" + "'", str40, "[35, 8, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 9, 2]" + "'", str41, "[35, 9, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[36, 0, 3]" + "'", str42, "[36, 0, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[36, 1, 3]" + "'", str43, "[36, 1, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 2, 3]" + "'", str44, "[36, 2, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 3, 3]" + "'", str45, "[36, 3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 4, 3]" + "'", str46, "[36, 4, 3]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1976");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass59 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[92]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[87]" + "'", str53, "[87]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[88]" + "'", str54, "[88]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[89]" + "'", str55, "[89]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[90]" + "'", str56, "[90]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[91]" + "'", str57, "[91]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[92]" + "'", str58, "[92]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1977");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass35 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1978");
        int[] intArray3 = new int[] { ' ', 1, (-1) };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass49 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[36, 6, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 2, -1]" + "'", str4, "[32, 2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 3, -1]" + "'", str5, "[32, 3, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 4, -1]" + "'", str6, "[32, 4, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 5, -1]" + "'", str7, "[32, 5, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 6, -1]" + "'", str8, "[32, 6, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 7, -1]" + "'", str9, "[32, 7, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 8, -1]" + "'", str10, "[32, 8, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 9, -1]" + "'", str11, "[32, 9, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[33, 0, 0]" + "'", str12, "[33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[33, 1, 0]" + "'", str13, "[33, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 2, 0]" + "'", str14, "[33, 2, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 3, 0]" + "'", str15, "[33, 3, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 4, 0]" + "'", str16, "[33, 4, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 5, 0]" + "'", str17, "[33, 5, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 6, 0]" + "'", str18, "[33, 6, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 7, 0]" + "'", str19, "[33, 7, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 8, 0]" + "'", str20, "[33, 8, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 9, 0]" + "'", str21, "[33, 9, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[34, 0, 1]" + "'", str22, "[34, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[34, 1, 1]" + "'", str23, "[34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 2, 1]" + "'", str24, "[34, 2, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 3, 1]" + "'", str25, "[34, 3, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 4, 1]" + "'", str26, "[34, 4, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 5, 1]" + "'", str27, "[34, 5, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 6, 1]" + "'", str28, "[34, 6, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 7, 1]" + "'", str29, "[34, 7, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 8, 1]" + "'", str30, "[34, 8, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 9, 1]" + "'", str31, "[34, 9, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 0, 2]" + "'", str32, "[35, 0, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 2]" + "'", str33, "[35, 1, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 2]" + "'", str34, "[35, 2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 3, 2]" + "'", str35, "[35, 3, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 4, 2]" + "'", str36, "[35, 4, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 5, 2]" + "'", str37, "[35, 5, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 6, 2]" + "'", str38, "[35, 6, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 7, 2]" + "'", str39, "[35, 7, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 8, 2]" + "'", str40, "[35, 8, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 9, 2]" + "'", str41, "[35, 9, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[36, 0, 3]" + "'", str42, "[36, 0, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[36, 1, 3]" + "'", str43, "[36, 1, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 2, 3]" + "'", str44, "[36, 2, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 3, 3]" + "'", str45, "[36, 3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 4, 3]" + "'", str46, "[36, 4, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 5, 3]" + "'", str47, "[36, 5, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 6, 3]" + "'", str48, "[36, 6, 3]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1979");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass37 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1980");
        int[] intArray5 = new int[] { (short) 1, ' ', (byte) -1, (short) 100, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass33 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 34, 6, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 32, 0, 100, 100]" + "'", str6, "[1, 32, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 32, 1, 100, 100]" + "'", str7, "[1, 32, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 32, 2, 100, 100]" + "'", str8, "[1, 32, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 32, 3, 100, 100]" + "'", str9, "[1, 32, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 32, 4, 100, 100]" + "'", str10, "[1, 32, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 32, 5, 100, 100]" + "'", str11, "[1, 32, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 32, 6, 100, 100]" + "'", str12, "[1, 32, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 32, 7, 100, 100]" + "'", str13, "[1, 32, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 32, 8, 100, 100]" + "'", str14, "[1, 32, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 32, 9, 100, 100]" + "'", str15, "[1, 32, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 33, 0, 101, 100]" + "'", str16, "[1, 33, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 33, 1, 101, 100]" + "'", str17, "[1, 33, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 33, 2, 101, 100]" + "'", str18, "[1, 33, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 33, 3, 101, 100]" + "'", str19, "[1, 33, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 33, 4, 101, 100]" + "'", str20, "[1, 33, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 33, 5, 101, 100]" + "'", str21, "[1, 33, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 33, 6, 101, 100]" + "'", str22, "[1, 33, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 33, 7, 101, 100]" + "'", str23, "[1, 33, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 33, 8, 101, 100]" + "'", str24, "[1, 33, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 33, 9, 101, 100]" + "'", str25, "[1, 33, 9, 101, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 34, 0, 102, 100]" + "'", str26, "[1, 34, 0, 102, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 34, 1, 102, 100]" + "'", str27, "[1, 34, 1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 2, 102, 100]" + "'", str28, "[1, 34, 2, 102, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 34, 3, 102, 100]" + "'", str29, "[1, 34, 3, 102, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 34, 4, 102, 100]" + "'", str30, "[1, 34, 4, 102, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 34, 5, 102, 100]" + "'", str31, "[1, 34, 5, 102, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 34, 6, 102, 100]" + "'", str32, "[1, 34, 6, 102, 100]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1981");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass70 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 1]" + "'", str62, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1982");
        int[] intArray4 = new int[] { (-1), '4', (byte) 100, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass69 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 116, 164, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 53, 101, 100]" + "'", str5, "[-1, 53, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 54, 102, 100]" + "'", str6, "[-1, 54, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 55, 103, 100]" + "'", str7, "[-1, 55, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 56, 104, 100]" + "'", str8, "[-1, 56, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 57, 105, 100]" + "'", str9, "[-1, 57, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 58, 106, 100]" + "'", str10, "[-1, 58, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 59, 107, 100]" + "'", str11, "[-1, 59, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 60, 108, 100]" + "'", str12, "[-1, 60, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 61, 109, 100]" + "'", str13, "[-1, 61, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 62, 110, 100]" + "'", str14, "[-1, 62, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 63, 111, 100]" + "'", str15, "[-1, 63, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 64, 112, 100]" + "'", str16, "[-1, 64, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 65, 113, 100]" + "'", str17, "[-1, 65, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 66, 114, 100]" + "'", str18, "[-1, 66, 114, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 67, 115, 100]" + "'", str19, "[-1, 67, 115, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 68, 116, 100]" + "'", str20, "[-1, 68, 116, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 69, 117, 100]" + "'", str21, "[-1, 69, 117, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 70, 118, 100]" + "'", str22, "[-1, 70, 118, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 71, 119, 100]" + "'", str23, "[-1, 71, 119, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 72, 120, 100]" + "'", str24, "[-1, 72, 120, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 73, 121, 100]" + "'", str25, "[-1, 73, 121, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 74, 122, 100]" + "'", str26, "[-1, 74, 122, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 75, 123, 100]" + "'", str27, "[-1, 75, 123, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 76, 124, 100]" + "'", str28, "[-1, 76, 124, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 77, 125, 100]" + "'", str29, "[-1, 77, 125, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 78, 126, 100]" + "'", str30, "[-1, 78, 126, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 79, 127, 100]" + "'", str31, "[-1, 79, 127, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 80, 128, 100]" + "'", str32, "[-1, 80, 128, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 81, 129, 100]" + "'", str33, "[-1, 81, 129, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 82, 130, 100]" + "'", str34, "[-1, 82, 130, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 83, 131, 100]" + "'", str35, "[-1, 83, 131, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 84, 132, 100]" + "'", str36, "[-1, 84, 132, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 85, 133, 100]" + "'", str37, "[-1, 85, 133, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 86, 134, 100]" + "'", str38, "[-1, 86, 134, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 87, 135, 100]" + "'", str39, "[-1, 87, 135, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 88, 136, 100]" + "'", str40, "[-1, 88, 136, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 89, 137, 100]" + "'", str41, "[-1, 89, 137, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 90, 138, 100]" + "'", str42, "[-1, 90, 138, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 91, 139, 100]" + "'", str43, "[-1, 91, 139, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 92, 140, 100]" + "'", str44, "[-1, 92, 140, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 93, 141, 100]" + "'", str45, "[-1, 93, 141, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 94, 142, 100]" + "'", str46, "[-1, 94, 142, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 95, 143, 100]" + "'", str47, "[-1, 95, 143, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 96, 144, 100]" + "'", str48, "[-1, 96, 144, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 97, 145, 100]" + "'", str49, "[-1, 97, 145, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 98, 146, 100]" + "'", str50, "[-1, 98, 146, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 99, 147, 100]" + "'", str51, "[-1, 99, 147, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 148, 100]" + "'", str52, "[-1, 100, 148, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 101, 149, 100]" + "'", str53, "[-1, 101, 149, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 102, 150, 100]" + "'", str54, "[-1, 102, 150, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 103, 151, 100]" + "'", str55, "[-1, 103, 151, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 104, 152, 100]" + "'", str56, "[-1, 104, 152, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 105, 153, 100]" + "'", str57, "[-1, 105, 153, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 106, 154, 100]" + "'", str58, "[-1, 106, 154, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 107, 155, 100]" + "'", str59, "[-1, 107, 155, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 108, 156, 100]" + "'", str60, "[-1, 108, 156, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 109, 157, 100]" + "'", str61, "[-1, 109, 157, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 110, 158, 100]" + "'", str62, "[-1, 110, 158, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 111, 159, 100]" + "'", str63, "[-1, 111, 159, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[-1, 112, 160, 100]" + "'", str64, "[-1, 112, 160, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[-1, 113, 161, 100]" + "'", str65, "[-1, 113, 161, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[-1, 114, 162, 100]" + "'", str66, "[-1, 114, 162, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[-1, 115, 163, 100]" + "'", str67, "[-1, 115, 163, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[-1, 116, 164, 100]" + "'", str68, "[-1, 116, 164, 100]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1983");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 10, (short) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass50 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 54, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, -1, 11, 100, -1]" + "'", str6, "[100, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, -1, 12, 100, -1]" + "'", str7, "[100, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, -1, 13, 100, -1]" + "'", str8, "[100, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, -1, 14, 100, -1]" + "'", str9, "[100, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, -1, 15, 100, -1]" + "'", str10, "[100, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, -1, 16, 100, -1]" + "'", str11, "[100, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, -1, 17, 100, -1]" + "'", str12, "[100, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, -1, 18, 100, -1]" + "'", str13, "[100, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, -1, 19, 100, -1]" + "'", str14, "[100, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, -1, 20, 100, -1]" + "'", str15, "[100, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, -1, 21, 100, -1]" + "'", str16, "[100, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, -1, 22, 100, -1]" + "'", str17, "[100, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, -1, 23, 100, -1]" + "'", str18, "[100, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, -1, 24, 100, -1]" + "'", str19, "[100, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, -1, 25, 100, -1]" + "'", str20, "[100, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, -1, 26, 100, -1]" + "'", str21, "[100, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, -1, 27, 100, -1]" + "'", str22, "[100, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, -1, 28, 100, -1]" + "'", str23, "[100, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, -1, 29, 100, -1]" + "'", str24, "[100, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, -1, 30, 100, -1]" + "'", str25, "[100, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, -1, 31, 100, -1]" + "'", str26, "[100, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, -1, 32, 100, -1]" + "'", str27, "[100, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, -1, 33, 100, -1]" + "'", str28, "[100, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, -1, 34, 100, -1]" + "'", str29, "[100, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, -1, 35, 100, -1]" + "'", str30, "[100, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, -1, 36, 100, -1]" + "'", str31, "[100, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, -1, 37, 100, -1]" + "'", str32, "[100, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, -1, 38, 100, -1]" + "'", str33, "[100, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, -1, 39, 100, -1]" + "'", str34, "[100, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, -1, 40, 100, -1]" + "'", str35, "[100, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, -1, 41, 100, -1]" + "'", str36, "[100, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, -1, 42, 100, -1]" + "'", str37, "[100, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, -1, 43, 100, -1]" + "'", str38, "[100, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, -1, 44, 100, -1]" + "'", str39, "[100, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, -1, 45, 100, -1]" + "'", str40, "[100, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, -1, 46, 100, -1]" + "'", str41, "[100, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, -1, 47, 100, -1]" + "'", str42, "[100, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, -1, 48, 100, -1]" + "'", str43, "[100, -1, 48, 100, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, -1, 49, 100, -1]" + "'", str44, "[100, -1, 49, 100, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, -1, 50, 100, -1]" + "'", str45, "[100, -1, 50, 100, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, -1, 51, 100, -1]" + "'", str46, "[100, -1, 51, 100, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, -1, 52, 100, -1]" + "'", str47, "[100, -1, 52, 100, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, -1, 53, 100, -1]" + "'", str48, "[100, -1, 53, 100, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, -1, 54, 100, -1]" + "'", str49, "[100, -1, 54, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1984");
        int[] intArray6 = new int[] { '#', (byte) 0, 10, (-1), '#', (byte) 1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass41 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 3, 3, 3, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 0, 11, 0, 35, 1]" + "'", str7, "[35, 0, 11, 0, 35, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 0, 12, 1, 35, 1]" + "'", str8, "[35, 0, 12, 1, 35, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 0, 13, 2, 35, 1]" + "'", str9, "[35, 0, 13, 2, 35, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 0, 14, 3, 35, 1]" + "'", str10, "[35, 0, 14, 3, 35, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 0, 15, 4, 35, 1]" + "'", str11, "[35, 0, 15, 4, 35, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 0, 16, 5, 35, 1]" + "'", str12, "[35, 0, 16, 5, 35, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 0, 17, 6, 35, 1]" + "'", str13, "[35, 0, 17, 6, 35, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 0, 18, 7, 35, 1]" + "'", str14, "[35, 0, 18, 7, 35, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 0, 19, 8, 35, 1]" + "'", str15, "[35, 0, 19, 8, 35, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 0, 20, 9, 35, 1]" + "'", str16, "[35, 0, 20, 9, 35, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 1, 0, 0, 36, 1]" + "'", str17, "[35, 1, 0, 0, 36, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 1, 1, 1, 36, 1]" + "'", str18, "[35, 1, 1, 1, 36, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 1, 2, 2, 36, 1]" + "'", str19, "[35, 1, 2, 2, 36, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 1, 3, 3, 36, 1]" + "'", str20, "[35, 1, 3, 3, 36, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 1, 4, 4, 36, 1]" + "'", str21, "[35, 1, 4, 4, 36, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 1, 5, 5, 36, 1]" + "'", str22, "[35, 1, 5, 5, 36, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 1, 6, 6, 36, 1]" + "'", str23, "[35, 1, 6, 6, 36, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 1, 7, 7, 36, 1]" + "'", str24, "[35, 1, 7, 7, 36, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 1, 8, 8, 36, 1]" + "'", str25, "[35, 1, 8, 8, 36, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 1, 9, 9, 36, 1]" + "'", str26, "[35, 1, 9, 9, 36, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 2, 0, 0, 37, 1]" + "'", str27, "[35, 2, 0, 0, 37, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 2, 1, 1, 37, 1]" + "'", str28, "[35, 2, 1, 1, 37, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 2, 2, 2, 37, 1]" + "'", str29, "[35, 2, 2, 2, 37, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 2, 3, 3, 37, 1]" + "'", str30, "[35, 2, 3, 3, 37, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 2, 4, 4, 37, 1]" + "'", str31, "[35, 2, 4, 4, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 2, 5, 5, 37, 1]" + "'", str32, "[35, 2, 5, 5, 37, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 2, 6, 6, 37, 1]" + "'", str33, "[35, 2, 6, 6, 37, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 7, 7, 37, 1]" + "'", str34, "[35, 2, 7, 7, 37, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 2, 8, 8, 37, 1]" + "'", str35, "[35, 2, 8, 8, 37, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 9, 9, 37, 1]" + "'", str36, "[35, 2, 9, 9, 37, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 0, 0, 38, 1]" + "'", str37, "[35, 3, 0, 0, 38, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 3, 1, 1, 38, 1]" + "'", str38, "[35, 3, 1, 1, 38, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 3, 2, 2, 38, 1]" + "'", str39, "[35, 3, 2, 2, 38, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 3, 3, 3, 38, 1]" + "'", str40, "[35, 3, 3, 3, 38, 1]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1985");
        int[] intArray4 = new int[] { 'a', 100, (byte) 0, '4' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass68 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[103, 3, 3, 58]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 101, 1, 52]" + "'", str5, "[97, 101, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 102, 2, 52]" + "'", str6, "[97, 102, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 103, 3, 52]" + "'", str7, "[97, 103, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 104, 4, 52]" + "'", str8, "[97, 104, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 105, 5, 52]" + "'", str9, "[97, 105, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 106, 6, 52]" + "'", str10, "[97, 106, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 107, 7, 52]" + "'", str11, "[97, 107, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 108, 8, 52]" + "'", str12, "[97, 108, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 109, 9, 52]" + "'", str13, "[97, 109, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[98, 0, 0, 53]" + "'", str14, "[98, 0, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 1, 1, 53]" + "'", str15, "[98, 1, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 2, 2, 53]" + "'", str16, "[98, 2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 3, 3, 53]" + "'", str17, "[98, 3, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 4, 4, 53]" + "'", str18, "[98, 4, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 5, 5, 53]" + "'", str19, "[98, 5, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 6, 6, 53]" + "'", str20, "[98, 6, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 7, 7, 53]" + "'", str21, "[98, 7, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 8, 8, 53]" + "'", str22, "[98, 8, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 9, 9, 53]" + "'", str23, "[98, 9, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[99, 0, 0, 54]" + "'", str24, "[99, 0, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 1, 1, 54]" + "'", str25, "[99, 1, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 2, 2, 54]" + "'", str26, "[99, 2, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 3, 3, 54]" + "'", str27, "[99, 3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 4, 4, 54]" + "'", str28, "[99, 4, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 5, 5, 54]" + "'", str29, "[99, 5, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 6, 6, 54]" + "'", str30, "[99, 6, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 7, 7, 54]" + "'", str31, "[99, 7, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 8, 8, 54]" + "'", str32, "[99, 8, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 9, 9, 54]" + "'", str33, "[99, 9, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 0, 55]" + "'", str34, "[100, 0, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 1, 1, 55]" + "'", str35, "[100, 1, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 2, 2, 55]" + "'", str36, "[100, 2, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 3, 3, 55]" + "'", str37, "[100, 3, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 4, 4, 55]" + "'", str38, "[100, 4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 5, 5, 55]" + "'", str39, "[100, 5, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 6, 6, 55]" + "'", str40, "[100, 6, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 7, 7, 55]" + "'", str41, "[100, 7, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 8, 8, 55]" + "'", str42, "[100, 8, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 9, 9, 55]" + "'", str43, "[100, 9, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[101, 0, 0, 56]" + "'", str44, "[101, 0, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 1, 1, 56]" + "'", str45, "[101, 1, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 2, 2, 56]" + "'", str46, "[101, 2, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 3, 3, 56]" + "'", str47, "[101, 3, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 4, 4, 56]" + "'", str48, "[101, 4, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 5, 5, 56]" + "'", str49, "[101, 5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 6, 6, 56]" + "'", str50, "[101, 6, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 7, 7, 56]" + "'", str51, "[101, 7, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 8, 8, 56]" + "'", str52, "[101, 8, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 9, 9, 56]" + "'", str53, "[101, 9, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[102, 0, 0, 57]" + "'", str54, "[102, 0, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 1, 1, 57]" + "'", str55, "[102, 1, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 2, 2, 57]" + "'", str56, "[102, 2, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 3, 3, 57]" + "'", str57, "[102, 3, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 4, 4, 57]" + "'", str58, "[102, 4, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 5, 5, 57]" + "'", str59, "[102, 5, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 6, 6, 57]" + "'", str60, "[102, 6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 7, 7, 57]" + "'", str61, "[102, 7, 7, 57]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[102, 8, 8, 57]" + "'", str62, "[102, 8, 8, 57]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[102, 9, 9, 57]" + "'", str63, "[102, 9, 9, 57]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[103, 0, 0, 58]" + "'", str64, "[103, 0, 0, 58]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[103, 1, 1, 58]" + "'", str65, "[103, 1, 1, 58]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[103, 2, 2, 58]" + "'", str66, "[103, 2, 2, 58]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[103, 3, 3, 58]" + "'", str67, "[103, 3, 3, 58]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1986");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass15 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 7, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 10, 5, 106, 100, 52]" + "'", str12, "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 10, 6, 107, 100, 52]" + "'", str13, "[1, 10, 6, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 10, 7, 108, 100, 52]" + "'", str14, "[1, 10, 7, 108, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1987");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass72 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 1]" + "'", str22, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 1]" + "'", str32, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 1]" + "'", str42, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 1]" + "'", str52, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 1]" + "'", str62, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1988");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass17 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 44, 112, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 37, 105, 1]" + "'", str9, "[0, 37, 105, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 38, 106, 1]" + "'", str10, "[0, 38, 106, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 39, 107, 1]" + "'", str11, "[0, 39, 107, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 40, 108, 1]" + "'", str12, "[0, 40, 108, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 41, 109, 1]" + "'", str13, "[0, 41, 109, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 42, 110, 1]" + "'", str14, "[0, 42, 110, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 43, 111, 1]" + "'", str15, "[0, 43, 111, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 44, 112, 1]" + "'", str16, "[0, 44, 112, 1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1989");
        int[] intArray6 = new int[] { '#', (byte) 0, 10, (-1), '#', (byte) 1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass44 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 3, 6, 6, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 0, 11, 0, 35, 1]" + "'", str7, "[35, 0, 11, 0, 35, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 0, 12, 1, 35, 1]" + "'", str8, "[35, 0, 12, 1, 35, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 0, 13, 2, 35, 1]" + "'", str9, "[35, 0, 13, 2, 35, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 0, 14, 3, 35, 1]" + "'", str10, "[35, 0, 14, 3, 35, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 0, 15, 4, 35, 1]" + "'", str11, "[35, 0, 15, 4, 35, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 0, 16, 5, 35, 1]" + "'", str12, "[35, 0, 16, 5, 35, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 0, 17, 6, 35, 1]" + "'", str13, "[35, 0, 17, 6, 35, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 0, 18, 7, 35, 1]" + "'", str14, "[35, 0, 18, 7, 35, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 0, 19, 8, 35, 1]" + "'", str15, "[35, 0, 19, 8, 35, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 0, 20, 9, 35, 1]" + "'", str16, "[35, 0, 20, 9, 35, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 1, 0, 0, 36, 1]" + "'", str17, "[35, 1, 0, 0, 36, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 1, 1, 1, 36, 1]" + "'", str18, "[35, 1, 1, 1, 36, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 1, 2, 2, 36, 1]" + "'", str19, "[35, 1, 2, 2, 36, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 1, 3, 3, 36, 1]" + "'", str20, "[35, 1, 3, 3, 36, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 1, 4, 4, 36, 1]" + "'", str21, "[35, 1, 4, 4, 36, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 1, 5, 5, 36, 1]" + "'", str22, "[35, 1, 5, 5, 36, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 1, 6, 6, 36, 1]" + "'", str23, "[35, 1, 6, 6, 36, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 1, 7, 7, 36, 1]" + "'", str24, "[35, 1, 7, 7, 36, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 1, 8, 8, 36, 1]" + "'", str25, "[35, 1, 8, 8, 36, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 1, 9, 9, 36, 1]" + "'", str26, "[35, 1, 9, 9, 36, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 2, 0, 0, 37, 1]" + "'", str27, "[35, 2, 0, 0, 37, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 2, 1, 1, 37, 1]" + "'", str28, "[35, 2, 1, 1, 37, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 2, 2, 2, 37, 1]" + "'", str29, "[35, 2, 2, 2, 37, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 2, 3, 3, 37, 1]" + "'", str30, "[35, 2, 3, 3, 37, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 2, 4, 4, 37, 1]" + "'", str31, "[35, 2, 4, 4, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 2, 5, 5, 37, 1]" + "'", str32, "[35, 2, 5, 5, 37, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 2, 6, 6, 37, 1]" + "'", str33, "[35, 2, 6, 6, 37, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 2, 7, 7, 37, 1]" + "'", str34, "[35, 2, 7, 7, 37, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 2, 8, 8, 37, 1]" + "'", str35, "[35, 2, 8, 8, 37, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 9, 9, 37, 1]" + "'", str36, "[35, 2, 9, 9, 37, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 0, 0, 38, 1]" + "'", str37, "[35, 3, 0, 0, 38, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 3, 1, 1, 38, 1]" + "'", str38, "[35, 3, 1, 1, 38, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 3, 2, 2, 38, 1]" + "'", str39, "[35, 3, 2, 2, 38, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 3, 3, 3, 38, 1]" + "'", str40, "[35, 3, 3, 3, 38, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 3, 4, 4, 38, 1]" + "'", str41, "[35, 3, 4, 4, 38, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 3, 5, 5, 38, 1]" + "'", str42, "[35, 3, 5, 5, 38, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 3, 6, 6, 38, 1]" + "'", str43, "[35, 3, 6, 6, 38, 1]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1990");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass38 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1991");
        int[] intArray3 = new int[] { 100, 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass35 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[103, 2, 3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 2, 0]" + "'", str4, "[100, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 3, 0]" + "'", str5, "[100, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 4, 0]" + "'", str6, "[100, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 5, 0]" + "'", str7, "[100, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 6, 0]" + "'", str8, "[100, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 7, 0]" + "'", str9, "[100, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 8, 0]" + "'", str10, "[100, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 9, 0]" + "'", str11, "[100, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[101, 0, 1]" + "'", str12, "[101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 1, 1]" + "'", str13, "[101, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 2, 1]" + "'", str14, "[101, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 3, 1]" + "'", str15, "[101, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 4, 1]" + "'", str16, "[101, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 5, 1]" + "'", str17, "[101, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 6, 1]" + "'", str18, "[101, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 7, 1]" + "'", str19, "[101, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 8, 1]" + "'", str20, "[101, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 9, 1]" + "'", str21, "[101, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[102, 0, 2]" + "'", str22, "[102, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 1, 2]" + "'", str23, "[102, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 2, 2]" + "'", str24, "[102, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 3, 2]" + "'", str25, "[102, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 4, 2]" + "'", str26, "[102, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 5, 2]" + "'", str27, "[102, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 6, 2]" + "'", str28, "[102, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[102, 7, 2]" + "'", str29, "[102, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[102, 8, 2]" + "'", str30, "[102, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[102, 9, 2]" + "'", str31, "[102, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[103, 0, 3]" + "'", str32, "[103, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[103, 1, 3]" + "'", str33, "[103, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[103, 2, 3]" + "'", str34, "[103, 2, 3]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1992");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass36 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[3, 3]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1993");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass31 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 32, 29, 10, -1]" + "'", str24, "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 32, 30, 10, -1]" + "'", str25, "[10, 32, 30, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 32, 31, 10, -1]" + "'", str26, "[10, 32, 31, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 32, 32, 10, -1]" + "'", str27, "[10, 32, 32, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 32, 33, 10, -1]" + "'", str28, "[10, 32, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 32, 34, 10, -1]" + "'", str29, "[10, 32, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 32, 35, 10, -1]" + "'", str30, "[10, 32, 35, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1994");
        int[] intArray4 = new int[] { (short) 1, (byte) -1, 10, (short) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass66 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 60, 71, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 0, 11, 10]" + "'", str5, "[1, 0, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 12, 10]" + "'", str6, "[1, 1, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 2, 13, 10]" + "'", str7, "[1, 2, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 3, 14, 10]" + "'", str8, "[1, 3, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 4, 15, 10]" + "'", str9, "[1, 4, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 5, 16, 10]" + "'", str10, "[1, 5, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 6, 17, 10]" + "'", str11, "[1, 6, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 7, 18, 10]" + "'", str12, "[1, 7, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 8, 19, 10]" + "'", str13, "[1, 8, 19, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 9, 20, 10]" + "'", str14, "[1, 9, 20, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 21, 10]" + "'", str15, "[1, 10, 21, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 11, 22, 10]" + "'", str16, "[1, 11, 22, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 12, 23, 10]" + "'", str17, "[1, 12, 23, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 13, 24, 10]" + "'", str18, "[1, 13, 24, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 14, 25, 10]" + "'", str19, "[1, 14, 25, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 15, 26, 10]" + "'", str20, "[1, 15, 26, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 16, 27, 10]" + "'", str21, "[1, 16, 27, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 17, 28, 10]" + "'", str22, "[1, 17, 28, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 18, 29, 10]" + "'", str23, "[1, 18, 29, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 19, 30, 10]" + "'", str24, "[1, 19, 30, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 20, 31, 10]" + "'", str25, "[1, 20, 31, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 21, 32, 10]" + "'", str26, "[1, 21, 32, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 22, 33, 10]" + "'", str27, "[1, 22, 33, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 23, 34, 10]" + "'", str28, "[1, 23, 34, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 24, 35, 10]" + "'", str29, "[1, 24, 35, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 25, 36, 10]" + "'", str30, "[1, 25, 36, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 26, 37, 10]" + "'", str31, "[1, 26, 37, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 27, 38, 10]" + "'", str32, "[1, 27, 38, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 28, 39, 10]" + "'", str33, "[1, 28, 39, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 29, 40, 10]" + "'", str34, "[1, 29, 40, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 30, 41, 10]" + "'", str35, "[1, 30, 41, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 31, 42, 10]" + "'", str36, "[1, 31, 42, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 32, 43, 10]" + "'", str37, "[1, 32, 43, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 33, 44, 10]" + "'", str38, "[1, 33, 44, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 34, 45, 10]" + "'", str39, "[1, 34, 45, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 46, 10]" + "'", str40, "[1, 35, 46, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 36, 47, 10]" + "'", str41, "[1, 36, 47, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 37, 48, 10]" + "'", str42, "[1, 37, 48, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 38, 49, 10]" + "'", str43, "[1, 38, 49, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 39, 50, 10]" + "'", str44, "[1, 39, 50, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 40, 51, 10]" + "'", str45, "[1, 40, 51, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 41, 52, 10]" + "'", str46, "[1, 41, 52, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 42, 53, 10]" + "'", str47, "[1, 42, 53, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 43, 54, 10]" + "'", str48, "[1, 43, 54, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 44, 55, 10]" + "'", str49, "[1, 44, 55, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 45, 56, 10]" + "'", str50, "[1, 45, 56, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 46, 57, 10]" + "'", str51, "[1, 46, 57, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 47, 58, 10]" + "'", str52, "[1, 47, 58, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 48, 59, 10]" + "'", str53, "[1, 48, 59, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 49, 60, 10]" + "'", str54, "[1, 49, 60, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 50, 61, 10]" + "'", str55, "[1, 50, 61, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 51, 62, 10]" + "'", str56, "[1, 51, 62, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 52, 63, 10]" + "'", str57, "[1, 52, 63, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 53, 64, 10]" + "'", str58, "[1, 53, 64, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 54, 65, 10]" + "'", str59, "[1, 54, 65, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 55, 66, 10]" + "'", str60, "[1, 55, 66, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 56, 67, 10]" + "'", str61, "[1, 56, 67, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 57, 68, 10]" + "'", str62, "[1, 57, 68, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 58, 69, 10]" + "'", str63, "[1, 58, 69, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 59, 70, 10]" + "'", str64, "[1, 59, 70, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 60, 71, 10]" + "'", str65, "[1, 60, 71, 10]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1995");
        int[] intArray5 = new int[] { (short) 1, ' ', (byte) -1, (short) 100, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass32 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 34, 5, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 32, 0, 100, 100]" + "'", str6, "[1, 32, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 32, 1, 100, 100]" + "'", str7, "[1, 32, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 32, 2, 100, 100]" + "'", str8, "[1, 32, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 32, 3, 100, 100]" + "'", str9, "[1, 32, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 32, 4, 100, 100]" + "'", str10, "[1, 32, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 32, 5, 100, 100]" + "'", str11, "[1, 32, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 32, 6, 100, 100]" + "'", str12, "[1, 32, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 32, 7, 100, 100]" + "'", str13, "[1, 32, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 32, 8, 100, 100]" + "'", str14, "[1, 32, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 32, 9, 100, 100]" + "'", str15, "[1, 32, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 33, 0, 101, 100]" + "'", str16, "[1, 33, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 33, 1, 101, 100]" + "'", str17, "[1, 33, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 33, 2, 101, 100]" + "'", str18, "[1, 33, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 33, 3, 101, 100]" + "'", str19, "[1, 33, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 33, 4, 101, 100]" + "'", str20, "[1, 33, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 33, 5, 101, 100]" + "'", str21, "[1, 33, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 33, 6, 101, 100]" + "'", str22, "[1, 33, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 33, 7, 101, 100]" + "'", str23, "[1, 33, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 33, 8, 101, 100]" + "'", str24, "[1, 33, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 33, 9, 101, 100]" + "'", str25, "[1, 33, 9, 101, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 34, 0, 102, 100]" + "'", str26, "[1, 34, 0, 102, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 34, 1, 102, 100]" + "'", str27, "[1, 34, 1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 2, 102, 100]" + "'", str28, "[1, 34, 2, 102, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 34, 3, 102, 100]" + "'", str29, "[1, 34, 3, 102, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 34, 4, 102, 100]" + "'", str30, "[1, 34, 4, 102, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 34, 5, 102, 100]" + "'", str31, "[1, 34, 5, 102, 100]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1996");
        int[] intArray3 = new int[] { (short) 100, (byte) 0, (short) 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass8 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 4, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 1, 1]" + "'", str4, "[100, 1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 2, 1]" + "'", str5, "[100, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 3, 1]" + "'", str6, "[100, 3, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 4, 1]" + "'", str7, "[100, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1997");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass16 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 43, 111, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 37, 105, 1]" + "'", str9, "[0, 37, 105, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 38, 106, 1]" + "'", str10, "[0, 38, 106, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 39, 107, 1]" + "'", str11, "[0, 39, 107, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 40, 108, 1]" + "'", str12, "[0, 40, 108, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 41, 109, 1]" + "'", str13, "[0, 41, 109, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 42, 110, 1]" + "'", str14, "[0, 42, 110, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 43, 111, 1]" + "'", str15, "[0, 43, 111, 1]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1998");
        int[] intArray4 = new int[] { (-1), '4', (byte) 100, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass64 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 111, 159, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 53, 101, 100]" + "'", str5, "[-1, 53, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 54, 102, 100]" + "'", str6, "[-1, 54, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 55, 103, 100]" + "'", str7, "[-1, 55, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 56, 104, 100]" + "'", str8, "[-1, 56, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 57, 105, 100]" + "'", str9, "[-1, 57, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 58, 106, 100]" + "'", str10, "[-1, 58, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 59, 107, 100]" + "'", str11, "[-1, 59, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 60, 108, 100]" + "'", str12, "[-1, 60, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 61, 109, 100]" + "'", str13, "[-1, 61, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 62, 110, 100]" + "'", str14, "[-1, 62, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 63, 111, 100]" + "'", str15, "[-1, 63, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 64, 112, 100]" + "'", str16, "[-1, 64, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 65, 113, 100]" + "'", str17, "[-1, 65, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 66, 114, 100]" + "'", str18, "[-1, 66, 114, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 67, 115, 100]" + "'", str19, "[-1, 67, 115, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 68, 116, 100]" + "'", str20, "[-1, 68, 116, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 69, 117, 100]" + "'", str21, "[-1, 69, 117, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 70, 118, 100]" + "'", str22, "[-1, 70, 118, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 71, 119, 100]" + "'", str23, "[-1, 71, 119, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 72, 120, 100]" + "'", str24, "[-1, 72, 120, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 73, 121, 100]" + "'", str25, "[-1, 73, 121, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 74, 122, 100]" + "'", str26, "[-1, 74, 122, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 75, 123, 100]" + "'", str27, "[-1, 75, 123, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 76, 124, 100]" + "'", str28, "[-1, 76, 124, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 77, 125, 100]" + "'", str29, "[-1, 77, 125, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 78, 126, 100]" + "'", str30, "[-1, 78, 126, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 79, 127, 100]" + "'", str31, "[-1, 79, 127, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 80, 128, 100]" + "'", str32, "[-1, 80, 128, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 81, 129, 100]" + "'", str33, "[-1, 81, 129, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 82, 130, 100]" + "'", str34, "[-1, 82, 130, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 83, 131, 100]" + "'", str35, "[-1, 83, 131, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 84, 132, 100]" + "'", str36, "[-1, 84, 132, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 85, 133, 100]" + "'", str37, "[-1, 85, 133, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 86, 134, 100]" + "'", str38, "[-1, 86, 134, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 87, 135, 100]" + "'", str39, "[-1, 87, 135, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 88, 136, 100]" + "'", str40, "[-1, 88, 136, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 89, 137, 100]" + "'", str41, "[-1, 89, 137, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 90, 138, 100]" + "'", str42, "[-1, 90, 138, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 91, 139, 100]" + "'", str43, "[-1, 91, 139, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 92, 140, 100]" + "'", str44, "[-1, 92, 140, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 93, 141, 100]" + "'", str45, "[-1, 93, 141, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 94, 142, 100]" + "'", str46, "[-1, 94, 142, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 95, 143, 100]" + "'", str47, "[-1, 95, 143, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 96, 144, 100]" + "'", str48, "[-1, 96, 144, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 97, 145, 100]" + "'", str49, "[-1, 97, 145, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 98, 146, 100]" + "'", str50, "[-1, 98, 146, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 99, 147, 100]" + "'", str51, "[-1, 99, 147, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 148, 100]" + "'", str52, "[-1, 100, 148, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 101, 149, 100]" + "'", str53, "[-1, 101, 149, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 102, 150, 100]" + "'", str54, "[-1, 102, 150, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 103, 151, 100]" + "'", str55, "[-1, 103, 151, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 104, 152, 100]" + "'", str56, "[-1, 104, 152, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 105, 153, 100]" + "'", str57, "[-1, 105, 153, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 106, 154, 100]" + "'", str58, "[-1, 106, 154, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 107, 155, 100]" + "'", str59, "[-1, 107, 155, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 108, 156, 100]" + "'", str60, "[-1, 108, 156, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 109, 157, 100]" + "'", str61, "[-1, 109, 157, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 110, 158, 100]" + "'", str62, "[-1, 110, 158, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 111, 159, 100]" + "'", str63, "[-1, 111, 159, 100]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test1999");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass28 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 5, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 7, 1]" + "'", str19, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 8, 1]" + "'", str20, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 9, 1]" + "'", str21, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 0, 2]" + "'", str22, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 1, 2]" + "'", str23, "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2, 2]" + "'", str24, "[2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 3, 2]" + "'", str25, "[2, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 4, 2]" + "'", str26, "[2, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 5, 2]" + "'", str27, "[2, 5, 2]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy3.test2000");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass26 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 3, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 7, 1]" + "'", str19, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 8, 1]" + "'", str20, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 9, 1]" + "'", str21, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 0, 2]" + "'", str22, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 1, 2]" + "'", str23, "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2, 2]" + "'", str24, "[2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 3, 2]" + "'", str25, "[2, 3, 2]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }
}

