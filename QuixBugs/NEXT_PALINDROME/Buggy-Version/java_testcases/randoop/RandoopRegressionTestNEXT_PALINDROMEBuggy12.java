import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RandoopRegressionTestNEXT_PALINDROMEBuggy12 {

    public static boolean debug = false;

    @Test
    public void test6001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6001");
        int[] intArray1 = new int[] { (byte) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass12 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 1]" + "'", str10, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test6002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6002");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass89 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7]" + "'", str58, "[7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8]" + "'", str59, "[8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9]" + "'", str60, "[9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 1]" + "'", str61, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1]" + "'", str62, "[1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[2]" + "'", str63, "[2]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[3]" + "'", str64, "[3]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[4]" + "'", str65, "[4]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5]" + "'", str66, "[5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6]" + "'", str67, "[6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7]" + "'", str68, "[7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[8]" + "'", str69, "[8]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[9]" + "'", str70, "[9]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 1]" + "'", str71, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1]" + "'", str72, "[1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[2]" + "'", str73, "[2]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[3]" + "'", str74, "[3]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[4]" + "'", str75, "[4]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[5]" + "'", str76, "[5]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6]" + "'", str77, "[6]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7]" + "'", str78, "[7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8]" + "'", str79, "[8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[9]" + "'", str80, "[9]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 1]" + "'", str81, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1]" + "'", str82, "[1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[2]" + "'", str83, "[2]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[3]" + "'", str84, "[3]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[4]" + "'", str85, "[4]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[5]" + "'", str86, "[5]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[6]" + "'", str87, "[6]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[7]" + "'", str88, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test6003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6003");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass69 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 6]" + "'", str7, "[15, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 7]" + "'", str8, "[16, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 8]" + "'", str9, "[17, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 9]" + "'", str10, "[18, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 0, 1]" + "'", str21, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 0, 1]" + "'", str31, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 3]" + "'", str34, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 4]" + "'", str35, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5, 5]" + "'", str36, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6, 6]" + "'", str37, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7, 7]" + "'", str38, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8, 8]" + "'", str39, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9, 9]" + "'", str40, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 0, 1]" + "'", str41, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 2]" + "'", str43, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 3]" + "'", str44, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 4]" + "'", str45, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 5]" + "'", str46, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6, 6]" + "'", str47, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7, 7]" + "'", str48, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8, 8]" + "'", str49, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9, 9]" + "'", str50, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 0, 1]" + "'", str51, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2, 2]" + "'", str53, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3, 3]" + "'", str54, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 4]" + "'", str55, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 5]" + "'", str56, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 6]" + "'", str57, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7, 7]" + "'", str58, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8, 8]" + "'", str59, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9, 9]" + "'", str60, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 0, 1]" + "'", str61, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[2, 2]" + "'", str63, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[3, 3]" + "'", str64, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[4, 4]" + "'", str65, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 5]" + "'", str66, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 6]" + "'", str67, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 7]" + "'", str68, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test6004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6004");
        int[] intArray4 = new int[] { 100, '#', 0, 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass16 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[101, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 36, 1, 1]" + "'", str5, "[100, 36, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 37, 2, 1]" + "'", str6, "[100, 37, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 38, 3, 1]" + "'", str7, "[100, 38, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 39, 4, 1]" + "'", str8, "[100, 39, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 40, 5, 1]" + "'", str9, "[100, 40, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 41, 6, 1]" + "'", str10, "[100, 41, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 42, 7, 1]" + "'", str11, "[100, 42, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 43, 8, 1]" + "'", str12, "[100, 43, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 44, 9, 1]" + "'", str13, "[100, 44, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 0, 0, 2]" + "'", str14, "[101, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 1, 1, 2]" + "'", str15, "[101, 1, 1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test6005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6005");
        int[] intArray4 = new int[] { '4', 0, (short) -1, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass37 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[55, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 1, 0, 0]" + "'", str5, "[52, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 2, 1, 0]" + "'", str6, "[52, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 3, 2, 0]" + "'", str7, "[52, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 4, 3, 0]" + "'", str8, "[52, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 5, 4, 0]" + "'", str9, "[52, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 6, 5, 0]" + "'", str10, "[52, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 7, 6, 0]" + "'", str11, "[52, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 8, 7, 0]" + "'", str12, "[52, 8, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 9, 8, 0]" + "'", str13, "[52, 9, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 10, 9, 0]" + "'", str14, "[52, 10, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 0, 0, 1]" + "'", str15, "[53, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 1, 1, 1]" + "'", str16, "[53, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 2, 2, 1]" + "'", str17, "[53, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 3, 3, 1]" + "'", str18, "[53, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 4, 4, 1]" + "'", str19, "[53, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 5, 5, 1]" + "'", str20, "[53, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 6, 6, 1]" + "'", str21, "[53, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 7, 7, 1]" + "'", str22, "[53, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[53, 8, 8, 1]" + "'", str23, "[53, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[53, 9, 9, 1]" + "'", str24, "[53, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 0, 0, 2]" + "'", str25, "[54, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 1, 1, 2]" + "'", str26, "[54, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[54, 2, 2, 2]" + "'", str27, "[54, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[54, 3, 3, 2]" + "'", str28, "[54, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[54, 4, 4, 2]" + "'", str29, "[54, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[54, 5, 5, 2]" + "'", str30, "[54, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[54, 6, 6, 2]" + "'", str31, "[54, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[54, 7, 7, 2]" + "'", str32, "[54, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[54, 8, 8, 2]" + "'", str33, "[54, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[54, 9, 9, 2]" + "'", str34, "[54, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[55, 0, 0, 3]" + "'", str35, "[55, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[55, 1, 1, 3]" + "'", str36, "[55, 1, 1, 3]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test6006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6006");
        int[] intArray3 = new int[] { (short) 0, '4', (byte) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass12 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 60, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 53, 10]" + "'", str4, "[0, 53, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 54, 10]" + "'", str5, "[0, 54, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 55, 10]" + "'", str6, "[0, 55, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 56, 10]" + "'", str7, "[0, 56, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 57, 10]" + "'", str8, "[0, 57, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 58, 10]" + "'", str9, "[0, 58, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 59, 10]" + "'", str10, "[0, 59, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 60, 10]" + "'", str11, "[0, 60, 10]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test6007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6007");
        int[] intArray2 = new int[] { ' ', (-1) };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass29 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[5, 5]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[33, 0]" + "'", str3, "[33, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[34, 1]" + "'", str4, "[34, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 2]" + "'", str5, "[35, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[36, 3]" + "'", str6, "[36, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[37, 4]" + "'", str7, "[37, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[38, 5]" + "'", str8, "[38, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[39, 6]" + "'", str9, "[39, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[40, 7]" + "'", str10, "[40, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[41, 8]" + "'", str11, "[41, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[42, 9]" + "'", str12, "[42, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 1]" + "'", str13, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 0, 1]" + "'", str23, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test6008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6008");
        int[] intArray5 = new int[] { (short) 100, (byte) 10, (byte) 100, 0, (byte) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass98 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 192, 0, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 101, 0, 10]" + "'", str6, "[100, 10, 101, 0, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 102, 0, 10]" + "'", str7, "[100, 10, 102, 0, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 103, 0, 10]" + "'", str8, "[100, 10, 103, 0, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 104, 0, 10]" + "'", str9, "[100, 10, 104, 0, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 105, 0, 10]" + "'", str10, "[100, 10, 105, 0, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 106, 0, 10]" + "'", str11, "[100, 10, 106, 0, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 107, 0, 10]" + "'", str12, "[100, 10, 107, 0, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 108, 0, 10]" + "'", str13, "[100, 10, 108, 0, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 109, 0, 10]" + "'", str14, "[100, 10, 109, 0, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 110, 0, 10]" + "'", str15, "[100, 10, 110, 0, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 111, 0, 10]" + "'", str16, "[100, 10, 111, 0, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 112, 0, 10]" + "'", str17, "[100, 10, 112, 0, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 113, 0, 10]" + "'", str18, "[100, 10, 113, 0, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 114, 0, 10]" + "'", str19, "[100, 10, 114, 0, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 115, 0, 10]" + "'", str20, "[100, 10, 115, 0, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 116, 0, 10]" + "'", str21, "[100, 10, 116, 0, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 117, 0, 10]" + "'", str22, "[100, 10, 117, 0, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 118, 0, 10]" + "'", str23, "[100, 10, 118, 0, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 119, 0, 10]" + "'", str24, "[100, 10, 119, 0, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 120, 0, 10]" + "'", str25, "[100, 10, 120, 0, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 121, 0, 10]" + "'", str26, "[100, 10, 121, 0, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 122, 0, 10]" + "'", str27, "[100, 10, 122, 0, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 123, 0, 10]" + "'", str28, "[100, 10, 123, 0, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 124, 0, 10]" + "'", str29, "[100, 10, 124, 0, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 125, 0, 10]" + "'", str30, "[100, 10, 125, 0, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 126, 0, 10]" + "'", str31, "[100, 10, 126, 0, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 127, 0, 10]" + "'", str32, "[100, 10, 127, 0, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 128, 0, 10]" + "'", str33, "[100, 10, 128, 0, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 129, 0, 10]" + "'", str34, "[100, 10, 129, 0, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 130, 0, 10]" + "'", str35, "[100, 10, 130, 0, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 131, 0, 10]" + "'", str36, "[100, 10, 131, 0, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 132, 0, 10]" + "'", str37, "[100, 10, 132, 0, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 133, 0, 10]" + "'", str38, "[100, 10, 133, 0, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 134, 0, 10]" + "'", str39, "[100, 10, 134, 0, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 135, 0, 10]" + "'", str40, "[100, 10, 135, 0, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 136, 0, 10]" + "'", str41, "[100, 10, 136, 0, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 137, 0, 10]" + "'", str42, "[100, 10, 137, 0, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 138, 0, 10]" + "'", str43, "[100, 10, 138, 0, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 10, 139, 0, 10]" + "'", str44, "[100, 10, 139, 0, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 10, 140, 0, 10]" + "'", str45, "[100, 10, 140, 0, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 10, 141, 0, 10]" + "'", str46, "[100, 10, 141, 0, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 10, 142, 0, 10]" + "'", str47, "[100, 10, 142, 0, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 10, 143, 0, 10]" + "'", str48, "[100, 10, 143, 0, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 10, 144, 0, 10]" + "'", str49, "[100, 10, 144, 0, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 10, 145, 0, 10]" + "'", str50, "[100, 10, 145, 0, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 10, 146, 0, 10]" + "'", str51, "[100, 10, 146, 0, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 10, 147, 0, 10]" + "'", str52, "[100, 10, 147, 0, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 10, 148, 0, 10]" + "'", str53, "[100, 10, 148, 0, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 10, 149, 0, 10]" + "'", str54, "[100, 10, 149, 0, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 10, 150, 0, 10]" + "'", str55, "[100, 10, 150, 0, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 10, 151, 0, 10]" + "'", str56, "[100, 10, 151, 0, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 10, 152, 0, 10]" + "'", str57, "[100, 10, 152, 0, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 10, 153, 0, 10]" + "'", str58, "[100, 10, 153, 0, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 10, 154, 0, 10]" + "'", str59, "[100, 10, 154, 0, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 10, 155, 0, 10]" + "'", str60, "[100, 10, 155, 0, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 10, 156, 0, 10]" + "'", str61, "[100, 10, 156, 0, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 10, 157, 0, 10]" + "'", str62, "[100, 10, 157, 0, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 10, 158, 0, 10]" + "'", str63, "[100, 10, 158, 0, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 10, 159, 0, 10]" + "'", str64, "[100, 10, 159, 0, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 10, 160, 0, 10]" + "'", str65, "[100, 10, 160, 0, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 10, 161, 0, 10]" + "'", str66, "[100, 10, 161, 0, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 10, 162, 0, 10]" + "'", str67, "[100, 10, 162, 0, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 10, 163, 0, 10]" + "'", str68, "[100, 10, 163, 0, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 10, 164, 0, 10]" + "'", str69, "[100, 10, 164, 0, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 10, 165, 0, 10]" + "'", str70, "[100, 10, 165, 0, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 10, 166, 0, 10]" + "'", str71, "[100, 10, 166, 0, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 10, 167, 0, 10]" + "'", str72, "[100, 10, 167, 0, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 10, 168, 0, 10]" + "'", str73, "[100, 10, 168, 0, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 10, 169, 0, 10]" + "'", str74, "[100, 10, 169, 0, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 10, 170, 0, 10]" + "'", str75, "[100, 10, 170, 0, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 10, 171, 0, 10]" + "'", str76, "[100, 10, 171, 0, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 10, 172, 0, 10]" + "'", str77, "[100, 10, 172, 0, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 10, 173, 0, 10]" + "'", str78, "[100, 10, 173, 0, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 10, 174, 0, 10]" + "'", str79, "[100, 10, 174, 0, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 10, 175, 0, 10]" + "'", str80, "[100, 10, 175, 0, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 10, 176, 0, 10]" + "'", str81, "[100, 10, 176, 0, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[100, 10, 177, 0, 10]" + "'", str82, "[100, 10, 177, 0, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[100, 10, 178, 0, 10]" + "'", str83, "[100, 10, 178, 0, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[100, 10, 179, 0, 10]" + "'", str84, "[100, 10, 179, 0, 10]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[100, 10, 180, 0, 10]" + "'", str85, "[100, 10, 180, 0, 10]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[100, 10, 181, 0, 10]" + "'", str86, "[100, 10, 181, 0, 10]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[100, 10, 182, 0, 10]" + "'", str87, "[100, 10, 182, 0, 10]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[100, 10, 183, 0, 10]" + "'", str88, "[100, 10, 183, 0, 10]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[100, 10, 184, 0, 10]" + "'", str89, "[100, 10, 184, 0, 10]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[100, 10, 185, 0, 10]" + "'", str90, "[100, 10, 185, 0, 10]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[100, 10, 186, 0, 10]" + "'", str91, "[100, 10, 186, 0, 10]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[100, 10, 187, 0, 10]" + "'", str92, "[100, 10, 187, 0, 10]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[100, 10, 188, 0, 10]" + "'", str93, "[100, 10, 188, 0, 10]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[100, 10, 189, 0, 10]" + "'", str94, "[100, 10, 189, 0, 10]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[100, 10, 190, 0, 10]" + "'", str95, "[100, 10, 190, 0, 10]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[100, 10, 191, 0, 10]" + "'", str96, "[100, 10, 191, 0, 10]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[100, 10, 192, 0, 10]" + "'", str97, "[100, 10, 192, 0, 10]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test6009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6009");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass80 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 8, 5, 107, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 8, 101, 0]" + "'", str22, "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 9, 101, 0]" + "'", str23, "[1, 2, 9, 101, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 3, 0, 102, 0]" + "'", str24, "[1, 3, 0, 102, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 1, 102, 0]" + "'", str25, "[1, 3, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2, 102, 0]" + "'", str26, "[1, 3, 2, 102, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102, 0]" + "'", str27, "[1, 3, 3, 102, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 4, 102, 0]" + "'", str28, "[1, 3, 4, 102, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 3, 5, 102, 0]" + "'", str29, "[1, 3, 5, 102, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 3, 6, 102, 0]" + "'", str30, "[1, 3, 6, 102, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 3, 7, 102, 0]" + "'", str31, "[1, 3, 7, 102, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 3, 8, 102, 0]" + "'", str32, "[1, 3, 8, 102, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 3, 9, 102, 0]" + "'", str33, "[1, 3, 9, 102, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 4, 0, 103, 0]" + "'", str34, "[1, 4, 0, 103, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 4, 1, 103, 0]" + "'", str35, "[1, 4, 1, 103, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 4, 2, 103, 0]" + "'", str36, "[1, 4, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 4, 3, 103, 0]" + "'", str37, "[1, 4, 3, 103, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 4, 4, 103, 0]" + "'", str38, "[1, 4, 4, 103, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 4, 5, 103, 0]" + "'", str39, "[1, 4, 5, 103, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 4, 6, 103, 0]" + "'", str40, "[1, 4, 6, 103, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 4, 7, 103, 0]" + "'", str41, "[1, 4, 7, 103, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 4, 8, 103, 0]" + "'", str42, "[1, 4, 8, 103, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 4, 9, 103, 0]" + "'", str43, "[1, 4, 9, 103, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 5, 0, 104, 0]" + "'", str44, "[1, 5, 0, 104, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 5, 1, 104, 0]" + "'", str45, "[1, 5, 1, 104, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 5, 2, 104, 0]" + "'", str46, "[1, 5, 2, 104, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 5, 3, 104, 0]" + "'", str47, "[1, 5, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 5, 4, 104, 0]" + "'", str48, "[1, 5, 4, 104, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 5, 5, 104, 0]" + "'", str49, "[1, 5, 5, 104, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 5, 6, 104, 0]" + "'", str50, "[1, 5, 6, 104, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 5, 7, 104, 0]" + "'", str51, "[1, 5, 7, 104, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 5, 8, 104, 0]" + "'", str52, "[1, 5, 8, 104, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 5, 9, 104, 0]" + "'", str53, "[1, 5, 9, 104, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 6, 0, 105, 0]" + "'", str54, "[1, 6, 0, 105, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 6, 1, 105, 0]" + "'", str55, "[1, 6, 1, 105, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 6, 2, 105, 0]" + "'", str56, "[1, 6, 2, 105, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 6, 3, 105, 0]" + "'", str57, "[1, 6, 3, 105, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 6, 4, 105, 0]" + "'", str58, "[1, 6, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 6, 5, 105, 0]" + "'", str59, "[1, 6, 5, 105, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 6, 6, 105, 0]" + "'", str60, "[1, 6, 6, 105, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 6, 7, 105, 0]" + "'", str61, "[1, 6, 7, 105, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 6, 8, 105, 0]" + "'", str62, "[1, 6, 8, 105, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 6, 9, 105, 0]" + "'", str63, "[1, 6, 9, 105, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 7, 0, 106, 0]" + "'", str64, "[1, 7, 0, 106, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 7, 1, 106, 0]" + "'", str65, "[1, 7, 1, 106, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 7, 2, 106, 0]" + "'", str66, "[1, 7, 2, 106, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 7, 3, 106, 0]" + "'", str67, "[1, 7, 3, 106, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 7, 4, 106, 0]" + "'", str68, "[1, 7, 4, 106, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 7, 5, 106, 0]" + "'", str69, "[1, 7, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 7, 6, 106, 0]" + "'", str70, "[1, 7, 6, 106, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 7, 7, 106, 0]" + "'", str71, "[1, 7, 7, 106, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 7, 8, 106, 0]" + "'", str72, "[1, 7, 8, 106, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 7, 9, 106, 0]" + "'", str73, "[1, 7, 9, 106, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 8, 0, 107, 0]" + "'", str74, "[1, 8, 0, 107, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 8, 1, 107, 0]" + "'", str75, "[1, 8, 1, 107, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 8, 2, 107, 0]" + "'", str76, "[1, 8, 2, 107, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 8, 3, 107, 0]" + "'", str77, "[1, 8, 3, 107, 0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 8, 4, 107, 0]" + "'", str78, "[1, 8, 4, 107, 0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 8, 5, 107, 0]" + "'", str79, "[1, 8, 5, 107, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test6010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6010");
        int[] intArray1 = new int[] { (byte) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass16 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[5]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 1]" + "'", str10, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test6011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6011");
        int[] intArray3 = new int[] { 0, (byte) -1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass49 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 0]" + "'", str4, "[0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 0]" + "'", str5, "[0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 0]" + "'", str6, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 0]" + "'", str7, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 0]" + "'", str8, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 0]" + "'", str9, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 0]" + "'", str10, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 0]" + "'", str11, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 0]" + "'", str12, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 0]" + "'", str13, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 1]" + "'", str14, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 1]" + "'", str15, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 1]" + "'", str16, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 1]" + "'", str17, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 1]" + "'", str18, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 1]" + "'", str19, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 1]" + "'", str20, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 1]" + "'", str21, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 1]" + "'", str22, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 1]" + "'", str23, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 2]" + "'", str24, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 2]" + "'", str25, "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 2]" + "'", str26, "[2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 2]" + "'", str27, "[2, 3, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 2]" + "'", str28, "[2, 4, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 2]" + "'", str29, "[2, 5, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 2]" + "'", str30, "[2, 6, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 2]" + "'", str31, "[2, 7, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 2]" + "'", str32, "[2, 8, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 2]" + "'", str33, "[2, 9, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 3]" + "'", str34, "[3, 0, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 3]" + "'", str35, "[3, 1, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 3]" + "'", str36, "[3, 2, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 3]" + "'", str37, "[3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 3]" + "'", str38, "[3, 4, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 3]" + "'", str39, "[3, 5, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 3]" + "'", str40, "[3, 6, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 3]" + "'", str41, "[3, 7, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 3]" + "'", str42, "[3, 8, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 3]" + "'", str43, "[3, 9, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 4]" + "'", str44, "[4, 0, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 4]" + "'", str45, "[4, 1, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 4]" + "'", str46, "[4, 2, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 4]" + "'", str47, "[4, 3, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 4]" + "'", str48, "[4, 4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test6012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6012");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass72 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 7, 100]" + "'", str10, "[0, 106, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 8, 100]" + "'", str11, "[0, 107, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 9, 100]" + "'", str12, "[0, 108, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 101]" + "'", str13, "[1, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 1, 101]" + "'", str14, "[1, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 2, 101]" + "'", str15, "[1, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 3, 101]" + "'", str16, "[1, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 4, 101]" + "'", str17, "[1, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 5, 101]" + "'", str18, "[1, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 6, 101]" + "'", str19, "[1, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 7, 101]" + "'", str20, "[1, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 8, 101]" + "'", str21, "[1, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 9, 101]" + "'", str22, "[1, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 0, 102]" + "'", str23, "[2, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1, 102]" + "'", str24, "[2, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 2, 102]" + "'", str25, "[2, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 3, 102]" + "'", str26, "[2, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 4, 102]" + "'", str27, "[2, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 5, 102]" + "'", str28, "[2, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 6, 102]" + "'", str29, "[2, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 7, 102]" + "'", str30, "[2, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 8, 102]" + "'", str31, "[2, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 9, 102]" + "'", str32, "[2, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 0, 103]" + "'", str33, "[3, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 1, 103]" + "'", str34, "[3, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2, 103]" + "'", str35, "[3, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 3, 103]" + "'", str36, "[3, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 4, 103]" + "'", str37, "[3, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 5, 103]" + "'", str38, "[3, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 6, 6, 103]" + "'", str39, "[3, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 7, 7, 103]" + "'", str40, "[3, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 8, 8, 103]" + "'", str41, "[3, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 9, 9, 103]" + "'", str42, "[3, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 0, 0, 104]" + "'", str43, "[4, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 1, 1, 104]" + "'", str44, "[4, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 2, 2, 104]" + "'", str45, "[4, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 3, 3, 104]" + "'", str46, "[4, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4, 4, 104]" + "'", str47, "[4, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 5, 5, 104]" + "'", str48, "[4, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 6, 6, 104]" + "'", str49, "[4, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 7, 7, 104]" + "'", str50, "[4, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 8, 8, 104]" + "'", str51, "[4, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 9, 9, 104]" + "'", str52, "[4, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 0, 0, 105]" + "'", str53, "[5, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 1, 1, 105]" + "'", str54, "[5, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 2, 2, 105]" + "'", str55, "[5, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 3, 3, 105]" + "'", str56, "[5, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 4, 4, 105]" + "'", str57, "[5, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5, 5, 105]" + "'", str58, "[5, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 6, 6, 105]" + "'", str59, "[5, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 7, 7, 105]" + "'", str60, "[5, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 8, 8, 105]" + "'", str61, "[5, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 9, 9, 105]" + "'", str62, "[5, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 0, 0, 106]" + "'", str63, "[6, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[6, 1, 1, 106]" + "'", str64, "[6, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 2, 2, 106]" + "'", str65, "[6, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 3, 3, 106]" + "'", str66, "[6, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 4, 4, 106]" + "'", str67, "[6, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 5, 5, 106]" + "'", str68, "[6, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6, 6, 106]" + "'", str69, "[6, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 7, 7, 106]" + "'", str70, "[6, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 8, 8, 106]" + "'", str71, "[6, 8, 8, 106]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test6013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6013");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass94 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[8, 8, 8, 7]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 0]" + "'", str22, "[1, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 0]" + "'", str23, "[1, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 0]" + "'", str24, "[1, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 1]" + "'", str25, "[2, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 1]" + "'", str26, "[2, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 1]" + "'", str27, "[2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 1]" + "'", str28, "[2, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 1]" + "'", str29, "[2, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 1]" + "'", str30, "[2, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 1]" + "'", str31, "[2, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 1]" + "'", str32, "[2, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 1]" + "'", str33, "[2, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 1]" + "'", str34, "[2, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 2]" + "'", str35, "[3, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 2]" + "'", str36, "[3, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 2]" + "'", str37, "[3, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 2]" + "'", str38, "[3, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 2]" + "'", str39, "[3, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 2]" + "'", str40, "[3, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 2]" + "'", str41, "[3, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 2]" + "'", str42, "[3, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 2]" + "'", str43, "[3, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 2]" + "'", str44, "[3, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 3]" + "'", str45, "[4, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 3]" + "'", str46, "[4, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 3]" + "'", str47, "[4, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 3]" + "'", str48, "[4, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 3]" + "'", str49, "[4, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 3]" + "'", str50, "[4, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 3]" + "'", str51, "[4, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 3]" + "'", str52, "[4, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 3]" + "'", str53, "[4, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 3]" + "'", str54, "[4, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 4]" + "'", str55, "[5, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 4]" + "'", str56, "[5, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 4]" + "'", str57, "[5, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 4]" + "'", str58, "[5, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 4]" + "'", str59, "[5, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 4]" + "'", str60, "[5, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 6, 6, 4]" + "'", str61, "[5, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 7, 7, 4]" + "'", str62, "[5, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[5, 8, 8, 4]" + "'", str63, "[5, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 9, 9, 4]" + "'", str64, "[5, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 0, 0, 5]" + "'", str65, "[6, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 1, 1, 5]" + "'", str66, "[6, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 2, 2, 5]" + "'", str67, "[6, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 3, 3, 5]" + "'", str68, "[6, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 4, 4, 5]" + "'", str69, "[6, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 5, 5, 5]" + "'", str70, "[6, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 6, 6, 5]" + "'", str71, "[6, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[6, 7, 7, 5]" + "'", str72, "[6, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[6, 8, 8, 5]" + "'", str73, "[6, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 9, 9, 5]" + "'", str74, "[6, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[7, 0, 0, 6]" + "'", str75, "[7, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[7, 1, 1, 6]" + "'", str76, "[7, 1, 1, 6]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[7, 2, 2, 6]" + "'", str77, "[7, 2, 2, 6]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7, 3, 3, 6]" + "'", str78, "[7, 3, 3, 6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7, 4, 4, 6]" + "'", str79, "[7, 4, 4, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 5, 5, 6]" + "'", str80, "[7, 5, 5, 6]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[7, 6, 6, 6]" + "'", str81, "[7, 6, 6, 6]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[7, 7, 7, 6]" + "'", str82, "[7, 7, 7, 6]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[7, 8, 8, 6]" + "'", str83, "[7, 8, 8, 6]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[7, 9, 9, 6]" + "'", str84, "[7, 9, 9, 6]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[8, 0, 0, 7]" + "'", str85, "[8, 0, 0, 7]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[8, 1, 1, 7]" + "'", str86, "[8, 1, 1, 7]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[8, 2, 2, 7]" + "'", str87, "[8, 2, 2, 7]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[8, 3, 3, 7]" + "'", str88, "[8, 3, 3, 7]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[8, 4, 4, 7]" + "'", str89, "[8, 4, 4, 7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8, 5, 5, 7]" + "'", str90, "[8, 5, 5, 7]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[8, 6, 6, 7]" + "'", str91, "[8, 6, 6, 7]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[8, 7, 7, 7]" + "'", str92, "[8, 7, 7, 7]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[8, 8, 8, 7]" + "'", str93, "[8, 8, 8, 7]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test6014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6014");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (byte) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass11 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 16, 16, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, 10]" + "'", str5, "[1, 11, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, 10]" + "'", str6, "[1, 12, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, 10]" + "'", str7, "[1, 13, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, 10]" + "'", str8, "[1, 14, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, 10]" + "'", str9, "[1, 15, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, 10]" + "'", str10, "[1, 16, 16, 10]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test6015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6015");
        int[] intArray3 = new int[] { (short) 100, (short) 10, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass23 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 29, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 11, 100]" + "'", str4, "[100, 11, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 12, 100]" + "'", str5, "[100, 12, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 13, 100]" + "'", str6, "[100, 13, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 14, 100]" + "'", str7, "[100, 14, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 15, 100]" + "'", str8, "[100, 15, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 16, 100]" + "'", str9, "[100, 16, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 17, 100]" + "'", str10, "[100, 17, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 18, 100]" + "'", str11, "[100, 18, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 19, 100]" + "'", str12, "[100, 19, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 20, 100]" + "'", str13, "[100, 20, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 21, 100]" + "'", str14, "[100, 21, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 22, 100]" + "'", str15, "[100, 22, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 23, 100]" + "'", str16, "[100, 23, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 24, 100]" + "'", str17, "[100, 24, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 25, 100]" + "'", str18, "[100, 25, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 26, 100]" + "'", str19, "[100, 26, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 27, 100]" + "'", str20, "[100, 27, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 28, 100]" + "'", str21, "[100, 28, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 29, 100]" + "'", str22, "[100, 29, 100]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test6016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6016");
        int[] intArray5 = new int[] { 100, '#', '4', '#', (byte) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass31 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 35, 77, 35, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 35, 53, 35, 0]" + "'", str6, "[100, 35, 53, 35, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 35, 54, 35, 0]" + "'", str7, "[100, 35, 54, 35, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 35, 55, 35, 0]" + "'", str8, "[100, 35, 55, 35, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 35, 56, 35, 0]" + "'", str9, "[100, 35, 56, 35, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 35, 57, 35, 0]" + "'", str10, "[100, 35, 57, 35, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 35, 58, 35, 0]" + "'", str11, "[100, 35, 58, 35, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 35, 59, 35, 0]" + "'", str12, "[100, 35, 59, 35, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 35, 60, 35, 0]" + "'", str13, "[100, 35, 60, 35, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 35, 61, 35, 0]" + "'", str14, "[100, 35, 61, 35, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 35, 62, 35, 0]" + "'", str15, "[100, 35, 62, 35, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 35, 63, 35, 0]" + "'", str16, "[100, 35, 63, 35, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 35, 64, 35, 0]" + "'", str17, "[100, 35, 64, 35, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 35, 65, 35, 0]" + "'", str18, "[100, 35, 65, 35, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 35, 66, 35, 0]" + "'", str19, "[100, 35, 66, 35, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 35, 67, 35, 0]" + "'", str20, "[100, 35, 67, 35, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 35, 68, 35, 0]" + "'", str21, "[100, 35, 68, 35, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 35, 69, 35, 0]" + "'", str22, "[100, 35, 69, 35, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 35, 70, 35, 0]" + "'", str23, "[100, 35, 70, 35, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 35, 71, 35, 0]" + "'", str24, "[100, 35, 71, 35, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 35, 72, 35, 0]" + "'", str25, "[100, 35, 72, 35, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 35, 73, 35, 0]" + "'", str26, "[100, 35, 73, 35, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 35, 74, 35, 0]" + "'", str27, "[100, 35, 74, 35, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 35, 75, 35, 0]" + "'", str28, "[100, 35, 75, 35, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 35, 76, 35, 0]" + "'", str29, "[100, 35, 76, 35, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 35, 77, 35, 0]" + "'", str30, "[100, 35, 77, 35, 0]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test6017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6017");
        int[] intArray5 = new int[] { (short) 100, ' ', (byte) 100, (short) 0, '4' };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass29 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 32, 123, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 32, 101, 0, 52]" + "'", str6, "[100, 32, 101, 0, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 32, 102, 0, 52]" + "'", str7, "[100, 32, 102, 0, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 32, 103, 0, 52]" + "'", str8, "[100, 32, 103, 0, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 32, 104, 0, 52]" + "'", str9, "[100, 32, 104, 0, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 32, 105, 0, 52]" + "'", str10, "[100, 32, 105, 0, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 32, 106, 0, 52]" + "'", str11, "[100, 32, 106, 0, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 32, 107, 0, 52]" + "'", str12, "[100, 32, 107, 0, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 32, 108, 0, 52]" + "'", str13, "[100, 32, 108, 0, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 32, 109, 0, 52]" + "'", str14, "[100, 32, 109, 0, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 32, 110, 0, 52]" + "'", str15, "[100, 32, 110, 0, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 32, 111, 0, 52]" + "'", str16, "[100, 32, 111, 0, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 32, 112, 0, 52]" + "'", str17, "[100, 32, 112, 0, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 32, 113, 0, 52]" + "'", str18, "[100, 32, 113, 0, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 32, 114, 0, 52]" + "'", str19, "[100, 32, 114, 0, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 32, 115, 0, 52]" + "'", str20, "[100, 32, 115, 0, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 32, 116, 0, 52]" + "'", str21, "[100, 32, 116, 0, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 32, 117, 0, 52]" + "'", str22, "[100, 32, 117, 0, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 32, 118, 0, 52]" + "'", str23, "[100, 32, 118, 0, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 32, 119, 0, 52]" + "'", str24, "[100, 32, 119, 0, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 32, 120, 0, 52]" + "'", str25, "[100, 32, 120, 0, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 32, 121, 0, 52]" + "'", str26, "[100, 32, 121, 0, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 32, 122, 0, 52]" + "'", str27, "[100, 32, 122, 0, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 32, 123, 0, 52]" + "'", str28, "[100, 32, 123, 0, 52]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test6018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6018");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass89 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[9, 5, 108]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 101]" + "'", str22, "[2, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 102]" + "'", str23, "[3, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 102]" + "'", str24, "[3, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 102]" + "'", str25, "[3, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 102]" + "'", str26, "[3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 102]" + "'", str27, "[3, 4, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 102]" + "'", str28, "[3, 5, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 102]" + "'", str29, "[3, 6, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 102]" + "'", str30, "[3, 7, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 102]" + "'", str31, "[3, 8, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 102]" + "'", str32, "[3, 9, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 103]" + "'", str33, "[4, 0, 103]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 103]" + "'", str34, "[4, 1, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 103]" + "'", str35, "[4, 2, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 103]" + "'", str36, "[4, 3, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 103]" + "'", str37, "[4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 103]" + "'", str38, "[4, 5, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 103]" + "'", str39, "[4, 6, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 103]" + "'", str40, "[4, 7, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 103]" + "'", str41, "[4, 8, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 103]" + "'", str42, "[4, 9, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 104]" + "'", str43, "[5, 0, 104]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 104]" + "'", str44, "[5, 1, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 104]" + "'", str45, "[5, 2, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 104]" + "'", str46, "[5, 3, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 104]" + "'", str47, "[5, 4, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 104]" + "'", str48, "[5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 104]" + "'", str49, "[5, 6, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 104]" + "'", str50, "[5, 7, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 104]" + "'", str51, "[5, 8, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 104]" + "'", str52, "[5, 9, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 105]" + "'", str53, "[6, 0, 105]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 105]" + "'", str54, "[6, 1, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 105]" + "'", str55, "[6, 2, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 105]" + "'", str56, "[6, 3, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 105]" + "'", str57, "[6, 4, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 105]" + "'", str58, "[6, 5, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 105]" + "'", str59, "[6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 105]" + "'", str60, "[6, 7, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 105]" + "'", str61, "[6, 8, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 105]" + "'", str62, "[6, 9, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 106]" + "'", str63, "[7, 0, 106]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 106]" + "'", str64, "[7, 1, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 106]" + "'", str65, "[7, 2, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 106]" + "'", str66, "[7, 3, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 106]" + "'", str67, "[7, 4, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 5, 106]" + "'", str68, "[7, 5, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 6, 106]" + "'", str69, "[7, 6, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7, 106]" + "'", str70, "[7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 8, 106]" + "'", str71, "[7, 8, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 9, 106]" + "'", str72, "[7, 9, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[8, 0, 107]" + "'", str73, "[8, 0, 107]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 1, 107]" + "'", str74, "[8, 1, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 2, 107]" + "'", str75, "[8, 2, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 3, 107]" + "'", str76, "[8, 3, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 4, 107]" + "'", str77, "[8, 4, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 5, 107]" + "'", str78, "[8, 5, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 6, 107]" + "'", str79, "[8, 6, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 7, 107]" + "'", str80, "[8, 7, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8, 107]" + "'", str81, "[8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 9, 107]" + "'", str82, "[8, 9, 107]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[9, 0, 108]" + "'", str83, "[9, 0, 108]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 1, 108]" + "'", str84, "[9, 1, 108]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 2, 108]" + "'", str85, "[9, 2, 108]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[9, 3, 108]" + "'", str86, "[9, 3, 108]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[9, 4, 108]" + "'", str87, "[9, 4, 108]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[9, 5, 108]" + "'", str88, "[9, 5, 108]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test6019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6019");
        int[] intArray6 = new int[] { 0, 1, (short) 100, '#', (-1), 1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass49 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 1, 142, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 101, 36, -1, 1]" + "'", str7, "[0, 1, 101, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 102, 37, -1, 1]" + "'", str8, "[0, 1, 102, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 103, 38, -1, 1]" + "'", str9, "[0, 1, 103, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 104, 39, -1, 1]" + "'", str10, "[0, 1, 104, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 105, 40, -1, 1]" + "'", str11, "[0, 1, 105, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 106, 41, -1, 1]" + "'", str12, "[0, 1, 106, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 107, 42, -1, 1]" + "'", str13, "[0, 1, 107, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 108, 43, -1, 1]" + "'", str14, "[0, 1, 108, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 109, 44, -1, 1]" + "'", str15, "[0, 1, 109, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 110, 45, -1, 1]" + "'", str16, "[0, 1, 110, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 1, 111, 46, -1, 1]" + "'", str17, "[0, 1, 111, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 1, 112, 47, -1, 1]" + "'", str18, "[0, 1, 112, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 1, 113, 48, -1, 1]" + "'", str19, "[0, 1, 113, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 1, 114, 49, -1, 1]" + "'", str20, "[0, 1, 114, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 1, 115, 50, -1, 1]" + "'", str21, "[0, 1, 115, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 1, 116, 51, -1, 1]" + "'", str22, "[0, 1, 116, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 1, 117, 52, -1, 1]" + "'", str23, "[0, 1, 117, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 1, 118, 53, -1, 1]" + "'", str24, "[0, 1, 118, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 1, 119, 54, -1, 1]" + "'", str25, "[0, 1, 119, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 1, 120, 55, -1, 1]" + "'", str26, "[0, 1, 120, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 1, 121, 56, -1, 1]" + "'", str27, "[0, 1, 121, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 1, 122, 57, -1, 1]" + "'", str28, "[0, 1, 122, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 1, 123, 58, -1, 1]" + "'", str29, "[0, 1, 123, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 1, 124, 59, -1, 1]" + "'", str30, "[0, 1, 124, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 1, 125, 60, -1, 1]" + "'", str31, "[0, 1, 125, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 1, 126, 61, -1, 1]" + "'", str32, "[0, 1, 126, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 1, 127, 62, -1, 1]" + "'", str33, "[0, 1, 127, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 1, 128, 63, -1, 1]" + "'", str34, "[0, 1, 128, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 1, 129, 64, -1, 1]" + "'", str35, "[0, 1, 129, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 1, 130, 65, -1, 1]" + "'", str36, "[0, 1, 130, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 1, 131, 66, -1, 1]" + "'", str37, "[0, 1, 131, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 1, 132, 67, -1, 1]" + "'", str38, "[0, 1, 132, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 1, 133, 68, -1, 1]" + "'", str39, "[0, 1, 133, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 1, 134, 69, -1, 1]" + "'", str40, "[0, 1, 134, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 1, 135, 70, -1, 1]" + "'", str41, "[0, 1, 135, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 1, 136, 71, -1, 1]" + "'", str42, "[0, 1, 136, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 1, 137, 72, -1, 1]" + "'", str43, "[0, 1, 137, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 1, 138, 73, -1, 1]" + "'", str44, "[0, 1, 138, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 1, 139, 74, -1, 1]" + "'", str45, "[0, 1, 139, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 1, 140, 75, -1, 1]" + "'", str46, "[0, 1, 140, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 1, 141, 76, -1, 1]" + "'", str47, "[0, 1, 141, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 1, 142, 77, -1, 1]" + "'", str48, "[0, 1, 142, 77, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test6020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6020");
        int[] intArray5 = new int[] { '#', (byte) 100, 100, 10, (short) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass52 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[35, 100, 146, 10, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 100, 101, 10, 0]" + "'", str6, "[35, 100, 101, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 100, 102, 10, 0]" + "'", str7, "[35, 100, 102, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 100, 103, 10, 0]" + "'", str8, "[35, 100, 103, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 100, 104, 10, 0]" + "'", str9, "[35, 100, 104, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 100, 105, 10, 0]" + "'", str10, "[35, 100, 105, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 100, 106, 10, 0]" + "'", str11, "[35, 100, 106, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 100, 107, 10, 0]" + "'", str12, "[35, 100, 107, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 100, 108, 10, 0]" + "'", str13, "[35, 100, 108, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 100, 109, 10, 0]" + "'", str14, "[35, 100, 109, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 100, 110, 10, 0]" + "'", str15, "[35, 100, 110, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 100, 111, 10, 0]" + "'", str16, "[35, 100, 111, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 100, 112, 10, 0]" + "'", str17, "[35, 100, 112, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 100, 113, 10, 0]" + "'", str18, "[35, 100, 113, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 100, 114, 10, 0]" + "'", str19, "[35, 100, 114, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 100, 115, 10, 0]" + "'", str20, "[35, 100, 115, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 100, 116, 10, 0]" + "'", str21, "[35, 100, 116, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 100, 117, 10, 0]" + "'", str22, "[35, 100, 117, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 100, 118, 10, 0]" + "'", str23, "[35, 100, 118, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 100, 119, 10, 0]" + "'", str24, "[35, 100, 119, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 100, 120, 10, 0]" + "'", str25, "[35, 100, 120, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 100, 121, 10, 0]" + "'", str26, "[35, 100, 121, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 100, 122, 10, 0]" + "'", str27, "[35, 100, 122, 10, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 100, 123, 10, 0]" + "'", str28, "[35, 100, 123, 10, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 100, 124, 10, 0]" + "'", str29, "[35, 100, 124, 10, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 100, 125, 10, 0]" + "'", str30, "[35, 100, 125, 10, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 100, 126, 10, 0]" + "'", str31, "[35, 100, 126, 10, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 100, 127, 10, 0]" + "'", str32, "[35, 100, 127, 10, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 100, 128, 10, 0]" + "'", str33, "[35, 100, 128, 10, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 100, 129, 10, 0]" + "'", str34, "[35, 100, 129, 10, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 100, 130, 10, 0]" + "'", str35, "[35, 100, 130, 10, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 100, 131, 10, 0]" + "'", str36, "[35, 100, 131, 10, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 100, 132, 10, 0]" + "'", str37, "[35, 100, 132, 10, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 100, 133, 10, 0]" + "'", str38, "[35, 100, 133, 10, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 100, 134, 10, 0]" + "'", str39, "[35, 100, 134, 10, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 100, 135, 10, 0]" + "'", str40, "[35, 100, 135, 10, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 100, 136, 10, 0]" + "'", str41, "[35, 100, 136, 10, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 100, 137, 10, 0]" + "'", str42, "[35, 100, 137, 10, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 100, 138, 10, 0]" + "'", str43, "[35, 100, 138, 10, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 100, 139, 10, 0]" + "'", str44, "[35, 100, 139, 10, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 100, 140, 10, 0]" + "'", str45, "[35, 100, 140, 10, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 100, 141, 10, 0]" + "'", str46, "[35, 100, 141, 10, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 100, 142, 10, 0]" + "'", str47, "[35, 100, 142, 10, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 100, 143, 10, 0]" + "'", str48, "[35, 100, 143, 10, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 100, 144, 10, 0]" + "'", str49, "[35, 100, 144, 10, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 100, 145, 10, 0]" + "'", str50, "[35, 100, 145, 10, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 100, 146, 10, 0]" + "'", str51, "[35, 100, 146, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test6021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6021");
        int[] intArray2 = new int[] { (-1), (short) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass36 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[3, 3]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 1]" + "'", str3, "[0, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 2]" + "'", str4, "[1, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 3]" + "'", str5, "[2, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 4]" + "'", str6, "[3, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 5]" + "'", str7, "[4, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 6]" + "'", str8, "[5, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 7]" + "'", str9, "[6, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 8]" + "'", str10, "[7, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[8, 9]" + "'", str11, "[8, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test6022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6022");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass76 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 68, 169, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 10, 5, 106, 100, 52]" + "'", str12, "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 10, 6, 107, 100, 52]" + "'", str13, "[1, 10, 6, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 10, 7, 108, 100, 52]" + "'", str14, "[1, 10, 7, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 8, 109, 100, 52]" + "'", str15, "[1, 10, 8, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 10, 9, 110, 100, 52]" + "'", str16, "[1, 10, 9, 110, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 10, 10, 111, 100, 52]" + "'", str17, "[1, 10, 10, 111, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 10, 11, 112, 100, 52]" + "'", str18, "[1, 10, 11, 112, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 10, 12, 113, 100, 52]" + "'", str19, "[1, 10, 12, 113, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 10, 13, 114, 100, 52]" + "'", str20, "[1, 10, 13, 114, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 10, 14, 115, 100, 52]" + "'", str21, "[1, 10, 14, 115, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 10, 15, 116, 100, 52]" + "'", str22, "[1, 10, 15, 116, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 10, 16, 117, 100, 52]" + "'", str23, "[1, 10, 16, 117, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 10, 17, 118, 100, 52]" + "'", str24, "[1, 10, 17, 118, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 10, 18, 119, 100, 52]" + "'", str25, "[1, 10, 18, 119, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 10, 19, 120, 100, 52]" + "'", str26, "[1, 10, 19, 120, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 10, 20, 121, 100, 52]" + "'", str27, "[1, 10, 20, 121, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 10, 21, 122, 100, 52]" + "'", str28, "[1, 10, 21, 122, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 10, 22, 123, 100, 52]" + "'", str29, "[1, 10, 22, 123, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 10, 23, 124, 100, 52]" + "'", str30, "[1, 10, 23, 124, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 10, 24, 125, 100, 52]" + "'", str31, "[1, 10, 24, 125, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 10, 25, 126, 100, 52]" + "'", str32, "[1, 10, 25, 126, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 10, 26, 127, 100, 52]" + "'", str33, "[1, 10, 26, 127, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 10, 27, 128, 100, 52]" + "'", str34, "[1, 10, 27, 128, 100, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 10, 28, 129, 100, 52]" + "'", str35, "[1, 10, 28, 129, 100, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 10, 29, 130, 100, 52]" + "'", str36, "[1, 10, 29, 130, 100, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 10, 30, 131, 100, 52]" + "'", str37, "[1, 10, 30, 131, 100, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 10, 31, 132, 100, 52]" + "'", str38, "[1, 10, 31, 132, 100, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 10, 32, 133, 100, 52]" + "'", str39, "[1, 10, 32, 133, 100, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 10, 33, 134, 100, 52]" + "'", str40, "[1, 10, 33, 134, 100, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 10, 34, 135, 100, 52]" + "'", str41, "[1, 10, 34, 135, 100, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 10, 35, 136, 100, 52]" + "'", str42, "[1, 10, 35, 136, 100, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 10, 36, 137, 100, 52]" + "'", str43, "[1, 10, 36, 137, 100, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 10, 37, 138, 100, 52]" + "'", str44, "[1, 10, 37, 138, 100, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 10, 38, 139, 100, 52]" + "'", str45, "[1, 10, 38, 139, 100, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 10, 39, 140, 100, 52]" + "'", str46, "[1, 10, 39, 140, 100, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 10, 40, 141, 100, 52]" + "'", str47, "[1, 10, 40, 141, 100, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 10, 41, 142, 100, 52]" + "'", str48, "[1, 10, 41, 142, 100, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 10, 42, 143, 100, 52]" + "'", str49, "[1, 10, 42, 143, 100, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 10, 43, 144, 100, 52]" + "'", str50, "[1, 10, 43, 144, 100, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 10, 44, 145, 100, 52]" + "'", str51, "[1, 10, 44, 145, 100, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 10, 45, 146, 100, 52]" + "'", str52, "[1, 10, 45, 146, 100, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 10, 46, 147, 100, 52]" + "'", str53, "[1, 10, 46, 147, 100, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 10, 47, 148, 100, 52]" + "'", str54, "[1, 10, 47, 148, 100, 52]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 10, 48, 149, 100, 52]" + "'", str55, "[1, 10, 48, 149, 100, 52]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 10, 49, 150, 100, 52]" + "'", str56, "[1, 10, 49, 150, 100, 52]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 10, 50, 151, 100, 52]" + "'", str57, "[1, 10, 50, 151, 100, 52]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 10, 51, 152, 100, 52]" + "'", str58, "[1, 10, 51, 152, 100, 52]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 10, 52, 153, 100, 52]" + "'", str59, "[1, 10, 52, 153, 100, 52]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 10, 53, 154, 100, 52]" + "'", str60, "[1, 10, 53, 154, 100, 52]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 10, 54, 155, 100, 52]" + "'", str61, "[1, 10, 54, 155, 100, 52]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 10, 55, 156, 100, 52]" + "'", str62, "[1, 10, 55, 156, 100, 52]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 10, 56, 157, 100, 52]" + "'", str63, "[1, 10, 56, 157, 100, 52]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 10, 57, 158, 100, 52]" + "'", str64, "[1, 10, 57, 158, 100, 52]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 10, 58, 159, 100, 52]" + "'", str65, "[1, 10, 58, 159, 100, 52]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 10, 59, 160, 100, 52]" + "'", str66, "[1, 10, 59, 160, 100, 52]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 10, 60, 161, 100, 52]" + "'", str67, "[1, 10, 60, 161, 100, 52]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 10, 61, 162, 100, 52]" + "'", str68, "[1, 10, 61, 162, 100, 52]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 10, 62, 163, 100, 52]" + "'", str69, "[1, 10, 62, 163, 100, 52]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 10, 63, 164, 100, 52]" + "'", str70, "[1, 10, 63, 164, 100, 52]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 10, 64, 165, 100, 52]" + "'", str71, "[1, 10, 64, 165, 100, 52]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 10, 65, 166, 100, 52]" + "'", str72, "[1, 10, 65, 166, 100, 52]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 10, 66, 167, 100, 52]" + "'", str73, "[1, 10, 66, 167, 100, 52]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 10, 67, 168, 100, 52]" + "'", str74, "[1, 10, 67, 168, 100, 52]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 10, 68, 169, 100, 52]" + "'", str75, "[1, 10, 68, 169, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test6023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6023");
        int[] intArray4 = new int[] { (byte) 100, (-1), (short) -1, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass21 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[101, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 0, 0, 100]" + "'", str5, "[100, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 1, 1, 100]" + "'", str6, "[100, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 2, 2, 100]" + "'", str7, "[100, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 3, 3, 100]" + "'", str8, "[100, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 4, 4, 100]" + "'", str9, "[100, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 5, 5, 100]" + "'", str10, "[100, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 6, 6, 100]" + "'", str11, "[100, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 7, 7, 100]" + "'", str12, "[100, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 8, 8, 100]" + "'", str13, "[100, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 9, 9, 100]" + "'", str14, "[100, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 0, 0, 101]" + "'", str15, "[101, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 1, 1, 101]" + "'", str16, "[101, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 2, 2, 101]" + "'", str17, "[101, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 3, 3, 101]" + "'", str18, "[101, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 4, 4, 101]" + "'", str19, "[101, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 5, 5, 101]" + "'", str20, "[101, 5, 5, 101]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test6024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6024");
        int[] intArray2 = new int[] { ' ', (-1) };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass28 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[33, 0]" + "'", str3, "[33, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[34, 1]" + "'", str4, "[34, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 2]" + "'", str5, "[35, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[36, 3]" + "'", str6, "[36, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[37, 4]" + "'", str7, "[37, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[38, 5]" + "'", str8, "[38, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[39, 6]" + "'", str9, "[39, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[40, 7]" + "'", str10, "[40, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[41, 8]" + "'", str11, "[41, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[42, 9]" + "'", str12, "[42, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 1]" + "'", str13, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 0, 1]" + "'", str23, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test6025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6025");
        int[] intArray5 = new int[] { 1, (short) 1, 1, (byte) 100, 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass78 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 8, 3, 107, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 2, 100, 0]" + "'", str6, "[1, 1, 2, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 3, 100, 0]" + "'", str7, "[1, 1, 3, 100, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 4, 100, 0]" + "'", str8, "[1, 1, 4, 100, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 5, 100, 0]" + "'", str9, "[1, 1, 5, 100, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 6, 100, 0]" + "'", str10, "[1, 1, 6, 100, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 7, 100, 0]" + "'", str11, "[1, 1, 7, 100, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 8, 100, 0]" + "'", str12, "[1, 1, 8, 100, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 9, 100, 0]" + "'", str13, "[1, 1, 9, 100, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 0, 101, 0]" + "'", str14, "[1, 2, 0, 101, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 1, 101, 0]" + "'", str15, "[1, 2, 1, 101, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101, 0]" + "'", str16, "[1, 2, 2, 101, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 3, 101, 0]" + "'", str17, "[1, 2, 3, 101, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 4, 101, 0]" + "'", str18, "[1, 2, 4, 101, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 2, 5, 101, 0]" + "'", str19, "[1, 2, 5, 101, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 2, 6, 101, 0]" + "'", str20, "[1, 2, 6, 101, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 2, 7, 101, 0]" + "'", str21, "[1, 2, 7, 101, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 2, 8, 101, 0]" + "'", str22, "[1, 2, 8, 101, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 2, 9, 101, 0]" + "'", str23, "[1, 2, 9, 101, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 3, 0, 102, 0]" + "'", str24, "[1, 3, 0, 102, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 3, 1, 102, 0]" + "'", str25, "[1, 3, 1, 102, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 3, 2, 102, 0]" + "'", str26, "[1, 3, 2, 102, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102, 0]" + "'", str27, "[1, 3, 3, 102, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 3, 4, 102, 0]" + "'", str28, "[1, 3, 4, 102, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 3, 5, 102, 0]" + "'", str29, "[1, 3, 5, 102, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 3, 6, 102, 0]" + "'", str30, "[1, 3, 6, 102, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 3, 7, 102, 0]" + "'", str31, "[1, 3, 7, 102, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 3, 8, 102, 0]" + "'", str32, "[1, 3, 8, 102, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 3, 9, 102, 0]" + "'", str33, "[1, 3, 9, 102, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 4, 0, 103, 0]" + "'", str34, "[1, 4, 0, 103, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 4, 1, 103, 0]" + "'", str35, "[1, 4, 1, 103, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 4, 2, 103, 0]" + "'", str36, "[1, 4, 2, 103, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 4, 3, 103, 0]" + "'", str37, "[1, 4, 3, 103, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 4, 4, 103, 0]" + "'", str38, "[1, 4, 4, 103, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 4, 5, 103, 0]" + "'", str39, "[1, 4, 5, 103, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 4, 6, 103, 0]" + "'", str40, "[1, 4, 6, 103, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 4, 7, 103, 0]" + "'", str41, "[1, 4, 7, 103, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 4, 8, 103, 0]" + "'", str42, "[1, 4, 8, 103, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 4, 9, 103, 0]" + "'", str43, "[1, 4, 9, 103, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 5, 0, 104, 0]" + "'", str44, "[1, 5, 0, 104, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 5, 1, 104, 0]" + "'", str45, "[1, 5, 1, 104, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 5, 2, 104, 0]" + "'", str46, "[1, 5, 2, 104, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 5, 3, 104, 0]" + "'", str47, "[1, 5, 3, 104, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 5, 4, 104, 0]" + "'", str48, "[1, 5, 4, 104, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 5, 5, 104, 0]" + "'", str49, "[1, 5, 5, 104, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 5, 6, 104, 0]" + "'", str50, "[1, 5, 6, 104, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 5, 7, 104, 0]" + "'", str51, "[1, 5, 7, 104, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 5, 8, 104, 0]" + "'", str52, "[1, 5, 8, 104, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 5, 9, 104, 0]" + "'", str53, "[1, 5, 9, 104, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 6, 0, 105, 0]" + "'", str54, "[1, 6, 0, 105, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 6, 1, 105, 0]" + "'", str55, "[1, 6, 1, 105, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 6, 2, 105, 0]" + "'", str56, "[1, 6, 2, 105, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 6, 3, 105, 0]" + "'", str57, "[1, 6, 3, 105, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 6, 4, 105, 0]" + "'", str58, "[1, 6, 4, 105, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 6, 5, 105, 0]" + "'", str59, "[1, 6, 5, 105, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 6, 6, 105, 0]" + "'", str60, "[1, 6, 6, 105, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 6, 7, 105, 0]" + "'", str61, "[1, 6, 7, 105, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 6, 8, 105, 0]" + "'", str62, "[1, 6, 8, 105, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 6, 9, 105, 0]" + "'", str63, "[1, 6, 9, 105, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 7, 0, 106, 0]" + "'", str64, "[1, 7, 0, 106, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 7, 1, 106, 0]" + "'", str65, "[1, 7, 1, 106, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 7, 2, 106, 0]" + "'", str66, "[1, 7, 2, 106, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 7, 3, 106, 0]" + "'", str67, "[1, 7, 3, 106, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 7, 4, 106, 0]" + "'", str68, "[1, 7, 4, 106, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 7, 5, 106, 0]" + "'", str69, "[1, 7, 5, 106, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 7, 6, 106, 0]" + "'", str70, "[1, 7, 6, 106, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 7, 7, 106, 0]" + "'", str71, "[1, 7, 7, 106, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 7, 8, 106, 0]" + "'", str72, "[1, 7, 8, 106, 0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 7, 9, 106, 0]" + "'", str73, "[1, 7, 9, 106, 0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 8, 0, 107, 0]" + "'", str74, "[1, 8, 0, 107, 0]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 8, 1, 107, 0]" + "'", str75, "[1, 8, 1, 107, 0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 8, 2, 107, 0]" + "'", str76, "[1, 8, 2, 107, 0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 8, 3, 107, 0]" + "'", str77, "[1, 8, 3, 107, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test6026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6026");
        int[] intArray6 = new int[] { (short) 100, (short) 0, (byte) 100, (short) 10, (byte) 0, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass56 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 149, 59, 0, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 101, 11, 0, 0]" + "'", str7, "[100, 0, 101, 11, 0, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 102, 12, 0, 0]" + "'", str8, "[100, 0, 102, 12, 0, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 103, 13, 0, 0]" + "'", str9, "[100, 0, 103, 13, 0, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 104, 14, 0, 0]" + "'", str10, "[100, 0, 104, 14, 0, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 105, 15, 0, 0]" + "'", str11, "[100, 0, 105, 15, 0, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 106, 16, 0, 0]" + "'", str12, "[100, 0, 106, 16, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 107, 17, 0, 0]" + "'", str13, "[100, 0, 107, 17, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 108, 18, 0, 0]" + "'", str14, "[100, 0, 108, 18, 0, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 0, 109, 19, 0, 0]" + "'", str15, "[100, 0, 109, 19, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 0, 110, 20, 0, 0]" + "'", str16, "[100, 0, 110, 20, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 0, 111, 21, 0, 0]" + "'", str17, "[100, 0, 111, 21, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 0, 112, 22, 0, 0]" + "'", str18, "[100, 0, 112, 22, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 0, 113, 23, 0, 0]" + "'", str19, "[100, 0, 113, 23, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 0, 114, 24, 0, 0]" + "'", str20, "[100, 0, 114, 24, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 0, 115, 25, 0, 0]" + "'", str21, "[100, 0, 115, 25, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 0, 116, 26, 0, 0]" + "'", str22, "[100, 0, 116, 26, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 0, 117, 27, 0, 0]" + "'", str23, "[100, 0, 117, 27, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 0, 118, 28, 0, 0]" + "'", str24, "[100, 0, 118, 28, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 0, 119, 29, 0, 0]" + "'", str25, "[100, 0, 119, 29, 0, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 0, 120, 30, 0, 0]" + "'", str26, "[100, 0, 120, 30, 0, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 0, 121, 31, 0, 0]" + "'", str27, "[100, 0, 121, 31, 0, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 0, 122, 32, 0, 0]" + "'", str28, "[100, 0, 122, 32, 0, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 0, 123, 33, 0, 0]" + "'", str29, "[100, 0, 123, 33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 0, 124, 34, 0, 0]" + "'", str30, "[100, 0, 124, 34, 0, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 0, 125, 35, 0, 0]" + "'", str31, "[100, 0, 125, 35, 0, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 0, 126, 36, 0, 0]" + "'", str32, "[100, 0, 126, 36, 0, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 0, 127, 37, 0, 0]" + "'", str33, "[100, 0, 127, 37, 0, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 128, 38, 0, 0]" + "'", str34, "[100, 0, 128, 38, 0, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 129, 39, 0, 0]" + "'", str35, "[100, 0, 129, 39, 0, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 0, 130, 40, 0, 0]" + "'", str36, "[100, 0, 130, 40, 0, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 0, 131, 41, 0, 0]" + "'", str37, "[100, 0, 131, 41, 0, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 0, 132, 42, 0, 0]" + "'", str38, "[100, 0, 132, 42, 0, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 0, 133, 43, 0, 0]" + "'", str39, "[100, 0, 133, 43, 0, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 0, 134, 44, 0, 0]" + "'", str40, "[100, 0, 134, 44, 0, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 0, 135, 45, 0, 0]" + "'", str41, "[100, 0, 135, 45, 0, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 0, 136, 46, 0, 0]" + "'", str42, "[100, 0, 136, 46, 0, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 0, 137, 47, 0, 0]" + "'", str43, "[100, 0, 137, 47, 0, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 0, 138, 48, 0, 0]" + "'", str44, "[100, 0, 138, 48, 0, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 0, 139, 49, 0, 0]" + "'", str45, "[100, 0, 139, 49, 0, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 0, 140, 50, 0, 0]" + "'", str46, "[100, 0, 140, 50, 0, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 0, 141, 51, 0, 0]" + "'", str47, "[100, 0, 141, 51, 0, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 0, 142, 52, 0, 0]" + "'", str48, "[100, 0, 142, 52, 0, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 0, 143, 53, 0, 0]" + "'", str49, "[100, 0, 143, 53, 0, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 0, 144, 54, 0, 0]" + "'", str50, "[100, 0, 144, 54, 0, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 0, 145, 55, 0, 0]" + "'", str51, "[100, 0, 145, 55, 0, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 0, 146, 56, 0, 0]" + "'", str52, "[100, 0, 146, 56, 0, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 0, 147, 57, 0, 0]" + "'", str53, "[100, 0, 147, 57, 0, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 0, 148, 58, 0, 0]" + "'", str54, "[100, 0, 148, 58, 0, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 0, 149, 59, 0, 0]" + "'", str55, "[100, 0, 149, 59, 0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test6027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6027");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[9, 7, 108]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 101]" + "'", str22, "[2, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 102]" + "'", str23, "[3, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 102]" + "'", str24, "[3, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 102]" + "'", str25, "[3, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 102]" + "'", str26, "[3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 102]" + "'", str27, "[3, 4, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 102]" + "'", str28, "[3, 5, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 102]" + "'", str29, "[3, 6, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 102]" + "'", str30, "[3, 7, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 102]" + "'", str31, "[3, 8, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 102]" + "'", str32, "[3, 9, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 103]" + "'", str33, "[4, 0, 103]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 103]" + "'", str34, "[4, 1, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 103]" + "'", str35, "[4, 2, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 103]" + "'", str36, "[4, 3, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 103]" + "'", str37, "[4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 103]" + "'", str38, "[4, 5, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 103]" + "'", str39, "[4, 6, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 103]" + "'", str40, "[4, 7, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 103]" + "'", str41, "[4, 8, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 103]" + "'", str42, "[4, 9, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 104]" + "'", str43, "[5, 0, 104]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 104]" + "'", str44, "[5, 1, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 104]" + "'", str45, "[5, 2, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 104]" + "'", str46, "[5, 3, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 104]" + "'", str47, "[5, 4, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 104]" + "'", str48, "[5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 104]" + "'", str49, "[5, 6, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 104]" + "'", str50, "[5, 7, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 104]" + "'", str51, "[5, 8, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 104]" + "'", str52, "[5, 9, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 105]" + "'", str53, "[6, 0, 105]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 105]" + "'", str54, "[6, 1, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 105]" + "'", str55, "[6, 2, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 105]" + "'", str56, "[6, 3, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 105]" + "'", str57, "[6, 4, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 105]" + "'", str58, "[6, 5, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 105]" + "'", str59, "[6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 105]" + "'", str60, "[6, 7, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 105]" + "'", str61, "[6, 8, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 105]" + "'", str62, "[6, 9, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 106]" + "'", str63, "[7, 0, 106]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 106]" + "'", str64, "[7, 1, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 106]" + "'", str65, "[7, 2, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 106]" + "'", str66, "[7, 3, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 106]" + "'", str67, "[7, 4, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 5, 106]" + "'", str68, "[7, 5, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 6, 106]" + "'", str69, "[7, 6, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7, 106]" + "'", str70, "[7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 8, 106]" + "'", str71, "[7, 8, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 9, 106]" + "'", str72, "[7, 9, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[8, 0, 107]" + "'", str73, "[8, 0, 107]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 1, 107]" + "'", str74, "[8, 1, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 2, 107]" + "'", str75, "[8, 2, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 3, 107]" + "'", str76, "[8, 3, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 4, 107]" + "'", str77, "[8, 4, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 5, 107]" + "'", str78, "[8, 5, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 6, 107]" + "'", str79, "[8, 6, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 7, 107]" + "'", str80, "[8, 7, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8, 107]" + "'", str81, "[8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 9, 107]" + "'", str82, "[8, 9, 107]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[9, 0, 108]" + "'", str83, "[9, 0, 108]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 1, 108]" + "'", str84, "[9, 1, 108]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 2, 108]" + "'", str85, "[9, 2, 108]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[9, 3, 108]" + "'", str86, "[9, 3, 108]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[9, 4, 108]" + "'", str87, "[9, 4, 108]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[9, 5, 108]" + "'", str88, "[9, 5, 108]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[9, 6, 108]" + "'", str89, "[9, 6, 108]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[9, 7, 108]" + "'", str90, "[9, 7, 108]");
    }

    @Test
    public void test6028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6028");
        int[] intArray3 = new int[] { (byte) 10, 'a', 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass30 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 123, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 98, 0]" + "'", str4, "[10, 98, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 99, 0]" + "'", str5, "[10, 99, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 100, 0]" + "'", str6, "[10, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 101, 0]" + "'", str7, "[10, 101, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 102, 0]" + "'", str8, "[10, 102, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 103, 0]" + "'", str9, "[10, 103, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 104, 0]" + "'", str10, "[10, 104, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 105, 0]" + "'", str11, "[10, 105, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 106, 0]" + "'", str12, "[10, 106, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 107, 0]" + "'", str13, "[10, 107, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 108, 0]" + "'", str14, "[10, 108, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 109, 0]" + "'", str15, "[10, 109, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 110, 0]" + "'", str16, "[10, 110, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 111, 0]" + "'", str17, "[10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 112, 0]" + "'", str18, "[10, 112, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 113, 0]" + "'", str19, "[10, 113, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 114, 0]" + "'", str20, "[10, 114, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 115, 0]" + "'", str21, "[10, 115, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 116, 0]" + "'", str22, "[10, 116, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 117, 0]" + "'", str23, "[10, 117, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 118, 0]" + "'", str24, "[10, 118, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 119, 0]" + "'", str25, "[10, 119, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 120, 0]" + "'", str26, "[10, 120, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 121, 0]" + "'", str27, "[10, 121, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 122, 0]" + "'", str28, "[10, 122, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 123, 0]" + "'", str29, "[10, 123, 0]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test6029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6029");
        int[] intArray3 = new int[] { 1, (-1), ' ' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass20 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 5, 33]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 0, 32]" + "'", str4, "[1, 0, 32]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1, 32]" + "'", str5, "[1, 1, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 2, 32]" + "'", str6, "[1, 2, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 3, 32]" + "'", str7, "[1, 3, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 4, 32]" + "'", str8, "[1, 4, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 5, 32]" + "'", str9, "[1, 5, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 6, 32]" + "'", str10, "[1, 6, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 7, 32]" + "'", str11, "[1, 7, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 8, 32]" + "'", str12, "[1, 8, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 9, 32]" + "'", str13, "[1, 9, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 33]" + "'", str14, "[2, 0, 33]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 33]" + "'", str15, "[2, 1, 33]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 33]" + "'", str16, "[2, 2, 33]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 33]" + "'", str17, "[2, 3, 33]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 33]" + "'", str18, "[2, 4, 33]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 33]" + "'", str19, "[2, 5, 33]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6030");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass97 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 142, 122, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 77, 57, 100, 52]" + "'", str31, "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 78, 58, 100, 52]" + "'", str32, "[-1, 100, 78, 58, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 79, 59, 100, 52]" + "'", str33, "[-1, 100, 79, 59, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 80, 60, 100, 52]" + "'", str34, "[-1, 100, 80, 60, 100, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 81, 61, 100, 52]" + "'", str35, "[-1, 100, 81, 61, 100, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 82, 62, 100, 52]" + "'", str36, "[-1, 100, 82, 62, 100, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 83, 63, 100, 52]" + "'", str37, "[-1, 100, 83, 63, 100, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 100, 84, 64, 100, 52]" + "'", str38, "[-1, 100, 84, 64, 100, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 100, 85, 65, 100, 52]" + "'", str39, "[-1, 100, 85, 65, 100, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 100, 86, 66, 100, 52]" + "'", str40, "[-1, 100, 86, 66, 100, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 100, 87, 67, 100, 52]" + "'", str41, "[-1, 100, 87, 67, 100, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 100, 88, 68, 100, 52]" + "'", str42, "[-1, 100, 88, 68, 100, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 100, 89, 69, 100, 52]" + "'", str43, "[-1, 100, 89, 69, 100, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 100, 90, 70, 100, 52]" + "'", str44, "[-1, 100, 90, 70, 100, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 100, 91, 71, 100, 52]" + "'", str45, "[-1, 100, 91, 71, 100, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 100, 92, 72, 100, 52]" + "'", str46, "[-1, 100, 92, 72, 100, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 100, 93, 73, 100, 52]" + "'", str47, "[-1, 100, 93, 73, 100, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 100, 94, 74, 100, 52]" + "'", str48, "[-1, 100, 94, 74, 100, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 100, 95, 75, 100, 52]" + "'", str49, "[-1, 100, 95, 75, 100, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 100, 96, 76, 100, 52]" + "'", str50, "[-1, 100, 96, 76, 100, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 100, 97, 77, 100, 52]" + "'", str51, "[-1, 100, 97, 77, 100, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 98, 78, 100, 52]" + "'", str52, "[-1, 100, 98, 78, 100, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 100, 99, 79, 100, 52]" + "'", str53, "[-1, 100, 99, 79, 100, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 100, 100, 80, 100, 52]" + "'", str54, "[-1, 100, 100, 80, 100, 52]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 100, 101, 81, 100, 52]" + "'", str55, "[-1, 100, 101, 81, 100, 52]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 100, 102, 82, 100, 52]" + "'", str56, "[-1, 100, 102, 82, 100, 52]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 100, 103, 83, 100, 52]" + "'", str57, "[-1, 100, 103, 83, 100, 52]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 100, 104, 84, 100, 52]" + "'", str58, "[-1, 100, 104, 84, 100, 52]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 100, 105, 85, 100, 52]" + "'", str59, "[-1, 100, 105, 85, 100, 52]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 100, 106, 86, 100, 52]" + "'", str60, "[-1, 100, 106, 86, 100, 52]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 100, 107, 87, 100, 52]" + "'", str61, "[-1, 100, 107, 87, 100, 52]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 100, 108, 88, 100, 52]" + "'", str62, "[-1, 100, 108, 88, 100, 52]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 100, 109, 89, 100, 52]" + "'", str63, "[-1, 100, 109, 89, 100, 52]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[-1, 100, 110, 90, 100, 52]" + "'", str64, "[-1, 100, 110, 90, 100, 52]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[-1, 100, 111, 91, 100, 52]" + "'", str65, "[-1, 100, 111, 91, 100, 52]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[-1, 100, 112, 92, 100, 52]" + "'", str66, "[-1, 100, 112, 92, 100, 52]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[-1, 100, 113, 93, 100, 52]" + "'", str67, "[-1, 100, 113, 93, 100, 52]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[-1, 100, 114, 94, 100, 52]" + "'", str68, "[-1, 100, 114, 94, 100, 52]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[-1, 100, 115, 95, 100, 52]" + "'", str69, "[-1, 100, 115, 95, 100, 52]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[-1, 100, 116, 96, 100, 52]" + "'", str70, "[-1, 100, 116, 96, 100, 52]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[-1, 100, 117, 97, 100, 52]" + "'", str71, "[-1, 100, 117, 97, 100, 52]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[-1, 100, 118, 98, 100, 52]" + "'", str72, "[-1, 100, 118, 98, 100, 52]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[-1, 100, 119, 99, 100, 52]" + "'", str73, "[-1, 100, 119, 99, 100, 52]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[-1, 100, 120, 100, 100, 52]" + "'", str74, "[-1, 100, 120, 100, 100, 52]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[-1, 100, 121, 101, 100, 52]" + "'", str75, "[-1, 100, 121, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[-1, 100, 122, 102, 100, 52]" + "'", str76, "[-1, 100, 122, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[-1, 100, 123, 103, 100, 52]" + "'", str77, "[-1, 100, 123, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[-1, 100, 124, 104, 100, 52]" + "'", str78, "[-1, 100, 124, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[-1, 100, 125, 105, 100, 52]" + "'", str79, "[-1, 100, 125, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[-1, 100, 126, 106, 100, 52]" + "'", str80, "[-1, 100, 126, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[-1, 100, 127, 107, 100, 52]" + "'", str81, "[-1, 100, 127, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[-1, 100, 128, 108, 100, 52]" + "'", str82, "[-1, 100, 128, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[-1, 100, 129, 109, 100, 52]" + "'", str83, "[-1, 100, 129, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[-1, 100, 130, 110, 100, 52]" + "'", str84, "[-1, 100, 130, 110, 100, 52]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[-1, 100, 131, 111, 100, 52]" + "'", str85, "[-1, 100, 131, 111, 100, 52]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[-1, 100, 132, 112, 100, 52]" + "'", str86, "[-1, 100, 132, 112, 100, 52]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[-1, 100, 133, 113, 100, 52]" + "'", str87, "[-1, 100, 133, 113, 100, 52]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[-1, 100, 134, 114, 100, 52]" + "'", str88, "[-1, 100, 134, 114, 100, 52]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[-1, 100, 135, 115, 100, 52]" + "'", str89, "[-1, 100, 135, 115, 100, 52]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[-1, 100, 136, 116, 100, 52]" + "'", str90, "[-1, 100, 136, 116, 100, 52]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[-1, 100, 137, 117, 100, 52]" + "'", str91, "[-1, 100, 137, 117, 100, 52]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[-1, 100, 138, 118, 100, 52]" + "'", str92, "[-1, 100, 138, 118, 100, 52]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[-1, 100, 139, 119, 100, 52]" + "'", str93, "[-1, 100, 139, 119, 100, 52]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[-1, 100, 140, 120, 100, 52]" + "'", str94, "[-1, 100, 140, 120, 100, 52]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[-1, 100, 141, 121, 100, 52]" + "'", str95, "[-1, 100, 141, 121, 100, 52]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[-1, 100, 142, 122, 100, 52]" + "'", str96, "[-1, 100, 142, 122, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test6031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6031");
        int[] intArray1 = new int[] { ' ' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass54 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[84]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[33]" + "'", str2, "[33]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[34]" + "'", str3, "[34]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35]" + "'", str4, "[35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[36]" + "'", str5, "[36]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[37]" + "'", str6, "[37]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[38]" + "'", str7, "[38]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[39]" + "'", str8, "[39]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[40]" + "'", str9, "[40]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[41]" + "'", str10, "[41]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[42]" + "'", str11, "[42]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[43]" + "'", str12, "[43]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[44]" + "'", str13, "[44]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[45]" + "'", str14, "[45]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[46]" + "'", str15, "[46]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[47]" + "'", str16, "[47]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[48]" + "'", str17, "[48]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[49]" + "'", str18, "[49]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[50]" + "'", str19, "[50]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[51]" + "'", str20, "[51]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52]" + "'", str21, "[52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53]" + "'", str22, "[53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54]" + "'", str23, "[54]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[55]" + "'", str24, "[55]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[56]" + "'", str25, "[56]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[57]" + "'", str26, "[57]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[58]" + "'", str27, "[58]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[59]" + "'", str28, "[59]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[60]" + "'", str29, "[60]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[61]" + "'", str30, "[61]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[62]" + "'", str31, "[62]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[63]" + "'", str32, "[63]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[64]" + "'", str33, "[64]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[65]" + "'", str34, "[65]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[66]" + "'", str35, "[66]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[67]" + "'", str36, "[67]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[68]" + "'", str37, "[68]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[69]" + "'", str38, "[69]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[70]" + "'", str39, "[70]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[71]" + "'", str40, "[71]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[72]" + "'", str41, "[72]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[73]" + "'", str42, "[73]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[74]" + "'", str43, "[74]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[75]" + "'", str44, "[75]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[76]" + "'", str45, "[76]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[77]" + "'", str46, "[77]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[78]" + "'", str47, "[78]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[79]" + "'", str48, "[79]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[80]" + "'", str49, "[80]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[81]" + "'", str50, "[81]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[82]" + "'", str51, "[82]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[83]" + "'", str52, "[83]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[84]" + "'", str53, "[84]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test6032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6032");
        int[] intArray3 = new int[] { 10, (short) 10, 'a' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass16 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 22, 97]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 11, 97]" + "'", str4, "[10, 11, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 12, 97]" + "'", str5, "[10, 12, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 13, 97]" + "'", str6, "[10, 13, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 14, 97]" + "'", str7, "[10, 14, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 15, 97]" + "'", str8, "[10, 15, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 16, 97]" + "'", str9, "[10, 16, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 17, 97]" + "'", str10, "[10, 17, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 18, 97]" + "'", str11, "[10, 18, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 19, 97]" + "'", str12, "[10, 19, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 20, 97]" + "'", str13, "[10, 20, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 21, 97]" + "'", str14, "[10, 21, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 22, 97]" + "'", str15, "[10, 22, 97]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test6033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6033");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass85 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 32, 29, 10, -1]" + "'", str24, "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 32, 30, 10, -1]" + "'", str25, "[10, 32, 30, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 32, 31, 10, -1]" + "'", str26, "[10, 32, 31, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 32, 32, 10, -1]" + "'", str27, "[10, 32, 32, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 32, 33, 10, -1]" + "'", str28, "[10, 32, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 32, 34, 10, -1]" + "'", str29, "[10, 32, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 32, 35, 10, -1]" + "'", str30, "[10, 32, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 32, 36, 10, -1]" + "'", str31, "[10, 32, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 32, 37, 10, -1]" + "'", str32, "[10, 32, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 32, 38, 10, -1]" + "'", str33, "[10, 32, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[10, 32, 39, 10, -1]" + "'", str34, "[10, 32, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 32, 40, 10, -1]" + "'", str35, "[10, 32, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 32, 41, 10, -1]" + "'", str36, "[10, 32, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[10, 32, 42, 10, -1]" + "'", str37, "[10, 32, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[10, 32, 43, 10, -1]" + "'", str38, "[10, 32, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 32, 44, 10, -1]" + "'", str39, "[10, 32, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[10, 32, 45, 10, -1]" + "'", str40, "[10, 32, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[10, 32, 46, 10, -1]" + "'", str41, "[10, 32, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[10, 32, 47, 10, -1]" + "'", str42, "[10, 32, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[10, 32, 48, 10, -1]" + "'", str43, "[10, 32, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 32, 49, 10, -1]" + "'", str44, "[10, 32, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[10, 32, 50, 10, -1]" + "'", str45, "[10, 32, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[10, 32, 51, 10, -1]" + "'", str46, "[10, 32, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[10, 32, 52, 10, -1]" + "'", str47, "[10, 32, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[10, 32, 53, 10, -1]" + "'", str48, "[10, 32, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[10, 32, 54, 10, -1]" + "'", str49, "[10, 32, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[10, 32, 55, 10, -1]" + "'", str50, "[10, 32, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[10, 32, 56, 10, -1]" + "'", str51, "[10, 32, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[10, 32, 57, 10, -1]" + "'", str52, "[10, 32, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[10, 32, 58, 10, -1]" + "'", str53, "[10, 32, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[10, 32, 59, 10, -1]" + "'", str54, "[10, 32, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 32, 60, 10, -1]" + "'", str55, "[10, 32, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 32, 61, 10, -1]" + "'", str56, "[10, 32, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[10, 32, 62, 10, -1]" + "'", str57, "[10, 32, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[10, 32, 63, 10, -1]" + "'", str58, "[10, 32, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[10, 32, 64, 10, -1]" + "'", str59, "[10, 32, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[10, 32, 65, 10, -1]" + "'", str60, "[10, 32, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[10, 32, 66, 10, -1]" + "'", str61, "[10, 32, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[10, 32, 67, 10, -1]" + "'", str62, "[10, 32, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[10, 32, 68, 10, -1]" + "'", str63, "[10, 32, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[10, 32, 69, 10, -1]" + "'", str64, "[10, 32, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[10, 32, 70, 10, -1]" + "'", str65, "[10, 32, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[10, 32, 71, 10, -1]" + "'", str66, "[10, 32, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[10, 32, 72, 10, -1]" + "'", str67, "[10, 32, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[10, 32, 73, 10, -1]" + "'", str68, "[10, 32, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[10, 32, 74, 10, -1]" + "'", str69, "[10, 32, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[10, 32, 75, 10, -1]" + "'", str70, "[10, 32, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 32, 76, 10, -1]" + "'", str71, "[10, 32, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[10, 32, 77, 10, -1]" + "'", str72, "[10, 32, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[10, 32, 78, 10, -1]" + "'", str73, "[10, 32, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[10, 32, 79, 10, -1]" + "'", str74, "[10, 32, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[10, 32, 80, 10, -1]" + "'", str75, "[10, 32, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[10, 32, 81, 10, -1]" + "'", str76, "[10, 32, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[10, 32, 82, 10, -1]" + "'", str77, "[10, 32, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[10, 32, 83, 10, -1]" + "'", str78, "[10, 32, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[10, 32, 84, 10, -1]" + "'", str79, "[10, 32, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[10, 32, 85, 10, -1]" + "'", str80, "[10, 32, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[10, 32, 86, 10, -1]" + "'", str81, "[10, 32, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[10, 32, 87, 10, -1]" + "'", str82, "[10, 32, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[10, 32, 88, 10, -1]" + "'", str83, "[10, 32, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[10, 32, 89, 10, -1]" + "'", str84, "[10, 32, 89, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test6034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6034");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass77 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 69, 170, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 10, 5, 106, 100, 52]" + "'", str12, "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 10, 6, 107, 100, 52]" + "'", str13, "[1, 10, 6, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 10, 7, 108, 100, 52]" + "'", str14, "[1, 10, 7, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 8, 109, 100, 52]" + "'", str15, "[1, 10, 8, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 10, 9, 110, 100, 52]" + "'", str16, "[1, 10, 9, 110, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 10, 10, 111, 100, 52]" + "'", str17, "[1, 10, 10, 111, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 10, 11, 112, 100, 52]" + "'", str18, "[1, 10, 11, 112, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 10, 12, 113, 100, 52]" + "'", str19, "[1, 10, 12, 113, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 10, 13, 114, 100, 52]" + "'", str20, "[1, 10, 13, 114, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 10, 14, 115, 100, 52]" + "'", str21, "[1, 10, 14, 115, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 10, 15, 116, 100, 52]" + "'", str22, "[1, 10, 15, 116, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 10, 16, 117, 100, 52]" + "'", str23, "[1, 10, 16, 117, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 10, 17, 118, 100, 52]" + "'", str24, "[1, 10, 17, 118, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 10, 18, 119, 100, 52]" + "'", str25, "[1, 10, 18, 119, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 10, 19, 120, 100, 52]" + "'", str26, "[1, 10, 19, 120, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 10, 20, 121, 100, 52]" + "'", str27, "[1, 10, 20, 121, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 10, 21, 122, 100, 52]" + "'", str28, "[1, 10, 21, 122, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 10, 22, 123, 100, 52]" + "'", str29, "[1, 10, 22, 123, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 10, 23, 124, 100, 52]" + "'", str30, "[1, 10, 23, 124, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 10, 24, 125, 100, 52]" + "'", str31, "[1, 10, 24, 125, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 10, 25, 126, 100, 52]" + "'", str32, "[1, 10, 25, 126, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 10, 26, 127, 100, 52]" + "'", str33, "[1, 10, 26, 127, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 10, 27, 128, 100, 52]" + "'", str34, "[1, 10, 27, 128, 100, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 10, 28, 129, 100, 52]" + "'", str35, "[1, 10, 28, 129, 100, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 10, 29, 130, 100, 52]" + "'", str36, "[1, 10, 29, 130, 100, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 10, 30, 131, 100, 52]" + "'", str37, "[1, 10, 30, 131, 100, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 10, 31, 132, 100, 52]" + "'", str38, "[1, 10, 31, 132, 100, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 10, 32, 133, 100, 52]" + "'", str39, "[1, 10, 32, 133, 100, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 10, 33, 134, 100, 52]" + "'", str40, "[1, 10, 33, 134, 100, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 10, 34, 135, 100, 52]" + "'", str41, "[1, 10, 34, 135, 100, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 10, 35, 136, 100, 52]" + "'", str42, "[1, 10, 35, 136, 100, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 10, 36, 137, 100, 52]" + "'", str43, "[1, 10, 36, 137, 100, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 10, 37, 138, 100, 52]" + "'", str44, "[1, 10, 37, 138, 100, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 10, 38, 139, 100, 52]" + "'", str45, "[1, 10, 38, 139, 100, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 10, 39, 140, 100, 52]" + "'", str46, "[1, 10, 39, 140, 100, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 10, 40, 141, 100, 52]" + "'", str47, "[1, 10, 40, 141, 100, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 10, 41, 142, 100, 52]" + "'", str48, "[1, 10, 41, 142, 100, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 10, 42, 143, 100, 52]" + "'", str49, "[1, 10, 42, 143, 100, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 10, 43, 144, 100, 52]" + "'", str50, "[1, 10, 43, 144, 100, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 10, 44, 145, 100, 52]" + "'", str51, "[1, 10, 44, 145, 100, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 10, 45, 146, 100, 52]" + "'", str52, "[1, 10, 45, 146, 100, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 10, 46, 147, 100, 52]" + "'", str53, "[1, 10, 46, 147, 100, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 10, 47, 148, 100, 52]" + "'", str54, "[1, 10, 47, 148, 100, 52]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 10, 48, 149, 100, 52]" + "'", str55, "[1, 10, 48, 149, 100, 52]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 10, 49, 150, 100, 52]" + "'", str56, "[1, 10, 49, 150, 100, 52]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 10, 50, 151, 100, 52]" + "'", str57, "[1, 10, 50, 151, 100, 52]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 10, 51, 152, 100, 52]" + "'", str58, "[1, 10, 51, 152, 100, 52]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 10, 52, 153, 100, 52]" + "'", str59, "[1, 10, 52, 153, 100, 52]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 10, 53, 154, 100, 52]" + "'", str60, "[1, 10, 53, 154, 100, 52]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 10, 54, 155, 100, 52]" + "'", str61, "[1, 10, 54, 155, 100, 52]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 10, 55, 156, 100, 52]" + "'", str62, "[1, 10, 55, 156, 100, 52]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 10, 56, 157, 100, 52]" + "'", str63, "[1, 10, 56, 157, 100, 52]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 10, 57, 158, 100, 52]" + "'", str64, "[1, 10, 57, 158, 100, 52]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 10, 58, 159, 100, 52]" + "'", str65, "[1, 10, 58, 159, 100, 52]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 10, 59, 160, 100, 52]" + "'", str66, "[1, 10, 59, 160, 100, 52]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 10, 60, 161, 100, 52]" + "'", str67, "[1, 10, 60, 161, 100, 52]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 10, 61, 162, 100, 52]" + "'", str68, "[1, 10, 61, 162, 100, 52]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 10, 62, 163, 100, 52]" + "'", str69, "[1, 10, 62, 163, 100, 52]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 10, 63, 164, 100, 52]" + "'", str70, "[1, 10, 63, 164, 100, 52]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 10, 64, 165, 100, 52]" + "'", str71, "[1, 10, 64, 165, 100, 52]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 10, 65, 166, 100, 52]" + "'", str72, "[1, 10, 65, 166, 100, 52]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 10, 66, 167, 100, 52]" + "'", str73, "[1, 10, 66, 167, 100, 52]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 10, 67, 168, 100, 52]" + "'", str74, "[1, 10, 67, 168, 100, 52]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 10, 68, 169, 100, 52]" + "'", str75, "[1, 10, 68, 169, 100, 52]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 10, 69, 170, 100, 52]" + "'", str76, "[1, 10, 69, 170, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test6035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6035");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass70 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[8, 8]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 6]" + "'", str7, "[15, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 7]" + "'", str8, "[16, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 8]" + "'", str9, "[17, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 9]" + "'", str10, "[18, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 0, 1]" + "'", str21, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 0, 1]" + "'", str31, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 3]" + "'", str34, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 4]" + "'", str35, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5, 5]" + "'", str36, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6, 6]" + "'", str37, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7, 7]" + "'", str38, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8, 8]" + "'", str39, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9, 9]" + "'", str40, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 0, 1]" + "'", str41, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 2]" + "'", str43, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 3]" + "'", str44, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 4]" + "'", str45, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 5]" + "'", str46, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6, 6]" + "'", str47, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7, 7]" + "'", str48, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8, 8]" + "'", str49, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9, 9]" + "'", str50, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 0, 1]" + "'", str51, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2, 2]" + "'", str53, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3, 3]" + "'", str54, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 4]" + "'", str55, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 5]" + "'", str56, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 6]" + "'", str57, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7, 7]" + "'", str58, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8, 8]" + "'", str59, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9, 9]" + "'", str60, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 0, 1]" + "'", str61, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[2, 2]" + "'", str63, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[3, 3]" + "'", str64, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[4, 4]" + "'", str65, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 5]" + "'", str66, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 6]" + "'", str67, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 7]" + "'", str68, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[8, 8]" + "'", str69, "[8, 8]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test6036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6036");
        int[] intArray4 = new int[] { (short) 0, 100, (byte) 0, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass58 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 1, 0]" + "'", str5, "[0, 101, 1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 2, 0]" + "'", str6, "[0, 102, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 3, 0]" + "'", str7, "[0, 103, 3, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 4, 0]" + "'", str8, "[0, 104, 4, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 5, 0]" + "'", str9, "[0, 105, 5, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 6, 0]" + "'", str10, "[0, 106, 6, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 7, 0]" + "'", str11, "[0, 107, 7, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 8, 0]" + "'", str12, "[0, 108, 8, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 9, 0]" + "'", str13, "[0, 109, 9, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 0, 1]" + "'", str14, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 1, 1]" + "'", str15, "[1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 1]" + "'", str16, "[1, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 3, 1]" + "'", str17, "[1, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 4, 1]" + "'", str18, "[1, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 5, 1]" + "'", str19, "[1, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 6, 1]" + "'", str20, "[1, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 7, 1]" + "'", str21, "[1, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 8, 1]" + "'", str22, "[1, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 9, 1]" + "'", str23, "[1, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 0, 2]" + "'", str24, "[2, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 1, 2]" + "'", str25, "[2, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 2, 2]" + "'", str26, "[2, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 3, 2]" + "'", str27, "[2, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 4, 2]" + "'", str28, "[2, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 5, 2]" + "'", str29, "[2, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 6, 2]" + "'", str30, "[2, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 7, 2]" + "'", str31, "[2, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 8, 2]" + "'", str32, "[2, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 9, 2]" + "'", str33, "[2, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 0, 3]" + "'", str34, "[3, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 1, 3]" + "'", str35, "[3, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 2, 3]" + "'", str36, "[3, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 3, 3]" + "'", str37, "[3, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 4, 3]" + "'", str38, "[3, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 5, 3]" + "'", str39, "[3, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 6, 3]" + "'", str40, "[3, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 7, 3]" + "'", str41, "[3, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 8, 3]" + "'", str42, "[3, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 9, 3]" + "'", str43, "[3, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 0, 4]" + "'", str44, "[4, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 1, 4]" + "'", str45, "[4, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 2, 4]" + "'", str46, "[4, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 3, 4]" + "'", str47, "[4, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 4, 4]" + "'", str48, "[4, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 5, 4]" + "'", str49, "[4, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 6, 4]" + "'", str50, "[4, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 7, 4]" + "'", str51, "[4, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 8, 4]" + "'", str52, "[4, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 9, 9, 4]" + "'", str53, "[4, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 0, 0, 5]" + "'", str54, "[5, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 1, 1, 5]" + "'", str55, "[5, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 2, 2, 5]" + "'", str56, "[5, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 3, 3, 5]" + "'", str57, "[5, 3, 3, 5]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test6037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6037");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass81 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 32, 29, 10, -1]" + "'", str24, "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 32, 30, 10, -1]" + "'", str25, "[10, 32, 30, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 32, 31, 10, -1]" + "'", str26, "[10, 32, 31, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 32, 32, 10, -1]" + "'", str27, "[10, 32, 32, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 32, 33, 10, -1]" + "'", str28, "[10, 32, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 32, 34, 10, -1]" + "'", str29, "[10, 32, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 32, 35, 10, -1]" + "'", str30, "[10, 32, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 32, 36, 10, -1]" + "'", str31, "[10, 32, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 32, 37, 10, -1]" + "'", str32, "[10, 32, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 32, 38, 10, -1]" + "'", str33, "[10, 32, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[10, 32, 39, 10, -1]" + "'", str34, "[10, 32, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 32, 40, 10, -1]" + "'", str35, "[10, 32, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 32, 41, 10, -1]" + "'", str36, "[10, 32, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[10, 32, 42, 10, -1]" + "'", str37, "[10, 32, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[10, 32, 43, 10, -1]" + "'", str38, "[10, 32, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 32, 44, 10, -1]" + "'", str39, "[10, 32, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[10, 32, 45, 10, -1]" + "'", str40, "[10, 32, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[10, 32, 46, 10, -1]" + "'", str41, "[10, 32, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[10, 32, 47, 10, -1]" + "'", str42, "[10, 32, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[10, 32, 48, 10, -1]" + "'", str43, "[10, 32, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 32, 49, 10, -1]" + "'", str44, "[10, 32, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[10, 32, 50, 10, -1]" + "'", str45, "[10, 32, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[10, 32, 51, 10, -1]" + "'", str46, "[10, 32, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[10, 32, 52, 10, -1]" + "'", str47, "[10, 32, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[10, 32, 53, 10, -1]" + "'", str48, "[10, 32, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[10, 32, 54, 10, -1]" + "'", str49, "[10, 32, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[10, 32, 55, 10, -1]" + "'", str50, "[10, 32, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[10, 32, 56, 10, -1]" + "'", str51, "[10, 32, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[10, 32, 57, 10, -1]" + "'", str52, "[10, 32, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[10, 32, 58, 10, -1]" + "'", str53, "[10, 32, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[10, 32, 59, 10, -1]" + "'", str54, "[10, 32, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 32, 60, 10, -1]" + "'", str55, "[10, 32, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 32, 61, 10, -1]" + "'", str56, "[10, 32, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[10, 32, 62, 10, -1]" + "'", str57, "[10, 32, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[10, 32, 63, 10, -1]" + "'", str58, "[10, 32, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[10, 32, 64, 10, -1]" + "'", str59, "[10, 32, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[10, 32, 65, 10, -1]" + "'", str60, "[10, 32, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[10, 32, 66, 10, -1]" + "'", str61, "[10, 32, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[10, 32, 67, 10, -1]" + "'", str62, "[10, 32, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[10, 32, 68, 10, -1]" + "'", str63, "[10, 32, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[10, 32, 69, 10, -1]" + "'", str64, "[10, 32, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[10, 32, 70, 10, -1]" + "'", str65, "[10, 32, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[10, 32, 71, 10, -1]" + "'", str66, "[10, 32, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[10, 32, 72, 10, -1]" + "'", str67, "[10, 32, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[10, 32, 73, 10, -1]" + "'", str68, "[10, 32, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[10, 32, 74, 10, -1]" + "'", str69, "[10, 32, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[10, 32, 75, 10, -1]" + "'", str70, "[10, 32, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 32, 76, 10, -1]" + "'", str71, "[10, 32, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[10, 32, 77, 10, -1]" + "'", str72, "[10, 32, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[10, 32, 78, 10, -1]" + "'", str73, "[10, 32, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[10, 32, 79, 10, -1]" + "'", str74, "[10, 32, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[10, 32, 80, 10, -1]" + "'", str75, "[10, 32, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[10, 32, 81, 10, -1]" + "'", str76, "[10, 32, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[10, 32, 82, 10, -1]" + "'", str77, "[10, 32, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[10, 32, 83, 10, -1]" + "'", str78, "[10, 32, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[10, 32, 84, 10, -1]" + "'", str79, "[10, 32, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[10, 32, 85, 10, -1]" + "'", str80, "[10, 32, 85, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test6038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6038");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (byte) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass10 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 15, 15, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, 10]" + "'", str5, "[1, 11, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, 10]" + "'", str6, "[1, 12, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, 10]" + "'", str7, "[1, 13, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, 10]" + "'", str8, "[1, 14, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, 10]" + "'", str9, "[1, 15, 15, 10]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test6039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6039");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass75 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 67, 168, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 10, 5, 106, 100, 52]" + "'", str12, "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 10, 6, 107, 100, 52]" + "'", str13, "[1, 10, 6, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 10, 7, 108, 100, 52]" + "'", str14, "[1, 10, 7, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 8, 109, 100, 52]" + "'", str15, "[1, 10, 8, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 10, 9, 110, 100, 52]" + "'", str16, "[1, 10, 9, 110, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 10, 10, 111, 100, 52]" + "'", str17, "[1, 10, 10, 111, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 10, 11, 112, 100, 52]" + "'", str18, "[1, 10, 11, 112, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 10, 12, 113, 100, 52]" + "'", str19, "[1, 10, 12, 113, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 10, 13, 114, 100, 52]" + "'", str20, "[1, 10, 13, 114, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 10, 14, 115, 100, 52]" + "'", str21, "[1, 10, 14, 115, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 10, 15, 116, 100, 52]" + "'", str22, "[1, 10, 15, 116, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 10, 16, 117, 100, 52]" + "'", str23, "[1, 10, 16, 117, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 10, 17, 118, 100, 52]" + "'", str24, "[1, 10, 17, 118, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 10, 18, 119, 100, 52]" + "'", str25, "[1, 10, 18, 119, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 10, 19, 120, 100, 52]" + "'", str26, "[1, 10, 19, 120, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 10, 20, 121, 100, 52]" + "'", str27, "[1, 10, 20, 121, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 10, 21, 122, 100, 52]" + "'", str28, "[1, 10, 21, 122, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 10, 22, 123, 100, 52]" + "'", str29, "[1, 10, 22, 123, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 10, 23, 124, 100, 52]" + "'", str30, "[1, 10, 23, 124, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 10, 24, 125, 100, 52]" + "'", str31, "[1, 10, 24, 125, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 10, 25, 126, 100, 52]" + "'", str32, "[1, 10, 25, 126, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 10, 26, 127, 100, 52]" + "'", str33, "[1, 10, 26, 127, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 10, 27, 128, 100, 52]" + "'", str34, "[1, 10, 27, 128, 100, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 10, 28, 129, 100, 52]" + "'", str35, "[1, 10, 28, 129, 100, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 10, 29, 130, 100, 52]" + "'", str36, "[1, 10, 29, 130, 100, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 10, 30, 131, 100, 52]" + "'", str37, "[1, 10, 30, 131, 100, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 10, 31, 132, 100, 52]" + "'", str38, "[1, 10, 31, 132, 100, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 10, 32, 133, 100, 52]" + "'", str39, "[1, 10, 32, 133, 100, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 10, 33, 134, 100, 52]" + "'", str40, "[1, 10, 33, 134, 100, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 10, 34, 135, 100, 52]" + "'", str41, "[1, 10, 34, 135, 100, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 10, 35, 136, 100, 52]" + "'", str42, "[1, 10, 35, 136, 100, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 10, 36, 137, 100, 52]" + "'", str43, "[1, 10, 36, 137, 100, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 10, 37, 138, 100, 52]" + "'", str44, "[1, 10, 37, 138, 100, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 10, 38, 139, 100, 52]" + "'", str45, "[1, 10, 38, 139, 100, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 10, 39, 140, 100, 52]" + "'", str46, "[1, 10, 39, 140, 100, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 10, 40, 141, 100, 52]" + "'", str47, "[1, 10, 40, 141, 100, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 10, 41, 142, 100, 52]" + "'", str48, "[1, 10, 41, 142, 100, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 10, 42, 143, 100, 52]" + "'", str49, "[1, 10, 42, 143, 100, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 10, 43, 144, 100, 52]" + "'", str50, "[1, 10, 43, 144, 100, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 10, 44, 145, 100, 52]" + "'", str51, "[1, 10, 44, 145, 100, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 10, 45, 146, 100, 52]" + "'", str52, "[1, 10, 45, 146, 100, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 10, 46, 147, 100, 52]" + "'", str53, "[1, 10, 46, 147, 100, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 10, 47, 148, 100, 52]" + "'", str54, "[1, 10, 47, 148, 100, 52]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 10, 48, 149, 100, 52]" + "'", str55, "[1, 10, 48, 149, 100, 52]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 10, 49, 150, 100, 52]" + "'", str56, "[1, 10, 49, 150, 100, 52]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 10, 50, 151, 100, 52]" + "'", str57, "[1, 10, 50, 151, 100, 52]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 10, 51, 152, 100, 52]" + "'", str58, "[1, 10, 51, 152, 100, 52]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 10, 52, 153, 100, 52]" + "'", str59, "[1, 10, 52, 153, 100, 52]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 10, 53, 154, 100, 52]" + "'", str60, "[1, 10, 53, 154, 100, 52]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 10, 54, 155, 100, 52]" + "'", str61, "[1, 10, 54, 155, 100, 52]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 10, 55, 156, 100, 52]" + "'", str62, "[1, 10, 55, 156, 100, 52]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 10, 56, 157, 100, 52]" + "'", str63, "[1, 10, 56, 157, 100, 52]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 10, 57, 158, 100, 52]" + "'", str64, "[1, 10, 57, 158, 100, 52]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 10, 58, 159, 100, 52]" + "'", str65, "[1, 10, 58, 159, 100, 52]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 10, 59, 160, 100, 52]" + "'", str66, "[1, 10, 59, 160, 100, 52]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 10, 60, 161, 100, 52]" + "'", str67, "[1, 10, 60, 161, 100, 52]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 10, 61, 162, 100, 52]" + "'", str68, "[1, 10, 61, 162, 100, 52]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 10, 62, 163, 100, 52]" + "'", str69, "[1, 10, 62, 163, 100, 52]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 10, 63, 164, 100, 52]" + "'", str70, "[1, 10, 63, 164, 100, 52]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 10, 64, 165, 100, 52]" + "'", str71, "[1, 10, 64, 165, 100, 52]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 10, 65, 166, 100, 52]" + "'", str72, "[1, 10, 65, 166, 100, 52]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 10, 66, 167, 100, 52]" + "'", str73, "[1, 10, 66, 167, 100, 52]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 10, 67, 168, 100, 52]" + "'", str74, "[1, 10, 67, 168, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test6040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6040");
        int[] intArray1 = new int[] { 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass21 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[119]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test6041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6041");
        int[] intArray5 = new int[] { (short) 0, (-1), (short) 10, (byte) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass42 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 11, 100, -1]" + "'", str6, "[0, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 12, 100, -1]" + "'", str7, "[0, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 13, 100, -1]" + "'", str8, "[0, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 14, 100, -1]" + "'", str9, "[0, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 15, 100, -1]" + "'", str10, "[0, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 16, 100, -1]" + "'", str11, "[0, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 17, 100, -1]" + "'", str12, "[0, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 18, 100, -1]" + "'", str13, "[0, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 19, 100, -1]" + "'", str14, "[0, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 20, 100, -1]" + "'", str15, "[0, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 21, 100, -1]" + "'", str16, "[0, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 22, 100, -1]" + "'", str17, "[0, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 23, 100, -1]" + "'", str18, "[0, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 24, 100, -1]" + "'", str19, "[0, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 25, 100, -1]" + "'", str20, "[0, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 26, 100, -1]" + "'", str21, "[0, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 27, 100, -1]" + "'", str22, "[0, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 28, 100, -1]" + "'", str23, "[0, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 29, 100, -1]" + "'", str24, "[0, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 30, 100, -1]" + "'", str25, "[0, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 31, 100, -1]" + "'", str26, "[0, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 32, 100, -1]" + "'", str27, "[0, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 33, 100, -1]" + "'", str28, "[0, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 34, 100, -1]" + "'", str29, "[0, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 35, 100, -1]" + "'", str30, "[0, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 36, 100, -1]" + "'", str31, "[0, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 37, 100, -1]" + "'", str32, "[0, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 38, 100, -1]" + "'", str33, "[0, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 39, 100, -1]" + "'", str34, "[0, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 40, 100, -1]" + "'", str35, "[0, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 41, 100, -1]" + "'", str36, "[0, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 42, 100, -1]" + "'", str37, "[0, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 43, 100, -1]" + "'", str38, "[0, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 44, 100, -1]" + "'", str39, "[0, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 45, 100, -1]" + "'", str40, "[0, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 46, 100, -1]" + "'", str41, "[0, -1, 46, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test6042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6042");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass96 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[129]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[87]" + "'", str53, "[87]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[88]" + "'", str54, "[88]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[89]" + "'", str55, "[89]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[90]" + "'", str56, "[90]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[91]" + "'", str57, "[91]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[92]" + "'", str58, "[92]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[93]" + "'", str59, "[93]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[94]" + "'", str60, "[94]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[95]" + "'", str61, "[95]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[96]" + "'", str62, "[96]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97]" + "'", str63, "[97]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[98]" + "'", str64, "[98]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[99]" + "'", str65, "[99]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100]" + "'", str66, "[100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[101]" + "'", str67, "[101]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[102]" + "'", str68, "[102]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[103]" + "'", str69, "[103]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[104]" + "'", str70, "[104]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[105]" + "'", str71, "[105]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[106]" + "'", str72, "[106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[107]" + "'", str73, "[107]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[108]" + "'", str74, "[108]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[109]" + "'", str75, "[109]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[110]" + "'", str76, "[110]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[111]" + "'", str77, "[111]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[112]" + "'", str78, "[112]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[113]" + "'", str79, "[113]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[114]" + "'", str80, "[114]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[115]" + "'", str81, "[115]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[116]" + "'", str82, "[116]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[117]" + "'", str83, "[117]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[118]" + "'", str84, "[118]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[119]" + "'", str85, "[119]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[120]" + "'", str86, "[120]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[121]" + "'", str87, "[121]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[122]" + "'", str88, "[122]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[123]" + "'", str89, "[123]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[124]" + "'", str90, "[124]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[125]" + "'", str91, "[125]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[126]" + "'", str92, "[126]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[127]" + "'", str93, "[127]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[128]" + "'", str94, "[128]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[129]" + "'", str95, "[129]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test6043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6043");
        int[] intArray5 = new int[] { (byte) 0, '#', 100, (byte) -1, (short) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass36 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 130, -1, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 101, -1, 10]" + "'", str6, "[0, 35, 101, -1, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 102, -1, 10]" + "'", str7, "[0, 35, 102, -1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 103, -1, 10]" + "'", str8, "[0, 35, 103, -1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 104, -1, 10]" + "'", str9, "[0, 35, 104, -1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 105, -1, 10]" + "'", str10, "[0, 35, 105, -1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 106, -1, 10]" + "'", str11, "[0, 35, 106, -1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 107, -1, 10]" + "'", str12, "[0, 35, 107, -1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 108, -1, 10]" + "'", str13, "[0, 35, 108, -1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 109, -1, 10]" + "'", str14, "[0, 35, 109, -1, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 110, -1, 10]" + "'", str15, "[0, 35, 110, -1, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 111, -1, 10]" + "'", str16, "[0, 35, 111, -1, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 112, -1, 10]" + "'", str17, "[0, 35, 112, -1, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 113, -1, 10]" + "'", str18, "[0, 35, 113, -1, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 114, -1, 10]" + "'", str19, "[0, 35, 114, -1, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 115, -1, 10]" + "'", str20, "[0, 35, 115, -1, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 116, -1, 10]" + "'", str21, "[0, 35, 116, -1, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 117, -1, 10]" + "'", str22, "[0, 35, 117, -1, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 118, -1, 10]" + "'", str23, "[0, 35, 118, -1, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 119, -1, 10]" + "'", str24, "[0, 35, 119, -1, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 120, -1, 10]" + "'", str25, "[0, 35, 120, -1, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 121, -1, 10]" + "'", str26, "[0, 35, 121, -1, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 122, -1, 10]" + "'", str27, "[0, 35, 122, -1, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 123, -1, 10]" + "'", str28, "[0, 35, 123, -1, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 124, -1, 10]" + "'", str29, "[0, 35, 124, -1, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 125, -1, 10]" + "'", str30, "[0, 35, 125, -1, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 126, -1, 10]" + "'", str31, "[0, 35, 126, -1, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 127, -1, 10]" + "'", str32, "[0, 35, 127, -1, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 128, -1, 10]" + "'", str33, "[0, 35, 128, -1, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 129, -1, 10]" + "'", str34, "[0, 35, 129, -1, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 130, -1, 10]" + "'", str35, "[0, 35, 130, -1, 10]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test6044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6044");
        int[] intArray5 = new int[] { (short) 100, ' ', (byte) 100, (short) 0, '4' };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass30 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 32, 124, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 32, 101, 0, 52]" + "'", str6, "[100, 32, 101, 0, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 32, 102, 0, 52]" + "'", str7, "[100, 32, 102, 0, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 32, 103, 0, 52]" + "'", str8, "[100, 32, 103, 0, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 32, 104, 0, 52]" + "'", str9, "[100, 32, 104, 0, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 32, 105, 0, 52]" + "'", str10, "[100, 32, 105, 0, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 32, 106, 0, 52]" + "'", str11, "[100, 32, 106, 0, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 32, 107, 0, 52]" + "'", str12, "[100, 32, 107, 0, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 32, 108, 0, 52]" + "'", str13, "[100, 32, 108, 0, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 32, 109, 0, 52]" + "'", str14, "[100, 32, 109, 0, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 32, 110, 0, 52]" + "'", str15, "[100, 32, 110, 0, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 32, 111, 0, 52]" + "'", str16, "[100, 32, 111, 0, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 32, 112, 0, 52]" + "'", str17, "[100, 32, 112, 0, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 32, 113, 0, 52]" + "'", str18, "[100, 32, 113, 0, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 32, 114, 0, 52]" + "'", str19, "[100, 32, 114, 0, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 32, 115, 0, 52]" + "'", str20, "[100, 32, 115, 0, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 32, 116, 0, 52]" + "'", str21, "[100, 32, 116, 0, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 32, 117, 0, 52]" + "'", str22, "[100, 32, 117, 0, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 32, 118, 0, 52]" + "'", str23, "[100, 32, 118, 0, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 32, 119, 0, 52]" + "'", str24, "[100, 32, 119, 0, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 32, 120, 0, 52]" + "'", str25, "[100, 32, 120, 0, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 32, 121, 0, 52]" + "'", str26, "[100, 32, 121, 0, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 32, 122, 0, 52]" + "'", str27, "[100, 32, 122, 0, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 32, 123, 0, 52]" + "'", str28, "[100, 32, 123, 0, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 32, 124, 0, 52]" + "'", str29, "[100, 32, 124, 0, 52]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test6045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6045");
        int[] intArray6 = new int[] { '#', (byte) -1, (byte) 1, (-1), (short) 100, 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass72 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 5, 4, 4, 106, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, -1, 2, 0, 100, 100]" + "'", str7, "[35, -1, 2, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, -1, 3, 1, 100, 100]" + "'", str8, "[35, -1, 3, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, -1, 4, 2, 100, 100]" + "'", str9, "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, -1, 5, 3, 100, 100]" + "'", str10, "[35, -1, 5, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, -1, 6, 4, 100, 100]" + "'", str11, "[35, -1, 6, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, -1, 7, 5, 100, 100]" + "'", str12, "[35, -1, 7, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, -1, 8, 6, 100, 100]" + "'", str13, "[35, -1, 8, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, -1, 9, 7, 100, 100]" + "'", str14, "[35, -1, 9, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, -1, 10, 8, 100, 100]" + "'", str15, "[35, -1, 10, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, -1, 11, 9, 100, 100]" + "'", str16, "[35, -1, 11, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 0, 0, 0, 101, 100]" + "'", str17, "[35, 0, 0, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 0, 1, 1, 101, 100]" + "'", str18, "[35, 0, 1, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 0, 2, 2, 101, 100]" + "'", str19, "[35, 0, 2, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 0, 3, 3, 101, 100]" + "'", str20, "[35, 0, 3, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 0, 4, 4, 101, 100]" + "'", str21, "[35, 0, 4, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 0, 5, 5, 101, 100]" + "'", str22, "[35, 0, 5, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 0, 6, 6, 101, 100]" + "'", str23, "[35, 0, 6, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 0, 7, 7, 101, 100]" + "'", str24, "[35, 0, 7, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 0, 8, 8, 101, 100]" + "'", str25, "[35, 0, 8, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 0, 9, 9, 101, 100]" + "'", str26, "[35, 0, 9, 9, 101, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 1, 0, 0, 102, 100]" + "'", str27, "[35, 1, 0, 0, 102, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 1, 1, 1, 102, 100]" + "'", str28, "[35, 1, 1, 1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 1, 2, 2, 102, 100]" + "'", str29, "[35, 1, 2, 2, 102, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 1, 3, 3, 102, 100]" + "'", str30, "[35, 1, 3, 3, 102, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 1, 4, 4, 102, 100]" + "'", str31, "[35, 1, 4, 4, 102, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 1, 5, 5, 102, 100]" + "'", str32, "[35, 1, 5, 5, 102, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 6, 6, 102, 100]" + "'", str33, "[35, 1, 6, 6, 102, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 1, 7, 7, 102, 100]" + "'", str34, "[35, 1, 7, 7, 102, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 8, 8, 102, 100]" + "'", str35, "[35, 1, 8, 8, 102, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 1, 9, 9, 102, 100]" + "'", str36, "[35, 1, 9, 9, 102, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 2, 0, 0, 103, 100]" + "'", str37, "[35, 2, 0, 0, 103, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 2, 1, 1, 103, 100]" + "'", str38, "[35, 2, 1, 1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 2, 2, 2, 103, 100]" + "'", str39, "[35, 2, 2, 2, 103, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 2, 3, 3, 103, 100]" + "'", str40, "[35, 2, 3, 3, 103, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 2, 4, 4, 103, 100]" + "'", str41, "[35, 2, 4, 4, 103, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 2, 5, 5, 103, 100]" + "'", str42, "[35, 2, 5, 5, 103, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 2, 6, 6, 103, 100]" + "'", str43, "[35, 2, 6, 6, 103, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 2, 7, 7, 103, 100]" + "'", str44, "[35, 2, 7, 7, 103, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 2, 8, 8, 103, 100]" + "'", str45, "[35, 2, 8, 8, 103, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 2, 9, 9, 103, 100]" + "'", str46, "[35, 2, 9, 9, 103, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 3, 0, 0, 104, 100]" + "'", str47, "[35, 3, 0, 0, 104, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 3, 1, 1, 104, 100]" + "'", str48, "[35, 3, 1, 1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 3, 2, 2, 104, 100]" + "'", str49, "[35, 3, 2, 2, 104, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 3, 3, 3, 104, 100]" + "'", str50, "[35, 3, 3, 3, 104, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 3, 4, 4, 104, 100]" + "'", str51, "[35, 3, 4, 4, 104, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 3, 5, 5, 104, 100]" + "'", str52, "[35, 3, 5, 5, 104, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 3, 6, 6, 104, 100]" + "'", str53, "[35, 3, 6, 6, 104, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 3, 7, 7, 104, 100]" + "'", str54, "[35, 3, 7, 7, 104, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 3, 8, 8, 104, 100]" + "'", str55, "[35, 3, 8, 8, 104, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 3, 9, 9, 104, 100]" + "'", str56, "[35, 3, 9, 9, 104, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 4, 0, 0, 105, 100]" + "'", str57, "[35, 4, 0, 0, 105, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 4, 1, 1, 105, 100]" + "'", str58, "[35, 4, 1, 1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 4, 2, 2, 105, 100]" + "'", str59, "[35, 4, 2, 2, 105, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 4, 3, 3, 105, 100]" + "'", str60, "[35, 4, 3, 3, 105, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 4, 4, 4, 105, 100]" + "'", str61, "[35, 4, 4, 4, 105, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 4, 5, 5, 105, 100]" + "'", str62, "[35, 4, 5, 5, 105, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 4, 6, 6, 105, 100]" + "'", str63, "[35, 4, 6, 6, 105, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 4, 7, 7, 105, 100]" + "'", str64, "[35, 4, 7, 7, 105, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 4, 8, 8, 105, 100]" + "'", str65, "[35, 4, 8, 8, 105, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 4, 9, 9, 105, 100]" + "'", str66, "[35, 4, 9, 9, 105, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[35, 5, 0, 0, 106, 100]" + "'", str67, "[35, 5, 0, 0, 106, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[35, 5, 1, 1, 106, 100]" + "'", str68, "[35, 5, 1, 1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[35, 5, 2, 2, 106, 100]" + "'", str69, "[35, 5, 2, 2, 106, 100]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[35, 5, 3, 3, 106, 100]" + "'", str70, "[35, 5, 3, 3, 106, 100]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[35, 5, 4, 4, 106, 100]" + "'", str71, "[35, 5, 4, 4, 106, 100]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test6046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6046");
        int[] intArray5 = new int[] { 100, '#', '4', '#', (byte) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass32 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 35, 78, 35, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 35, 53, 35, 0]" + "'", str6, "[100, 35, 53, 35, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 35, 54, 35, 0]" + "'", str7, "[100, 35, 54, 35, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 35, 55, 35, 0]" + "'", str8, "[100, 35, 55, 35, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 35, 56, 35, 0]" + "'", str9, "[100, 35, 56, 35, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 35, 57, 35, 0]" + "'", str10, "[100, 35, 57, 35, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 35, 58, 35, 0]" + "'", str11, "[100, 35, 58, 35, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 35, 59, 35, 0]" + "'", str12, "[100, 35, 59, 35, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 35, 60, 35, 0]" + "'", str13, "[100, 35, 60, 35, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 35, 61, 35, 0]" + "'", str14, "[100, 35, 61, 35, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 35, 62, 35, 0]" + "'", str15, "[100, 35, 62, 35, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 35, 63, 35, 0]" + "'", str16, "[100, 35, 63, 35, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 35, 64, 35, 0]" + "'", str17, "[100, 35, 64, 35, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 35, 65, 35, 0]" + "'", str18, "[100, 35, 65, 35, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 35, 66, 35, 0]" + "'", str19, "[100, 35, 66, 35, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 35, 67, 35, 0]" + "'", str20, "[100, 35, 67, 35, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 35, 68, 35, 0]" + "'", str21, "[100, 35, 68, 35, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 35, 69, 35, 0]" + "'", str22, "[100, 35, 69, 35, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 35, 70, 35, 0]" + "'", str23, "[100, 35, 70, 35, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 35, 71, 35, 0]" + "'", str24, "[100, 35, 71, 35, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 35, 72, 35, 0]" + "'", str25, "[100, 35, 72, 35, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 35, 73, 35, 0]" + "'", str26, "[100, 35, 73, 35, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 35, 74, 35, 0]" + "'", str27, "[100, 35, 74, 35, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 35, 75, 35, 0]" + "'", str28, "[100, 35, 75, 35, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 35, 76, 35, 0]" + "'", str29, "[100, 35, 76, 35, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 35, 77, 35, 0]" + "'", str30, "[100, 35, 77, 35, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 35, 78, 35, 0]" + "'", str31, "[100, 35, 78, 35, 0]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test6047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6047");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass66 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[5]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 1]" + "'", str10, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 1]" + "'", str20, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[4]" + "'", str24, "[4]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[5]" + "'", str25, "[5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[6]" + "'", str26, "[6]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[7]" + "'", str27, "[7]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[8]" + "'", str28, "[8]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[9]" + "'", str29, "[9]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 1]" + "'", str30, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1]" + "'", str31, "[1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2]" + "'", str32, "[2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3]" + "'", str33, "[3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4]" + "'", str34, "[4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[5]" + "'", str35, "[5]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[6]" + "'", str36, "[6]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[7]" + "'", str37, "[7]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[8]" + "'", str38, "[8]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[9]" + "'", str39, "[9]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 1]" + "'", str40, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1]" + "'", str41, "[1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2]" + "'", str42, "[2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3]" + "'", str43, "[3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4]" + "'", str44, "[4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5]" + "'", str45, "[5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[6]" + "'", str46, "[6]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[7]" + "'", str47, "[7]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[8]" + "'", str48, "[8]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[9]" + "'", str49, "[9]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 1]" + "'", str50, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1]" + "'", str51, "[1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[2]" + "'", str52, "[2]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3]" + "'", str53, "[3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4]" + "'", str54, "[4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5]" + "'", str55, "[5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6]" + "'", str56, "[6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[7]" + "'", str57, "[7]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[8]" + "'", str58, "[8]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[9]" + "'", str59, "[9]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 1]" + "'", str60, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1]" + "'", str61, "[1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[2]" + "'", str62, "[2]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[3]" + "'", str63, "[3]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[4]" + "'", str64, "[4]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5]" + "'", str65, "[5]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test6048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6048");
        int[] intArray3 = new int[] { (short) 100, (short) 10, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass22 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 28, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 11, 100]" + "'", str4, "[100, 11, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 12, 100]" + "'", str5, "[100, 12, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 13, 100]" + "'", str6, "[100, 13, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 14, 100]" + "'", str7, "[100, 14, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 15, 100]" + "'", str8, "[100, 15, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 16, 100]" + "'", str9, "[100, 16, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 17, 100]" + "'", str10, "[100, 17, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 18, 100]" + "'", str11, "[100, 18, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 19, 100]" + "'", str12, "[100, 19, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 20, 100]" + "'", str13, "[100, 20, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 21, 100]" + "'", str14, "[100, 21, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 22, 100]" + "'", str15, "[100, 22, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 23, 100]" + "'", str16, "[100, 23, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 24, 100]" + "'", str17, "[100, 24, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 25, 100]" + "'", str18, "[100, 25, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 26, 100]" + "'", str19, "[100, 26, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 27, 100]" + "'", str20, "[100, 27, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 28, 100]" + "'", str21, "[100, 28, 100]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6049");
        int[] intArray5 = new int[] { (short) 0, (byte) 1, (byte) 10, (byte) -1, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass41 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 1, 45, -1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 1, 11, -1, 100]" + "'", str6, "[0, 1, 11, -1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 12, -1, 100]" + "'", str7, "[0, 1, 12, -1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 13, -1, 100]" + "'", str8, "[0, 1, 13, -1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 14, -1, 100]" + "'", str9, "[0, 1, 14, -1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 15, -1, 100]" + "'", str10, "[0, 1, 15, -1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 16, -1, 100]" + "'", str11, "[0, 1, 16, -1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 17, -1, 100]" + "'", str12, "[0, 1, 17, -1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 18, -1, 100]" + "'", str13, "[0, 1, 18, -1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 19, -1, 100]" + "'", str14, "[0, 1, 19, -1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 20, -1, 100]" + "'", str15, "[0, 1, 20, -1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 21, -1, 100]" + "'", str16, "[0, 1, 21, -1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 1, 22, -1, 100]" + "'", str17, "[0, 1, 22, -1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 1, 23, -1, 100]" + "'", str18, "[0, 1, 23, -1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 1, 24, -1, 100]" + "'", str19, "[0, 1, 24, -1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 1, 25, -1, 100]" + "'", str20, "[0, 1, 25, -1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 1, 26, -1, 100]" + "'", str21, "[0, 1, 26, -1, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 1, 27, -1, 100]" + "'", str22, "[0, 1, 27, -1, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 1, 28, -1, 100]" + "'", str23, "[0, 1, 28, -1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 1, 29, -1, 100]" + "'", str24, "[0, 1, 29, -1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 1, 30, -1, 100]" + "'", str25, "[0, 1, 30, -1, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 1, 31, -1, 100]" + "'", str26, "[0, 1, 31, -1, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 1, 32, -1, 100]" + "'", str27, "[0, 1, 32, -1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 1, 33, -1, 100]" + "'", str28, "[0, 1, 33, -1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 1, 34, -1, 100]" + "'", str29, "[0, 1, 34, -1, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 1, 35, -1, 100]" + "'", str30, "[0, 1, 35, -1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 1, 36, -1, 100]" + "'", str31, "[0, 1, 36, -1, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 1, 37, -1, 100]" + "'", str32, "[0, 1, 37, -1, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 1, 38, -1, 100]" + "'", str33, "[0, 1, 38, -1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 1, 39, -1, 100]" + "'", str34, "[0, 1, 39, -1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 1, 40, -1, 100]" + "'", str35, "[0, 1, 40, -1, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 1, 41, -1, 100]" + "'", str36, "[0, 1, 41, -1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 1, 42, -1, 100]" + "'", str37, "[0, 1, 42, -1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 1, 43, -1, 100]" + "'", str38, "[0, 1, 43, -1, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 1, 44, -1, 100]" + "'", str39, "[0, 1, 44, -1, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 1, 45, -1, 100]" + "'", str40, "[0, 1, 45, -1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test6050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6050");
        int[] intArray5 = new int[] { (short) 100, ' ', (byte) 100, (short) 0, '4' };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass32 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 32, 126, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 32, 101, 0, 52]" + "'", str6, "[100, 32, 101, 0, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 32, 102, 0, 52]" + "'", str7, "[100, 32, 102, 0, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 32, 103, 0, 52]" + "'", str8, "[100, 32, 103, 0, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 32, 104, 0, 52]" + "'", str9, "[100, 32, 104, 0, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 32, 105, 0, 52]" + "'", str10, "[100, 32, 105, 0, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 32, 106, 0, 52]" + "'", str11, "[100, 32, 106, 0, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 32, 107, 0, 52]" + "'", str12, "[100, 32, 107, 0, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 32, 108, 0, 52]" + "'", str13, "[100, 32, 108, 0, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 32, 109, 0, 52]" + "'", str14, "[100, 32, 109, 0, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 32, 110, 0, 52]" + "'", str15, "[100, 32, 110, 0, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 32, 111, 0, 52]" + "'", str16, "[100, 32, 111, 0, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 32, 112, 0, 52]" + "'", str17, "[100, 32, 112, 0, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 32, 113, 0, 52]" + "'", str18, "[100, 32, 113, 0, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 32, 114, 0, 52]" + "'", str19, "[100, 32, 114, 0, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 32, 115, 0, 52]" + "'", str20, "[100, 32, 115, 0, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 32, 116, 0, 52]" + "'", str21, "[100, 32, 116, 0, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 32, 117, 0, 52]" + "'", str22, "[100, 32, 117, 0, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 32, 118, 0, 52]" + "'", str23, "[100, 32, 118, 0, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 32, 119, 0, 52]" + "'", str24, "[100, 32, 119, 0, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 32, 120, 0, 52]" + "'", str25, "[100, 32, 120, 0, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 32, 121, 0, 52]" + "'", str26, "[100, 32, 121, 0, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 32, 122, 0, 52]" + "'", str27, "[100, 32, 122, 0, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 32, 123, 0, 52]" + "'", str28, "[100, 32, 123, 0, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 32, 124, 0, 52]" + "'", str29, "[100, 32, 124, 0, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 32, 125, 0, 52]" + "'", str30, "[100, 32, 125, 0, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 32, 126, 0, 52]" + "'", str31, "[100, 32, 126, 0, 52]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test6051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6051");
        int[] intArray5 = new int[] { (short) 100, ' ', (byte) 100, (short) 0, '4' };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass26 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 32, 120, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 32, 101, 0, 52]" + "'", str6, "[100, 32, 101, 0, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 32, 102, 0, 52]" + "'", str7, "[100, 32, 102, 0, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 32, 103, 0, 52]" + "'", str8, "[100, 32, 103, 0, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 32, 104, 0, 52]" + "'", str9, "[100, 32, 104, 0, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 32, 105, 0, 52]" + "'", str10, "[100, 32, 105, 0, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 32, 106, 0, 52]" + "'", str11, "[100, 32, 106, 0, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 32, 107, 0, 52]" + "'", str12, "[100, 32, 107, 0, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 32, 108, 0, 52]" + "'", str13, "[100, 32, 108, 0, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 32, 109, 0, 52]" + "'", str14, "[100, 32, 109, 0, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 32, 110, 0, 52]" + "'", str15, "[100, 32, 110, 0, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 32, 111, 0, 52]" + "'", str16, "[100, 32, 111, 0, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 32, 112, 0, 52]" + "'", str17, "[100, 32, 112, 0, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 32, 113, 0, 52]" + "'", str18, "[100, 32, 113, 0, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 32, 114, 0, 52]" + "'", str19, "[100, 32, 114, 0, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 32, 115, 0, 52]" + "'", str20, "[100, 32, 115, 0, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 32, 116, 0, 52]" + "'", str21, "[100, 32, 116, 0, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 32, 117, 0, 52]" + "'", str22, "[100, 32, 117, 0, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 32, 118, 0, 52]" + "'", str23, "[100, 32, 118, 0, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 32, 119, 0, 52]" + "'", str24, "[100, 32, 119, 0, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 32, 120, 0, 52]" + "'", str25, "[100, 32, 120, 0, 52]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test6052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6052");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass74 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[7, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 7, 100]" + "'", str10, "[0, 106, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 8, 100]" + "'", str11, "[0, 107, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 9, 100]" + "'", str12, "[0, 108, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 101]" + "'", str13, "[1, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 1, 101]" + "'", str14, "[1, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 2, 101]" + "'", str15, "[1, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 3, 101]" + "'", str16, "[1, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 4, 101]" + "'", str17, "[1, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 5, 101]" + "'", str18, "[1, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 6, 101]" + "'", str19, "[1, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 7, 101]" + "'", str20, "[1, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 8, 101]" + "'", str21, "[1, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 9, 101]" + "'", str22, "[1, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 0, 102]" + "'", str23, "[2, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1, 102]" + "'", str24, "[2, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 2, 102]" + "'", str25, "[2, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 3, 102]" + "'", str26, "[2, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 4, 102]" + "'", str27, "[2, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 5, 102]" + "'", str28, "[2, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 6, 102]" + "'", str29, "[2, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 7, 102]" + "'", str30, "[2, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 8, 102]" + "'", str31, "[2, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 9, 102]" + "'", str32, "[2, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 0, 103]" + "'", str33, "[3, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 1, 103]" + "'", str34, "[3, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2, 103]" + "'", str35, "[3, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 3, 103]" + "'", str36, "[3, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 4, 103]" + "'", str37, "[3, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 5, 103]" + "'", str38, "[3, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 6, 6, 103]" + "'", str39, "[3, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 7, 7, 103]" + "'", str40, "[3, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 8, 8, 103]" + "'", str41, "[3, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 9, 9, 103]" + "'", str42, "[3, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 0, 0, 104]" + "'", str43, "[4, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 1, 1, 104]" + "'", str44, "[4, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 2, 2, 104]" + "'", str45, "[4, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 3, 3, 104]" + "'", str46, "[4, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4, 4, 104]" + "'", str47, "[4, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 5, 5, 104]" + "'", str48, "[4, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 6, 6, 104]" + "'", str49, "[4, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 7, 7, 104]" + "'", str50, "[4, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 8, 8, 104]" + "'", str51, "[4, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 9, 9, 104]" + "'", str52, "[4, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 0, 0, 105]" + "'", str53, "[5, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 1, 1, 105]" + "'", str54, "[5, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 2, 2, 105]" + "'", str55, "[5, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 3, 3, 105]" + "'", str56, "[5, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 4, 4, 105]" + "'", str57, "[5, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5, 5, 105]" + "'", str58, "[5, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 6, 6, 105]" + "'", str59, "[5, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 7, 7, 105]" + "'", str60, "[5, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 8, 8, 105]" + "'", str61, "[5, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 9, 9, 105]" + "'", str62, "[5, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 0, 0, 106]" + "'", str63, "[6, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[6, 1, 1, 106]" + "'", str64, "[6, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 2, 2, 106]" + "'", str65, "[6, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 3, 3, 106]" + "'", str66, "[6, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 4, 4, 106]" + "'", str67, "[6, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 5, 5, 106]" + "'", str68, "[6, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6, 6, 106]" + "'", str69, "[6, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 7, 7, 106]" + "'", str70, "[6, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 8, 8, 106]" + "'", str71, "[6, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[6, 9, 9, 106]" + "'", str72, "[6, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 0, 0, 107]" + "'", str73, "[7, 0, 0, 107]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test6053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6053");
        int[] intArray6 = new int[] { ' ', '#', (short) 1, (short) 10, '#', 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass36 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 35, 30, 39, 35, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 35, 2, 11, 35, 100]" + "'", str7, "[32, 35, 2, 11, 35, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 35, 3, 12, 35, 100]" + "'", str8, "[32, 35, 3, 12, 35, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 35, 4, 13, 35, 100]" + "'", str9, "[32, 35, 4, 13, 35, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 35, 5, 14, 35, 100]" + "'", str10, "[32, 35, 5, 14, 35, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 35, 6, 15, 35, 100]" + "'", str11, "[32, 35, 6, 15, 35, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 35, 7, 16, 35, 100]" + "'", str12, "[32, 35, 7, 16, 35, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 35, 8, 17, 35, 100]" + "'", str13, "[32, 35, 8, 17, 35, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 35, 9, 18, 35, 100]" + "'", str14, "[32, 35, 9, 18, 35, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 35, 10, 19, 35, 100]" + "'", str15, "[32, 35, 10, 19, 35, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 35, 11, 20, 35, 100]" + "'", str16, "[32, 35, 11, 20, 35, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 35, 12, 21, 35, 100]" + "'", str17, "[32, 35, 12, 21, 35, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 35, 13, 22, 35, 100]" + "'", str18, "[32, 35, 13, 22, 35, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 35, 14, 23, 35, 100]" + "'", str19, "[32, 35, 14, 23, 35, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 35, 15, 24, 35, 100]" + "'", str20, "[32, 35, 15, 24, 35, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 35, 16, 25, 35, 100]" + "'", str21, "[32, 35, 16, 25, 35, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 35, 17, 26, 35, 100]" + "'", str22, "[32, 35, 17, 26, 35, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 35, 18, 27, 35, 100]" + "'", str23, "[32, 35, 18, 27, 35, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 35, 19, 28, 35, 100]" + "'", str24, "[32, 35, 19, 28, 35, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 35, 20, 29, 35, 100]" + "'", str25, "[32, 35, 20, 29, 35, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 35, 21, 30, 35, 100]" + "'", str26, "[32, 35, 21, 30, 35, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 35, 22, 31, 35, 100]" + "'", str27, "[32, 35, 22, 31, 35, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 35, 23, 32, 35, 100]" + "'", str28, "[32, 35, 23, 32, 35, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 35, 24, 33, 35, 100]" + "'", str29, "[32, 35, 24, 33, 35, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 35, 25, 34, 35, 100]" + "'", str30, "[32, 35, 25, 34, 35, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 35, 26, 35, 35, 100]" + "'", str31, "[32, 35, 26, 35, 35, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 35, 27, 36, 35, 100]" + "'", str32, "[32, 35, 27, 36, 35, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 35, 28, 37, 35, 100]" + "'", str33, "[32, 35, 28, 37, 35, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 35, 29, 38, 35, 100]" + "'", str34, "[32, 35, 29, 38, 35, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 35, 30, 39, 35, 100]" + "'", str35, "[32, 35, 30, 39, 35, 100]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test6054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6054");
        int[] intArray5 = new int[] { (byte) 0, '#', 100, (byte) -1, (short) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass32 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 126, -1, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 101, -1, 10]" + "'", str6, "[0, 35, 101, -1, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 102, -1, 10]" + "'", str7, "[0, 35, 102, -1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 103, -1, 10]" + "'", str8, "[0, 35, 103, -1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 104, -1, 10]" + "'", str9, "[0, 35, 104, -1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 105, -1, 10]" + "'", str10, "[0, 35, 105, -1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 106, -1, 10]" + "'", str11, "[0, 35, 106, -1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 107, -1, 10]" + "'", str12, "[0, 35, 107, -1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 108, -1, 10]" + "'", str13, "[0, 35, 108, -1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 109, -1, 10]" + "'", str14, "[0, 35, 109, -1, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 110, -1, 10]" + "'", str15, "[0, 35, 110, -1, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 111, -1, 10]" + "'", str16, "[0, 35, 111, -1, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 112, -1, 10]" + "'", str17, "[0, 35, 112, -1, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 113, -1, 10]" + "'", str18, "[0, 35, 113, -1, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 114, -1, 10]" + "'", str19, "[0, 35, 114, -1, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 115, -1, 10]" + "'", str20, "[0, 35, 115, -1, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 116, -1, 10]" + "'", str21, "[0, 35, 116, -1, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 117, -1, 10]" + "'", str22, "[0, 35, 117, -1, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 118, -1, 10]" + "'", str23, "[0, 35, 118, -1, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 119, -1, 10]" + "'", str24, "[0, 35, 119, -1, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 120, -1, 10]" + "'", str25, "[0, 35, 120, -1, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 121, -1, 10]" + "'", str26, "[0, 35, 121, -1, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 122, -1, 10]" + "'", str27, "[0, 35, 122, -1, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 123, -1, 10]" + "'", str28, "[0, 35, 123, -1, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 124, -1, 10]" + "'", str29, "[0, 35, 124, -1, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 125, -1, 10]" + "'", str30, "[0, 35, 125, -1, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 126, -1, 10]" + "'", str31, "[0, 35, 126, -1, 10]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test6055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6055");
        int[] intArray4 = new int[] { 0, (byte) 100, (byte) 100, (byte) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass20 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 115, 115, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 101, 100]" + "'", str5, "[0, 101, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 102, 100]" + "'", str6, "[0, 102, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 103, 100]" + "'", str7, "[0, 103, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 104, 100]" + "'", str8, "[0, 104, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 105, 100]" + "'", str9, "[0, 105, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 106, 100]" + "'", str10, "[0, 106, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 107, 100]" + "'", str11, "[0, 107, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 108, 100]" + "'", str12, "[0, 108, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 109, 100]" + "'", str13, "[0, 109, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 110, 100]" + "'", str14, "[0, 110, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 111, 111, 100]" + "'", str15, "[0, 111, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 112, 112, 100]" + "'", str16, "[0, 112, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 113, 113, 100]" + "'", str17, "[0, 113, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 114, 114, 100]" + "'", str18, "[0, 114, 114, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 115, 115, 100]" + "'", str19, "[0, 115, 115, 100]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6056");
        int[] intArray3 = new int[] { (short) 0, '#', ' ' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass49 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 80, 32]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 36, 32]" + "'", str4, "[0, 36, 32]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 37, 32]" + "'", str5, "[0, 37, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 38, 32]" + "'", str6, "[0, 38, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 39, 32]" + "'", str7, "[0, 39, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 40, 32]" + "'", str8, "[0, 40, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 41, 32]" + "'", str9, "[0, 41, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 42, 32]" + "'", str10, "[0, 42, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 43, 32]" + "'", str11, "[0, 43, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 44, 32]" + "'", str12, "[0, 44, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 45, 32]" + "'", str13, "[0, 45, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 46, 32]" + "'", str14, "[0, 46, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 47, 32]" + "'", str15, "[0, 47, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 48, 32]" + "'", str16, "[0, 48, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 49, 32]" + "'", str17, "[0, 49, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 50, 32]" + "'", str18, "[0, 50, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 51, 32]" + "'", str19, "[0, 51, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 52, 32]" + "'", str20, "[0, 52, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 53, 32]" + "'", str21, "[0, 53, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 54, 32]" + "'", str22, "[0, 54, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 55, 32]" + "'", str23, "[0, 55, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 56, 32]" + "'", str24, "[0, 56, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 57, 32]" + "'", str25, "[0, 57, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 58, 32]" + "'", str26, "[0, 58, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 59, 32]" + "'", str27, "[0, 59, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 60, 32]" + "'", str28, "[0, 60, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 61, 32]" + "'", str29, "[0, 61, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 62, 32]" + "'", str30, "[0, 62, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 63, 32]" + "'", str31, "[0, 63, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 64, 32]" + "'", str32, "[0, 64, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 65, 32]" + "'", str33, "[0, 65, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 66, 32]" + "'", str34, "[0, 66, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 67, 32]" + "'", str35, "[0, 67, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 68, 32]" + "'", str36, "[0, 68, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 69, 32]" + "'", str37, "[0, 69, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 70, 32]" + "'", str38, "[0, 70, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 71, 32]" + "'", str39, "[0, 71, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 72, 32]" + "'", str40, "[0, 72, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 73, 32]" + "'", str41, "[0, 73, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 74, 32]" + "'", str42, "[0, 74, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 75, 32]" + "'", str43, "[0, 75, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 76, 32]" + "'", str44, "[0, 76, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 77, 32]" + "'", str45, "[0, 77, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 78, 32]" + "'", str46, "[0, 78, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 79, 32]" + "'", str47, "[0, 79, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 80, 32]" + "'", str48, "[0, 80, 32]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test6057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6057");
        int[] intArray4 = new int[] { 100, (byte) 100, (byte) 100, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass67 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 162, 162, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 101, 101, 0]" + "'", str5, "[100, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 102, 102, 0]" + "'", str6, "[100, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 103, 103, 0]" + "'", str7, "[100, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 104, 104, 0]" + "'", str8, "[100, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 105, 105, 0]" + "'", str9, "[100, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 106, 106, 0]" + "'", str10, "[100, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 107, 107, 0]" + "'", str11, "[100, 107, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 108, 108, 0]" + "'", str12, "[100, 108, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 109, 109, 0]" + "'", str13, "[100, 109, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 110, 110, 0]" + "'", str14, "[100, 110, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 111, 111, 0]" + "'", str15, "[100, 111, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 112, 112, 0]" + "'", str16, "[100, 112, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 113, 113, 0]" + "'", str17, "[100, 113, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 114, 114, 0]" + "'", str18, "[100, 114, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 115, 115, 0]" + "'", str19, "[100, 115, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 116, 116, 0]" + "'", str20, "[100, 116, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 117, 117, 0]" + "'", str21, "[100, 117, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 118, 118, 0]" + "'", str22, "[100, 118, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 119, 119, 0]" + "'", str23, "[100, 119, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 120, 120, 0]" + "'", str24, "[100, 120, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 121, 121, 0]" + "'", str25, "[100, 121, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 122, 122, 0]" + "'", str26, "[100, 122, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 123, 123, 0]" + "'", str27, "[100, 123, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 124, 124, 0]" + "'", str28, "[100, 124, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 125, 125, 0]" + "'", str29, "[100, 125, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 126, 126, 0]" + "'", str30, "[100, 126, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 127, 127, 0]" + "'", str31, "[100, 127, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 128, 128, 0]" + "'", str32, "[100, 128, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 129, 129, 0]" + "'", str33, "[100, 129, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 130, 130, 0]" + "'", str34, "[100, 130, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 131, 131, 0]" + "'", str35, "[100, 131, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 132, 132, 0]" + "'", str36, "[100, 132, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 133, 133, 0]" + "'", str37, "[100, 133, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 134, 134, 0]" + "'", str38, "[100, 134, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 135, 135, 0]" + "'", str39, "[100, 135, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 136, 136, 0]" + "'", str40, "[100, 136, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 137, 137, 0]" + "'", str41, "[100, 137, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 138, 138, 0]" + "'", str42, "[100, 138, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 139, 139, 0]" + "'", str43, "[100, 139, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 140, 140, 0]" + "'", str44, "[100, 140, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 141, 141, 0]" + "'", str45, "[100, 141, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 142, 142, 0]" + "'", str46, "[100, 142, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 143, 143, 0]" + "'", str47, "[100, 143, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 144, 144, 0]" + "'", str48, "[100, 144, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 145, 145, 0]" + "'", str49, "[100, 145, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 146, 146, 0]" + "'", str50, "[100, 146, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 147, 147, 0]" + "'", str51, "[100, 147, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 148, 148, 0]" + "'", str52, "[100, 148, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 149, 149, 0]" + "'", str53, "[100, 149, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 150, 150, 0]" + "'", str54, "[100, 150, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 151, 151, 0]" + "'", str55, "[100, 151, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 152, 152, 0]" + "'", str56, "[100, 152, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 153, 153, 0]" + "'", str57, "[100, 153, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 154, 154, 0]" + "'", str58, "[100, 154, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 155, 155, 0]" + "'", str59, "[100, 155, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 156, 156, 0]" + "'", str60, "[100, 156, 156, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 157, 157, 0]" + "'", str61, "[100, 157, 157, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 158, 158, 0]" + "'", str62, "[100, 158, 158, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 159, 159, 0]" + "'", str63, "[100, 159, 159, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 160, 160, 0]" + "'", str64, "[100, 160, 160, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 161, 161, 0]" + "'", str65, "[100, 161, 161, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 162, 162, 0]" + "'", str66, "[100, 162, 162, 0]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test6058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6058");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass97 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[130]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[87]" + "'", str53, "[87]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[88]" + "'", str54, "[88]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[89]" + "'", str55, "[89]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[90]" + "'", str56, "[90]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[91]" + "'", str57, "[91]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[92]" + "'", str58, "[92]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[93]" + "'", str59, "[93]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[94]" + "'", str60, "[94]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[95]" + "'", str61, "[95]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[96]" + "'", str62, "[96]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97]" + "'", str63, "[97]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[98]" + "'", str64, "[98]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[99]" + "'", str65, "[99]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100]" + "'", str66, "[100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[101]" + "'", str67, "[101]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[102]" + "'", str68, "[102]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[103]" + "'", str69, "[103]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[104]" + "'", str70, "[104]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[105]" + "'", str71, "[105]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[106]" + "'", str72, "[106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[107]" + "'", str73, "[107]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[108]" + "'", str74, "[108]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[109]" + "'", str75, "[109]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[110]" + "'", str76, "[110]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[111]" + "'", str77, "[111]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[112]" + "'", str78, "[112]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[113]" + "'", str79, "[113]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[114]" + "'", str80, "[114]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[115]" + "'", str81, "[115]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[116]" + "'", str82, "[116]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[117]" + "'", str83, "[117]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[118]" + "'", str84, "[118]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[119]" + "'", str85, "[119]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[120]" + "'", str86, "[120]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[121]" + "'", str87, "[121]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[122]" + "'", str88, "[122]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[123]" + "'", str89, "[123]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[124]" + "'", str90, "[124]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[125]" + "'", str91, "[125]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[126]" + "'", str92, "[126]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[127]" + "'", str93, "[127]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[128]" + "'", str94, "[128]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[129]" + "'", str95, "[129]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[130]" + "'", str96, "[130]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test6059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6059");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str98 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str99 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[198]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[177]" + "'", str78, "[177]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[178]" + "'", str79, "[178]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[179]" + "'", str80, "[179]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[180]" + "'", str81, "[180]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[181]" + "'", str82, "[181]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[182]" + "'", str83, "[182]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[183]" + "'", str84, "[183]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[184]" + "'", str85, "[184]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[185]" + "'", str86, "[185]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[186]" + "'", str87, "[186]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[187]" + "'", str88, "[187]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[188]" + "'", str89, "[188]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[189]" + "'", str90, "[189]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[190]" + "'", str91, "[190]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[191]" + "'", str92, "[191]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[192]" + "'", str93, "[192]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[193]" + "'", str94, "[193]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[194]" + "'", str95, "[194]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[195]" + "'", str96, "[195]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[196]" + "'", str97, "[196]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[197]" + "'", str98, "[197]");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[198]" + "'", str99, "[198]");
    }

    @Test
    public void test6060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6060");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass98 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 143, 123, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 77, 57, 100, 52]" + "'", str31, "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 78, 58, 100, 52]" + "'", str32, "[-1, 100, 78, 58, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 79, 59, 100, 52]" + "'", str33, "[-1, 100, 79, 59, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 80, 60, 100, 52]" + "'", str34, "[-1, 100, 80, 60, 100, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 81, 61, 100, 52]" + "'", str35, "[-1, 100, 81, 61, 100, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 82, 62, 100, 52]" + "'", str36, "[-1, 100, 82, 62, 100, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 83, 63, 100, 52]" + "'", str37, "[-1, 100, 83, 63, 100, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 100, 84, 64, 100, 52]" + "'", str38, "[-1, 100, 84, 64, 100, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 100, 85, 65, 100, 52]" + "'", str39, "[-1, 100, 85, 65, 100, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 100, 86, 66, 100, 52]" + "'", str40, "[-1, 100, 86, 66, 100, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 100, 87, 67, 100, 52]" + "'", str41, "[-1, 100, 87, 67, 100, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 100, 88, 68, 100, 52]" + "'", str42, "[-1, 100, 88, 68, 100, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 100, 89, 69, 100, 52]" + "'", str43, "[-1, 100, 89, 69, 100, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 100, 90, 70, 100, 52]" + "'", str44, "[-1, 100, 90, 70, 100, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 100, 91, 71, 100, 52]" + "'", str45, "[-1, 100, 91, 71, 100, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 100, 92, 72, 100, 52]" + "'", str46, "[-1, 100, 92, 72, 100, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 100, 93, 73, 100, 52]" + "'", str47, "[-1, 100, 93, 73, 100, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 100, 94, 74, 100, 52]" + "'", str48, "[-1, 100, 94, 74, 100, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 100, 95, 75, 100, 52]" + "'", str49, "[-1, 100, 95, 75, 100, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 100, 96, 76, 100, 52]" + "'", str50, "[-1, 100, 96, 76, 100, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 100, 97, 77, 100, 52]" + "'", str51, "[-1, 100, 97, 77, 100, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 98, 78, 100, 52]" + "'", str52, "[-1, 100, 98, 78, 100, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 100, 99, 79, 100, 52]" + "'", str53, "[-1, 100, 99, 79, 100, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 100, 100, 80, 100, 52]" + "'", str54, "[-1, 100, 100, 80, 100, 52]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 100, 101, 81, 100, 52]" + "'", str55, "[-1, 100, 101, 81, 100, 52]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 100, 102, 82, 100, 52]" + "'", str56, "[-1, 100, 102, 82, 100, 52]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 100, 103, 83, 100, 52]" + "'", str57, "[-1, 100, 103, 83, 100, 52]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 100, 104, 84, 100, 52]" + "'", str58, "[-1, 100, 104, 84, 100, 52]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 100, 105, 85, 100, 52]" + "'", str59, "[-1, 100, 105, 85, 100, 52]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 100, 106, 86, 100, 52]" + "'", str60, "[-1, 100, 106, 86, 100, 52]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 100, 107, 87, 100, 52]" + "'", str61, "[-1, 100, 107, 87, 100, 52]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 100, 108, 88, 100, 52]" + "'", str62, "[-1, 100, 108, 88, 100, 52]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 100, 109, 89, 100, 52]" + "'", str63, "[-1, 100, 109, 89, 100, 52]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[-1, 100, 110, 90, 100, 52]" + "'", str64, "[-1, 100, 110, 90, 100, 52]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[-1, 100, 111, 91, 100, 52]" + "'", str65, "[-1, 100, 111, 91, 100, 52]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[-1, 100, 112, 92, 100, 52]" + "'", str66, "[-1, 100, 112, 92, 100, 52]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[-1, 100, 113, 93, 100, 52]" + "'", str67, "[-1, 100, 113, 93, 100, 52]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[-1, 100, 114, 94, 100, 52]" + "'", str68, "[-1, 100, 114, 94, 100, 52]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[-1, 100, 115, 95, 100, 52]" + "'", str69, "[-1, 100, 115, 95, 100, 52]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[-1, 100, 116, 96, 100, 52]" + "'", str70, "[-1, 100, 116, 96, 100, 52]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[-1, 100, 117, 97, 100, 52]" + "'", str71, "[-1, 100, 117, 97, 100, 52]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[-1, 100, 118, 98, 100, 52]" + "'", str72, "[-1, 100, 118, 98, 100, 52]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[-1, 100, 119, 99, 100, 52]" + "'", str73, "[-1, 100, 119, 99, 100, 52]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[-1, 100, 120, 100, 100, 52]" + "'", str74, "[-1, 100, 120, 100, 100, 52]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[-1, 100, 121, 101, 100, 52]" + "'", str75, "[-1, 100, 121, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[-1, 100, 122, 102, 100, 52]" + "'", str76, "[-1, 100, 122, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[-1, 100, 123, 103, 100, 52]" + "'", str77, "[-1, 100, 123, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[-1, 100, 124, 104, 100, 52]" + "'", str78, "[-1, 100, 124, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[-1, 100, 125, 105, 100, 52]" + "'", str79, "[-1, 100, 125, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[-1, 100, 126, 106, 100, 52]" + "'", str80, "[-1, 100, 126, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[-1, 100, 127, 107, 100, 52]" + "'", str81, "[-1, 100, 127, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[-1, 100, 128, 108, 100, 52]" + "'", str82, "[-1, 100, 128, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[-1, 100, 129, 109, 100, 52]" + "'", str83, "[-1, 100, 129, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[-1, 100, 130, 110, 100, 52]" + "'", str84, "[-1, 100, 130, 110, 100, 52]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[-1, 100, 131, 111, 100, 52]" + "'", str85, "[-1, 100, 131, 111, 100, 52]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[-1, 100, 132, 112, 100, 52]" + "'", str86, "[-1, 100, 132, 112, 100, 52]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[-1, 100, 133, 113, 100, 52]" + "'", str87, "[-1, 100, 133, 113, 100, 52]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[-1, 100, 134, 114, 100, 52]" + "'", str88, "[-1, 100, 134, 114, 100, 52]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[-1, 100, 135, 115, 100, 52]" + "'", str89, "[-1, 100, 135, 115, 100, 52]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[-1, 100, 136, 116, 100, 52]" + "'", str90, "[-1, 100, 136, 116, 100, 52]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[-1, 100, 137, 117, 100, 52]" + "'", str91, "[-1, 100, 137, 117, 100, 52]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[-1, 100, 138, 118, 100, 52]" + "'", str92, "[-1, 100, 138, 118, 100, 52]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[-1, 100, 139, 119, 100, 52]" + "'", str93, "[-1, 100, 139, 119, 100, 52]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[-1, 100, 140, 120, 100, 52]" + "'", str94, "[-1, 100, 140, 120, 100, 52]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[-1, 100, 141, 121, 100, 52]" + "'", str95, "[-1, 100, 141, 121, 100, 52]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[-1, 100, 142, 122, 100, 52]" + "'", str96, "[-1, 100, 142, 122, 100, 52]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[-1, 100, 143, 123, 100, 52]" + "'", str97, "[-1, 100, 143, 123, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test6061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6061");
        int[] intArray3 = new int[] { (byte) 1, (byte) 100, (short) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass27 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 101, 100]" + "'", str4, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 102, 100]" + "'", str5, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 103, 100]" + "'", str6, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 104, 100]" + "'", str7, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 105, 100]" + "'", str8, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 106, 100]" + "'", str9, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 107, 100]" + "'", str10, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 108, 100]" + "'", str11, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 109, 100]" + "'", str12, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 110, 100]" + "'", str13, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 111, 100]" + "'", str14, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 112, 100]" + "'", str15, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 113, 100]" + "'", str16, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 114, 100]" + "'", str17, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 115, 100]" + "'", str18, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 116, 100]" + "'", str19, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 117, 100]" + "'", str20, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 118, 100]" + "'", str21, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 119, 100]" + "'", str22, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 120, 100]" + "'", str23, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 121, 100]" + "'", str24, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 122, 100]" + "'", str25, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 123, 100]" + "'", str26, "[1, 123, 100]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test6062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6062");
        int[] intArray4 = new int[] { (short) 0, (byte) 10, 0, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass51 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[4, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 1, 100]" + "'", str5, "[0, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 2, 100]" + "'", str6, "[0, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 3, 100]" + "'", str7, "[0, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 4, 100]" + "'", str8, "[0, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 5, 100]" + "'", str9, "[0, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 6, 100]" + "'", str10, "[0, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 7, 100]" + "'", str11, "[0, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 8, 100]" + "'", str12, "[0, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 9, 100]" + "'", str13, "[0, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 0, 101]" + "'", str14, "[1, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 1, 101]" + "'", str15, "[1, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101]" + "'", str16, "[1, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 3, 101]" + "'", str17, "[1, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 4, 101]" + "'", str18, "[1, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 5, 101]" + "'", str19, "[1, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 6, 101]" + "'", str20, "[1, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 7, 101]" + "'", str21, "[1, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 8, 101]" + "'", str22, "[1, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 9, 101]" + "'", str23, "[1, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 0, 102]" + "'", str24, "[2, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 1, 102]" + "'", str25, "[2, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 2, 102]" + "'", str26, "[2, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 3, 102]" + "'", str27, "[2, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 4, 102]" + "'", str28, "[2, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 5, 102]" + "'", str29, "[2, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 6, 102]" + "'", str30, "[2, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 7, 102]" + "'", str31, "[2, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 8, 102]" + "'", str32, "[2, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 9, 102]" + "'", str33, "[2, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 0, 103]" + "'", str34, "[3, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 1, 103]" + "'", str35, "[3, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 2, 103]" + "'", str36, "[3, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 3, 103]" + "'", str37, "[3, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 4, 103]" + "'", str38, "[3, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 5, 103]" + "'", str39, "[3, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 6, 103]" + "'", str40, "[3, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 7, 103]" + "'", str41, "[3, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 8, 103]" + "'", str42, "[3, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 9, 103]" + "'", str43, "[3, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 0, 104]" + "'", str44, "[4, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 1, 104]" + "'", str45, "[4, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 2, 104]" + "'", str46, "[4, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 3, 104]" + "'", str47, "[4, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 4, 104]" + "'", str48, "[4, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 5, 104]" + "'", str49, "[4, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 6, 104]" + "'", str50, "[4, 6, 6, 104]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test6063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6063");
        int[] intArray5 = new int[] { (byte) 0, '#', 100, (byte) -1, (short) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass35 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 129, -1, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 101, -1, 10]" + "'", str6, "[0, 35, 101, -1, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 102, -1, 10]" + "'", str7, "[0, 35, 102, -1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 103, -1, 10]" + "'", str8, "[0, 35, 103, -1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 104, -1, 10]" + "'", str9, "[0, 35, 104, -1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 105, -1, 10]" + "'", str10, "[0, 35, 105, -1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 106, -1, 10]" + "'", str11, "[0, 35, 106, -1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 107, -1, 10]" + "'", str12, "[0, 35, 107, -1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 108, -1, 10]" + "'", str13, "[0, 35, 108, -1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 109, -1, 10]" + "'", str14, "[0, 35, 109, -1, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 110, -1, 10]" + "'", str15, "[0, 35, 110, -1, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 111, -1, 10]" + "'", str16, "[0, 35, 111, -1, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 112, -1, 10]" + "'", str17, "[0, 35, 112, -1, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 113, -1, 10]" + "'", str18, "[0, 35, 113, -1, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 114, -1, 10]" + "'", str19, "[0, 35, 114, -1, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 115, -1, 10]" + "'", str20, "[0, 35, 115, -1, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 116, -1, 10]" + "'", str21, "[0, 35, 116, -1, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 117, -1, 10]" + "'", str22, "[0, 35, 117, -1, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 118, -1, 10]" + "'", str23, "[0, 35, 118, -1, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 119, -1, 10]" + "'", str24, "[0, 35, 119, -1, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 120, -1, 10]" + "'", str25, "[0, 35, 120, -1, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 121, -1, 10]" + "'", str26, "[0, 35, 121, -1, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 122, -1, 10]" + "'", str27, "[0, 35, 122, -1, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 123, -1, 10]" + "'", str28, "[0, 35, 123, -1, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 124, -1, 10]" + "'", str29, "[0, 35, 124, -1, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 125, -1, 10]" + "'", str30, "[0, 35, 125, -1, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 126, -1, 10]" + "'", str31, "[0, 35, 126, -1, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 127, -1, 10]" + "'", str32, "[0, 35, 127, -1, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 128, -1, 10]" + "'", str33, "[0, 35, 128, -1, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 129, -1, 10]" + "'", str34, "[0, 35, 129, -1, 10]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test6064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6064");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass68 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 114, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 58, 1, 100]" + "'", str11, "[100, 10, 58, 1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 59, 1, 100]" + "'", str12, "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 60, 1, 100]" + "'", str13, "[100, 10, 60, 1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 61, 1, 100]" + "'", str14, "[100, 10, 61, 1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 62, 1, 100]" + "'", str15, "[100, 10, 62, 1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 63, 1, 100]" + "'", str16, "[100, 10, 63, 1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 64, 1, 100]" + "'", str17, "[100, 10, 64, 1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 65, 1, 100]" + "'", str18, "[100, 10, 65, 1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 66, 1, 100]" + "'", str19, "[100, 10, 66, 1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 67, 1, 100]" + "'", str20, "[100, 10, 67, 1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 68, 1, 100]" + "'", str21, "[100, 10, 68, 1, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 69, 1, 100]" + "'", str22, "[100, 10, 69, 1, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 70, 1, 100]" + "'", str23, "[100, 10, 70, 1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 71, 1, 100]" + "'", str24, "[100, 10, 71, 1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 72, 1, 100]" + "'", str25, "[100, 10, 72, 1, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 73, 1, 100]" + "'", str26, "[100, 10, 73, 1, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 74, 1, 100]" + "'", str27, "[100, 10, 74, 1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 75, 1, 100]" + "'", str28, "[100, 10, 75, 1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 76, 1, 100]" + "'", str29, "[100, 10, 76, 1, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 77, 1, 100]" + "'", str30, "[100, 10, 77, 1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 78, 1, 100]" + "'", str31, "[100, 10, 78, 1, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 79, 1, 100]" + "'", str32, "[100, 10, 79, 1, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 80, 1, 100]" + "'", str33, "[100, 10, 80, 1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 81, 1, 100]" + "'", str34, "[100, 10, 81, 1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 82, 1, 100]" + "'", str35, "[100, 10, 82, 1, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 83, 1, 100]" + "'", str36, "[100, 10, 83, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 84, 1, 100]" + "'", str37, "[100, 10, 84, 1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 85, 1, 100]" + "'", str38, "[100, 10, 85, 1, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 86, 1, 100]" + "'", str39, "[100, 10, 86, 1, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 87, 1, 100]" + "'", str40, "[100, 10, 87, 1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 88, 1, 100]" + "'", str41, "[100, 10, 88, 1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 89, 1, 100]" + "'", str42, "[100, 10, 89, 1, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 90, 1, 100]" + "'", str43, "[100, 10, 90, 1, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 10, 91, 1, 100]" + "'", str44, "[100, 10, 91, 1, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 10, 92, 1, 100]" + "'", str45, "[100, 10, 92, 1, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 10, 93, 1, 100]" + "'", str46, "[100, 10, 93, 1, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 10, 94, 1, 100]" + "'", str47, "[100, 10, 94, 1, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 10, 95, 1, 100]" + "'", str48, "[100, 10, 95, 1, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 10, 96, 1, 100]" + "'", str49, "[100, 10, 96, 1, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 10, 97, 1, 100]" + "'", str50, "[100, 10, 97, 1, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 10, 98, 1, 100]" + "'", str51, "[100, 10, 98, 1, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 10, 99, 1, 100]" + "'", str52, "[100, 10, 99, 1, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 10, 100, 1, 100]" + "'", str53, "[100, 10, 100, 1, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 10, 101, 1, 100]" + "'", str54, "[100, 10, 101, 1, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 10, 102, 1, 100]" + "'", str55, "[100, 10, 102, 1, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 10, 103, 1, 100]" + "'", str56, "[100, 10, 103, 1, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 10, 104, 1, 100]" + "'", str57, "[100, 10, 104, 1, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 10, 105, 1, 100]" + "'", str58, "[100, 10, 105, 1, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 10, 106, 1, 100]" + "'", str59, "[100, 10, 106, 1, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 10, 107, 1, 100]" + "'", str60, "[100, 10, 107, 1, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 10, 108, 1, 100]" + "'", str61, "[100, 10, 108, 1, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 10, 109, 1, 100]" + "'", str62, "[100, 10, 109, 1, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 10, 110, 1, 100]" + "'", str63, "[100, 10, 110, 1, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 10, 111, 1, 100]" + "'", str64, "[100, 10, 111, 1, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 10, 112, 1, 100]" + "'", str65, "[100, 10, 112, 1, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 10, 113, 1, 100]" + "'", str66, "[100, 10, 113, 1, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 10, 114, 1, 100]" + "'", str67, "[100, 10, 114, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test6065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6065");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass98 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[196]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[177]" + "'", str78, "[177]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[178]" + "'", str79, "[178]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[179]" + "'", str80, "[179]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[180]" + "'", str81, "[180]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[181]" + "'", str82, "[181]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[182]" + "'", str83, "[182]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[183]" + "'", str84, "[183]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[184]" + "'", str85, "[184]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[185]" + "'", str86, "[185]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[186]" + "'", str87, "[186]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[187]" + "'", str88, "[187]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[188]" + "'", str89, "[188]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[189]" + "'", str90, "[189]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[190]" + "'", str91, "[190]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[191]" + "'", str92, "[191]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[192]" + "'", str93, "[192]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[193]" + "'", str94, "[193]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[194]" + "'", str95, "[194]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[195]" + "'", str96, "[195]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[196]" + "'", str97, "[196]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test6066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6066");
        int[] intArray3 = new int[] { 10, (short) 10, 'a' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass19 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 25, 97]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 11, 97]" + "'", str4, "[10, 11, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 12, 97]" + "'", str5, "[10, 12, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 13, 97]" + "'", str6, "[10, 13, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 14, 97]" + "'", str7, "[10, 14, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 15, 97]" + "'", str8, "[10, 15, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 16, 97]" + "'", str9, "[10, 16, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 17, 97]" + "'", str10, "[10, 17, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 18, 97]" + "'", str11, "[10, 18, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 19, 97]" + "'", str12, "[10, 19, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 20, 97]" + "'", str13, "[10, 20, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 21, 97]" + "'", str14, "[10, 21, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 22, 97]" + "'", str15, "[10, 22, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 23, 97]" + "'", str16, "[10, 23, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 24, 97]" + "'", str17, "[10, 24, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 25, 97]" + "'", str18, "[10, 25, 97]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test6067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6067");
        int[] intArray4 = new int[] { 0, (byte) 100, (byte) 100, (byte) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass21 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 116, 116, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 101, 100]" + "'", str5, "[0, 101, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 102, 100]" + "'", str6, "[0, 102, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 103, 100]" + "'", str7, "[0, 103, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 104, 100]" + "'", str8, "[0, 104, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 105, 100]" + "'", str9, "[0, 105, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 106, 100]" + "'", str10, "[0, 106, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 107, 100]" + "'", str11, "[0, 107, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 108, 100]" + "'", str12, "[0, 108, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 109, 100]" + "'", str13, "[0, 109, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 110, 100]" + "'", str14, "[0, 110, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 111, 111, 100]" + "'", str15, "[0, 111, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 112, 112, 100]" + "'", str16, "[0, 112, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 113, 113, 100]" + "'", str17, "[0, 113, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 114, 114, 100]" + "'", str18, "[0, 114, 114, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 115, 115, 100]" + "'", str19, "[0, 115, 115, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 116, 116, 100]" + "'", str20, "[0, 116, 116, 100]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test6068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6068");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass69 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 115, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 58, 1, 100]" + "'", str11, "[100, 10, 58, 1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 59, 1, 100]" + "'", str12, "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 60, 1, 100]" + "'", str13, "[100, 10, 60, 1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 61, 1, 100]" + "'", str14, "[100, 10, 61, 1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 62, 1, 100]" + "'", str15, "[100, 10, 62, 1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 63, 1, 100]" + "'", str16, "[100, 10, 63, 1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 64, 1, 100]" + "'", str17, "[100, 10, 64, 1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 65, 1, 100]" + "'", str18, "[100, 10, 65, 1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 66, 1, 100]" + "'", str19, "[100, 10, 66, 1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 67, 1, 100]" + "'", str20, "[100, 10, 67, 1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 68, 1, 100]" + "'", str21, "[100, 10, 68, 1, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 69, 1, 100]" + "'", str22, "[100, 10, 69, 1, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 70, 1, 100]" + "'", str23, "[100, 10, 70, 1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 71, 1, 100]" + "'", str24, "[100, 10, 71, 1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 72, 1, 100]" + "'", str25, "[100, 10, 72, 1, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 73, 1, 100]" + "'", str26, "[100, 10, 73, 1, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 74, 1, 100]" + "'", str27, "[100, 10, 74, 1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 75, 1, 100]" + "'", str28, "[100, 10, 75, 1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 76, 1, 100]" + "'", str29, "[100, 10, 76, 1, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 77, 1, 100]" + "'", str30, "[100, 10, 77, 1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 78, 1, 100]" + "'", str31, "[100, 10, 78, 1, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 79, 1, 100]" + "'", str32, "[100, 10, 79, 1, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 80, 1, 100]" + "'", str33, "[100, 10, 80, 1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 81, 1, 100]" + "'", str34, "[100, 10, 81, 1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 82, 1, 100]" + "'", str35, "[100, 10, 82, 1, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 83, 1, 100]" + "'", str36, "[100, 10, 83, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 84, 1, 100]" + "'", str37, "[100, 10, 84, 1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 85, 1, 100]" + "'", str38, "[100, 10, 85, 1, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 86, 1, 100]" + "'", str39, "[100, 10, 86, 1, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 87, 1, 100]" + "'", str40, "[100, 10, 87, 1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 88, 1, 100]" + "'", str41, "[100, 10, 88, 1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 89, 1, 100]" + "'", str42, "[100, 10, 89, 1, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 90, 1, 100]" + "'", str43, "[100, 10, 90, 1, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 10, 91, 1, 100]" + "'", str44, "[100, 10, 91, 1, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 10, 92, 1, 100]" + "'", str45, "[100, 10, 92, 1, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 10, 93, 1, 100]" + "'", str46, "[100, 10, 93, 1, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 10, 94, 1, 100]" + "'", str47, "[100, 10, 94, 1, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 10, 95, 1, 100]" + "'", str48, "[100, 10, 95, 1, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 10, 96, 1, 100]" + "'", str49, "[100, 10, 96, 1, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 10, 97, 1, 100]" + "'", str50, "[100, 10, 97, 1, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 10, 98, 1, 100]" + "'", str51, "[100, 10, 98, 1, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 10, 99, 1, 100]" + "'", str52, "[100, 10, 99, 1, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 10, 100, 1, 100]" + "'", str53, "[100, 10, 100, 1, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 10, 101, 1, 100]" + "'", str54, "[100, 10, 101, 1, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 10, 102, 1, 100]" + "'", str55, "[100, 10, 102, 1, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 10, 103, 1, 100]" + "'", str56, "[100, 10, 103, 1, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 10, 104, 1, 100]" + "'", str57, "[100, 10, 104, 1, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 10, 105, 1, 100]" + "'", str58, "[100, 10, 105, 1, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 10, 106, 1, 100]" + "'", str59, "[100, 10, 106, 1, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 10, 107, 1, 100]" + "'", str60, "[100, 10, 107, 1, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 10, 108, 1, 100]" + "'", str61, "[100, 10, 108, 1, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 10, 109, 1, 100]" + "'", str62, "[100, 10, 109, 1, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 10, 110, 1, 100]" + "'", str63, "[100, 10, 110, 1, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 10, 111, 1, 100]" + "'", str64, "[100, 10, 111, 1, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 10, 112, 1, 100]" + "'", str65, "[100, 10, 112, 1, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 10, 113, 1, 100]" + "'", str66, "[100, 10, 113, 1, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 10, 114, 1, 100]" + "'", str67, "[100, 10, 114, 1, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 10, 115, 1, 100]" + "'", str68, "[100, 10, 115, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test6069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6069");
        int[] intArray4 = new int[] { '4', (byte) 100, '#', 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass33 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 128, 63, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 101, 36, 97]" + "'", str5, "[52, 101, 36, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 102, 37, 97]" + "'", str6, "[52, 102, 37, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 103, 38, 97]" + "'", str7, "[52, 103, 38, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 104, 39, 97]" + "'", str8, "[52, 104, 39, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 105, 40, 97]" + "'", str9, "[52, 105, 40, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 106, 41, 97]" + "'", str10, "[52, 106, 41, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 107, 42, 97]" + "'", str11, "[52, 107, 42, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 108, 43, 97]" + "'", str12, "[52, 108, 43, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 109, 44, 97]" + "'", str13, "[52, 109, 44, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 110, 45, 97]" + "'", str14, "[52, 110, 45, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 111, 46, 97]" + "'", str15, "[52, 111, 46, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 112, 47, 97]" + "'", str16, "[52, 112, 47, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 113, 48, 97]" + "'", str17, "[52, 113, 48, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 114, 49, 97]" + "'", str18, "[52, 114, 49, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 115, 50, 97]" + "'", str19, "[52, 115, 50, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 116, 51, 97]" + "'", str20, "[52, 116, 51, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 117, 52, 97]" + "'", str21, "[52, 117, 52, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 118, 53, 97]" + "'", str22, "[52, 118, 53, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 119, 54, 97]" + "'", str23, "[52, 119, 54, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 120, 55, 97]" + "'", str24, "[52, 120, 55, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 121, 56, 97]" + "'", str25, "[52, 121, 56, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 122, 57, 97]" + "'", str26, "[52, 122, 57, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 123, 58, 97]" + "'", str27, "[52, 123, 58, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 124, 59, 97]" + "'", str28, "[52, 124, 59, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 125, 60, 97]" + "'", str29, "[52, 125, 60, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 126, 61, 97]" + "'", str30, "[52, 126, 61, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 127, 62, 97]" + "'", str31, "[52, 127, 62, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 128, 63, 97]" + "'", str32, "[52, 128, 63, 97]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test6070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6070");
        int[] intArray2 = new int[] { ' ', (-1) };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass30 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[6, 6]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[33, 0]" + "'", str3, "[33, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[34, 1]" + "'", str4, "[34, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 2]" + "'", str5, "[35, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[36, 3]" + "'", str6, "[36, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[37, 4]" + "'", str7, "[37, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[38, 5]" + "'", str8, "[38, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[39, 6]" + "'", str9, "[39, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[40, 7]" + "'", str10, "[40, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[41, 8]" + "'", str11, "[41, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[42, 9]" + "'", str12, "[42, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 1]" + "'", str13, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 0, 1]" + "'", str23, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test6071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6071");
        int[] intArray3 = new int[] { 10, (short) 10, 'a' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass18 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 24, 97]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 11, 97]" + "'", str4, "[10, 11, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 12, 97]" + "'", str5, "[10, 12, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 13, 97]" + "'", str6, "[10, 13, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 14, 97]" + "'", str7, "[10, 14, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 15, 97]" + "'", str8, "[10, 15, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 16, 97]" + "'", str9, "[10, 16, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 17, 97]" + "'", str10, "[10, 17, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 18, 97]" + "'", str11, "[10, 18, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 19, 97]" + "'", str12, "[10, 19, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 20, 97]" + "'", str13, "[10, 20, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 21, 97]" + "'", str14, "[10, 21, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 22, 97]" + "'", str15, "[10, 22, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 23, 97]" + "'", str16, "[10, 23, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 24, 97]" + "'", str17, "[10, 24, 97]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test6072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6072");
        int[] intArray5 = new int[] { 1, 1, (short) -1, 1, 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 2, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 0, 1, 1]" + "'", str6, "[1, 1, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 1, 1, 1]" + "'", str7, "[1, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 2, 1, 1]" + "'", str8, "[1, 1, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 3, 1, 1]" + "'", str9, "[1, 1, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 4, 1, 1]" + "'", str10, "[1, 1, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 5, 1, 1]" + "'", str11, "[1, 1, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 6, 1, 1]" + "'", str12, "[1, 1, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 7, 1, 1]" + "'", str13, "[1, 1, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 8, 1, 1]" + "'", str14, "[1, 1, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 9, 1, 1]" + "'", str15, "[1, 1, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 0, 2, 1]" + "'", str16, "[1, 2, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 1, 2, 1]" + "'", str17, "[1, 2, 1, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test6073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6073");
        int[] intArray3 = new int[] { (short) 100, (byte) 0, (short) 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass54 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[105, 0, 6]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 1, 1]" + "'", str4, "[100, 1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 2, 1]" + "'", str5, "[100, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 3, 1]" + "'", str6, "[100, 3, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 4, 1]" + "'", str7, "[100, 4, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 5, 1]" + "'", str8, "[100, 5, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 6, 1]" + "'", str9, "[100, 6, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 7, 1]" + "'", str10, "[100, 7, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 8, 1]" + "'", str11, "[100, 8, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 9, 1]" + "'", str12, "[100, 9, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 0, 2]" + "'", str13, "[101, 0, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 1, 2]" + "'", str14, "[101, 1, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 2, 2]" + "'", str15, "[101, 2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 3, 2]" + "'", str16, "[101, 3, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 4, 2]" + "'", str17, "[101, 4, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 5, 2]" + "'", str18, "[101, 5, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 6, 2]" + "'", str19, "[101, 6, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 7, 2]" + "'", str20, "[101, 7, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 8, 2]" + "'", str21, "[101, 8, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[101, 9, 2]" + "'", str22, "[101, 9, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 0, 3]" + "'", str23, "[102, 0, 3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 1, 3]" + "'", str24, "[102, 1, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 2, 3]" + "'", str25, "[102, 2, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 3, 3]" + "'", str26, "[102, 3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 4, 3]" + "'", str27, "[102, 4, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 5, 3]" + "'", str28, "[102, 5, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[102, 6, 3]" + "'", str29, "[102, 6, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[102, 7, 3]" + "'", str30, "[102, 7, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[102, 8, 3]" + "'", str31, "[102, 8, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[102, 9, 3]" + "'", str32, "[102, 9, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[103, 0, 4]" + "'", str33, "[103, 0, 4]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[103, 1, 4]" + "'", str34, "[103, 1, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[103, 2, 4]" + "'", str35, "[103, 2, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[103, 3, 4]" + "'", str36, "[103, 3, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[103, 4, 4]" + "'", str37, "[103, 4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[103, 5, 4]" + "'", str38, "[103, 5, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[103, 6, 4]" + "'", str39, "[103, 6, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[103, 7, 4]" + "'", str40, "[103, 7, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[103, 8, 4]" + "'", str41, "[103, 8, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[103, 9, 4]" + "'", str42, "[103, 9, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[104, 0, 5]" + "'", str43, "[104, 0, 5]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[104, 1, 5]" + "'", str44, "[104, 1, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[104, 2, 5]" + "'", str45, "[104, 2, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[104, 3, 5]" + "'", str46, "[104, 3, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[104, 4, 5]" + "'", str47, "[104, 4, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[104, 5, 5]" + "'", str48, "[104, 5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[104, 6, 5]" + "'", str49, "[104, 6, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[104, 7, 5]" + "'", str50, "[104, 7, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[104, 8, 5]" + "'", str51, "[104, 8, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[104, 9, 5]" + "'", str52, "[104, 9, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[105, 0, 6]" + "'", str53, "[105, 0, 6]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test6074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6074");
        int[] intArray6 = new int[] { (byte) 0, (short) 1, 1, (short) 1, 1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass63 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 6, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 2, 2, 1, 0]" + "'", str7, "[0, 1, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 3, 3, 1, 0]" + "'", str8, "[0, 1, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 4, 4, 1, 0]" + "'", str9, "[0, 1, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 5, 5, 1, 0]" + "'", str10, "[0, 1, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 6, 6, 1, 0]" + "'", str11, "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 7, 7, 1, 0]" + "'", str12, "[0, 1, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 8, 8, 1, 0]" + "'", str13, "[0, 1, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 9, 9, 1, 0]" + "'", str14, "[0, 1, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 0, 0, 2, 0]" + "'", str15, "[0, 2, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 1, 1, 2, 0]" + "'", str16, "[0, 2, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 2, 2, 0]" + "'", str17, "[0, 2, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 2, 3, 3, 2, 0]" + "'", str18, "[0, 2, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 2, 4, 4, 2, 0]" + "'", str19, "[0, 2, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 2, 5, 5, 2, 0]" + "'", str20, "[0, 2, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 2, 6, 6, 2, 0]" + "'", str21, "[0, 2, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 2, 7, 7, 2, 0]" + "'", str22, "[0, 2, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 2, 8, 8, 2, 0]" + "'", str23, "[0, 2, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 2, 9, 9, 2, 0]" + "'", str24, "[0, 2, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 3, 0, 0, 3, 0]" + "'", str25, "[0, 3, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 3, 1, 1, 3, 0]" + "'", str26, "[0, 3, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 3, 2, 2, 3, 0]" + "'", str27, "[0, 3, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 3, 3, 3, 3, 0]" + "'", str28, "[0, 3, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 3, 4, 4, 3, 0]" + "'", str29, "[0, 3, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 3, 5, 5, 3, 0]" + "'", str30, "[0, 3, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 3, 6, 6, 3, 0]" + "'", str31, "[0, 3, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 3, 7, 7, 3, 0]" + "'", str32, "[0, 3, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 3, 8, 8, 3, 0]" + "'", str33, "[0, 3, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 3, 9, 9, 3, 0]" + "'", str34, "[0, 3, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 4, 0, 0, 4, 0]" + "'", str35, "[0, 4, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 4, 1, 1, 4, 0]" + "'", str36, "[0, 4, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 4, 2, 2, 4, 0]" + "'", str37, "[0, 4, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 4, 3, 3, 4, 0]" + "'", str38, "[0, 4, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 4, 4, 4, 4, 0]" + "'", str39, "[0, 4, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 4, 5, 5, 4, 0]" + "'", str40, "[0, 4, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 4, 6, 6, 4, 0]" + "'", str41, "[0, 4, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 4, 7, 7, 4, 0]" + "'", str42, "[0, 4, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 4, 8, 8, 4, 0]" + "'", str43, "[0, 4, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 4, 9, 9, 4, 0]" + "'", str44, "[0, 4, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 5, 0, 0, 5, 0]" + "'", str45, "[0, 5, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 5, 1, 1, 5, 0]" + "'", str46, "[0, 5, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 5, 2, 2, 5, 0]" + "'", str47, "[0, 5, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 5, 3, 3, 5, 0]" + "'", str48, "[0, 5, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 5, 4, 4, 5, 0]" + "'", str49, "[0, 5, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 5, 5, 5, 5, 0]" + "'", str50, "[0, 5, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 5, 6, 6, 5, 0]" + "'", str51, "[0, 5, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 5, 7, 7, 5, 0]" + "'", str52, "[0, 5, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 5, 8, 8, 5, 0]" + "'", str53, "[0, 5, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 5, 9, 9, 5, 0]" + "'", str54, "[0, 5, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 6, 0, 0, 6, 0]" + "'", str55, "[0, 6, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 6, 1, 1, 6, 0]" + "'", str56, "[0, 6, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 6, 2, 2, 6, 0]" + "'", str57, "[0, 6, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 6, 3, 3, 6, 0]" + "'", str58, "[0, 6, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 6, 4, 4, 6, 0]" + "'", str59, "[0, 6, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 6, 5, 5, 6, 0]" + "'", str60, "[0, 6, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 6, 6, 6, 6, 0]" + "'", str61, "[0, 6, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 6, 7, 7, 6, 0]" + "'", str62, "[0, 6, 7, 7, 6, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test6075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6075");
        int[] intArray5 = new int[] { (short) 0, (-1), (short) 10, (byte) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass43 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 11, 100, -1]" + "'", str6, "[0, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 12, 100, -1]" + "'", str7, "[0, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 13, 100, -1]" + "'", str8, "[0, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 14, 100, -1]" + "'", str9, "[0, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 15, 100, -1]" + "'", str10, "[0, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 16, 100, -1]" + "'", str11, "[0, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 17, 100, -1]" + "'", str12, "[0, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 18, 100, -1]" + "'", str13, "[0, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 19, 100, -1]" + "'", str14, "[0, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 20, 100, -1]" + "'", str15, "[0, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 21, 100, -1]" + "'", str16, "[0, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 22, 100, -1]" + "'", str17, "[0, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 23, 100, -1]" + "'", str18, "[0, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 24, 100, -1]" + "'", str19, "[0, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 25, 100, -1]" + "'", str20, "[0, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 26, 100, -1]" + "'", str21, "[0, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 27, 100, -1]" + "'", str22, "[0, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 28, 100, -1]" + "'", str23, "[0, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 29, 100, -1]" + "'", str24, "[0, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 30, 100, -1]" + "'", str25, "[0, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 31, 100, -1]" + "'", str26, "[0, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 32, 100, -1]" + "'", str27, "[0, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 33, 100, -1]" + "'", str28, "[0, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 34, 100, -1]" + "'", str29, "[0, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 35, 100, -1]" + "'", str30, "[0, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 36, 100, -1]" + "'", str31, "[0, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 37, 100, -1]" + "'", str32, "[0, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 38, 100, -1]" + "'", str33, "[0, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 39, 100, -1]" + "'", str34, "[0, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 40, 100, -1]" + "'", str35, "[0, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 41, 100, -1]" + "'", str36, "[0, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 42, 100, -1]" + "'", str37, "[0, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 43, 100, -1]" + "'", str38, "[0, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 44, 100, -1]" + "'", str39, "[0, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 45, 100, -1]" + "'", str40, "[0, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 46, 100, -1]" + "'", str41, "[0, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 47, 100, -1]" + "'", str42, "[0, -1, 47, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test6076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6076");
        int[] intArray4 = new int[] { (short) 0, 100, (byte) 0, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass59 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 1, 0]" + "'", str5, "[0, 101, 1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 2, 0]" + "'", str6, "[0, 102, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 3, 0]" + "'", str7, "[0, 103, 3, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 4, 0]" + "'", str8, "[0, 104, 4, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 5, 0]" + "'", str9, "[0, 105, 5, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 6, 0]" + "'", str10, "[0, 106, 6, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 7, 0]" + "'", str11, "[0, 107, 7, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 8, 0]" + "'", str12, "[0, 108, 8, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 9, 0]" + "'", str13, "[0, 109, 9, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 0, 1]" + "'", str14, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 1, 1]" + "'", str15, "[1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 1]" + "'", str16, "[1, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 3, 1]" + "'", str17, "[1, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 4, 1]" + "'", str18, "[1, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 5, 1]" + "'", str19, "[1, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 6, 1]" + "'", str20, "[1, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 7, 1]" + "'", str21, "[1, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 8, 1]" + "'", str22, "[1, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 9, 1]" + "'", str23, "[1, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 0, 2]" + "'", str24, "[2, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 1, 2]" + "'", str25, "[2, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 2, 2]" + "'", str26, "[2, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 3, 2]" + "'", str27, "[2, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 4, 2]" + "'", str28, "[2, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 5, 2]" + "'", str29, "[2, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 6, 2]" + "'", str30, "[2, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 7, 2]" + "'", str31, "[2, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 8, 2]" + "'", str32, "[2, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 9, 2]" + "'", str33, "[2, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 0, 3]" + "'", str34, "[3, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 1, 3]" + "'", str35, "[3, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 2, 3]" + "'", str36, "[3, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 3, 3]" + "'", str37, "[3, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 4, 3]" + "'", str38, "[3, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 5, 3]" + "'", str39, "[3, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 6, 3]" + "'", str40, "[3, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 7, 3]" + "'", str41, "[3, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 8, 3]" + "'", str42, "[3, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 9, 3]" + "'", str43, "[3, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 0, 4]" + "'", str44, "[4, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 1, 4]" + "'", str45, "[4, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 2, 4]" + "'", str46, "[4, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 3, 4]" + "'", str47, "[4, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 4, 4]" + "'", str48, "[4, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 5, 4]" + "'", str49, "[4, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 6, 4]" + "'", str50, "[4, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 7, 4]" + "'", str51, "[4, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 8, 4]" + "'", str52, "[4, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 9, 9, 4]" + "'", str53, "[4, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 0, 0, 5]" + "'", str54, "[5, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 1, 1, 5]" + "'", str55, "[5, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 2, 2, 5]" + "'", str56, "[5, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 3, 3, 5]" + "'", str57, "[5, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 4, 4, 5]" + "'", str58, "[5, 4, 4, 5]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test6077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6077");
        int[] intArray3 = new int[] { (short) 0, '#', ' ' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass48 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 79, 32]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 36, 32]" + "'", str4, "[0, 36, 32]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 37, 32]" + "'", str5, "[0, 37, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 38, 32]" + "'", str6, "[0, 38, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 39, 32]" + "'", str7, "[0, 39, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 40, 32]" + "'", str8, "[0, 40, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 41, 32]" + "'", str9, "[0, 41, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 42, 32]" + "'", str10, "[0, 42, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 43, 32]" + "'", str11, "[0, 43, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 44, 32]" + "'", str12, "[0, 44, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 45, 32]" + "'", str13, "[0, 45, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 46, 32]" + "'", str14, "[0, 46, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 47, 32]" + "'", str15, "[0, 47, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 48, 32]" + "'", str16, "[0, 48, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 49, 32]" + "'", str17, "[0, 49, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 50, 32]" + "'", str18, "[0, 50, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 51, 32]" + "'", str19, "[0, 51, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 52, 32]" + "'", str20, "[0, 52, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 53, 32]" + "'", str21, "[0, 53, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 54, 32]" + "'", str22, "[0, 54, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 55, 32]" + "'", str23, "[0, 55, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 56, 32]" + "'", str24, "[0, 56, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 57, 32]" + "'", str25, "[0, 57, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 58, 32]" + "'", str26, "[0, 58, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 59, 32]" + "'", str27, "[0, 59, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 60, 32]" + "'", str28, "[0, 60, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 61, 32]" + "'", str29, "[0, 61, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 62, 32]" + "'", str30, "[0, 62, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 63, 32]" + "'", str31, "[0, 63, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 64, 32]" + "'", str32, "[0, 64, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 65, 32]" + "'", str33, "[0, 65, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 66, 32]" + "'", str34, "[0, 66, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 67, 32]" + "'", str35, "[0, 67, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 68, 32]" + "'", str36, "[0, 68, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 69, 32]" + "'", str37, "[0, 69, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 70, 32]" + "'", str38, "[0, 70, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 71, 32]" + "'", str39, "[0, 71, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 72, 32]" + "'", str40, "[0, 72, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 73, 32]" + "'", str41, "[0, 73, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 74, 32]" + "'", str42, "[0, 74, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 75, 32]" + "'", str43, "[0, 75, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 76, 32]" + "'", str44, "[0, 76, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 77, 32]" + "'", str45, "[0, 77, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 78, 32]" + "'", str46, "[0, 78, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 79, 32]" + "'", str47, "[0, 79, 32]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test6078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6078");
        int[] intArray3 = new int[] { 1, (-1), ' ' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass21 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 6, 33]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 0, 32]" + "'", str4, "[1, 0, 32]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1, 32]" + "'", str5, "[1, 1, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 2, 32]" + "'", str6, "[1, 2, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 3, 32]" + "'", str7, "[1, 3, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 4, 32]" + "'", str8, "[1, 4, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 5, 32]" + "'", str9, "[1, 5, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 6, 32]" + "'", str10, "[1, 6, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 7, 32]" + "'", str11, "[1, 7, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 8, 32]" + "'", str12, "[1, 8, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 9, 32]" + "'", str13, "[1, 9, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 33]" + "'", str14, "[2, 0, 33]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 33]" + "'", str15, "[2, 1, 33]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 33]" + "'", str16, "[2, 2, 33]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 33]" + "'", str17, "[2, 3, 33]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 33]" + "'", str18, "[2, 4, 33]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 33]" + "'", str19, "[2, 5, 33]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 33]" + "'", str20, "[2, 6, 33]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test6079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6079");
        int[] intArray4 = new int[] { (byte) 100, (-1), (short) -1, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass18 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[101, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 0, 0, 100]" + "'", str5, "[100, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 1, 1, 100]" + "'", str6, "[100, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 2, 2, 100]" + "'", str7, "[100, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 3, 3, 100]" + "'", str8, "[100, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 4, 4, 100]" + "'", str9, "[100, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 5, 5, 100]" + "'", str10, "[100, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 6, 6, 100]" + "'", str11, "[100, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 7, 7, 100]" + "'", str12, "[100, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 8, 8, 100]" + "'", str13, "[100, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 9, 9, 100]" + "'", str14, "[100, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 0, 0, 101]" + "'", str15, "[101, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 1, 1, 101]" + "'", str16, "[101, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 2, 2, 101]" + "'", str17, "[101, 2, 2, 101]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test6080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6080");
        int[] intArray3 = new int[] { 100, 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass84 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[108, 1, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 2, 0]" + "'", str4, "[100, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 3, 0]" + "'", str5, "[100, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 4, 0]" + "'", str6, "[100, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 5, 0]" + "'", str7, "[100, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 6, 0]" + "'", str8, "[100, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 7, 0]" + "'", str9, "[100, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 8, 0]" + "'", str10, "[100, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 9, 0]" + "'", str11, "[100, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[101, 0, 1]" + "'", str12, "[101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 1, 1]" + "'", str13, "[101, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 2, 1]" + "'", str14, "[101, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 3, 1]" + "'", str15, "[101, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 4, 1]" + "'", str16, "[101, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 5, 1]" + "'", str17, "[101, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 6, 1]" + "'", str18, "[101, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 7, 1]" + "'", str19, "[101, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 8, 1]" + "'", str20, "[101, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 9, 1]" + "'", str21, "[101, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[102, 0, 2]" + "'", str22, "[102, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 1, 2]" + "'", str23, "[102, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 2, 2]" + "'", str24, "[102, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 3, 2]" + "'", str25, "[102, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 4, 2]" + "'", str26, "[102, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 5, 2]" + "'", str27, "[102, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 6, 2]" + "'", str28, "[102, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[102, 7, 2]" + "'", str29, "[102, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[102, 8, 2]" + "'", str30, "[102, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[102, 9, 2]" + "'", str31, "[102, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[103, 0, 3]" + "'", str32, "[103, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[103, 1, 3]" + "'", str33, "[103, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[103, 2, 3]" + "'", str34, "[103, 2, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[103, 3, 3]" + "'", str35, "[103, 3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[103, 4, 3]" + "'", str36, "[103, 4, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[103, 5, 3]" + "'", str37, "[103, 5, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[103, 6, 3]" + "'", str38, "[103, 6, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[103, 7, 3]" + "'", str39, "[103, 7, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[103, 8, 3]" + "'", str40, "[103, 8, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[103, 9, 3]" + "'", str41, "[103, 9, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[104, 0, 4]" + "'", str42, "[104, 0, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[104, 1, 4]" + "'", str43, "[104, 1, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[104, 2, 4]" + "'", str44, "[104, 2, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[104, 3, 4]" + "'", str45, "[104, 3, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[104, 4, 4]" + "'", str46, "[104, 4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[104, 5, 4]" + "'", str47, "[104, 5, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[104, 6, 4]" + "'", str48, "[104, 6, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[104, 7, 4]" + "'", str49, "[104, 7, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[104, 8, 4]" + "'", str50, "[104, 8, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[104, 9, 4]" + "'", str51, "[104, 9, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[105, 0, 5]" + "'", str52, "[105, 0, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[105, 1, 5]" + "'", str53, "[105, 1, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[105, 2, 5]" + "'", str54, "[105, 2, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[105, 3, 5]" + "'", str55, "[105, 3, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[105, 4, 5]" + "'", str56, "[105, 4, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[105, 5, 5]" + "'", str57, "[105, 5, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[105, 6, 5]" + "'", str58, "[105, 6, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[105, 7, 5]" + "'", str59, "[105, 7, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[105, 8, 5]" + "'", str60, "[105, 8, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[105, 9, 5]" + "'", str61, "[105, 9, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[106, 0, 6]" + "'", str62, "[106, 0, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[106, 1, 6]" + "'", str63, "[106, 1, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[106, 2, 6]" + "'", str64, "[106, 2, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[106, 3, 6]" + "'", str65, "[106, 3, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[106, 4, 6]" + "'", str66, "[106, 4, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[106, 5, 6]" + "'", str67, "[106, 5, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[106, 6, 6]" + "'", str68, "[106, 6, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[106, 7, 6]" + "'", str69, "[106, 7, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[106, 8, 6]" + "'", str70, "[106, 8, 6]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[106, 9, 6]" + "'", str71, "[106, 9, 6]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[107, 0, 7]" + "'", str72, "[107, 0, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[107, 1, 7]" + "'", str73, "[107, 1, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[107, 2, 7]" + "'", str74, "[107, 2, 7]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[107, 3, 7]" + "'", str75, "[107, 3, 7]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[107, 4, 7]" + "'", str76, "[107, 4, 7]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[107, 5, 7]" + "'", str77, "[107, 5, 7]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[107, 6, 7]" + "'", str78, "[107, 6, 7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[107, 7, 7]" + "'", str79, "[107, 7, 7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[107, 8, 7]" + "'", str80, "[107, 8, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[107, 9, 7]" + "'", str81, "[107, 9, 7]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[108, 0, 8]" + "'", str82, "[108, 0, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[108, 1, 8]" + "'", str83, "[108, 1, 8]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test6081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6081");
        int[] intArray3 = new int[] { (short) 100, (short) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass21 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 117, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 101, 1]" + "'", str4, "[100, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 102, 1]" + "'", str5, "[100, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 103, 1]" + "'", str6, "[100, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 104, 1]" + "'", str7, "[100, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 105, 1]" + "'", str8, "[100, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 106, 1]" + "'", str9, "[100, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 107, 1]" + "'", str10, "[100, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 108, 1]" + "'", str11, "[100, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 109, 1]" + "'", str12, "[100, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 110, 1]" + "'", str13, "[100, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 111, 1]" + "'", str14, "[100, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 112, 1]" + "'", str15, "[100, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 113, 1]" + "'", str16, "[100, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 114, 1]" + "'", str17, "[100, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 115, 1]" + "'", str18, "[100, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 116, 1]" + "'", str19, "[100, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 117, 1]" + "'", str20, "[100, 117, 1]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test6082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6082");
        int[] intArray3 = new int[] { 1, (short) 0, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass90 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[9, 6, 108]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 100]" + "'", str4, "[1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 100]" + "'", str5, "[1, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 100]" + "'", str6, "[1, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 100]" + "'", str7, "[1, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 100]" + "'", str8, "[1, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 100]" + "'", str9, "[1, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 100]" + "'", str10, "[1, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 100]" + "'", str11, "[1, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 100]" + "'", str12, "[1, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 101]" + "'", str13, "[2, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 101]" + "'", str14, "[2, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 101]" + "'", str15, "[2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 101]" + "'", str16, "[2, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 101]" + "'", str17, "[2, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 101]" + "'", str18, "[2, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 101]" + "'", str19, "[2, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 101]" + "'", str20, "[2, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 101]" + "'", str21, "[2, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 101]" + "'", str22, "[2, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 102]" + "'", str23, "[3, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 102]" + "'", str24, "[3, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 102]" + "'", str25, "[3, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 102]" + "'", str26, "[3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 102]" + "'", str27, "[3, 4, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 102]" + "'", str28, "[3, 5, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 102]" + "'", str29, "[3, 6, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 102]" + "'", str30, "[3, 7, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 102]" + "'", str31, "[3, 8, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 102]" + "'", str32, "[3, 9, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[4, 0, 103]" + "'", str33, "[4, 0, 103]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 1, 103]" + "'", str34, "[4, 1, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 2, 103]" + "'", str35, "[4, 2, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 3, 103]" + "'", str36, "[4, 3, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4, 103]" + "'", str37, "[4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 5, 103]" + "'", str38, "[4, 5, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 6, 103]" + "'", str39, "[4, 6, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 7, 103]" + "'", str40, "[4, 7, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 8, 103]" + "'", str41, "[4, 8, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 9, 103]" + "'", str42, "[4, 9, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[5, 0, 104]" + "'", str43, "[5, 0, 104]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 1, 104]" + "'", str44, "[5, 1, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 2, 104]" + "'", str45, "[5, 2, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 3, 104]" + "'", str46, "[5, 3, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 4, 104]" + "'", str47, "[5, 4, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5, 104]" + "'", str48, "[5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 6, 104]" + "'", str49, "[5, 6, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 7, 104]" + "'", str50, "[5, 7, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 8, 104]" + "'", str51, "[5, 8, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 9, 104]" + "'", str52, "[5, 9, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[6, 0, 105]" + "'", str53, "[6, 0, 105]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 1, 105]" + "'", str54, "[6, 1, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 2, 105]" + "'", str55, "[6, 2, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 3, 105]" + "'", str56, "[6, 3, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 4, 105]" + "'", str57, "[6, 4, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 5, 105]" + "'", str58, "[6, 5, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6, 105]" + "'", str59, "[6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 7, 105]" + "'", str60, "[6, 7, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 8, 105]" + "'", str61, "[6, 8, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 9, 105]" + "'", str62, "[6, 9, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[7, 0, 106]" + "'", str63, "[7, 0, 106]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 1, 106]" + "'", str64, "[7, 1, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 2, 106]" + "'", str65, "[7, 2, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 3, 106]" + "'", str66, "[7, 3, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 4, 106]" + "'", str67, "[7, 4, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 5, 106]" + "'", str68, "[7, 5, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 6, 106]" + "'", str69, "[7, 6, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7, 106]" + "'", str70, "[7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 8, 106]" + "'", str71, "[7, 8, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 9, 106]" + "'", str72, "[7, 9, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[8, 0, 107]" + "'", str73, "[8, 0, 107]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 1, 107]" + "'", str74, "[8, 1, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 2, 107]" + "'", str75, "[8, 2, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 3, 107]" + "'", str76, "[8, 3, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 4, 107]" + "'", str77, "[8, 4, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 5, 107]" + "'", str78, "[8, 5, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 6, 107]" + "'", str79, "[8, 6, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 7, 107]" + "'", str80, "[8, 7, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8, 107]" + "'", str81, "[8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 9, 107]" + "'", str82, "[8, 9, 107]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[9, 0, 108]" + "'", str83, "[9, 0, 108]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 1, 108]" + "'", str84, "[9, 1, 108]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 2, 108]" + "'", str85, "[9, 2, 108]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[9, 3, 108]" + "'", str86, "[9, 3, 108]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[9, 4, 108]" + "'", str87, "[9, 4, 108]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[9, 5, 108]" + "'", str88, "[9, 5, 108]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[9, 6, 108]" + "'", str89, "[9, 6, 108]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test6083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6083");
        int[] intArray6 = new int[] { ' ', '#', (short) 1, (short) 10, '#', 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass37 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 35, 31, 40, 35, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 35, 2, 11, 35, 100]" + "'", str7, "[32, 35, 2, 11, 35, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 35, 3, 12, 35, 100]" + "'", str8, "[32, 35, 3, 12, 35, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 35, 4, 13, 35, 100]" + "'", str9, "[32, 35, 4, 13, 35, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 35, 5, 14, 35, 100]" + "'", str10, "[32, 35, 5, 14, 35, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 35, 6, 15, 35, 100]" + "'", str11, "[32, 35, 6, 15, 35, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 35, 7, 16, 35, 100]" + "'", str12, "[32, 35, 7, 16, 35, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 35, 8, 17, 35, 100]" + "'", str13, "[32, 35, 8, 17, 35, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 35, 9, 18, 35, 100]" + "'", str14, "[32, 35, 9, 18, 35, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 35, 10, 19, 35, 100]" + "'", str15, "[32, 35, 10, 19, 35, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 35, 11, 20, 35, 100]" + "'", str16, "[32, 35, 11, 20, 35, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 35, 12, 21, 35, 100]" + "'", str17, "[32, 35, 12, 21, 35, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 35, 13, 22, 35, 100]" + "'", str18, "[32, 35, 13, 22, 35, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 35, 14, 23, 35, 100]" + "'", str19, "[32, 35, 14, 23, 35, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 35, 15, 24, 35, 100]" + "'", str20, "[32, 35, 15, 24, 35, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 35, 16, 25, 35, 100]" + "'", str21, "[32, 35, 16, 25, 35, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 35, 17, 26, 35, 100]" + "'", str22, "[32, 35, 17, 26, 35, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 35, 18, 27, 35, 100]" + "'", str23, "[32, 35, 18, 27, 35, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 35, 19, 28, 35, 100]" + "'", str24, "[32, 35, 19, 28, 35, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 35, 20, 29, 35, 100]" + "'", str25, "[32, 35, 20, 29, 35, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 35, 21, 30, 35, 100]" + "'", str26, "[32, 35, 21, 30, 35, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 35, 22, 31, 35, 100]" + "'", str27, "[32, 35, 22, 31, 35, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 35, 23, 32, 35, 100]" + "'", str28, "[32, 35, 23, 32, 35, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 35, 24, 33, 35, 100]" + "'", str29, "[32, 35, 24, 33, 35, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 35, 25, 34, 35, 100]" + "'", str30, "[32, 35, 25, 34, 35, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 35, 26, 35, 35, 100]" + "'", str31, "[32, 35, 26, 35, 35, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 35, 27, 36, 35, 100]" + "'", str32, "[32, 35, 27, 36, 35, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 35, 28, 37, 35, 100]" + "'", str33, "[32, 35, 28, 37, 35, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 35, 29, 38, 35, 100]" + "'", str34, "[32, 35, 29, 38, 35, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 35, 30, 39, 35, 100]" + "'", str35, "[32, 35, 30, 39, 35, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 35, 31, 40, 35, 100]" + "'", str36, "[32, 35, 31, 40, 35, 100]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test6084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6084");
        int[] intArray6 = new int[] { '#', (byte) -1, (byte) 1, (-1), (short) 100, 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass73 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 5, 5, 5, 106, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, -1, 2, 0, 100, 100]" + "'", str7, "[35, -1, 2, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, -1, 3, 1, 100, 100]" + "'", str8, "[35, -1, 3, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, -1, 4, 2, 100, 100]" + "'", str9, "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, -1, 5, 3, 100, 100]" + "'", str10, "[35, -1, 5, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, -1, 6, 4, 100, 100]" + "'", str11, "[35, -1, 6, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, -1, 7, 5, 100, 100]" + "'", str12, "[35, -1, 7, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, -1, 8, 6, 100, 100]" + "'", str13, "[35, -1, 8, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, -1, 9, 7, 100, 100]" + "'", str14, "[35, -1, 9, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, -1, 10, 8, 100, 100]" + "'", str15, "[35, -1, 10, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, -1, 11, 9, 100, 100]" + "'", str16, "[35, -1, 11, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 0, 0, 0, 101, 100]" + "'", str17, "[35, 0, 0, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 0, 1, 1, 101, 100]" + "'", str18, "[35, 0, 1, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 0, 2, 2, 101, 100]" + "'", str19, "[35, 0, 2, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 0, 3, 3, 101, 100]" + "'", str20, "[35, 0, 3, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 0, 4, 4, 101, 100]" + "'", str21, "[35, 0, 4, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 0, 5, 5, 101, 100]" + "'", str22, "[35, 0, 5, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 0, 6, 6, 101, 100]" + "'", str23, "[35, 0, 6, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 0, 7, 7, 101, 100]" + "'", str24, "[35, 0, 7, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 0, 8, 8, 101, 100]" + "'", str25, "[35, 0, 8, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 0, 9, 9, 101, 100]" + "'", str26, "[35, 0, 9, 9, 101, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 1, 0, 0, 102, 100]" + "'", str27, "[35, 1, 0, 0, 102, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 1, 1, 1, 102, 100]" + "'", str28, "[35, 1, 1, 1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 1, 2, 2, 102, 100]" + "'", str29, "[35, 1, 2, 2, 102, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 1, 3, 3, 102, 100]" + "'", str30, "[35, 1, 3, 3, 102, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 1, 4, 4, 102, 100]" + "'", str31, "[35, 1, 4, 4, 102, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 1, 5, 5, 102, 100]" + "'", str32, "[35, 1, 5, 5, 102, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 6, 6, 102, 100]" + "'", str33, "[35, 1, 6, 6, 102, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 1, 7, 7, 102, 100]" + "'", str34, "[35, 1, 7, 7, 102, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 8, 8, 102, 100]" + "'", str35, "[35, 1, 8, 8, 102, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 1, 9, 9, 102, 100]" + "'", str36, "[35, 1, 9, 9, 102, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 2, 0, 0, 103, 100]" + "'", str37, "[35, 2, 0, 0, 103, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 2, 1, 1, 103, 100]" + "'", str38, "[35, 2, 1, 1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 2, 2, 2, 103, 100]" + "'", str39, "[35, 2, 2, 2, 103, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 2, 3, 3, 103, 100]" + "'", str40, "[35, 2, 3, 3, 103, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 2, 4, 4, 103, 100]" + "'", str41, "[35, 2, 4, 4, 103, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 2, 5, 5, 103, 100]" + "'", str42, "[35, 2, 5, 5, 103, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 2, 6, 6, 103, 100]" + "'", str43, "[35, 2, 6, 6, 103, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 2, 7, 7, 103, 100]" + "'", str44, "[35, 2, 7, 7, 103, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 2, 8, 8, 103, 100]" + "'", str45, "[35, 2, 8, 8, 103, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 2, 9, 9, 103, 100]" + "'", str46, "[35, 2, 9, 9, 103, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 3, 0, 0, 104, 100]" + "'", str47, "[35, 3, 0, 0, 104, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 3, 1, 1, 104, 100]" + "'", str48, "[35, 3, 1, 1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 3, 2, 2, 104, 100]" + "'", str49, "[35, 3, 2, 2, 104, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 3, 3, 3, 104, 100]" + "'", str50, "[35, 3, 3, 3, 104, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 3, 4, 4, 104, 100]" + "'", str51, "[35, 3, 4, 4, 104, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 3, 5, 5, 104, 100]" + "'", str52, "[35, 3, 5, 5, 104, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 3, 6, 6, 104, 100]" + "'", str53, "[35, 3, 6, 6, 104, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 3, 7, 7, 104, 100]" + "'", str54, "[35, 3, 7, 7, 104, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 3, 8, 8, 104, 100]" + "'", str55, "[35, 3, 8, 8, 104, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 3, 9, 9, 104, 100]" + "'", str56, "[35, 3, 9, 9, 104, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 4, 0, 0, 105, 100]" + "'", str57, "[35, 4, 0, 0, 105, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 4, 1, 1, 105, 100]" + "'", str58, "[35, 4, 1, 1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 4, 2, 2, 105, 100]" + "'", str59, "[35, 4, 2, 2, 105, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 4, 3, 3, 105, 100]" + "'", str60, "[35, 4, 3, 3, 105, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 4, 4, 4, 105, 100]" + "'", str61, "[35, 4, 4, 4, 105, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 4, 5, 5, 105, 100]" + "'", str62, "[35, 4, 5, 5, 105, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 4, 6, 6, 105, 100]" + "'", str63, "[35, 4, 6, 6, 105, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 4, 7, 7, 105, 100]" + "'", str64, "[35, 4, 7, 7, 105, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 4, 8, 8, 105, 100]" + "'", str65, "[35, 4, 8, 8, 105, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 4, 9, 9, 105, 100]" + "'", str66, "[35, 4, 9, 9, 105, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[35, 5, 0, 0, 106, 100]" + "'", str67, "[35, 5, 0, 0, 106, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[35, 5, 1, 1, 106, 100]" + "'", str68, "[35, 5, 1, 1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[35, 5, 2, 2, 106, 100]" + "'", str69, "[35, 5, 2, 2, 106, 100]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[35, 5, 3, 3, 106, 100]" + "'", str70, "[35, 5, 3, 3, 106, 100]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[35, 5, 4, 4, 106, 100]" + "'", str71, "[35, 5, 4, 4, 106, 100]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[35, 5, 5, 5, 106, 100]" + "'", str72, "[35, 5, 5, 5, 106, 100]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test6085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6085");
        int[] intArray3 = new int[] { (short) 0, '4', (byte) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass16 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 64, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 53, 10]" + "'", str4, "[0, 53, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 54, 10]" + "'", str5, "[0, 54, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 55, 10]" + "'", str6, "[0, 55, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 56, 10]" + "'", str7, "[0, 56, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 57, 10]" + "'", str8, "[0, 57, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 58, 10]" + "'", str9, "[0, 58, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 59, 10]" + "'", str10, "[0, 59, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 60, 10]" + "'", str11, "[0, 60, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 61, 10]" + "'", str12, "[0, 61, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 62, 10]" + "'", str13, "[0, 62, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 63, 10]" + "'", str14, "[0, 63, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 64, 10]" + "'", str15, "[0, 64, 10]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test6086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6086");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str98 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass99 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[197]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[177]" + "'", str78, "[177]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[178]" + "'", str79, "[178]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[179]" + "'", str80, "[179]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[180]" + "'", str81, "[180]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[181]" + "'", str82, "[181]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[182]" + "'", str83, "[182]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[183]" + "'", str84, "[183]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[184]" + "'", str85, "[184]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[185]" + "'", str86, "[185]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[186]" + "'", str87, "[186]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[187]" + "'", str88, "[187]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[188]" + "'", str89, "[188]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[189]" + "'", str90, "[189]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[190]" + "'", str91, "[190]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[191]" + "'", str92, "[191]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[192]" + "'", str93, "[192]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[193]" + "'", str94, "[193]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[194]" + "'", str95, "[194]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[195]" + "'", str96, "[195]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[196]" + "'", str97, "[196]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[197]" + "'", str98, "[197]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test6087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6087");
        int[] intArray3 = new int[] { (short) 0, '4', (byte) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass15 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 63, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 53, 10]" + "'", str4, "[0, 53, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 54, 10]" + "'", str5, "[0, 54, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 55, 10]" + "'", str6, "[0, 55, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 56, 10]" + "'", str7, "[0, 56, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 57, 10]" + "'", str8, "[0, 57, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 58, 10]" + "'", str9, "[0, 58, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 59, 10]" + "'", str10, "[0, 59, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 60, 10]" + "'", str11, "[0, 60, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 61, 10]" + "'", str12, "[0, 61, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 62, 10]" + "'", str13, "[0, 62, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 63, 10]" + "'", str14, "[0, 63, 10]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test6088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6088");
        int[] intArray2 = new int[] { 0, (short) 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass6 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[3, 103]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 101]" + "'", str3, "[1, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 102]" + "'", str4, "[2, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 103]" + "'", str5, "[3, 103]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test6089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6089");
        int[] intArray2 = new int[] { ' ', (-1) };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass31 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[33, 0]" + "'", str3, "[33, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[34, 1]" + "'", str4, "[34, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 2]" + "'", str5, "[35, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[36, 3]" + "'", str6, "[36, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[37, 4]" + "'", str7, "[37, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[38, 5]" + "'", str8, "[38, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[39, 6]" + "'", str9, "[39, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[40, 7]" + "'", str10, "[40, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[41, 8]" + "'", str11, "[41, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[42, 9]" + "'", str12, "[42, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 1]" + "'", str13, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 0, 1]" + "'", str23, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test6090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6090");
        int[] intArray2 = new int[] { 0, (short) 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass7 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 104]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 101]" + "'", str3, "[1, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 102]" + "'", str4, "[2, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 103]" + "'", str5, "[3, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 104]" + "'", str6, "[4, 104]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test6091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6091");
        int[] intArray5 = new int[] { '#', (byte) 100, 100, 10, (short) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass54 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[35, 100, 148, 10, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 100, 101, 10, 0]" + "'", str6, "[35, 100, 101, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 100, 102, 10, 0]" + "'", str7, "[35, 100, 102, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 100, 103, 10, 0]" + "'", str8, "[35, 100, 103, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 100, 104, 10, 0]" + "'", str9, "[35, 100, 104, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 100, 105, 10, 0]" + "'", str10, "[35, 100, 105, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 100, 106, 10, 0]" + "'", str11, "[35, 100, 106, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 100, 107, 10, 0]" + "'", str12, "[35, 100, 107, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 100, 108, 10, 0]" + "'", str13, "[35, 100, 108, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 100, 109, 10, 0]" + "'", str14, "[35, 100, 109, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 100, 110, 10, 0]" + "'", str15, "[35, 100, 110, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 100, 111, 10, 0]" + "'", str16, "[35, 100, 111, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 100, 112, 10, 0]" + "'", str17, "[35, 100, 112, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 100, 113, 10, 0]" + "'", str18, "[35, 100, 113, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 100, 114, 10, 0]" + "'", str19, "[35, 100, 114, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 100, 115, 10, 0]" + "'", str20, "[35, 100, 115, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 100, 116, 10, 0]" + "'", str21, "[35, 100, 116, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 100, 117, 10, 0]" + "'", str22, "[35, 100, 117, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 100, 118, 10, 0]" + "'", str23, "[35, 100, 118, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 100, 119, 10, 0]" + "'", str24, "[35, 100, 119, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 100, 120, 10, 0]" + "'", str25, "[35, 100, 120, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 100, 121, 10, 0]" + "'", str26, "[35, 100, 121, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 100, 122, 10, 0]" + "'", str27, "[35, 100, 122, 10, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 100, 123, 10, 0]" + "'", str28, "[35, 100, 123, 10, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 100, 124, 10, 0]" + "'", str29, "[35, 100, 124, 10, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 100, 125, 10, 0]" + "'", str30, "[35, 100, 125, 10, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 100, 126, 10, 0]" + "'", str31, "[35, 100, 126, 10, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 100, 127, 10, 0]" + "'", str32, "[35, 100, 127, 10, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 100, 128, 10, 0]" + "'", str33, "[35, 100, 128, 10, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 100, 129, 10, 0]" + "'", str34, "[35, 100, 129, 10, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 100, 130, 10, 0]" + "'", str35, "[35, 100, 130, 10, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 100, 131, 10, 0]" + "'", str36, "[35, 100, 131, 10, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 100, 132, 10, 0]" + "'", str37, "[35, 100, 132, 10, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 100, 133, 10, 0]" + "'", str38, "[35, 100, 133, 10, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 100, 134, 10, 0]" + "'", str39, "[35, 100, 134, 10, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 100, 135, 10, 0]" + "'", str40, "[35, 100, 135, 10, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 100, 136, 10, 0]" + "'", str41, "[35, 100, 136, 10, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 100, 137, 10, 0]" + "'", str42, "[35, 100, 137, 10, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 100, 138, 10, 0]" + "'", str43, "[35, 100, 138, 10, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 100, 139, 10, 0]" + "'", str44, "[35, 100, 139, 10, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 100, 140, 10, 0]" + "'", str45, "[35, 100, 140, 10, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 100, 141, 10, 0]" + "'", str46, "[35, 100, 141, 10, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 100, 142, 10, 0]" + "'", str47, "[35, 100, 142, 10, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 100, 143, 10, 0]" + "'", str48, "[35, 100, 143, 10, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 100, 144, 10, 0]" + "'", str49, "[35, 100, 144, 10, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 100, 145, 10, 0]" + "'", str50, "[35, 100, 145, 10, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 100, 146, 10, 0]" + "'", str51, "[35, 100, 146, 10, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 100, 147, 10, 0]" + "'", str52, "[35, 100, 147, 10, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 100, 148, 10, 0]" + "'", str53, "[35, 100, 148, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test6092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6092");
        int[] intArray4 = new int[] { 0, 0, (byte) 100, (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass30 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 25, 125, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 101, -1]" + "'", str5, "[0, 1, 101, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 102, -1]" + "'", str6, "[0, 2, 102, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 103, -1]" + "'", str7, "[0, 3, 103, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 104, -1]" + "'", str8, "[0, 4, 104, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 105, -1]" + "'", str9, "[0, 5, 105, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 106, -1]" + "'", str10, "[0, 6, 106, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 107, -1]" + "'", str11, "[0, 7, 107, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 108, -1]" + "'", str12, "[0, 8, 108, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 109, -1]" + "'", str13, "[0, 9, 109, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 110, -1]" + "'", str14, "[0, 10, 110, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 11, 111, -1]" + "'", str15, "[0, 11, 111, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 12, 112, -1]" + "'", str16, "[0, 12, 112, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 13, 113, -1]" + "'", str17, "[0, 13, 113, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 14, 114, -1]" + "'", str18, "[0, 14, 114, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 15, 115, -1]" + "'", str19, "[0, 15, 115, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 16, 116, -1]" + "'", str20, "[0, 16, 116, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 17, 117, -1]" + "'", str21, "[0, 17, 117, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 18, 118, -1]" + "'", str22, "[0, 18, 118, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 19, 119, -1]" + "'", str23, "[0, 19, 119, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 20, 120, -1]" + "'", str24, "[0, 20, 120, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 21, 121, -1]" + "'", str25, "[0, 21, 121, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 22, 122, -1]" + "'", str26, "[0, 22, 122, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 23, 123, -1]" + "'", str27, "[0, 23, 123, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 24, 124, -1]" + "'", str28, "[0, 24, 124, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 25, 125, -1]" + "'", str29, "[0, 25, 125, -1]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test6093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6093");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass86 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 32, 29, 10, -1]" + "'", str24, "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 32, 30, 10, -1]" + "'", str25, "[10, 32, 30, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 32, 31, 10, -1]" + "'", str26, "[10, 32, 31, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 32, 32, 10, -1]" + "'", str27, "[10, 32, 32, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 32, 33, 10, -1]" + "'", str28, "[10, 32, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 32, 34, 10, -1]" + "'", str29, "[10, 32, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 32, 35, 10, -1]" + "'", str30, "[10, 32, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 32, 36, 10, -1]" + "'", str31, "[10, 32, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 32, 37, 10, -1]" + "'", str32, "[10, 32, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 32, 38, 10, -1]" + "'", str33, "[10, 32, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[10, 32, 39, 10, -1]" + "'", str34, "[10, 32, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 32, 40, 10, -1]" + "'", str35, "[10, 32, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 32, 41, 10, -1]" + "'", str36, "[10, 32, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[10, 32, 42, 10, -1]" + "'", str37, "[10, 32, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[10, 32, 43, 10, -1]" + "'", str38, "[10, 32, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 32, 44, 10, -1]" + "'", str39, "[10, 32, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[10, 32, 45, 10, -1]" + "'", str40, "[10, 32, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[10, 32, 46, 10, -1]" + "'", str41, "[10, 32, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[10, 32, 47, 10, -1]" + "'", str42, "[10, 32, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[10, 32, 48, 10, -1]" + "'", str43, "[10, 32, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 32, 49, 10, -1]" + "'", str44, "[10, 32, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[10, 32, 50, 10, -1]" + "'", str45, "[10, 32, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[10, 32, 51, 10, -1]" + "'", str46, "[10, 32, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[10, 32, 52, 10, -1]" + "'", str47, "[10, 32, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[10, 32, 53, 10, -1]" + "'", str48, "[10, 32, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[10, 32, 54, 10, -1]" + "'", str49, "[10, 32, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[10, 32, 55, 10, -1]" + "'", str50, "[10, 32, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[10, 32, 56, 10, -1]" + "'", str51, "[10, 32, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[10, 32, 57, 10, -1]" + "'", str52, "[10, 32, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[10, 32, 58, 10, -1]" + "'", str53, "[10, 32, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[10, 32, 59, 10, -1]" + "'", str54, "[10, 32, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 32, 60, 10, -1]" + "'", str55, "[10, 32, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 32, 61, 10, -1]" + "'", str56, "[10, 32, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[10, 32, 62, 10, -1]" + "'", str57, "[10, 32, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[10, 32, 63, 10, -1]" + "'", str58, "[10, 32, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[10, 32, 64, 10, -1]" + "'", str59, "[10, 32, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[10, 32, 65, 10, -1]" + "'", str60, "[10, 32, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[10, 32, 66, 10, -1]" + "'", str61, "[10, 32, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[10, 32, 67, 10, -1]" + "'", str62, "[10, 32, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[10, 32, 68, 10, -1]" + "'", str63, "[10, 32, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[10, 32, 69, 10, -1]" + "'", str64, "[10, 32, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[10, 32, 70, 10, -1]" + "'", str65, "[10, 32, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[10, 32, 71, 10, -1]" + "'", str66, "[10, 32, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[10, 32, 72, 10, -1]" + "'", str67, "[10, 32, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[10, 32, 73, 10, -1]" + "'", str68, "[10, 32, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[10, 32, 74, 10, -1]" + "'", str69, "[10, 32, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[10, 32, 75, 10, -1]" + "'", str70, "[10, 32, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 32, 76, 10, -1]" + "'", str71, "[10, 32, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[10, 32, 77, 10, -1]" + "'", str72, "[10, 32, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[10, 32, 78, 10, -1]" + "'", str73, "[10, 32, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[10, 32, 79, 10, -1]" + "'", str74, "[10, 32, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[10, 32, 80, 10, -1]" + "'", str75, "[10, 32, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[10, 32, 81, 10, -1]" + "'", str76, "[10, 32, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[10, 32, 82, 10, -1]" + "'", str77, "[10, 32, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[10, 32, 83, 10, -1]" + "'", str78, "[10, 32, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[10, 32, 84, 10, -1]" + "'", str79, "[10, 32, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[10, 32, 85, 10, -1]" + "'", str80, "[10, 32, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[10, 32, 86, 10, -1]" + "'", str81, "[10, 32, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[10, 32, 87, 10, -1]" + "'", str82, "[10, 32, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[10, 32, 88, 10, -1]" + "'", str83, "[10, 32, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[10, 32, 89, 10, -1]" + "'", str84, "[10, 32, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[10, 32, 90, 10, -1]" + "'", str85, "[10, 32, 90, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test6094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6094");
        int[] intArray5 = new int[] { '#', (byte) 100, 100, 10, (short) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass51 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[35, 100, 145, 10, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 100, 101, 10, 0]" + "'", str6, "[35, 100, 101, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 100, 102, 10, 0]" + "'", str7, "[35, 100, 102, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 100, 103, 10, 0]" + "'", str8, "[35, 100, 103, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 100, 104, 10, 0]" + "'", str9, "[35, 100, 104, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 100, 105, 10, 0]" + "'", str10, "[35, 100, 105, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 100, 106, 10, 0]" + "'", str11, "[35, 100, 106, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 100, 107, 10, 0]" + "'", str12, "[35, 100, 107, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 100, 108, 10, 0]" + "'", str13, "[35, 100, 108, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 100, 109, 10, 0]" + "'", str14, "[35, 100, 109, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 100, 110, 10, 0]" + "'", str15, "[35, 100, 110, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 100, 111, 10, 0]" + "'", str16, "[35, 100, 111, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 100, 112, 10, 0]" + "'", str17, "[35, 100, 112, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 100, 113, 10, 0]" + "'", str18, "[35, 100, 113, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 100, 114, 10, 0]" + "'", str19, "[35, 100, 114, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 100, 115, 10, 0]" + "'", str20, "[35, 100, 115, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 100, 116, 10, 0]" + "'", str21, "[35, 100, 116, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 100, 117, 10, 0]" + "'", str22, "[35, 100, 117, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 100, 118, 10, 0]" + "'", str23, "[35, 100, 118, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 100, 119, 10, 0]" + "'", str24, "[35, 100, 119, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 100, 120, 10, 0]" + "'", str25, "[35, 100, 120, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 100, 121, 10, 0]" + "'", str26, "[35, 100, 121, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 100, 122, 10, 0]" + "'", str27, "[35, 100, 122, 10, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 100, 123, 10, 0]" + "'", str28, "[35, 100, 123, 10, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 100, 124, 10, 0]" + "'", str29, "[35, 100, 124, 10, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 100, 125, 10, 0]" + "'", str30, "[35, 100, 125, 10, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 100, 126, 10, 0]" + "'", str31, "[35, 100, 126, 10, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 100, 127, 10, 0]" + "'", str32, "[35, 100, 127, 10, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 100, 128, 10, 0]" + "'", str33, "[35, 100, 128, 10, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 100, 129, 10, 0]" + "'", str34, "[35, 100, 129, 10, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 100, 130, 10, 0]" + "'", str35, "[35, 100, 130, 10, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 100, 131, 10, 0]" + "'", str36, "[35, 100, 131, 10, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 100, 132, 10, 0]" + "'", str37, "[35, 100, 132, 10, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 100, 133, 10, 0]" + "'", str38, "[35, 100, 133, 10, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 100, 134, 10, 0]" + "'", str39, "[35, 100, 134, 10, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 100, 135, 10, 0]" + "'", str40, "[35, 100, 135, 10, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 100, 136, 10, 0]" + "'", str41, "[35, 100, 136, 10, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 100, 137, 10, 0]" + "'", str42, "[35, 100, 137, 10, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 100, 138, 10, 0]" + "'", str43, "[35, 100, 138, 10, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 100, 139, 10, 0]" + "'", str44, "[35, 100, 139, 10, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 100, 140, 10, 0]" + "'", str45, "[35, 100, 140, 10, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 100, 141, 10, 0]" + "'", str46, "[35, 100, 141, 10, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 100, 142, 10, 0]" + "'", str47, "[35, 100, 142, 10, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 100, 143, 10, 0]" + "'", str48, "[35, 100, 143, 10, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 100, 144, 10, 0]" + "'", str49, "[35, 100, 144, 10, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 100, 145, 10, 0]" + "'", str50, "[35, 100, 145, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test6095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6095");
        int[] intArray3 = new int[] { (short) 100, (short) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass23 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 119, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 101, 1]" + "'", str4, "[100, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 102, 1]" + "'", str5, "[100, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 103, 1]" + "'", str6, "[100, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 104, 1]" + "'", str7, "[100, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 105, 1]" + "'", str8, "[100, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 106, 1]" + "'", str9, "[100, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 107, 1]" + "'", str10, "[100, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 108, 1]" + "'", str11, "[100, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 109, 1]" + "'", str12, "[100, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 110, 1]" + "'", str13, "[100, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 111, 1]" + "'", str14, "[100, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 112, 1]" + "'", str15, "[100, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 113, 1]" + "'", str16, "[100, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 114, 1]" + "'", str17, "[100, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 115, 1]" + "'", str18, "[100, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 116, 1]" + "'", str19, "[100, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 117, 1]" + "'", str20, "[100, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 118, 1]" + "'", str21, "[100, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 119, 1]" + "'", str22, "[100, 119, 1]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test6096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6096");
        int[] intArray4 = new int[] { '#', '#', 0, (short) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass30 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 36, 1, 1]" + "'", str5, "[35, 36, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 37, 2, 1]" + "'", str6, "[35, 37, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 38, 3, 1]" + "'", str7, "[35, 38, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 39, 4, 1]" + "'", str8, "[35, 39, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 40, 5, 1]" + "'", str9, "[35, 40, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 41, 6, 1]" + "'", str10, "[35, 41, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 42, 7, 1]" + "'", str11, "[35, 42, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 43, 8, 1]" + "'", str12, "[35, 43, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 44, 9, 1]" + "'", str13, "[35, 44, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[36, 0, 0, 2]" + "'", str14, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 1, 1, 2]" + "'", str15, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 2, 2, 2]" + "'", str16, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 3, 3, 2]" + "'", str17, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 4, 4, 2]" + "'", str18, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 5, 5, 2]" + "'", str19, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 6, 6, 2]" + "'", str20, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 7, 7, 2]" + "'", str21, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 8, 8, 2]" + "'", str22, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 9, 9, 2]" + "'", str23, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[37, 0, 0, 3]" + "'", str24, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 1, 1, 3]" + "'", str25, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 2, 2, 3]" + "'", str26, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 3, 3, 3]" + "'", str27, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 4, 4, 3]" + "'", str28, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 5, 5, 3]" + "'", str29, "[37, 5, 5, 3]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test6097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6097");
        int[] intArray5 = new int[] { '#', (byte) 100, 100, 10, (short) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass55 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[35, 100, 149, 10, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 100, 101, 10, 0]" + "'", str6, "[35, 100, 101, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 100, 102, 10, 0]" + "'", str7, "[35, 100, 102, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 100, 103, 10, 0]" + "'", str8, "[35, 100, 103, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 100, 104, 10, 0]" + "'", str9, "[35, 100, 104, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 100, 105, 10, 0]" + "'", str10, "[35, 100, 105, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 100, 106, 10, 0]" + "'", str11, "[35, 100, 106, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 100, 107, 10, 0]" + "'", str12, "[35, 100, 107, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 100, 108, 10, 0]" + "'", str13, "[35, 100, 108, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 100, 109, 10, 0]" + "'", str14, "[35, 100, 109, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 100, 110, 10, 0]" + "'", str15, "[35, 100, 110, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 100, 111, 10, 0]" + "'", str16, "[35, 100, 111, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 100, 112, 10, 0]" + "'", str17, "[35, 100, 112, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 100, 113, 10, 0]" + "'", str18, "[35, 100, 113, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 100, 114, 10, 0]" + "'", str19, "[35, 100, 114, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 100, 115, 10, 0]" + "'", str20, "[35, 100, 115, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 100, 116, 10, 0]" + "'", str21, "[35, 100, 116, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 100, 117, 10, 0]" + "'", str22, "[35, 100, 117, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 100, 118, 10, 0]" + "'", str23, "[35, 100, 118, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 100, 119, 10, 0]" + "'", str24, "[35, 100, 119, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 100, 120, 10, 0]" + "'", str25, "[35, 100, 120, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 100, 121, 10, 0]" + "'", str26, "[35, 100, 121, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 100, 122, 10, 0]" + "'", str27, "[35, 100, 122, 10, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 100, 123, 10, 0]" + "'", str28, "[35, 100, 123, 10, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 100, 124, 10, 0]" + "'", str29, "[35, 100, 124, 10, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 100, 125, 10, 0]" + "'", str30, "[35, 100, 125, 10, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 100, 126, 10, 0]" + "'", str31, "[35, 100, 126, 10, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 100, 127, 10, 0]" + "'", str32, "[35, 100, 127, 10, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 100, 128, 10, 0]" + "'", str33, "[35, 100, 128, 10, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 100, 129, 10, 0]" + "'", str34, "[35, 100, 129, 10, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 100, 130, 10, 0]" + "'", str35, "[35, 100, 130, 10, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 100, 131, 10, 0]" + "'", str36, "[35, 100, 131, 10, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 100, 132, 10, 0]" + "'", str37, "[35, 100, 132, 10, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 100, 133, 10, 0]" + "'", str38, "[35, 100, 133, 10, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 100, 134, 10, 0]" + "'", str39, "[35, 100, 134, 10, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 100, 135, 10, 0]" + "'", str40, "[35, 100, 135, 10, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 100, 136, 10, 0]" + "'", str41, "[35, 100, 136, 10, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 100, 137, 10, 0]" + "'", str42, "[35, 100, 137, 10, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 100, 138, 10, 0]" + "'", str43, "[35, 100, 138, 10, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 100, 139, 10, 0]" + "'", str44, "[35, 100, 139, 10, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 100, 140, 10, 0]" + "'", str45, "[35, 100, 140, 10, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 100, 141, 10, 0]" + "'", str46, "[35, 100, 141, 10, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 100, 142, 10, 0]" + "'", str47, "[35, 100, 142, 10, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 100, 143, 10, 0]" + "'", str48, "[35, 100, 143, 10, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 100, 144, 10, 0]" + "'", str49, "[35, 100, 144, 10, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 100, 145, 10, 0]" + "'", str50, "[35, 100, 145, 10, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 100, 146, 10, 0]" + "'", str51, "[35, 100, 146, 10, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 100, 147, 10, 0]" + "'", str52, "[35, 100, 147, 10, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 100, 148, 10, 0]" + "'", str53, "[35, 100, 148, 10, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 100, 149, 10, 0]" + "'", str54, "[35, 100, 149, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test6098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6098");
        int[] intArray5 = new int[] { (byte) 0, '#', 100, (byte) -1, (short) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass37 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 131, -1, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 101, -1, 10]" + "'", str6, "[0, 35, 101, -1, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 102, -1, 10]" + "'", str7, "[0, 35, 102, -1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 103, -1, 10]" + "'", str8, "[0, 35, 103, -1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 104, -1, 10]" + "'", str9, "[0, 35, 104, -1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 105, -1, 10]" + "'", str10, "[0, 35, 105, -1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 106, -1, 10]" + "'", str11, "[0, 35, 106, -1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 107, -1, 10]" + "'", str12, "[0, 35, 107, -1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 108, -1, 10]" + "'", str13, "[0, 35, 108, -1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 109, -1, 10]" + "'", str14, "[0, 35, 109, -1, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 110, -1, 10]" + "'", str15, "[0, 35, 110, -1, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 111, -1, 10]" + "'", str16, "[0, 35, 111, -1, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 112, -1, 10]" + "'", str17, "[0, 35, 112, -1, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 113, -1, 10]" + "'", str18, "[0, 35, 113, -1, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 114, -1, 10]" + "'", str19, "[0, 35, 114, -1, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 115, -1, 10]" + "'", str20, "[0, 35, 115, -1, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 116, -1, 10]" + "'", str21, "[0, 35, 116, -1, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 117, -1, 10]" + "'", str22, "[0, 35, 117, -1, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 118, -1, 10]" + "'", str23, "[0, 35, 118, -1, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 119, -1, 10]" + "'", str24, "[0, 35, 119, -1, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 120, -1, 10]" + "'", str25, "[0, 35, 120, -1, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 121, -1, 10]" + "'", str26, "[0, 35, 121, -1, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 122, -1, 10]" + "'", str27, "[0, 35, 122, -1, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 123, -1, 10]" + "'", str28, "[0, 35, 123, -1, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 124, -1, 10]" + "'", str29, "[0, 35, 124, -1, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 125, -1, 10]" + "'", str30, "[0, 35, 125, -1, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 126, -1, 10]" + "'", str31, "[0, 35, 126, -1, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 127, -1, 10]" + "'", str32, "[0, 35, 127, -1, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 128, -1, 10]" + "'", str33, "[0, 35, 128, -1, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 129, -1, 10]" + "'", str34, "[0, 35, 129, -1, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 130, -1, 10]" + "'", str35, "[0, 35, 130, -1, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 131, -1, 10]" + "'", str36, "[0, 35, 131, -1, 10]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test6099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6099");
        int[] intArray6 = new int[] { 0, 1, (short) 100, '#', (-1), 1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass50 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 1, 143, 78, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 101, 36, -1, 1]" + "'", str7, "[0, 1, 101, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 102, 37, -1, 1]" + "'", str8, "[0, 1, 102, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 103, 38, -1, 1]" + "'", str9, "[0, 1, 103, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 104, 39, -1, 1]" + "'", str10, "[0, 1, 104, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 105, 40, -1, 1]" + "'", str11, "[0, 1, 105, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 106, 41, -1, 1]" + "'", str12, "[0, 1, 106, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 107, 42, -1, 1]" + "'", str13, "[0, 1, 107, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 108, 43, -1, 1]" + "'", str14, "[0, 1, 108, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 109, 44, -1, 1]" + "'", str15, "[0, 1, 109, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 110, 45, -1, 1]" + "'", str16, "[0, 1, 110, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 1, 111, 46, -1, 1]" + "'", str17, "[0, 1, 111, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 1, 112, 47, -1, 1]" + "'", str18, "[0, 1, 112, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 1, 113, 48, -1, 1]" + "'", str19, "[0, 1, 113, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 1, 114, 49, -1, 1]" + "'", str20, "[0, 1, 114, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 1, 115, 50, -1, 1]" + "'", str21, "[0, 1, 115, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 1, 116, 51, -1, 1]" + "'", str22, "[0, 1, 116, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 1, 117, 52, -1, 1]" + "'", str23, "[0, 1, 117, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 1, 118, 53, -1, 1]" + "'", str24, "[0, 1, 118, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 1, 119, 54, -1, 1]" + "'", str25, "[0, 1, 119, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 1, 120, 55, -1, 1]" + "'", str26, "[0, 1, 120, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 1, 121, 56, -1, 1]" + "'", str27, "[0, 1, 121, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 1, 122, 57, -1, 1]" + "'", str28, "[0, 1, 122, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 1, 123, 58, -1, 1]" + "'", str29, "[0, 1, 123, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 1, 124, 59, -1, 1]" + "'", str30, "[0, 1, 124, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 1, 125, 60, -1, 1]" + "'", str31, "[0, 1, 125, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 1, 126, 61, -1, 1]" + "'", str32, "[0, 1, 126, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 1, 127, 62, -1, 1]" + "'", str33, "[0, 1, 127, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 1, 128, 63, -1, 1]" + "'", str34, "[0, 1, 128, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 1, 129, 64, -1, 1]" + "'", str35, "[0, 1, 129, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 1, 130, 65, -1, 1]" + "'", str36, "[0, 1, 130, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 1, 131, 66, -1, 1]" + "'", str37, "[0, 1, 131, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 1, 132, 67, -1, 1]" + "'", str38, "[0, 1, 132, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 1, 133, 68, -1, 1]" + "'", str39, "[0, 1, 133, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 1, 134, 69, -1, 1]" + "'", str40, "[0, 1, 134, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 1, 135, 70, -1, 1]" + "'", str41, "[0, 1, 135, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 1, 136, 71, -1, 1]" + "'", str42, "[0, 1, 136, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 1, 137, 72, -1, 1]" + "'", str43, "[0, 1, 137, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 1, 138, 73, -1, 1]" + "'", str44, "[0, 1, 138, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 1, 139, 74, -1, 1]" + "'", str45, "[0, 1, 139, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 1, 140, 75, -1, 1]" + "'", str46, "[0, 1, 140, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 1, 141, 76, -1, 1]" + "'", str47, "[0, 1, 141, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 1, 142, 77, -1, 1]" + "'", str48, "[0, 1, 142, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 1, 143, 78, -1, 1]" + "'", str49, "[0, 1, 143, 78, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test6100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6100");
        int[] intArray3 = new int[] { (short) 100, (short) 10, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass24 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 30, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 11, 100]" + "'", str4, "[100, 11, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 12, 100]" + "'", str5, "[100, 12, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 13, 100]" + "'", str6, "[100, 13, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 14, 100]" + "'", str7, "[100, 14, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 15, 100]" + "'", str8, "[100, 15, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 16, 100]" + "'", str9, "[100, 16, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 17, 100]" + "'", str10, "[100, 17, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 18, 100]" + "'", str11, "[100, 18, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 19, 100]" + "'", str12, "[100, 19, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 20, 100]" + "'", str13, "[100, 20, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 21, 100]" + "'", str14, "[100, 21, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 22, 100]" + "'", str15, "[100, 22, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 23, 100]" + "'", str16, "[100, 23, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 24, 100]" + "'", str17, "[100, 24, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 25, 100]" + "'", str18, "[100, 25, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 26, 100]" + "'", str19, "[100, 26, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 27, 100]" + "'", str20, "[100, 27, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 28, 100]" + "'", str21, "[100, 28, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 29, 100]" + "'", str22, "[100, 29, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 30, 100]" + "'", str23, "[100, 30, 100]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test6101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6101");
        int[] intArray6 = new int[] { (byte) 1, (byte) 0, (-1), (-1), 100, ' ' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass60 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 5, 2, 2, 105, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 0, 0, 100, 32]" + "'", str7, "[1, 0, 0, 0, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 1, 1, 100, 32]" + "'", str8, "[1, 0, 1, 1, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 2, 2, 100, 32]" + "'", str9, "[1, 0, 2, 2, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 3, 3, 100, 32]" + "'", str10, "[1, 0, 3, 3, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 4, 4, 100, 32]" + "'", str11, "[1, 0, 4, 4, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 5, 5, 100, 32]" + "'", str12, "[1, 0, 5, 5, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 6, 6, 100, 32]" + "'", str13, "[1, 0, 6, 6, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 7, 7, 100, 32]" + "'", str14, "[1, 0, 7, 7, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 8, 8, 100, 32]" + "'", str15, "[1, 0, 8, 8, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 9, 9, 100, 32]" + "'", str16, "[1, 0, 9, 9, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 0, 0, 101, 32]" + "'", str17, "[1, 1, 0, 0, 101, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 1, 1, 101, 32]" + "'", str18, "[1, 1, 1, 1, 101, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 2, 2, 101, 32]" + "'", str19, "[1, 1, 2, 2, 101, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 3, 3, 101, 32]" + "'", str20, "[1, 1, 3, 3, 101, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 4, 4, 101, 32]" + "'", str21, "[1, 1, 4, 4, 101, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 5, 5, 101, 32]" + "'", str22, "[1, 1, 5, 5, 101, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 6, 6, 101, 32]" + "'", str23, "[1, 1, 6, 6, 101, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 7, 7, 101, 32]" + "'", str24, "[1, 1, 7, 7, 101, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 8, 8, 101, 32]" + "'", str25, "[1, 1, 8, 8, 101, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 9, 9, 101, 32]" + "'", str26, "[1, 1, 9, 9, 101, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 0, 0, 102, 32]" + "'", str27, "[1, 2, 0, 0, 102, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 2, 1, 1, 102, 32]" + "'", str28, "[1, 2, 1, 1, 102, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 2, 2, 2, 102, 32]" + "'", str29, "[1, 2, 2, 2, 102, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 2, 3, 3, 102, 32]" + "'", str30, "[1, 2, 3, 3, 102, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 2, 4, 4, 102, 32]" + "'", str31, "[1, 2, 4, 4, 102, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 2, 5, 5, 102, 32]" + "'", str32, "[1, 2, 5, 5, 102, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 2, 6, 6, 102, 32]" + "'", str33, "[1, 2, 6, 6, 102, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 2, 7, 7, 102, 32]" + "'", str34, "[1, 2, 7, 7, 102, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 2, 8, 8, 102, 32]" + "'", str35, "[1, 2, 8, 8, 102, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 2, 9, 9, 102, 32]" + "'", str36, "[1, 2, 9, 9, 102, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 3, 0, 0, 103, 32]" + "'", str37, "[1, 3, 0, 0, 103, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 3, 1, 1, 103, 32]" + "'", str38, "[1, 3, 1, 1, 103, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 3, 2, 2, 103, 32]" + "'", str39, "[1, 3, 2, 2, 103, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 3, 3, 3, 103, 32]" + "'", str40, "[1, 3, 3, 3, 103, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 3, 4, 4, 103, 32]" + "'", str41, "[1, 3, 4, 4, 103, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 3, 5, 5, 103, 32]" + "'", str42, "[1, 3, 5, 5, 103, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 3, 6, 6, 103, 32]" + "'", str43, "[1, 3, 6, 6, 103, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 3, 7, 7, 103, 32]" + "'", str44, "[1, 3, 7, 7, 103, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 3, 8, 8, 103, 32]" + "'", str45, "[1, 3, 8, 8, 103, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 3, 9, 9, 103, 32]" + "'", str46, "[1, 3, 9, 9, 103, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 4, 0, 0, 104, 32]" + "'", str47, "[1, 4, 0, 0, 104, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 4, 1, 1, 104, 32]" + "'", str48, "[1, 4, 1, 1, 104, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 4, 2, 2, 104, 32]" + "'", str49, "[1, 4, 2, 2, 104, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 4, 3, 3, 104, 32]" + "'", str50, "[1, 4, 3, 3, 104, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 4, 4, 4, 104, 32]" + "'", str51, "[1, 4, 4, 4, 104, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 4, 5, 5, 104, 32]" + "'", str52, "[1, 4, 5, 5, 104, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 4, 6, 6, 104, 32]" + "'", str53, "[1, 4, 6, 6, 104, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 4, 7, 7, 104, 32]" + "'", str54, "[1, 4, 7, 7, 104, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 4, 8, 8, 104, 32]" + "'", str55, "[1, 4, 8, 8, 104, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 4, 9, 9, 104, 32]" + "'", str56, "[1, 4, 9, 9, 104, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 5, 0, 0, 105, 32]" + "'", str57, "[1, 5, 0, 0, 105, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 5, 1, 1, 105, 32]" + "'", str58, "[1, 5, 1, 1, 105, 32]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 5, 2, 2, 105, 32]" + "'", str59, "[1, 5, 2, 2, 105, 32]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test6102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6102");
        int[] intArray5 = new int[] { (short) 100, ' ', (byte) 100, (short) 0, '4' };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass31 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 32, 125, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 32, 101, 0, 52]" + "'", str6, "[100, 32, 101, 0, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 32, 102, 0, 52]" + "'", str7, "[100, 32, 102, 0, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 32, 103, 0, 52]" + "'", str8, "[100, 32, 103, 0, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 32, 104, 0, 52]" + "'", str9, "[100, 32, 104, 0, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 32, 105, 0, 52]" + "'", str10, "[100, 32, 105, 0, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 32, 106, 0, 52]" + "'", str11, "[100, 32, 106, 0, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 32, 107, 0, 52]" + "'", str12, "[100, 32, 107, 0, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 32, 108, 0, 52]" + "'", str13, "[100, 32, 108, 0, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 32, 109, 0, 52]" + "'", str14, "[100, 32, 109, 0, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 32, 110, 0, 52]" + "'", str15, "[100, 32, 110, 0, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 32, 111, 0, 52]" + "'", str16, "[100, 32, 111, 0, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 32, 112, 0, 52]" + "'", str17, "[100, 32, 112, 0, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 32, 113, 0, 52]" + "'", str18, "[100, 32, 113, 0, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 32, 114, 0, 52]" + "'", str19, "[100, 32, 114, 0, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 32, 115, 0, 52]" + "'", str20, "[100, 32, 115, 0, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 32, 116, 0, 52]" + "'", str21, "[100, 32, 116, 0, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 32, 117, 0, 52]" + "'", str22, "[100, 32, 117, 0, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 32, 118, 0, 52]" + "'", str23, "[100, 32, 118, 0, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 32, 119, 0, 52]" + "'", str24, "[100, 32, 119, 0, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 32, 120, 0, 52]" + "'", str25, "[100, 32, 120, 0, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 32, 121, 0, 52]" + "'", str26, "[100, 32, 121, 0, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 32, 122, 0, 52]" + "'", str27, "[100, 32, 122, 0, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 32, 123, 0, 52]" + "'", str28, "[100, 32, 123, 0, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 32, 124, 0, 52]" + "'", str29, "[100, 32, 124, 0, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 32, 125, 0, 52]" + "'", str30, "[100, 32, 125, 0, 52]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test6103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6103");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass67 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 1]" + "'", str10, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 1]" + "'", str20, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[4]" + "'", str24, "[4]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[5]" + "'", str25, "[5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[6]" + "'", str26, "[6]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[7]" + "'", str27, "[7]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[8]" + "'", str28, "[8]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[9]" + "'", str29, "[9]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 1]" + "'", str30, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1]" + "'", str31, "[1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2]" + "'", str32, "[2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3]" + "'", str33, "[3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4]" + "'", str34, "[4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[5]" + "'", str35, "[5]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[6]" + "'", str36, "[6]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[7]" + "'", str37, "[7]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[8]" + "'", str38, "[8]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[9]" + "'", str39, "[9]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 1]" + "'", str40, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1]" + "'", str41, "[1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2]" + "'", str42, "[2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3]" + "'", str43, "[3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4]" + "'", str44, "[4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5]" + "'", str45, "[5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[6]" + "'", str46, "[6]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[7]" + "'", str47, "[7]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[8]" + "'", str48, "[8]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[9]" + "'", str49, "[9]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 1]" + "'", str50, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1]" + "'", str51, "[1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[2]" + "'", str52, "[2]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3]" + "'", str53, "[3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4]" + "'", str54, "[4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5]" + "'", str55, "[5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6]" + "'", str56, "[6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[7]" + "'", str57, "[7]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[8]" + "'", str58, "[8]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[9]" + "'", str59, "[9]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 1]" + "'", str60, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1]" + "'", str61, "[1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[2]" + "'", str62, "[2]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[3]" + "'", str63, "[3]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[4]" + "'", str64, "[4]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5]" + "'", str65, "[5]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6]" + "'", str66, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test6104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6104");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass74 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2, 2]" + "'", str54, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3, 3]" + "'", str55, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 4]" + "'", str56, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 5]" + "'", str57, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 6]" + "'", str58, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7, 7]" + "'", str59, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8, 8]" + "'", str60, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9, 9]" + "'", str61, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 0, 1]" + "'", str62, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1]" + "'", str63, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2, 2]" + "'", str64, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3, 3]" + "'", str65, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4, 4]" + "'", str66, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 5]" + "'", str67, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 6]" + "'", str68, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 7]" + "'", str69, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8, 8]" + "'", str70, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9, 9]" + "'", str71, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 0, 1]" + "'", str72, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1]" + "'", str73, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test6105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6105");
        int[] intArray4 = new int[] { '4', (byte) 100, '#', 'a' };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass34 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 129, 64, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 101, 36, 97]" + "'", str5, "[52, 101, 36, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 102, 37, 97]" + "'", str6, "[52, 102, 37, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 103, 38, 97]" + "'", str7, "[52, 103, 38, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 104, 39, 97]" + "'", str8, "[52, 104, 39, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 105, 40, 97]" + "'", str9, "[52, 105, 40, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 106, 41, 97]" + "'", str10, "[52, 106, 41, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 107, 42, 97]" + "'", str11, "[52, 107, 42, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 108, 43, 97]" + "'", str12, "[52, 108, 43, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 109, 44, 97]" + "'", str13, "[52, 109, 44, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 110, 45, 97]" + "'", str14, "[52, 110, 45, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[52, 111, 46, 97]" + "'", str15, "[52, 111, 46, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[52, 112, 47, 97]" + "'", str16, "[52, 112, 47, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[52, 113, 48, 97]" + "'", str17, "[52, 113, 48, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52, 114, 49, 97]" + "'", str18, "[52, 114, 49, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 115, 50, 97]" + "'", str19, "[52, 115, 50, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[52, 116, 51, 97]" + "'", str20, "[52, 116, 51, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52, 117, 52, 97]" + "'", str21, "[52, 117, 52, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[52, 118, 53, 97]" + "'", str22, "[52, 118, 53, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[52, 119, 54, 97]" + "'", str23, "[52, 119, 54, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[52, 120, 55, 97]" + "'", str24, "[52, 120, 55, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[52, 121, 56, 97]" + "'", str25, "[52, 121, 56, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[52, 122, 57, 97]" + "'", str26, "[52, 122, 57, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[52, 123, 58, 97]" + "'", str27, "[52, 123, 58, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[52, 124, 59, 97]" + "'", str28, "[52, 124, 59, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[52, 125, 60, 97]" + "'", str29, "[52, 125, 60, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[52, 126, 61, 97]" + "'", str30, "[52, 126, 61, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[52, 127, 62, 97]" + "'", str31, "[52, 127, 62, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[52, 128, 63, 97]" + "'", str32, "[52, 128, 63, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[52, 129, 64, 97]" + "'", str33, "[52, 129, 64, 97]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test6106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6106");
        int[] intArray3 = new int[] { (byte) 1, (byte) 100, (short) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass23 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 101, 100]" + "'", str4, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 102, 100]" + "'", str5, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 103, 100]" + "'", str6, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 104, 100]" + "'", str7, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 105, 100]" + "'", str8, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 106, 100]" + "'", str9, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 107, 100]" + "'", str10, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 108, 100]" + "'", str11, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 109, 100]" + "'", str12, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 110, 100]" + "'", str13, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 111, 100]" + "'", str14, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 112, 100]" + "'", str15, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 113, 100]" + "'", str16, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 114, 100]" + "'", str17, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 115, 100]" + "'", str18, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 116, 100]" + "'", str19, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 117, 100]" + "'", str20, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 118, 100]" + "'", str21, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 119, 100]" + "'", str22, "[1, 119, 100]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test6107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6107");
        int[] intArray5 = new int[] { 1, 1, (short) -1, 1, 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass17 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 2, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 0, 1, 1]" + "'", str6, "[1, 1, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 1, 1, 1]" + "'", str7, "[1, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 2, 1, 1]" + "'", str8, "[1, 1, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 3, 1, 1]" + "'", str9, "[1, 1, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 4, 1, 1]" + "'", str10, "[1, 1, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 5, 1, 1]" + "'", str11, "[1, 1, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 6, 1, 1]" + "'", str12, "[1, 1, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 7, 1, 1]" + "'", str13, "[1, 1, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 8, 1, 1]" + "'", str14, "[1, 1, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 9, 1, 1]" + "'", str15, "[1, 1, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 0, 2, 1]" + "'", str16, "[1, 2, 0, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6108");
        int[] intArray5 = new int[] { (byte) 0, '#', 100, (byte) -1, (short) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass33 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 127, -1, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 101, -1, 10]" + "'", str6, "[0, 35, 101, -1, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 102, -1, 10]" + "'", str7, "[0, 35, 102, -1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 103, -1, 10]" + "'", str8, "[0, 35, 103, -1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 104, -1, 10]" + "'", str9, "[0, 35, 104, -1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 105, -1, 10]" + "'", str10, "[0, 35, 105, -1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 106, -1, 10]" + "'", str11, "[0, 35, 106, -1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 107, -1, 10]" + "'", str12, "[0, 35, 107, -1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 108, -1, 10]" + "'", str13, "[0, 35, 108, -1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 109, -1, 10]" + "'", str14, "[0, 35, 109, -1, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 110, -1, 10]" + "'", str15, "[0, 35, 110, -1, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 111, -1, 10]" + "'", str16, "[0, 35, 111, -1, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 112, -1, 10]" + "'", str17, "[0, 35, 112, -1, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 113, -1, 10]" + "'", str18, "[0, 35, 113, -1, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 114, -1, 10]" + "'", str19, "[0, 35, 114, -1, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 115, -1, 10]" + "'", str20, "[0, 35, 115, -1, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 116, -1, 10]" + "'", str21, "[0, 35, 116, -1, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 117, -1, 10]" + "'", str22, "[0, 35, 117, -1, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 118, -1, 10]" + "'", str23, "[0, 35, 118, -1, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 119, -1, 10]" + "'", str24, "[0, 35, 119, -1, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 120, -1, 10]" + "'", str25, "[0, 35, 120, -1, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 121, -1, 10]" + "'", str26, "[0, 35, 121, -1, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 122, -1, 10]" + "'", str27, "[0, 35, 122, -1, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 123, -1, 10]" + "'", str28, "[0, 35, 123, -1, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 124, -1, 10]" + "'", str29, "[0, 35, 124, -1, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 125, -1, 10]" + "'", str30, "[0, 35, 125, -1, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 126, -1, 10]" + "'", str31, "[0, 35, 126, -1, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 127, -1, 10]" + "'", str32, "[0, 35, 127, -1, 10]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test6109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6109");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass98 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[131]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[87]" + "'", str53, "[87]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[88]" + "'", str54, "[88]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[89]" + "'", str55, "[89]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[90]" + "'", str56, "[90]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[91]" + "'", str57, "[91]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[92]" + "'", str58, "[92]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[93]" + "'", str59, "[93]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[94]" + "'", str60, "[94]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[95]" + "'", str61, "[95]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[96]" + "'", str62, "[96]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97]" + "'", str63, "[97]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[98]" + "'", str64, "[98]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[99]" + "'", str65, "[99]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100]" + "'", str66, "[100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[101]" + "'", str67, "[101]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[102]" + "'", str68, "[102]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[103]" + "'", str69, "[103]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[104]" + "'", str70, "[104]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[105]" + "'", str71, "[105]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[106]" + "'", str72, "[106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[107]" + "'", str73, "[107]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[108]" + "'", str74, "[108]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[109]" + "'", str75, "[109]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[110]" + "'", str76, "[110]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[111]" + "'", str77, "[111]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[112]" + "'", str78, "[112]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[113]" + "'", str79, "[113]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[114]" + "'", str80, "[114]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[115]" + "'", str81, "[115]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[116]" + "'", str82, "[116]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[117]" + "'", str83, "[117]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[118]" + "'", str84, "[118]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[119]" + "'", str85, "[119]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[120]" + "'", str86, "[120]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[121]" + "'", str87, "[121]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[122]" + "'", str88, "[122]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[123]" + "'", str89, "[123]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[124]" + "'", str90, "[124]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[125]" + "'", str91, "[125]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[126]" + "'", str92, "[126]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[127]" + "'", str93, "[127]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[128]" + "'", str94, "[128]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[129]" + "'", str95, "[129]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[130]" + "'", str96, "[130]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[131]" + "'", str97, "[131]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test6110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6110");
        int[] intArray2 = new int[] { (byte) 10, (byte) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str98 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass99 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[6, 6]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 1]" + "'", str3, "[11, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 2]" + "'", str4, "[12, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 3]" + "'", str5, "[13, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 4]" + "'", str6, "[14, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 5]" + "'", str7, "[15, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 6]" + "'", str8, "[16, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 7]" + "'", str9, "[17, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 8]" + "'", str10, "[18, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 9]" + "'", str11, "[19, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2, 2]" + "'", str54, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3, 3]" + "'", str55, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 4]" + "'", str56, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 5]" + "'", str57, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 6]" + "'", str58, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7, 7]" + "'", str59, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8, 8]" + "'", str60, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9, 9]" + "'", str61, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 0, 1]" + "'", str62, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1]" + "'", str63, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2, 2]" + "'", str64, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3, 3]" + "'", str65, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4, 4]" + "'", str66, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 5]" + "'", str67, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 6]" + "'", str68, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 7]" + "'", str69, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8, 8]" + "'", str70, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9, 9]" + "'", str71, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 0, 1]" + "'", str72, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1]" + "'", str73, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2, 2]" + "'", str74, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[3, 3]" + "'", str75, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[4, 4]" + "'", str76, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[5, 5]" + "'", str77, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 6]" + "'", str78, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7, 7]" + "'", str79, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 8]" + "'", str80, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[9, 9]" + "'", str81, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 0, 0, 1]" + "'", str82, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 1]" + "'", str83, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[2, 2]" + "'", str84, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[3, 3]" + "'", str85, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[4, 4]" + "'", str86, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[5, 5]" + "'", str87, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[6, 6]" + "'", str88, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7, 7]" + "'", str89, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8, 8]" + "'", str90, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9, 9]" + "'", str91, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 0, 0, 1]" + "'", str92, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1, 1]" + "'", str93, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[2, 2]" + "'", str94, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[3, 3]" + "'", str95, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[4, 4]" + "'", str96, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[5, 5]" + "'", str97, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[6, 6]" + "'", str98, "[6, 6]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test6111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6111");
        int[] intArray6 = new int[] { 'a', (byte) 0, (byte) -1, (-1), 1, 10 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass39 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[97, 3, 1, 1, 4, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 0, 0, 1, 10]" + "'", str7, "[97, 0, 0, 0, 1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 1, 1, 1, 10]" + "'", str8, "[97, 0, 1, 1, 1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 2, 2, 1, 10]" + "'", str9, "[97, 0, 2, 2, 1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 3, 3, 1, 10]" + "'", str10, "[97, 0, 3, 3, 1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 0, 4, 4, 1, 10]" + "'", str11, "[97, 0, 4, 4, 1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 0, 5, 5, 1, 10]" + "'", str12, "[97, 0, 5, 5, 1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 0, 6, 6, 1, 10]" + "'", str13, "[97, 0, 6, 6, 1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 0, 7, 7, 1, 10]" + "'", str14, "[97, 0, 7, 7, 1, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 0, 8, 8, 1, 10]" + "'", str15, "[97, 0, 8, 8, 1, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 0, 9, 9, 1, 10]" + "'", str16, "[97, 0, 9, 9, 1, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 1, 0, 0, 2, 10]" + "'", str17, "[97, 1, 0, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 1, 1, 1, 2, 10]" + "'", str18, "[97, 1, 1, 1, 2, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 1, 2, 2, 2, 10]" + "'", str19, "[97, 1, 2, 2, 2, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 1, 3, 3, 2, 10]" + "'", str20, "[97, 1, 3, 3, 2, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 1, 4, 4, 2, 10]" + "'", str21, "[97, 1, 4, 4, 2, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 1, 5, 5, 2, 10]" + "'", str22, "[97, 1, 5, 5, 2, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 1, 6, 6, 2, 10]" + "'", str23, "[97, 1, 6, 6, 2, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 1, 7, 7, 2, 10]" + "'", str24, "[97, 1, 7, 7, 2, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 1, 8, 8, 2, 10]" + "'", str25, "[97, 1, 8, 8, 2, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 1, 9, 9, 2, 10]" + "'", str26, "[97, 1, 9, 9, 2, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 2, 0, 0, 3, 10]" + "'", str27, "[97, 2, 0, 0, 3, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 2, 1, 1, 3, 10]" + "'", str28, "[97, 2, 1, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 2, 2, 2, 3, 10]" + "'", str29, "[97, 2, 2, 2, 3, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 2, 3, 3, 3, 10]" + "'", str30, "[97, 2, 3, 3, 3, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 2, 4, 4, 3, 10]" + "'", str31, "[97, 2, 4, 4, 3, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 2, 5, 5, 3, 10]" + "'", str32, "[97, 2, 5, 5, 3, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 2, 6, 6, 3, 10]" + "'", str33, "[97, 2, 6, 6, 3, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 2, 7, 7, 3, 10]" + "'", str34, "[97, 2, 7, 7, 3, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 2, 8, 8, 3, 10]" + "'", str35, "[97, 2, 8, 8, 3, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 2, 9, 9, 3, 10]" + "'", str36, "[97, 2, 9, 9, 3, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 3, 0, 0, 4, 10]" + "'", str37, "[97, 3, 0, 0, 4, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 3, 1, 1, 4, 10]" + "'", str38, "[97, 3, 1, 1, 4, 10]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test6112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6112");
        int[] intArray5 = new int[] { (short) 0, (-1), (short) 10, (byte) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass41 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 11, 100, -1]" + "'", str6, "[0, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 12, 100, -1]" + "'", str7, "[0, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 13, 100, -1]" + "'", str8, "[0, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 14, 100, -1]" + "'", str9, "[0, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 15, 100, -1]" + "'", str10, "[0, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 16, 100, -1]" + "'", str11, "[0, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 17, 100, -1]" + "'", str12, "[0, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 18, 100, -1]" + "'", str13, "[0, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 19, 100, -1]" + "'", str14, "[0, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 20, 100, -1]" + "'", str15, "[0, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 21, 100, -1]" + "'", str16, "[0, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 22, 100, -1]" + "'", str17, "[0, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 23, 100, -1]" + "'", str18, "[0, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 24, 100, -1]" + "'", str19, "[0, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 25, 100, -1]" + "'", str20, "[0, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 26, 100, -1]" + "'", str21, "[0, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 27, 100, -1]" + "'", str22, "[0, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 28, 100, -1]" + "'", str23, "[0, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 29, 100, -1]" + "'", str24, "[0, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 30, 100, -1]" + "'", str25, "[0, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 31, 100, -1]" + "'", str26, "[0, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 32, 100, -1]" + "'", str27, "[0, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 33, 100, -1]" + "'", str28, "[0, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 34, 100, -1]" + "'", str29, "[0, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 35, 100, -1]" + "'", str30, "[0, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 36, 100, -1]" + "'", str31, "[0, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 37, 100, -1]" + "'", str32, "[0, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 38, 100, -1]" + "'", str33, "[0, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 39, 100, -1]" + "'", str34, "[0, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 40, 100, -1]" + "'", str35, "[0, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 41, 100, -1]" + "'", str36, "[0, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 42, 100, -1]" + "'", str37, "[0, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 43, 100, -1]" + "'", str38, "[0, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 44, 100, -1]" + "'", str39, "[0, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 45, 100, -1]" + "'", str40, "[0, -1, 45, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test6113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6113");
        int[] intArray6 = new int[] { 'a', (byte) 0, (byte) -1, (-1), 1, 10 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass38 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[97, 3, 0, 0, 4, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 0, 0, 1, 10]" + "'", str7, "[97, 0, 0, 0, 1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 1, 1, 1, 10]" + "'", str8, "[97, 0, 1, 1, 1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 2, 2, 1, 10]" + "'", str9, "[97, 0, 2, 2, 1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 3, 3, 1, 10]" + "'", str10, "[97, 0, 3, 3, 1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 0, 4, 4, 1, 10]" + "'", str11, "[97, 0, 4, 4, 1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 0, 5, 5, 1, 10]" + "'", str12, "[97, 0, 5, 5, 1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 0, 6, 6, 1, 10]" + "'", str13, "[97, 0, 6, 6, 1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 0, 7, 7, 1, 10]" + "'", str14, "[97, 0, 7, 7, 1, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 0, 8, 8, 1, 10]" + "'", str15, "[97, 0, 8, 8, 1, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 0, 9, 9, 1, 10]" + "'", str16, "[97, 0, 9, 9, 1, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 1, 0, 0, 2, 10]" + "'", str17, "[97, 1, 0, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 1, 1, 1, 2, 10]" + "'", str18, "[97, 1, 1, 1, 2, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 1, 2, 2, 2, 10]" + "'", str19, "[97, 1, 2, 2, 2, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 1, 3, 3, 2, 10]" + "'", str20, "[97, 1, 3, 3, 2, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 1, 4, 4, 2, 10]" + "'", str21, "[97, 1, 4, 4, 2, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 1, 5, 5, 2, 10]" + "'", str22, "[97, 1, 5, 5, 2, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 1, 6, 6, 2, 10]" + "'", str23, "[97, 1, 6, 6, 2, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 1, 7, 7, 2, 10]" + "'", str24, "[97, 1, 7, 7, 2, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 1, 8, 8, 2, 10]" + "'", str25, "[97, 1, 8, 8, 2, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 1, 9, 9, 2, 10]" + "'", str26, "[97, 1, 9, 9, 2, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 2, 0, 0, 3, 10]" + "'", str27, "[97, 2, 0, 0, 3, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 2, 1, 1, 3, 10]" + "'", str28, "[97, 2, 1, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 2, 2, 2, 3, 10]" + "'", str29, "[97, 2, 2, 2, 3, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 2, 3, 3, 3, 10]" + "'", str30, "[97, 2, 3, 3, 3, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 2, 4, 4, 3, 10]" + "'", str31, "[97, 2, 4, 4, 3, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 2, 5, 5, 3, 10]" + "'", str32, "[97, 2, 5, 5, 3, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 2, 6, 6, 3, 10]" + "'", str33, "[97, 2, 6, 6, 3, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 2, 7, 7, 3, 10]" + "'", str34, "[97, 2, 7, 7, 3, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 2, 8, 8, 3, 10]" + "'", str35, "[97, 2, 8, 8, 3, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 2, 9, 9, 3, 10]" + "'", str36, "[97, 2, 9, 9, 3, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 3, 0, 0, 4, 10]" + "'", str37, "[97, 3, 0, 0, 4, 10]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test6114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6114");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str98 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str99 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[133]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[87]" + "'", str53, "[87]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[88]" + "'", str54, "[88]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[89]" + "'", str55, "[89]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[90]" + "'", str56, "[90]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[91]" + "'", str57, "[91]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[92]" + "'", str58, "[92]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[93]" + "'", str59, "[93]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[94]" + "'", str60, "[94]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[95]" + "'", str61, "[95]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[96]" + "'", str62, "[96]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97]" + "'", str63, "[97]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[98]" + "'", str64, "[98]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[99]" + "'", str65, "[99]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100]" + "'", str66, "[100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[101]" + "'", str67, "[101]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[102]" + "'", str68, "[102]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[103]" + "'", str69, "[103]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[104]" + "'", str70, "[104]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[105]" + "'", str71, "[105]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[106]" + "'", str72, "[106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[107]" + "'", str73, "[107]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[108]" + "'", str74, "[108]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[109]" + "'", str75, "[109]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[110]" + "'", str76, "[110]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[111]" + "'", str77, "[111]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[112]" + "'", str78, "[112]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[113]" + "'", str79, "[113]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[114]" + "'", str80, "[114]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[115]" + "'", str81, "[115]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[116]" + "'", str82, "[116]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[117]" + "'", str83, "[117]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[118]" + "'", str84, "[118]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[119]" + "'", str85, "[119]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[120]" + "'", str86, "[120]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[121]" + "'", str87, "[121]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[122]" + "'", str88, "[122]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[123]" + "'", str89, "[123]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[124]" + "'", str90, "[124]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[125]" + "'", str91, "[125]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[126]" + "'", str92, "[126]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[127]" + "'", str93, "[127]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[128]" + "'", str94, "[128]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[129]" + "'", str95, "[129]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[130]" + "'", str96, "[130]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[131]" + "'", str97, "[131]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[132]" + "'", str98, "[132]");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[133]" + "'", str99, "[133]");
    }

    @Test
    public void test6115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6115");
        int[] intArray4 = new int[] { (short) 10, 0, (byte) 1, (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass31 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[12, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 1, 2, -1]" + "'", str5, "[10, 1, 2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 2, 3, -1]" + "'", str6, "[10, 2, 3, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 3, 4, -1]" + "'", str7, "[10, 3, 4, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 4, 5, -1]" + "'", str8, "[10, 4, 5, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 5, 6, -1]" + "'", str9, "[10, 5, 6, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 6, 7, -1]" + "'", str10, "[10, 6, 7, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 7, 8, -1]" + "'", str11, "[10, 7, 8, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 8, 9, -1]" + "'", str12, "[10, 8, 9, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 0, 0, 0]" + "'", str13, "[11, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[11, 1, 1, 0]" + "'", str14, "[11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 2, 2, 0]" + "'", str15, "[11, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 3, 3, 0]" + "'", str16, "[11, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 4, 4, 0]" + "'", str17, "[11, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 5, 5, 0]" + "'", str18, "[11, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 6, 6, 0]" + "'", str19, "[11, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 7, 7, 0]" + "'", str20, "[11, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 8, 8, 0]" + "'", str21, "[11, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 9, 9, 0]" + "'", str22, "[11, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[12, 0, 0, 1]" + "'", str23, "[12, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[12, 1, 1, 1]" + "'", str24, "[12, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 2, 2, 1]" + "'", str25, "[12, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 3, 3, 1]" + "'", str26, "[12, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 4, 4, 1]" + "'", str27, "[12, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 5, 5, 1]" + "'", str28, "[12, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 6, 6, 1]" + "'", str29, "[12, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 7, 7, 1]" + "'", str30, "[12, 7, 7, 1]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test6116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6116");
        int[] intArray1 = new int[] { ' ' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass53 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[83]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[33]" + "'", str2, "[33]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[34]" + "'", str3, "[34]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35]" + "'", str4, "[35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[36]" + "'", str5, "[36]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[37]" + "'", str6, "[37]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[38]" + "'", str7, "[38]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[39]" + "'", str8, "[39]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[40]" + "'", str9, "[40]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[41]" + "'", str10, "[41]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[42]" + "'", str11, "[42]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[43]" + "'", str12, "[43]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[44]" + "'", str13, "[44]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[45]" + "'", str14, "[45]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[46]" + "'", str15, "[46]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[47]" + "'", str16, "[47]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[48]" + "'", str17, "[48]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[49]" + "'", str18, "[49]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[50]" + "'", str19, "[50]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[51]" + "'", str20, "[51]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52]" + "'", str21, "[52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53]" + "'", str22, "[53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54]" + "'", str23, "[54]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[55]" + "'", str24, "[55]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[56]" + "'", str25, "[56]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[57]" + "'", str26, "[57]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[58]" + "'", str27, "[58]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[59]" + "'", str28, "[59]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[60]" + "'", str29, "[60]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[61]" + "'", str30, "[61]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[62]" + "'", str31, "[62]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[63]" + "'", str32, "[63]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[64]" + "'", str33, "[64]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[65]" + "'", str34, "[65]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[66]" + "'", str35, "[66]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[67]" + "'", str36, "[67]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[68]" + "'", str37, "[68]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[69]" + "'", str38, "[69]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[70]" + "'", str39, "[70]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[71]" + "'", str40, "[71]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[72]" + "'", str41, "[72]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[73]" + "'", str42, "[73]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[74]" + "'", str43, "[74]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[75]" + "'", str44, "[75]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[76]" + "'", str45, "[76]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[77]" + "'", str46, "[77]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[78]" + "'", str47, "[78]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[79]" + "'", str48, "[79]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[80]" + "'", str49, "[80]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[81]" + "'", str50, "[81]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[82]" + "'", str51, "[82]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[83]" + "'", str52, "[83]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test6117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6117");
        int[] intArray6 = new int[] { 1, (byte) 10, (byte) -1, (short) 100, (short) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass78 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 10, 70, 171, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 10, 0, 101, 100, 52]" + "'", str7, "[1, 10, 0, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 10, 1, 102, 100, 52]" + "'", str8, "[1, 10, 1, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 10, 2, 103, 100, 52]" + "'", str9, "[1, 10, 2, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 10, 3, 104, 100, 52]" + "'", str10, "[1, 10, 3, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 10, 4, 105, 100, 52]" + "'", str11, "[1, 10, 4, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 10, 5, 106, 100, 52]" + "'", str12, "[1, 10, 5, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 10, 6, 107, 100, 52]" + "'", str13, "[1, 10, 6, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 10, 7, 108, 100, 52]" + "'", str14, "[1, 10, 7, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 10, 8, 109, 100, 52]" + "'", str15, "[1, 10, 8, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 10, 9, 110, 100, 52]" + "'", str16, "[1, 10, 9, 110, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 10, 10, 111, 100, 52]" + "'", str17, "[1, 10, 10, 111, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 10, 11, 112, 100, 52]" + "'", str18, "[1, 10, 11, 112, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 10, 12, 113, 100, 52]" + "'", str19, "[1, 10, 12, 113, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 10, 13, 114, 100, 52]" + "'", str20, "[1, 10, 13, 114, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 10, 14, 115, 100, 52]" + "'", str21, "[1, 10, 14, 115, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 10, 15, 116, 100, 52]" + "'", str22, "[1, 10, 15, 116, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 10, 16, 117, 100, 52]" + "'", str23, "[1, 10, 16, 117, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 10, 17, 118, 100, 52]" + "'", str24, "[1, 10, 17, 118, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 10, 18, 119, 100, 52]" + "'", str25, "[1, 10, 18, 119, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 10, 19, 120, 100, 52]" + "'", str26, "[1, 10, 19, 120, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 10, 20, 121, 100, 52]" + "'", str27, "[1, 10, 20, 121, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 10, 21, 122, 100, 52]" + "'", str28, "[1, 10, 21, 122, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 10, 22, 123, 100, 52]" + "'", str29, "[1, 10, 22, 123, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 10, 23, 124, 100, 52]" + "'", str30, "[1, 10, 23, 124, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 10, 24, 125, 100, 52]" + "'", str31, "[1, 10, 24, 125, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 10, 25, 126, 100, 52]" + "'", str32, "[1, 10, 25, 126, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 10, 26, 127, 100, 52]" + "'", str33, "[1, 10, 26, 127, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 10, 27, 128, 100, 52]" + "'", str34, "[1, 10, 27, 128, 100, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 10, 28, 129, 100, 52]" + "'", str35, "[1, 10, 28, 129, 100, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 10, 29, 130, 100, 52]" + "'", str36, "[1, 10, 29, 130, 100, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 10, 30, 131, 100, 52]" + "'", str37, "[1, 10, 30, 131, 100, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 10, 31, 132, 100, 52]" + "'", str38, "[1, 10, 31, 132, 100, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 10, 32, 133, 100, 52]" + "'", str39, "[1, 10, 32, 133, 100, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 10, 33, 134, 100, 52]" + "'", str40, "[1, 10, 33, 134, 100, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 10, 34, 135, 100, 52]" + "'", str41, "[1, 10, 34, 135, 100, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 10, 35, 136, 100, 52]" + "'", str42, "[1, 10, 35, 136, 100, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 10, 36, 137, 100, 52]" + "'", str43, "[1, 10, 36, 137, 100, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 10, 37, 138, 100, 52]" + "'", str44, "[1, 10, 37, 138, 100, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 10, 38, 139, 100, 52]" + "'", str45, "[1, 10, 38, 139, 100, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 10, 39, 140, 100, 52]" + "'", str46, "[1, 10, 39, 140, 100, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 10, 40, 141, 100, 52]" + "'", str47, "[1, 10, 40, 141, 100, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 10, 41, 142, 100, 52]" + "'", str48, "[1, 10, 41, 142, 100, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 10, 42, 143, 100, 52]" + "'", str49, "[1, 10, 42, 143, 100, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 10, 43, 144, 100, 52]" + "'", str50, "[1, 10, 43, 144, 100, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 10, 44, 145, 100, 52]" + "'", str51, "[1, 10, 44, 145, 100, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 10, 45, 146, 100, 52]" + "'", str52, "[1, 10, 45, 146, 100, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 10, 46, 147, 100, 52]" + "'", str53, "[1, 10, 46, 147, 100, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 10, 47, 148, 100, 52]" + "'", str54, "[1, 10, 47, 148, 100, 52]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 10, 48, 149, 100, 52]" + "'", str55, "[1, 10, 48, 149, 100, 52]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 10, 49, 150, 100, 52]" + "'", str56, "[1, 10, 49, 150, 100, 52]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 10, 50, 151, 100, 52]" + "'", str57, "[1, 10, 50, 151, 100, 52]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 10, 51, 152, 100, 52]" + "'", str58, "[1, 10, 51, 152, 100, 52]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 10, 52, 153, 100, 52]" + "'", str59, "[1, 10, 52, 153, 100, 52]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 10, 53, 154, 100, 52]" + "'", str60, "[1, 10, 53, 154, 100, 52]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 10, 54, 155, 100, 52]" + "'", str61, "[1, 10, 54, 155, 100, 52]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 10, 55, 156, 100, 52]" + "'", str62, "[1, 10, 55, 156, 100, 52]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 10, 56, 157, 100, 52]" + "'", str63, "[1, 10, 56, 157, 100, 52]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 10, 57, 158, 100, 52]" + "'", str64, "[1, 10, 57, 158, 100, 52]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 10, 58, 159, 100, 52]" + "'", str65, "[1, 10, 58, 159, 100, 52]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 10, 59, 160, 100, 52]" + "'", str66, "[1, 10, 59, 160, 100, 52]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 10, 60, 161, 100, 52]" + "'", str67, "[1, 10, 60, 161, 100, 52]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 10, 61, 162, 100, 52]" + "'", str68, "[1, 10, 61, 162, 100, 52]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 10, 62, 163, 100, 52]" + "'", str69, "[1, 10, 62, 163, 100, 52]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 10, 63, 164, 100, 52]" + "'", str70, "[1, 10, 63, 164, 100, 52]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 10, 64, 165, 100, 52]" + "'", str71, "[1, 10, 64, 165, 100, 52]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 10, 65, 166, 100, 52]" + "'", str72, "[1, 10, 65, 166, 100, 52]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 10, 66, 167, 100, 52]" + "'", str73, "[1, 10, 66, 167, 100, 52]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 10, 67, 168, 100, 52]" + "'", str74, "[1, 10, 67, 168, 100, 52]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 10, 68, 169, 100, 52]" + "'", str75, "[1, 10, 68, 169, 100, 52]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 10, 69, 170, 100, 52]" + "'", str76, "[1, 10, 69, 170, 100, 52]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 10, 70, 171, 100, 52]" + "'", str77, "[1, 10, 70, 171, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test6118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6118");
        int[] intArray6 = new int[] { (byte) 0, (short) 1, 1, (short) 1, 1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass64 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 6, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 2, 2, 1, 0]" + "'", str7, "[0, 1, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 3, 3, 1, 0]" + "'", str8, "[0, 1, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 4, 4, 1, 0]" + "'", str9, "[0, 1, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 5, 5, 1, 0]" + "'", str10, "[0, 1, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 6, 6, 1, 0]" + "'", str11, "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 7, 7, 1, 0]" + "'", str12, "[0, 1, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 8, 8, 1, 0]" + "'", str13, "[0, 1, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 9, 9, 1, 0]" + "'", str14, "[0, 1, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 0, 0, 2, 0]" + "'", str15, "[0, 2, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 1, 1, 2, 0]" + "'", str16, "[0, 2, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 2, 2, 0]" + "'", str17, "[0, 2, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 2, 3, 3, 2, 0]" + "'", str18, "[0, 2, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 2, 4, 4, 2, 0]" + "'", str19, "[0, 2, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 2, 5, 5, 2, 0]" + "'", str20, "[0, 2, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 2, 6, 6, 2, 0]" + "'", str21, "[0, 2, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 2, 7, 7, 2, 0]" + "'", str22, "[0, 2, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 2, 8, 8, 2, 0]" + "'", str23, "[0, 2, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 2, 9, 9, 2, 0]" + "'", str24, "[0, 2, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 3, 0, 0, 3, 0]" + "'", str25, "[0, 3, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 3, 1, 1, 3, 0]" + "'", str26, "[0, 3, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 3, 2, 2, 3, 0]" + "'", str27, "[0, 3, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 3, 3, 3, 3, 0]" + "'", str28, "[0, 3, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 3, 4, 4, 3, 0]" + "'", str29, "[0, 3, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 3, 5, 5, 3, 0]" + "'", str30, "[0, 3, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 3, 6, 6, 3, 0]" + "'", str31, "[0, 3, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 3, 7, 7, 3, 0]" + "'", str32, "[0, 3, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 3, 8, 8, 3, 0]" + "'", str33, "[0, 3, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 3, 9, 9, 3, 0]" + "'", str34, "[0, 3, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 4, 0, 0, 4, 0]" + "'", str35, "[0, 4, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 4, 1, 1, 4, 0]" + "'", str36, "[0, 4, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 4, 2, 2, 4, 0]" + "'", str37, "[0, 4, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 4, 3, 3, 4, 0]" + "'", str38, "[0, 4, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 4, 4, 4, 4, 0]" + "'", str39, "[0, 4, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 4, 5, 5, 4, 0]" + "'", str40, "[0, 4, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 4, 6, 6, 4, 0]" + "'", str41, "[0, 4, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 4, 7, 7, 4, 0]" + "'", str42, "[0, 4, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 4, 8, 8, 4, 0]" + "'", str43, "[0, 4, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 4, 9, 9, 4, 0]" + "'", str44, "[0, 4, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 5, 0, 0, 5, 0]" + "'", str45, "[0, 5, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 5, 1, 1, 5, 0]" + "'", str46, "[0, 5, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 5, 2, 2, 5, 0]" + "'", str47, "[0, 5, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 5, 3, 3, 5, 0]" + "'", str48, "[0, 5, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 5, 4, 4, 5, 0]" + "'", str49, "[0, 5, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 5, 5, 5, 5, 0]" + "'", str50, "[0, 5, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 5, 6, 6, 5, 0]" + "'", str51, "[0, 5, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 5, 7, 7, 5, 0]" + "'", str52, "[0, 5, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 5, 8, 8, 5, 0]" + "'", str53, "[0, 5, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 5, 9, 9, 5, 0]" + "'", str54, "[0, 5, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 6, 0, 0, 6, 0]" + "'", str55, "[0, 6, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 6, 1, 1, 6, 0]" + "'", str56, "[0, 6, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 6, 2, 2, 6, 0]" + "'", str57, "[0, 6, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 6, 3, 3, 6, 0]" + "'", str58, "[0, 6, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 6, 4, 4, 6, 0]" + "'", str59, "[0, 6, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 6, 5, 5, 6, 0]" + "'", str60, "[0, 6, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 6, 6, 6, 6, 0]" + "'", str61, "[0, 6, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 6, 7, 7, 6, 0]" + "'", str62, "[0, 6, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 6, 8, 8, 6, 0]" + "'", str63, "[0, 6, 8, 8, 6, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test6119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6119");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str98 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass99 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 144, 124, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 77, 57, 100, 52]" + "'", str31, "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 78, 58, 100, 52]" + "'", str32, "[-1, 100, 78, 58, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 79, 59, 100, 52]" + "'", str33, "[-1, 100, 79, 59, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 80, 60, 100, 52]" + "'", str34, "[-1, 100, 80, 60, 100, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 81, 61, 100, 52]" + "'", str35, "[-1, 100, 81, 61, 100, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 82, 62, 100, 52]" + "'", str36, "[-1, 100, 82, 62, 100, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 83, 63, 100, 52]" + "'", str37, "[-1, 100, 83, 63, 100, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 100, 84, 64, 100, 52]" + "'", str38, "[-1, 100, 84, 64, 100, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 100, 85, 65, 100, 52]" + "'", str39, "[-1, 100, 85, 65, 100, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 100, 86, 66, 100, 52]" + "'", str40, "[-1, 100, 86, 66, 100, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 100, 87, 67, 100, 52]" + "'", str41, "[-1, 100, 87, 67, 100, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 100, 88, 68, 100, 52]" + "'", str42, "[-1, 100, 88, 68, 100, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 100, 89, 69, 100, 52]" + "'", str43, "[-1, 100, 89, 69, 100, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 100, 90, 70, 100, 52]" + "'", str44, "[-1, 100, 90, 70, 100, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 100, 91, 71, 100, 52]" + "'", str45, "[-1, 100, 91, 71, 100, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 100, 92, 72, 100, 52]" + "'", str46, "[-1, 100, 92, 72, 100, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 100, 93, 73, 100, 52]" + "'", str47, "[-1, 100, 93, 73, 100, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 100, 94, 74, 100, 52]" + "'", str48, "[-1, 100, 94, 74, 100, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 100, 95, 75, 100, 52]" + "'", str49, "[-1, 100, 95, 75, 100, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 100, 96, 76, 100, 52]" + "'", str50, "[-1, 100, 96, 76, 100, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 100, 97, 77, 100, 52]" + "'", str51, "[-1, 100, 97, 77, 100, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 98, 78, 100, 52]" + "'", str52, "[-1, 100, 98, 78, 100, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 100, 99, 79, 100, 52]" + "'", str53, "[-1, 100, 99, 79, 100, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 100, 100, 80, 100, 52]" + "'", str54, "[-1, 100, 100, 80, 100, 52]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 100, 101, 81, 100, 52]" + "'", str55, "[-1, 100, 101, 81, 100, 52]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 100, 102, 82, 100, 52]" + "'", str56, "[-1, 100, 102, 82, 100, 52]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 100, 103, 83, 100, 52]" + "'", str57, "[-1, 100, 103, 83, 100, 52]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 100, 104, 84, 100, 52]" + "'", str58, "[-1, 100, 104, 84, 100, 52]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 100, 105, 85, 100, 52]" + "'", str59, "[-1, 100, 105, 85, 100, 52]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 100, 106, 86, 100, 52]" + "'", str60, "[-1, 100, 106, 86, 100, 52]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 100, 107, 87, 100, 52]" + "'", str61, "[-1, 100, 107, 87, 100, 52]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 100, 108, 88, 100, 52]" + "'", str62, "[-1, 100, 108, 88, 100, 52]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 100, 109, 89, 100, 52]" + "'", str63, "[-1, 100, 109, 89, 100, 52]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[-1, 100, 110, 90, 100, 52]" + "'", str64, "[-1, 100, 110, 90, 100, 52]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[-1, 100, 111, 91, 100, 52]" + "'", str65, "[-1, 100, 111, 91, 100, 52]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[-1, 100, 112, 92, 100, 52]" + "'", str66, "[-1, 100, 112, 92, 100, 52]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[-1, 100, 113, 93, 100, 52]" + "'", str67, "[-1, 100, 113, 93, 100, 52]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[-1, 100, 114, 94, 100, 52]" + "'", str68, "[-1, 100, 114, 94, 100, 52]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[-1, 100, 115, 95, 100, 52]" + "'", str69, "[-1, 100, 115, 95, 100, 52]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[-1, 100, 116, 96, 100, 52]" + "'", str70, "[-1, 100, 116, 96, 100, 52]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[-1, 100, 117, 97, 100, 52]" + "'", str71, "[-1, 100, 117, 97, 100, 52]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[-1, 100, 118, 98, 100, 52]" + "'", str72, "[-1, 100, 118, 98, 100, 52]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[-1, 100, 119, 99, 100, 52]" + "'", str73, "[-1, 100, 119, 99, 100, 52]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[-1, 100, 120, 100, 100, 52]" + "'", str74, "[-1, 100, 120, 100, 100, 52]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[-1, 100, 121, 101, 100, 52]" + "'", str75, "[-1, 100, 121, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[-1, 100, 122, 102, 100, 52]" + "'", str76, "[-1, 100, 122, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[-1, 100, 123, 103, 100, 52]" + "'", str77, "[-1, 100, 123, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[-1, 100, 124, 104, 100, 52]" + "'", str78, "[-1, 100, 124, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[-1, 100, 125, 105, 100, 52]" + "'", str79, "[-1, 100, 125, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[-1, 100, 126, 106, 100, 52]" + "'", str80, "[-1, 100, 126, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[-1, 100, 127, 107, 100, 52]" + "'", str81, "[-1, 100, 127, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[-1, 100, 128, 108, 100, 52]" + "'", str82, "[-1, 100, 128, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[-1, 100, 129, 109, 100, 52]" + "'", str83, "[-1, 100, 129, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[-1, 100, 130, 110, 100, 52]" + "'", str84, "[-1, 100, 130, 110, 100, 52]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[-1, 100, 131, 111, 100, 52]" + "'", str85, "[-1, 100, 131, 111, 100, 52]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[-1, 100, 132, 112, 100, 52]" + "'", str86, "[-1, 100, 132, 112, 100, 52]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[-1, 100, 133, 113, 100, 52]" + "'", str87, "[-1, 100, 133, 113, 100, 52]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[-1, 100, 134, 114, 100, 52]" + "'", str88, "[-1, 100, 134, 114, 100, 52]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[-1, 100, 135, 115, 100, 52]" + "'", str89, "[-1, 100, 135, 115, 100, 52]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[-1, 100, 136, 116, 100, 52]" + "'", str90, "[-1, 100, 136, 116, 100, 52]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[-1, 100, 137, 117, 100, 52]" + "'", str91, "[-1, 100, 137, 117, 100, 52]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[-1, 100, 138, 118, 100, 52]" + "'", str92, "[-1, 100, 138, 118, 100, 52]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[-1, 100, 139, 119, 100, 52]" + "'", str93, "[-1, 100, 139, 119, 100, 52]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[-1, 100, 140, 120, 100, 52]" + "'", str94, "[-1, 100, 140, 120, 100, 52]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[-1, 100, 141, 121, 100, 52]" + "'", str95, "[-1, 100, 141, 121, 100, 52]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[-1, 100, 142, 122, 100, 52]" + "'", str96, "[-1, 100, 142, 122, 100, 52]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[-1, 100, 143, 123, 100, 52]" + "'", str97, "[-1, 100, 143, 123, 100, 52]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[-1, 100, 144, 124, 100, 52]" + "'", str98, "[-1, 100, 144, 124, 100, 52]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test6120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6120");
        int[] intArray3 = new int[] { 10, (short) 10, 'a' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass20 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 26, 97]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 11, 97]" + "'", str4, "[10, 11, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 12, 97]" + "'", str5, "[10, 12, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 13, 97]" + "'", str6, "[10, 13, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 14, 97]" + "'", str7, "[10, 14, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 15, 97]" + "'", str8, "[10, 15, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 16, 97]" + "'", str9, "[10, 16, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 17, 97]" + "'", str10, "[10, 17, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 18, 97]" + "'", str11, "[10, 18, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 19, 97]" + "'", str12, "[10, 19, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 20, 97]" + "'", str13, "[10, 20, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 21, 97]" + "'", str14, "[10, 21, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 22, 97]" + "'", str15, "[10, 22, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 23, 97]" + "'", str16, "[10, 23, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 24, 97]" + "'", str17, "[10, 24, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 25, 97]" + "'", str18, "[10, 25, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 26, 97]" + "'", str19, "[10, 26, 97]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6121");
        int[] intArray2 = new int[] { (byte) 10, (byte) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str98 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str99 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 1]" + "'", str3, "[11, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 2]" + "'", str4, "[12, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 3]" + "'", str5, "[13, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 4]" + "'", str6, "[14, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 5]" + "'", str7, "[15, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 6]" + "'", str8, "[16, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 7]" + "'", str9, "[17, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 8]" + "'", str10, "[18, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 9]" + "'", str11, "[19, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2, 2]" + "'", str54, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3, 3]" + "'", str55, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 4]" + "'", str56, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 5]" + "'", str57, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 6]" + "'", str58, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7, 7]" + "'", str59, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8, 8]" + "'", str60, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9, 9]" + "'", str61, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 0, 1]" + "'", str62, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1]" + "'", str63, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2, 2]" + "'", str64, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3, 3]" + "'", str65, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4, 4]" + "'", str66, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 5]" + "'", str67, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 6]" + "'", str68, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 7]" + "'", str69, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8, 8]" + "'", str70, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9, 9]" + "'", str71, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 0, 1]" + "'", str72, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1]" + "'", str73, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2, 2]" + "'", str74, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[3, 3]" + "'", str75, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[4, 4]" + "'", str76, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[5, 5]" + "'", str77, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 6]" + "'", str78, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7, 7]" + "'", str79, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 8]" + "'", str80, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[9, 9]" + "'", str81, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 0, 0, 1]" + "'", str82, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 1]" + "'", str83, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[2, 2]" + "'", str84, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[3, 3]" + "'", str85, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[4, 4]" + "'", str86, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[5, 5]" + "'", str87, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[6, 6]" + "'", str88, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7, 7]" + "'", str89, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8, 8]" + "'", str90, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9, 9]" + "'", str91, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 0, 0, 1]" + "'", str92, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1, 1]" + "'", str93, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[2, 2]" + "'", str94, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[3, 3]" + "'", str95, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[4, 4]" + "'", str96, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[5, 5]" + "'", str97, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[6, 6]" + "'", str98, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[7, 7]" + "'", str99, "[7, 7]");
    }

    @Test
    public void test6122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6122");
        int[] intArray6 = new int[] { (byte) 0, ' ', 1, 'a', (short) 0, '#' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass47 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 32, 41, 137, 0, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 32, 2, 98, 0, 35]" + "'", str7, "[0, 32, 2, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 32, 3, 99, 0, 35]" + "'", str8, "[0, 32, 3, 99, 0, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 32, 4, 100, 0, 35]" + "'", str9, "[0, 32, 4, 100, 0, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 32, 5, 101, 0, 35]" + "'", str10, "[0, 32, 5, 101, 0, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 32, 6, 102, 0, 35]" + "'", str11, "[0, 32, 6, 102, 0, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 32, 7, 103, 0, 35]" + "'", str12, "[0, 32, 7, 103, 0, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 32, 8, 104, 0, 35]" + "'", str13, "[0, 32, 8, 104, 0, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 32, 9, 105, 0, 35]" + "'", str14, "[0, 32, 9, 105, 0, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 32, 10, 106, 0, 35]" + "'", str15, "[0, 32, 10, 106, 0, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 32, 11, 107, 0, 35]" + "'", str16, "[0, 32, 11, 107, 0, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 32, 12, 108, 0, 35]" + "'", str17, "[0, 32, 12, 108, 0, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 32, 13, 109, 0, 35]" + "'", str18, "[0, 32, 13, 109, 0, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 32, 14, 110, 0, 35]" + "'", str19, "[0, 32, 14, 110, 0, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 32, 15, 111, 0, 35]" + "'", str20, "[0, 32, 15, 111, 0, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 32, 16, 112, 0, 35]" + "'", str21, "[0, 32, 16, 112, 0, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 32, 17, 113, 0, 35]" + "'", str22, "[0, 32, 17, 113, 0, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 32, 18, 114, 0, 35]" + "'", str23, "[0, 32, 18, 114, 0, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 32, 19, 115, 0, 35]" + "'", str24, "[0, 32, 19, 115, 0, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 32, 20, 116, 0, 35]" + "'", str25, "[0, 32, 20, 116, 0, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 21, 117, 0, 35]" + "'", str26, "[0, 32, 21, 117, 0, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 32, 22, 118, 0, 35]" + "'", str27, "[0, 32, 22, 118, 0, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 32, 23, 119, 0, 35]" + "'", str28, "[0, 32, 23, 119, 0, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 32, 24, 120, 0, 35]" + "'", str29, "[0, 32, 24, 120, 0, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 32, 25, 121, 0, 35]" + "'", str30, "[0, 32, 25, 121, 0, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 32, 26, 122, 0, 35]" + "'", str31, "[0, 32, 26, 122, 0, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 32, 27, 123, 0, 35]" + "'", str32, "[0, 32, 27, 123, 0, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 32, 28, 124, 0, 35]" + "'", str33, "[0, 32, 28, 124, 0, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 32, 29, 125, 0, 35]" + "'", str34, "[0, 32, 29, 125, 0, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 32, 30, 126, 0, 35]" + "'", str35, "[0, 32, 30, 126, 0, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 32, 31, 127, 0, 35]" + "'", str36, "[0, 32, 31, 127, 0, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 32, 32, 128, 0, 35]" + "'", str37, "[0, 32, 32, 128, 0, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 32, 33, 129, 0, 35]" + "'", str38, "[0, 32, 33, 129, 0, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 32, 34, 130, 0, 35]" + "'", str39, "[0, 32, 34, 130, 0, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 32, 35, 131, 0, 35]" + "'", str40, "[0, 32, 35, 131, 0, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 32, 36, 132, 0, 35]" + "'", str41, "[0, 32, 36, 132, 0, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 32, 37, 133, 0, 35]" + "'", str42, "[0, 32, 37, 133, 0, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 32, 38, 134, 0, 35]" + "'", str43, "[0, 32, 38, 134, 0, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 32, 39, 135, 0, 35]" + "'", str44, "[0, 32, 39, 135, 0, 35]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 32, 40, 136, 0, 35]" + "'", str45, "[0, 32, 40, 136, 0, 35]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 32, 41, 137, 0, 35]" + "'", str46, "[0, 32, 41, 137, 0, 35]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test6123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6123");
        int[] intArray5 = new int[] { 1, (byte) 1, (byte) 10, (byte) 100, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 54, 100, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 11, 100, 100]" + "'", str6, "[1, 1, 11, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 12, 100, 100]" + "'", str7, "[1, 1, 12, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 13, 100, 100]" + "'", str8, "[1, 1, 13, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 14, 100, 100]" + "'", str9, "[1, 1, 14, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 15, 100, 100]" + "'", str10, "[1, 1, 15, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 16, 100, 100]" + "'", str11, "[1, 1, 16, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 17, 100, 100]" + "'", str12, "[1, 1, 17, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 18, 100, 100]" + "'", str13, "[1, 1, 18, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 19, 100, 100]" + "'", str14, "[1, 1, 19, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 20, 100, 100]" + "'", str15, "[1, 1, 20, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 21, 100, 100]" + "'", str16, "[1, 1, 21, 100, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 22, 100, 100]" + "'", str17, "[1, 1, 22, 100, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 23, 100, 100]" + "'", str18, "[1, 1, 23, 100, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 24, 100, 100]" + "'", str19, "[1, 1, 24, 100, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 25, 100, 100]" + "'", str20, "[1, 1, 25, 100, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 26, 100, 100]" + "'", str21, "[1, 1, 26, 100, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 27, 100, 100]" + "'", str22, "[1, 1, 27, 100, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 28, 100, 100]" + "'", str23, "[1, 1, 28, 100, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 29, 100, 100]" + "'", str24, "[1, 1, 29, 100, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 30, 100, 100]" + "'", str25, "[1, 1, 30, 100, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 31, 100, 100]" + "'", str26, "[1, 1, 31, 100, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 32, 100, 100]" + "'", str27, "[1, 1, 32, 100, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 33, 100, 100]" + "'", str28, "[1, 1, 33, 100, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 34, 100, 100]" + "'", str29, "[1, 1, 34, 100, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 35, 100, 100]" + "'", str30, "[1, 1, 35, 100, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 36, 100, 100]" + "'", str31, "[1, 1, 36, 100, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 37, 100, 100]" + "'", str32, "[1, 1, 37, 100, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 38, 100, 100]" + "'", str33, "[1, 1, 38, 100, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 39, 100, 100]" + "'", str34, "[1, 1, 39, 100, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 40, 100, 100]" + "'", str35, "[1, 1, 40, 100, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 41, 100, 100]" + "'", str36, "[1, 1, 41, 100, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 42, 100, 100]" + "'", str37, "[1, 1, 42, 100, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 43, 100, 100]" + "'", str38, "[1, 1, 43, 100, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 44, 100, 100]" + "'", str39, "[1, 1, 44, 100, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 45, 100, 100]" + "'", str40, "[1, 1, 45, 100, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 46, 100, 100]" + "'", str41, "[1, 1, 46, 100, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 47, 100, 100]" + "'", str42, "[1, 1, 47, 100, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 48, 100, 100]" + "'", str43, "[1, 1, 48, 100, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 49, 100, 100]" + "'", str44, "[1, 1, 49, 100, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 50, 100, 100]" + "'", str45, "[1, 1, 50, 100, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 51, 100, 100]" + "'", str46, "[1, 1, 51, 100, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 52, 100, 100]" + "'", str47, "[1, 1, 52, 100, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 53, 100, 100]" + "'", str48, "[1, 1, 53, 100, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 54, 100, 100]" + "'", str49, "[1, 1, 54, 100, 100]");
    }

    @Test
    public void test6124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6124");
        int[] intArray2 = new int[] { '#', (short) 10 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass45 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[77, 52]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[36, 11]" + "'", str3, "[36, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[37, 12]" + "'", str4, "[37, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[38, 13]" + "'", str5, "[38, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[39, 14]" + "'", str6, "[39, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[40, 15]" + "'", str7, "[40, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[41, 16]" + "'", str8, "[41, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[42, 17]" + "'", str9, "[42, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[43, 18]" + "'", str10, "[43, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[44, 19]" + "'", str11, "[44, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[45, 20]" + "'", str12, "[45, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[46, 21]" + "'", str13, "[46, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[47, 22]" + "'", str14, "[47, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[48, 23]" + "'", str15, "[48, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[49, 24]" + "'", str16, "[49, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[50, 25]" + "'", str17, "[50, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[51, 26]" + "'", str18, "[51, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 27]" + "'", str19, "[52, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 28]" + "'", str20, "[53, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[54, 29]" + "'", str21, "[54, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[55, 30]" + "'", str22, "[55, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[56, 31]" + "'", str23, "[56, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[57, 32]" + "'", str24, "[57, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[58, 33]" + "'", str25, "[58, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[59, 34]" + "'", str26, "[59, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[60, 35]" + "'", str27, "[60, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[61, 36]" + "'", str28, "[61, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[62, 37]" + "'", str29, "[62, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[63, 38]" + "'", str30, "[63, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[64, 39]" + "'", str31, "[64, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[65, 40]" + "'", str32, "[65, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[66, 41]" + "'", str33, "[66, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[67, 42]" + "'", str34, "[67, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[68, 43]" + "'", str35, "[68, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[69, 44]" + "'", str36, "[69, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[70, 45]" + "'", str37, "[70, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[71, 46]" + "'", str38, "[71, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[72, 47]" + "'", str39, "[72, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[73, 48]" + "'", str40, "[73, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[74, 49]" + "'", str41, "[74, 49]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[75, 50]" + "'", str42, "[75, 50]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[76, 51]" + "'", str43, "[76, 51]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[77, 52]" + "'", str44, "[77, 52]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test6125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6125");
        int[] intArray4 = new int[] { (short) 10, 0, (byte) 1, (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass32 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[12, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 1, 2, -1]" + "'", str5, "[10, 1, 2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 2, 3, -1]" + "'", str6, "[10, 2, 3, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 3, 4, -1]" + "'", str7, "[10, 3, 4, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 4, 5, -1]" + "'", str8, "[10, 4, 5, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 5, 6, -1]" + "'", str9, "[10, 5, 6, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 6, 7, -1]" + "'", str10, "[10, 6, 7, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 7, 8, -1]" + "'", str11, "[10, 7, 8, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 8, 9, -1]" + "'", str12, "[10, 8, 9, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 0, 0, 0]" + "'", str13, "[11, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[11, 1, 1, 0]" + "'", str14, "[11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 2, 2, 0]" + "'", str15, "[11, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 3, 3, 0]" + "'", str16, "[11, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 4, 4, 0]" + "'", str17, "[11, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 5, 5, 0]" + "'", str18, "[11, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 6, 6, 0]" + "'", str19, "[11, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 7, 7, 0]" + "'", str20, "[11, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 8, 8, 0]" + "'", str21, "[11, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 9, 9, 0]" + "'", str22, "[11, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[12, 0, 0, 1]" + "'", str23, "[12, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[12, 1, 1, 1]" + "'", str24, "[12, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 2, 2, 1]" + "'", str25, "[12, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 3, 3, 1]" + "'", str26, "[12, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 4, 4, 1]" + "'", str27, "[12, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 5, 5, 1]" + "'", str28, "[12, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 6, 6, 1]" + "'", str29, "[12, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 7, 7, 1]" + "'", str30, "[12, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 8, 8, 1]" + "'", str31, "[12, 8, 8, 1]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test6126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6126");
        int[] intArray3 = new int[] { 10, (short) 10, 'a' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass17 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 23, 97]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 11, 97]" + "'", str4, "[10, 11, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 12, 97]" + "'", str5, "[10, 12, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 13, 97]" + "'", str6, "[10, 13, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 14, 97]" + "'", str7, "[10, 14, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 15, 97]" + "'", str8, "[10, 15, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 16, 97]" + "'", str9, "[10, 16, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 17, 97]" + "'", str10, "[10, 17, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 18, 97]" + "'", str11, "[10, 18, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 19, 97]" + "'", str12, "[10, 19, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 20, 97]" + "'", str13, "[10, 20, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 21, 97]" + "'", str14, "[10, 21, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 22, 97]" + "'", str15, "[10, 22, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 23, 97]" + "'", str16, "[10, 23, 97]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6127");
        int[] intArray5 = new int[] { '#', (byte) 100, 100, 10, (short) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass53 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[35, 100, 147, 10, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 100, 101, 10, 0]" + "'", str6, "[35, 100, 101, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 100, 102, 10, 0]" + "'", str7, "[35, 100, 102, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 100, 103, 10, 0]" + "'", str8, "[35, 100, 103, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 100, 104, 10, 0]" + "'", str9, "[35, 100, 104, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 100, 105, 10, 0]" + "'", str10, "[35, 100, 105, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 100, 106, 10, 0]" + "'", str11, "[35, 100, 106, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 100, 107, 10, 0]" + "'", str12, "[35, 100, 107, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 100, 108, 10, 0]" + "'", str13, "[35, 100, 108, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 100, 109, 10, 0]" + "'", str14, "[35, 100, 109, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 100, 110, 10, 0]" + "'", str15, "[35, 100, 110, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 100, 111, 10, 0]" + "'", str16, "[35, 100, 111, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 100, 112, 10, 0]" + "'", str17, "[35, 100, 112, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 100, 113, 10, 0]" + "'", str18, "[35, 100, 113, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 100, 114, 10, 0]" + "'", str19, "[35, 100, 114, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 100, 115, 10, 0]" + "'", str20, "[35, 100, 115, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 100, 116, 10, 0]" + "'", str21, "[35, 100, 116, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 100, 117, 10, 0]" + "'", str22, "[35, 100, 117, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 100, 118, 10, 0]" + "'", str23, "[35, 100, 118, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 100, 119, 10, 0]" + "'", str24, "[35, 100, 119, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 100, 120, 10, 0]" + "'", str25, "[35, 100, 120, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 100, 121, 10, 0]" + "'", str26, "[35, 100, 121, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 100, 122, 10, 0]" + "'", str27, "[35, 100, 122, 10, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 100, 123, 10, 0]" + "'", str28, "[35, 100, 123, 10, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 100, 124, 10, 0]" + "'", str29, "[35, 100, 124, 10, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 100, 125, 10, 0]" + "'", str30, "[35, 100, 125, 10, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 100, 126, 10, 0]" + "'", str31, "[35, 100, 126, 10, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 100, 127, 10, 0]" + "'", str32, "[35, 100, 127, 10, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 100, 128, 10, 0]" + "'", str33, "[35, 100, 128, 10, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 100, 129, 10, 0]" + "'", str34, "[35, 100, 129, 10, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 100, 130, 10, 0]" + "'", str35, "[35, 100, 130, 10, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 100, 131, 10, 0]" + "'", str36, "[35, 100, 131, 10, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 100, 132, 10, 0]" + "'", str37, "[35, 100, 132, 10, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 100, 133, 10, 0]" + "'", str38, "[35, 100, 133, 10, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 100, 134, 10, 0]" + "'", str39, "[35, 100, 134, 10, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 100, 135, 10, 0]" + "'", str40, "[35, 100, 135, 10, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 100, 136, 10, 0]" + "'", str41, "[35, 100, 136, 10, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 100, 137, 10, 0]" + "'", str42, "[35, 100, 137, 10, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 100, 138, 10, 0]" + "'", str43, "[35, 100, 138, 10, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 100, 139, 10, 0]" + "'", str44, "[35, 100, 139, 10, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 100, 140, 10, 0]" + "'", str45, "[35, 100, 140, 10, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 100, 141, 10, 0]" + "'", str46, "[35, 100, 141, 10, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 100, 142, 10, 0]" + "'", str47, "[35, 100, 142, 10, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 100, 143, 10, 0]" + "'", str48, "[35, 100, 143, 10, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 100, 144, 10, 0]" + "'", str49, "[35, 100, 144, 10, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 100, 145, 10, 0]" + "'", str50, "[35, 100, 145, 10, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 100, 146, 10, 0]" + "'", str51, "[35, 100, 146, 10, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 100, 147, 10, 0]" + "'", str52, "[35, 100, 147, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test6128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6128");
        int[] intArray5 = new int[] { 1, (byte) 1, (byte) 10, (byte) 100, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass49 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 53, 100, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 11, 100, 100]" + "'", str6, "[1, 1, 11, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 12, 100, 100]" + "'", str7, "[1, 1, 12, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 13, 100, 100]" + "'", str8, "[1, 1, 13, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 14, 100, 100]" + "'", str9, "[1, 1, 14, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 15, 100, 100]" + "'", str10, "[1, 1, 15, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 16, 100, 100]" + "'", str11, "[1, 1, 16, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 17, 100, 100]" + "'", str12, "[1, 1, 17, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 18, 100, 100]" + "'", str13, "[1, 1, 18, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 19, 100, 100]" + "'", str14, "[1, 1, 19, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 20, 100, 100]" + "'", str15, "[1, 1, 20, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 21, 100, 100]" + "'", str16, "[1, 1, 21, 100, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 22, 100, 100]" + "'", str17, "[1, 1, 22, 100, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 23, 100, 100]" + "'", str18, "[1, 1, 23, 100, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 24, 100, 100]" + "'", str19, "[1, 1, 24, 100, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 25, 100, 100]" + "'", str20, "[1, 1, 25, 100, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 26, 100, 100]" + "'", str21, "[1, 1, 26, 100, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 27, 100, 100]" + "'", str22, "[1, 1, 27, 100, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 28, 100, 100]" + "'", str23, "[1, 1, 28, 100, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 29, 100, 100]" + "'", str24, "[1, 1, 29, 100, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 30, 100, 100]" + "'", str25, "[1, 1, 30, 100, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 31, 100, 100]" + "'", str26, "[1, 1, 31, 100, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 32, 100, 100]" + "'", str27, "[1, 1, 32, 100, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 33, 100, 100]" + "'", str28, "[1, 1, 33, 100, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 34, 100, 100]" + "'", str29, "[1, 1, 34, 100, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 35, 100, 100]" + "'", str30, "[1, 1, 35, 100, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 36, 100, 100]" + "'", str31, "[1, 1, 36, 100, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 37, 100, 100]" + "'", str32, "[1, 1, 37, 100, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 38, 100, 100]" + "'", str33, "[1, 1, 38, 100, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 39, 100, 100]" + "'", str34, "[1, 1, 39, 100, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 40, 100, 100]" + "'", str35, "[1, 1, 40, 100, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 41, 100, 100]" + "'", str36, "[1, 1, 41, 100, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 42, 100, 100]" + "'", str37, "[1, 1, 42, 100, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 43, 100, 100]" + "'", str38, "[1, 1, 43, 100, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 44, 100, 100]" + "'", str39, "[1, 1, 44, 100, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 45, 100, 100]" + "'", str40, "[1, 1, 45, 100, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 46, 100, 100]" + "'", str41, "[1, 1, 46, 100, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 47, 100, 100]" + "'", str42, "[1, 1, 47, 100, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 48, 100, 100]" + "'", str43, "[1, 1, 48, 100, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 49, 100, 100]" + "'", str44, "[1, 1, 49, 100, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 50, 100, 100]" + "'", str45, "[1, 1, 50, 100, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 51, 100, 100]" + "'", str46, "[1, 1, 51, 100, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 52, 100, 100]" + "'", str47, "[1, 1, 52, 100, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 53, 100, 100]" + "'", str48, "[1, 1, 53, 100, 100]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test6129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6129");
        int[] intArray4 = new int[] { 100, (byte) 100, (byte) 100, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass70 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 165, 165, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 101, 101, 0]" + "'", str5, "[100, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 102, 102, 0]" + "'", str6, "[100, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 103, 103, 0]" + "'", str7, "[100, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 104, 104, 0]" + "'", str8, "[100, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 105, 105, 0]" + "'", str9, "[100, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 106, 106, 0]" + "'", str10, "[100, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 107, 107, 0]" + "'", str11, "[100, 107, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 108, 108, 0]" + "'", str12, "[100, 108, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 109, 109, 0]" + "'", str13, "[100, 109, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 110, 110, 0]" + "'", str14, "[100, 110, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 111, 111, 0]" + "'", str15, "[100, 111, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 112, 112, 0]" + "'", str16, "[100, 112, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 113, 113, 0]" + "'", str17, "[100, 113, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 114, 114, 0]" + "'", str18, "[100, 114, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 115, 115, 0]" + "'", str19, "[100, 115, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 116, 116, 0]" + "'", str20, "[100, 116, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 117, 117, 0]" + "'", str21, "[100, 117, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 118, 118, 0]" + "'", str22, "[100, 118, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 119, 119, 0]" + "'", str23, "[100, 119, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 120, 120, 0]" + "'", str24, "[100, 120, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 121, 121, 0]" + "'", str25, "[100, 121, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 122, 122, 0]" + "'", str26, "[100, 122, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 123, 123, 0]" + "'", str27, "[100, 123, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 124, 124, 0]" + "'", str28, "[100, 124, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 125, 125, 0]" + "'", str29, "[100, 125, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 126, 126, 0]" + "'", str30, "[100, 126, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 127, 127, 0]" + "'", str31, "[100, 127, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 128, 128, 0]" + "'", str32, "[100, 128, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 129, 129, 0]" + "'", str33, "[100, 129, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 130, 130, 0]" + "'", str34, "[100, 130, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 131, 131, 0]" + "'", str35, "[100, 131, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 132, 132, 0]" + "'", str36, "[100, 132, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 133, 133, 0]" + "'", str37, "[100, 133, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 134, 134, 0]" + "'", str38, "[100, 134, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 135, 135, 0]" + "'", str39, "[100, 135, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 136, 136, 0]" + "'", str40, "[100, 136, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 137, 137, 0]" + "'", str41, "[100, 137, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 138, 138, 0]" + "'", str42, "[100, 138, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 139, 139, 0]" + "'", str43, "[100, 139, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 140, 140, 0]" + "'", str44, "[100, 140, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 141, 141, 0]" + "'", str45, "[100, 141, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 142, 142, 0]" + "'", str46, "[100, 142, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 143, 143, 0]" + "'", str47, "[100, 143, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 144, 144, 0]" + "'", str48, "[100, 144, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 145, 145, 0]" + "'", str49, "[100, 145, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 146, 146, 0]" + "'", str50, "[100, 146, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 147, 147, 0]" + "'", str51, "[100, 147, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 148, 148, 0]" + "'", str52, "[100, 148, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 149, 149, 0]" + "'", str53, "[100, 149, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 150, 150, 0]" + "'", str54, "[100, 150, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 151, 151, 0]" + "'", str55, "[100, 151, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 152, 152, 0]" + "'", str56, "[100, 152, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 153, 153, 0]" + "'", str57, "[100, 153, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 154, 154, 0]" + "'", str58, "[100, 154, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 155, 155, 0]" + "'", str59, "[100, 155, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 156, 156, 0]" + "'", str60, "[100, 156, 156, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 157, 157, 0]" + "'", str61, "[100, 157, 157, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 158, 158, 0]" + "'", str62, "[100, 158, 158, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 159, 159, 0]" + "'", str63, "[100, 159, 159, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 160, 160, 0]" + "'", str64, "[100, 160, 160, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 161, 161, 0]" + "'", str65, "[100, 161, 161, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 162, 162, 0]" + "'", str66, "[100, 162, 162, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 163, 163, 0]" + "'", str67, "[100, 163, 163, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 164, 164, 0]" + "'", str68, "[100, 164, 164, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 165, 165, 0]" + "'", str69, "[100, 165, 165, 0]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test6130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6130");
        int[] intArray4 = new int[] { (byte) 100, (-1), (short) -1, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass22 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[101, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 0, 0, 100]" + "'", str5, "[100, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 1, 1, 100]" + "'", str6, "[100, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 2, 2, 100]" + "'", str7, "[100, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 3, 3, 100]" + "'", str8, "[100, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 4, 4, 100]" + "'", str9, "[100, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 5, 5, 100]" + "'", str10, "[100, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 6, 6, 100]" + "'", str11, "[100, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 7, 7, 100]" + "'", str12, "[100, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 8, 8, 100]" + "'", str13, "[100, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 9, 9, 100]" + "'", str14, "[100, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 0, 0, 101]" + "'", str15, "[101, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 1, 1, 101]" + "'", str16, "[101, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 2, 2, 101]" + "'", str17, "[101, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 3, 3, 101]" + "'", str18, "[101, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 4, 4, 101]" + "'", str19, "[101, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 5, 5, 101]" + "'", str20, "[101, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 6, 6, 101]" + "'", str21, "[101, 6, 6, 101]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6131");
        int[] intArray5 = new int[] { 100, '#', '4', '#', (byte) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass33 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 35, 79, 35, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 35, 53, 35, 0]" + "'", str6, "[100, 35, 53, 35, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 35, 54, 35, 0]" + "'", str7, "[100, 35, 54, 35, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 35, 55, 35, 0]" + "'", str8, "[100, 35, 55, 35, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 35, 56, 35, 0]" + "'", str9, "[100, 35, 56, 35, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 35, 57, 35, 0]" + "'", str10, "[100, 35, 57, 35, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 35, 58, 35, 0]" + "'", str11, "[100, 35, 58, 35, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 35, 59, 35, 0]" + "'", str12, "[100, 35, 59, 35, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 35, 60, 35, 0]" + "'", str13, "[100, 35, 60, 35, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 35, 61, 35, 0]" + "'", str14, "[100, 35, 61, 35, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 35, 62, 35, 0]" + "'", str15, "[100, 35, 62, 35, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 35, 63, 35, 0]" + "'", str16, "[100, 35, 63, 35, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 35, 64, 35, 0]" + "'", str17, "[100, 35, 64, 35, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 35, 65, 35, 0]" + "'", str18, "[100, 35, 65, 35, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 35, 66, 35, 0]" + "'", str19, "[100, 35, 66, 35, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 35, 67, 35, 0]" + "'", str20, "[100, 35, 67, 35, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 35, 68, 35, 0]" + "'", str21, "[100, 35, 68, 35, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 35, 69, 35, 0]" + "'", str22, "[100, 35, 69, 35, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 35, 70, 35, 0]" + "'", str23, "[100, 35, 70, 35, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 35, 71, 35, 0]" + "'", str24, "[100, 35, 71, 35, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 35, 72, 35, 0]" + "'", str25, "[100, 35, 72, 35, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 35, 73, 35, 0]" + "'", str26, "[100, 35, 73, 35, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 35, 74, 35, 0]" + "'", str27, "[100, 35, 74, 35, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 35, 75, 35, 0]" + "'", str28, "[100, 35, 75, 35, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 35, 76, 35, 0]" + "'", str29, "[100, 35, 76, 35, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 35, 77, 35, 0]" + "'", str30, "[100, 35, 77, 35, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 35, 78, 35, 0]" + "'", str31, "[100, 35, 78, 35, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 35, 79, 35, 0]" + "'", str32, "[100, 35, 79, 35, 0]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test6132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6132");
        int[] intArray3 = new int[] { (byte) 10, 'a', 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass31 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 124, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 98, 0]" + "'", str4, "[10, 98, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 99, 0]" + "'", str5, "[10, 99, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 100, 0]" + "'", str6, "[10, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 101, 0]" + "'", str7, "[10, 101, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 102, 0]" + "'", str8, "[10, 102, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 103, 0]" + "'", str9, "[10, 103, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 104, 0]" + "'", str10, "[10, 104, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 105, 0]" + "'", str11, "[10, 105, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 106, 0]" + "'", str12, "[10, 106, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 107, 0]" + "'", str13, "[10, 107, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 108, 0]" + "'", str14, "[10, 108, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 109, 0]" + "'", str15, "[10, 109, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 110, 0]" + "'", str16, "[10, 110, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 111, 0]" + "'", str17, "[10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 112, 0]" + "'", str18, "[10, 112, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 113, 0]" + "'", str19, "[10, 113, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 114, 0]" + "'", str20, "[10, 114, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 115, 0]" + "'", str21, "[10, 115, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 116, 0]" + "'", str22, "[10, 116, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 117, 0]" + "'", str23, "[10, 117, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 118, 0]" + "'", str24, "[10, 118, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 119, 0]" + "'", str25, "[10, 119, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 120, 0]" + "'", str26, "[10, 120, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 121, 0]" + "'", str27, "[10, 121, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 122, 0]" + "'", str28, "[10, 122, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 123, 0]" + "'", str29, "[10, 123, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 124, 0]" + "'", str30, "[10, 124, 0]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test6133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6133");
        int[] intArray1 = new int[] { (byte) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass17 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 1]" + "'", str10, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6134");
        int[] intArray1 = new int[] { '4' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass35 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[85]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[53]" + "'", str2, "[53]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[54]" + "'", str3, "[54]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[55]" + "'", str4, "[55]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[56]" + "'", str5, "[56]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[57]" + "'", str6, "[57]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[58]" + "'", str7, "[58]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[59]" + "'", str8, "[59]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[60]" + "'", str9, "[60]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[61]" + "'", str10, "[61]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[62]" + "'", str11, "[62]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[63]" + "'", str12, "[63]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[64]" + "'", str13, "[64]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[65]" + "'", str14, "[65]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[66]" + "'", str15, "[66]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[67]" + "'", str16, "[67]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[68]" + "'", str17, "[68]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[69]" + "'", str18, "[69]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[70]" + "'", str19, "[70]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[71]" + "'", str20, "[71]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[72]" + "'", str21, "[72]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[73]" + "'", str22, "[73]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[74]" + "'", str23, "[74]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[75]" + "'", str24, "[75]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[76]" + "'", str25, "[76]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[77]" + "'", str26, "[77]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[78]" + "'", str27, "[78]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[79]" + "'", str28, "[79]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[80]" + "'", str29, "[80]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[81]" + "'", str30, "[81]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[82]" + "'", str31, "[82]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[83]" + "'", str32, "[83]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[84]" + "'", str33, "[84]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[85]" + "'", str34, "[85]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test6135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6135");
        int[] intArray2 = new int[] { (short) 10, 10 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass46 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[53, 53]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 11]" + "'", str3, "[11, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 12]" + "'", str4, "[12, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 13]" + "'", str5, "[13, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 14]" + "'", str6, "[14, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 15]" + "'", str7, "[15, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 16]" + "'", str8, "[16, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 17]" + "'", str9, "[17, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 18]" + "'", str10, "[18, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 19]" + "'", str11, "[19, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 20]" + "'", str12, "[20, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 21]" + "'", str13, "[21, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 22]" + "'", str14, "[22, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 23]" + "'", str15, "[23, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 24]" + "'", str16, "[24, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 25]" + "'", str17, "[25, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 26]" + "'", str18, "[26, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 27]" + "'", str19, "[27, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 28]" + "'", str20, "[28, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 29]" + "'", str21, "[29, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 30]" + "'", str22, "[30, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 31]" + "'", str23, "[31, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 32]" + "'", str24, "[32, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 33]" + "'", str25, "[33, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 34]" + "'", str26, "[34, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 35]" + "'", str27, "[35, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 36]" + "'", str28, "[36, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 37]" + "'", str29, "[37, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 38]" + "'", str30, "[38, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 39]" + "'", str31, "[39, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 40]" + "'", str32, "[40, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 41]" + "'", str33, "[41, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 42]" + "'", str34, "[42, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 43]" + "'", str35, "[43, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 44]" + "'", str36, "[44, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 45]" + "'", str37, "[45, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 46]" + "'", str38, "[46, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 47]" + "'", str39, "[47, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 48]" + "'", str40, "[48, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 49]" + "'", str41, "[49, 49]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 50]" + "'", str42, "[50, 50]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 51]" + "'", str43, "[51, 51]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 52]" + "'", str44, "[52, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 53]" + "'", str45, "[53, 53]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test6136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6136");
        int[] intArray5 = new int[] { (short) 0, (-1), (short) 10, (byte) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass45 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 49, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 11, 100, -1]" + "'", str6, "[0, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 12, 100, -1]" + "'", str7, "[0, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 13, 100, -1]" + "'", str8, "[0, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 14, 100, -1]" + "'", str9, "[0, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 15, 100, -1]" + "'", str10, "[0, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 16, 100, -1]" + "'", str11, "[0, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 17, 100, -1]" + "'", str12, "[0, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 18, 100, -1]" + "'", str13, "[0, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 19, 100, -1]" + "'", str14, "[0, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 20, 100, -1]" + "'", str15, "[0, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 21, 100, -1]" + "'", str16, "[0, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 22, 100, -1]" + "'", str17, "[0, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 23, 100, -1]" + "'", str18, "[0, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 24, 100, -1]" + "'", str19, "[0, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 25, 100, -1]" + "'", str20, "[0, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 26, 100, -1]" + "'", str21, "[0, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 27, 100, -1]" + "'", str22, "[0, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 28, 100, -1]" + "'", str23, "[0, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 29, 100, -1]" + "'", str24, "[0, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 30, 100, -1]" + "'", str25, "[0, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 31, 100, -1]" + "'", str26, "[0, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 32, 100, -1]" + "'", str27, "[0, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 33, 100, -1]" + "'", str28, "[0, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 34, 100, -1]" + "'", str29, "[0, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 35, 100, -1]" + "'", str30, "[0, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 36, 100, -1]" + "'", str31, "[0, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 37, 100, -1]" + "'", str32, "[0, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 38, 100, -1]" + "'", str33, "[0, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 39, 100, -1]" + "'", str34, "[0, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 40, 100, -1]" + "'", str35, "[0, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 41, 100, -1]" + "'", str36, "[0, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 42, 100, -1]" + "'", str37, "[0, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 43, 100, -1]" + "'", str38, "[0, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 44, 100, -1]" + "'", str39, "[0, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 45, 100, -1]" + "'", str40, "[0, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 46, 100, -1]" + "'", str41, "[0, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 47, 100, -1]" + "'", str42, "[0, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 48, 100, -1]" + "'", str43, "[0, -1, 48, 100, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, -1, 49, 100, -1]" + "'", str44, "[0, -1, 49, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test6137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6137");
        int[] intArray1 = new int[] { 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass20 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[118]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6138");
        int[] intArray3 = new int[] { (byte) -1, (short) -1, '4' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass6 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 0, 52]" + "'", str4, "[-1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 52]" + "'", str5, "[-1, 1, 52]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test6139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6139");
        int[] intArray5 = new int[] { (byte) 100, 10, '4', 1, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass70 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 10, 116, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 10, 53, 1, 100]" + "'", str6, "[100, 10, 53, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 54, 1, 100]" + "'", str7, "[100, 10, 54, 1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 55, 1, 100]" + "'", str8, "[100, 10, 55, 1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 56, 1, 100]" + "'", str9, "[100, 10, 56, 1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 57, 1, 100]" + "'", str10, "[100, 10, 57, 1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 58, 1, 100]" + "'", str11, "[100, 10, 58, 1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 59, 1, 100]" + "'", str12, "[100, 10, 59, 1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 60, 1, 100]" + "'", str13, "[100, 10, 60, 1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 61, 1, 100]" + "'", str14, "[100, 10, 61, 1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 62, 1, 100]" + "'", str15, "[100, 10, 62, 1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 63, 1, 100]" + "'", str16, "[100, 10, 63, 1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 64, 1, 100]" + "'", str17, "[100, 10, 64, 1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 65, 1, 100]" + "'", str18, "[100, 10, 65, 1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 10, 66, 1, 100]" + "'", str19, "[100, 10, 66, 1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 10, 67, 1, 100]" + "'", str20, "[100, 10, 67, 1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 10, 68, 1, 100]" + "'", str21, "[100, 10, 68, 1, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 10, 69, 1, 100]" + "'", str22, "[100, 10, 69, 1, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 10, 70, 1, 100]" + "'", str23, "[100, 10, 70, 1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 10, 71, 1, 100]" + "'", str24, "[100, 10, 71, 1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 10, 72, 1, 100]" + "'", str25, "[100, 10, 72, 1, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 10, 73, 1, 100]" + "'", str26, "[100, 10, 73, 1, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 10, 74, 1, 100]" + "'", str27, "[100, 10, 74, 1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 10, 75, 1, 100]" + "'", str28, "[100, 10, 75, 1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 10, 76, 1, 100]" + "'", str29, "[100, 10, 76, 1, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 10, 77, 1, 100]" + "'", str30, "[100, 10, 77, 1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 10, 78, 1, 100]" + "'", str31, "[100, 10, 78, 1, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 10, 79, 1, 100]" + "'", str32, "[100, 10, 79, 1, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 10, 80, 1, 100]" + "'", str33, "[100, 10, 80, 1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 10, 81, 1, 100]" + "'", str34, "[100, 10, 81, 1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 10, 82, 1, 100]" + "'", str35, "[100, 10, 82, 1, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 10, 83, 1, 100]" + "'", str36, "[100, 10, 83, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 10, 84, 1, 100]" + "'", str37, "[100, 10, 84, 1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 10, 85, 1, 100]" + "'", str38, "[100, 10, 85, 1, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 10, 86, 1, 100]" + "'", str39, "[100, 10, 86, 1, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 10, 87, 1, 100]" + "'", str40, "[100, 10, 87, 1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 10, 88, 1, 100]" + "'", str41, "[100, 10, 88, 1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 10, 89, 1, 100]" + "'", str42, "[100, 10, 89, 1, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 10, 90, 1, 100]" + "'", str43, "[100, 10, 90, 1, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 10, 91, 1, 100]" + "'", str44, "[100, 10, 91, 1, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 10, 92, 1, 100]" + "'", str45, "[100, 10, 92, 1, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 10, 93, 1, 100]" + "'", str46, "[100, 10, 93, 1, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 10, 94, 1, 100]" + "'", str47, "[100, 10, 94, 1, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 10, 95, 1, 100]" + "'", str48, "[100, 10, 95, 1, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 10, 96, 1, 100]" + "'", str49, "[100, 10, 96, 1, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 10, 97, 1, 100]" + "'", str50, "[100, 10, 97, 1, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 10, 98, 1, 100]" + "'", str51, "[100, 10, 98, 1, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 10, 99, 1, 100]" + "'", str52, "[100, 10, 99, 1, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 10, 100, 1, 100]" + "'", str53, "[100, 10, 100, 1, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 10, 101, 1, 100]" + "'", str54, "[100, 10, 101, 1, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 10, 102, 1, 100]" + "'", str55, "[100, 10, 102, 1, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 10, 103, 1, 100]" + "'", str56, "[100, 10, 103, 1, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 10, 104, 1, 100]" + "'", str57, "[100, 10, 104, 1, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 10, 105, 1, 100]" + "'", str58, "[100, 10, 105, 1, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 10, 106, 1, 100]" + "'", str59, "[100, 10, 106, 1, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 10, 107, 1, 100]" + "'", str60, "[100, 10, 107, 1, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 10, 108, 1, 100]" + "'", str61, "[100, 10, 108, 1, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 10, 109, 1, 100]" + "'", str62, "[100, 10, 109, 1, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 10, 110, 1, 100]" + "'", str63, "[100, 10, 110, 1, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 10, 111, 1, 100]" + "'", str64, "[100, 10, 111, 1, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 10, 112, 1, 100]" + "'", str65, "[100, 10, 112, 1, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 10, 113, 1, 100]" + "'", str66, "[100, 10, 113, 1, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 10, 114, 1, 100]" + "'", str67, "[100, 10, 114, 1, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 10, 115, 1, 100]" + "'", str68, "[100, 10, 115, 1, 100]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 10, 116, 1, 100]" + "'", str69, "[100, 10, 116, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test6140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6140");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass95 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[8, 9, 9, 7]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 0]" + "'", str22, "[1, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 0]" + "'", str23, "[1, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 0]" + "'", str24, "[1, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 1]" + "'", str25, "[2, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 1]" + "'", str26, "[2, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 1]" + "'", str27, "[2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 1]" + "'", str28, "[2, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 1]" + "'", str29, "[2, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 1]" + "'", str30, "[2, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 1]" + "'", str31, "[2, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 1]" + "'", str32, "[2, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 1]" + "'", str33, "[2, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 1]" + "'", str34, "[2, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 2]" + "'", str35, "[3, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 2]" + "'", str36, "[3, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 2]" + "'", str37, "[3, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 2]" + "'", str38, "[3, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 2]" + "'", str39, "[3, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 2]" + "'", str40, "[3, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 2]" + "'", str41, "[3, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 2]" + "'", str42, "[3, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 2]" + "'", str43, "[3, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 2]" + "'", str44, "[3, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 3]" + "'", str45, "[4, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 3]" + "'", str46, "[4, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 3]" + "'", str47, "[4, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 3]" + "'", str48, "[4, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 3]" + "'", str49, "[4, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 3]" + "'", str50, "[4, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 3]" + "'", str51, "[4, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 3]" + "'", str52, "[4, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 3]" + "'", str53, "[4, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 3]" + "'", str54, "[4, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 4]" + "'", str55, "[5, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 4]" + "'", str56, "[5, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 4]" + "'", str57, "[5, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 4]" + "'", str58, "[5, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 4]" + "'", str59, "[5, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 4]" + "'", str60, "[5, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 6, 6, 4]" + "'", str61, "[5, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 7, 7, 4]" + "'", str62, "[5, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[5, 8, 8, 4]" + "'", str63, "[5, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 9, 9, 4]" + "'", str64, "[5, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 0, 0, 5]" + "'", str65, "[6, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 1, 1, 5]" + "'", str66, "[6, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 2, 2, 5]" + "'", str67, "[6, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 3, 3, 5]" + "'", str68, "[6, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 4, 4, 5]" + "'", str69, "[6, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 5, 5, 5]" + "'", str70, "[6, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 6, 6, 5]" + "'", str71, "[6, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[6, 7, 7, 5]" + "'", str72, "[6, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[6, 8, 8, 5]" + "'", str73, "[6, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 9, 9, 5]" + "'", str74, "[6, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[7, 0, 0, 6]" + "'", str75, "[7, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[7, 1, 1, 6]" + "'", str76, "[7, 1, 1, 6]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[7, 2, 2, 6]" + "'", str77, "[7, 2, 2, 6]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7, 3, 3, 6]" + "'", str78, "[7, 3, 3, 6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7, 4, 4, 6]" + "'", str79, "[7, 4, 4, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 5, 5, 6]" + "'", str80, "[7, 5, 5, 6]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[7, 6, 6, 6]" + "'", str81, "[7, 6, 6, 6]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[7, 7, 7, 6]" + "'", str82, "[7, 7, 7, 6]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[7, 8, 8, 6]" + "'", str83, "[7, 8, 8, 6]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[7, 9, 9, 6]" + "'", str84, "[7, 9, 9, 6]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[8, 0, 0, 7]" + "'", str85, "[8, 0, 0, 7]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[8, 1, 1, 7]" + "'", str86, "[8, 1, 1, 7]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[8, 2, 2, 7]" + "'", str87, "[8, 2, 2, 7]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[8, 3, 3, 7]" + "'", str88, "[8, 3, 3, 7]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[8, 4, 4, 7]" + "'", str89, "[8, 4, 4, 7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8, 5, 5, 7]" + "'", str90, "[8, 5, 5, 7]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[8, 6, 6, 7]" + "'", str91, "[8, 6, 6, 7]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[8, 7, 7, 7]" + "'", str92, "[8, 7, 7, 7]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[8, 8, 8, 7]" + "'", str93, "[8, 8, 8, 7]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[8, 9, 9, 7]" + "'", str94, "[8, 9, 9, 7]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test6141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6141");
        int[] intArray2 = new int[] { 0, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass44 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 2]" + "'", str3, "[1, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 3]" + "'", str4, "[2, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 4]" + "'", str5, "[3, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 5]" + "'", str6, "[4, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 6]" + "'", str7, "[5, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 7]" + "'", str8, "[6, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7, 8]" + "'", str9, "[7, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8, 9]" + "'", str10, "[8, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 0, 1]" + "'", str21, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 0, 1]" + "'", str31, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 3]" + "'", str34, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 4]" + "'", str35, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5, 5]" + "'", str36, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6, 6]" + "'", str37, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7, 7]" + "'", str38, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8, 8]" + "'", str39, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9, 9]" + "'", str40, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 0, 1]" + "'", str41, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 2]" + "'", str43, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test6142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6142");
        int[] intArray6 = new int[] { (short) 100, (short) 0, (byte) 100, (short) 10, (byte) 0, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass57 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 150, 60, 0, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 101, 11, 0, 0]" + "'", str7, "[100, 0, 101, 11, 0, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 102, 12, 0, 0]" + "'", str8, "[100, 0, 102, 12, 0, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 103, 13, 0, 0]" + "'", str9, "[100, 0, 103, 13, 0, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 104, 14, 0, 0]" + "'", str10, "[100, 0, 104, 14, 0, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 105, 15, 0, 0]" + "'", str11, "[100, 0, 105, 15, 0, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 106, 16, 0, 0]" + "'", str12, "[100, 0, 106, 16, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 107, 17, 0, 0]" + "'", str13, "[100, 0, 107, 17, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 108, 18, 0, 0]" + "'", str14, "[100, 0, 108, 18, 0, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 0, 109, 19, 0, 0]" + "'", str15, "[100, 0, 109, 19, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 0, 110, 20, 0, 0]" + "'", str16, "[100, 0, 110, 20, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 0, 111, 21, 0, 0]" + "'", str17, "[100, 0, 111, 21, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 0, 112, 22, 0, 0]" + "'", str18, "[100, 0, 112, 22, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 0, 113, 23, 0, 0]" + "'", str19, "[100, 0, 113, 23, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 0, 114, 24, 0, 0]" + "'", str20, "[100, 0, 114, 24, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 0, 115, 25, 0, 0]" + "'", str21, "[100, 0, 115, 25, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 0, 116, 26, 0, 0]" + "'", str22, "[100, 0, 116, 26, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 0, 117, 27, 0, 0]" + "'", str23, "[100, 0, 117, 27, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 0, 118, 28, 0, 0]" + "'", str24, "[100, 0, 118, 28, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 0, 119, 29, 0, 0]" + "'", str25, "[100, 0, 119, 29, 0, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 0, 120, 30, 0, 0]" + "'", str26, "[100, 0, 120, 30, 0, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 0, 121, 31, 0, 0]" + "'", str27, "[100, 0, 121, 31, 0, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 0, 122, 32, 0, 0]" + "'", str28, "[100, 0, 122, 32, 0, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 0, 123, 33, 0, 0]" + "'", str29, "[100, 0, 123, 33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 0, 124, 34, 0, 0]" + "'", str30, "[100, 0, 124, 34, 0, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 0, 125, 35, 0, 0]" + "'", str31, "[100, 0, 125, 35, 0, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 0, 126, 36, 0, 0]" + "'", str32, "[100, 0, 126, 36, 0, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 0, 127, 37, 0, 0]" + "'", str33, "[100, 0, 127, 37, 0, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 128, 38, 0, 0]" + "'", str34, "[100, 0, 128, 38, 0, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 129, 39, 0, 0]" + "'", str35, "[100, 0, 129, 39, 0, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 0, 130, 40, 0, 0]" + "'", str36, "[100, 0, 130, 40, 0, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 0, 131, 41, 0, 0]" + "'", str37, "[100, 0, 131, 41, 0, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 0, 132, 42, 0, 0]" + "'", str38, "[100, 0, 132, 42, 0, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 0, 133, 43, 0, 0]" + "'", str39, "[100, 0, 133, 43, 0, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 0, 134, 44, 0, 0]" + "'", str40, "[100, 0, 134, 44, 0, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 0, 135, 45, 0, 0]" + "'", str41, "[100, 0, 135, 45, 0, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 0, 136, 46, 0, 0]" + "'", str42, "[100, 0, 136, 46, 0, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 0, 137, 47, 0, 0]" + "'", str43, "[100, 0, 137, 47, 0, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 0, 138, 48, 0, 0]" + "'", str44, "[100, 0, 138, 48, 0, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 0, 139, 49, 0, 0]" + "'", str45, "[100, 0, 139, 49, 0, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 0, 140, 50, 0, 0]" + "'", str46, "[100, 0, 140, 50, 0, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 0, 141, 51, 0, 0]" + "'", str47, "[100, 0, 141, 51, 0, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 0, 142, 52, 0, 0]" + "'", str48, "[100, 0, 142, 52, 0, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 0, 143, 53, 0, 0]" + "'", str49, "[100, 0, 143, 53, 0, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 0, 144, 54, 0, 0]" + "'", str50, "[100, 0, 144, 54, 0, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 0, 145, 55, 0, 0]" + "'", str51, "[100, 0, 145, 55, 0, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 0, 146, 56, 0, 0]" + "'", str52, "[100, 0, 146, 56, 0, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 0, 147, 57, 0, 0]" + "'", str53, "[100, 0, 147, 57, 0, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 0, 148, 58, 0, 0]" + "'", str54, "[100, 0, 148, 58, 0, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 0, 149, 59, 0, 0]" + "'", str55, "[100, 0, 149, 59, 0, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 0, 150, 60, 0, 0]" + "'", str56, "[100, 0, 150, 60, 0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test6143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6143");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass90 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7]" + "'", str58, "[7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8]" + "'", str59, "[8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9]" + "'", str60, "[9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 1]" + "'", str61, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1]" + "'", str62, "[1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[2]" + "'", str63, "[2]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[3]" + "'", str64, "[3]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[4]" + "'", str65, "[4]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5]" + "'", str66, "[5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6]" + "'", str67, "[6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7]" + "'", str68, "[7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[8]" + "'", str69, "[8]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[9]" + "'", str70, "[9]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 1]" + "'", str71, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1]" + "'", str72, "[1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[2]" + "'", str73, "[2]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[3]" + "'", str74, "[3]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[4]" + "'", str75, "[4]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[5]" + "'", str76, "[5]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6]" + "'", str77, "[6]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7]" + "'", str78, "[7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8]" + "'", str79, "[8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[9]" + "'", str80, "[9]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 1]" + "'", str81, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1]" + "'", str82, "[1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[2]" + "'", str83, "[2]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[3]" + "'", str84, "[3]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[4]" + "'", str85, "[4]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[5]" + "'", str86, "[5]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[6]" + "'", str87, "[6]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[7]" + "'", str88, "[7]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[8]" + "'", str89, "[8]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test6144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6144");
        int[] intArray3 = new int[] { (byte) -1, (short) -1, '4' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass5 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 0, 52]" + "'", str4, "[-1, 0, 52]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test6145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6145");
        int[] intArray3 = new int[] { 0, (byte) -1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass51 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[4, 6, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 0]" + "'", str4, "[0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 0]" + "'", str5, "[0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 0]" + "'", str6, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 0]" + "'", str7, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 0]" + "'", str8, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 0]" + "'", str9, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 0]" + "'", str10, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 0]" + "'", str11, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 0]" + "'", str12, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 0]" + "'", str13, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 1]" + "'", str14, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 1]" + "'", str15, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 1]" + "'", str16, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 1]" + "'", str17, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 1]" + "'", str18, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 1]" + "'", str19, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 1]" + "'", str20, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 1]" + "'", str21, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 1]" + "'", str22, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 1]" + "'", str23, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 2]" + "'", str24, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 2]" + "'", str25, "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 2]" + "'", str26, "[2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 2]" + "'", str27, "[2, 3, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 2]" + "'", str28, "[2, 4, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 2]" + "'", str29, "[2, 5, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 2]" + "'", str30, "[2, 6, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 2]" + "'", str31, "[2, 7, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 2]" + "'", str32, "[2, 8, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 2]" + "'", str33, "[2, 9, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 3]" + "'", str34, "[3, 0, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 3]" + "'", str35, "[3, 1, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 3]" + "'", str36, "[3, 2, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 3]" + "'", str37, "[3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 3]" + "'", str38, "[3, 4, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 3]" + "'", str39, "[3, 5, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 3]" + "'", str40, "[3, 6, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 3]" + "'", str41, "[3, 7, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 3]" + "'", str42, "[3, 8, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 3]" + "'", str43, "[3, 9, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 4]" + "'", str44, "[4, 0, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 4]" + "'", str45, "[4, 1, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 4]" + "'", str46, "[4, 2, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 4]" + "'", str47, "[4, 3, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 4]" + "'", str48, "[4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 4]" + "'", str49, "[4, 5, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 4]" + "'", str50, "[4, 6, 4]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test6146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6146");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (byte) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass12 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 17, 17, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, 10]" + "'", str5, "[1, 11, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, 10]" + "'", str6, "[1, 12, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, 10]" + "'", str7, "[1, 13, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, 10]" + "'", str8, "[1, 14, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, 10]" + "'", str9, "[1, 15, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, 10]" + "'", str10, "[1, 16, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, 10]" + "'", str11, "[1, 17, 17, 10]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test6147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6147");
        int[] intArray5 = new int[] { (short) 0, (-1), (short) 10, (byte) 100, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass44 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 48, 100, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 11, 100, -1]" + "'", str6, "[0, -1, 11, 100, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 12, 100, -1]" + "'", str7, "[0, -1, 12, 100, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 13, 100, -1]" + "'", str8, "[0, -1, 13, 100, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 14, 100, -1]" + "'", str9, "[0, -1, 14, 100, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, -1, 15, 100, -1]" + "'", str10, "[0, -1, 15, 100, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, -1, 16, 100, -1]" + "'", str11, "[0, -1, 16, 100, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, -1, 17, 100, -1]" + "'", str12, "[0, -1, 17, 100, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, -1, 18, 100, -1]" + "'", str13, "[0, -1, 18, 100, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, -1, 19, 100, -1]" + "'", str14, "[0, -1, 19, 100, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, -1, 20, 100, -1]" + "'", str15, "[0, -1, 20, 100, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, -1, 21, 100, -1]" + "'", str16, "[0, -1, 21, 100, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, -1, 22, 100, -1]" + "'", str17, "[0, -1, 22, 100, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, -1, 23, 100, -1]" + "'", str18, "[0, -1, 23, 100, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, -1, 24, 100, -1]" + "'", str19, "[0, -1, 24, 100, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, -1, 25, 100, -1]" + "'", str20, "[0, -1, 25, 100, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, -1, 26, 100, -1]" + "'", str21, "[0, -1, 26, 100, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, -1, 27, 100, -1]" + "'", str22, "[0, -1, 27, 100, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, -1, 28, 100, -1]" + "'", str23, "[0, -1, 28, 100, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, -1, 29, 100, -1]" + "'", str24, "[0, -1, 29, 100, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, -1, 30, 100, -1]" + "'", str25, "[0, -1, 30, 100, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, -1, 31, 100, -1]" + "'", str26, "[0, -1, 31, 100, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, -1, 32, 100, -1]" + "'", str27, "[0, -1, 32, 100, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, -1, 33, 100, -1]" + "'", str28, "[0, -1, 33, 100, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, -1, 34, 100, -1]" + "'", str29, "[0, -1, 34, 100, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, -1, 35, 100, -1]" + "'", str30, "[0, -1, 35, 100, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, -1, 36, 100, -1]" + "'", str31, "[0, -1, 36, 100, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, -1, 37, 100, -1]" + "'", str32, "[0, -1, 37, 100, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, -1, 38, 100, -1]" + "'", str33, "[0, -1, 38, 100, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, -1, 39, 100, -1]" + "'", str34, "[0, -1, 39, 100, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, -1, 40, 100, -1]" + "'", str35, "[0, -1, 40, 100, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, -1, 41, 100, -1]" + "'", str36, "[0, -1, 41, 100, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, -1, 42, 100, -1]" + "'", str37, "[0, -1, 42, 100, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, -1, 43, 100, -1]" + "'", str38, "[0, -1, 43, 100, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, -1, 44, 100, -1]" + "'", str39, "[0, -1, 44, 100, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, -1, 45, 100, -1]" + "'", str40, "[0, -1, 45, 100, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, -1, 46, 100, -1]" + "'", str41, "[0, -1, 46, 100, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, -1, 47, 100, -1]" + "'", str42, "[0, -1, 47, 100, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, -1, 48, 100, -1]" + "'", str43, "[0, -1, 48, 100, -1]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test6148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6148");
        int[] intArray3 = new int[] { (byte) 1, (byte) 100, (short) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass26 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 101, 100]" + "'", str4, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 102, 100]" + "'", str5, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 103, 100]" + "'", str6, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 104, 100]" + "'", str7, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 105, 100]" + "'", str8, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 106, 100]" + "'", str9, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 107, 100]" + "'", str10, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 108, 100]" + "'", str11, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 109, 100]" + "'", str12, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 110, 100]" + "'", str13, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 111, 100]" + "'", str14, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 112, 100]" + "'", str15, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 113, 100]" + "'", str16, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 114, 100]" + "'", str17, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 115, 100]" + "'", str18, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 116, 100]" + "'", str19, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 117, 100]" + "'", str20, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 118, 100]" + "'", str21, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 119, 100]" + "'", str22, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 120, 100]" + "'", str23, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 121, 100]" + "'", str24, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 122, 100]" + "'", str25, "[1, 122, 100]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test6149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6149");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass73 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 7, 100]" + "'", str10, "[0, 106, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 8, 100]" + "'", str11, "[0, 107, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 9, 100]" + "'", str12, "[0, 108, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 101]" + "'", str13, "[1, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 1, 101]" + "'", str14, "[1, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 2, 101]" + "'", str15, "[1, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 3, 101]" + "'", str16, "[1, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 4, 101]" + "'", str17, "[1, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 5, 101]" + "'", str18, "[1, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 6, 101]" + "'", str19, "[1, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 7, 101]" + "'", str20, "[1, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 8, 101]" + "'", str21, "[1, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 9, 101]" + "'", str22, "[1, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 0, 102]" + "'", str23, "[2, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1, 102]" + "'", str24, "[2, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 2, 102]" + "'", str25, "[2, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 3, 102]" + "'", str26, "[2, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 4, 102]" + "'", str27, "[2, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 5, 102]" + "'", str28, "[2, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 6, 102]" + "'", str29, "[2, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 7, 102]" + "'", str30, "[2, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 8, 102]" + "'", str31, "[2, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 9, 102]" + "'", str32, "[2, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 0, 103]" + "'", str33, "[3, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 1, 103]" + "'", str34, "[3, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2, 103]" + "'", str35, "[3, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 3, 103]" + "'", str36, "[3, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 4, 103]" + "'", str37, "[3, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 5, 103]" + "'", str38, "[3, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 6, 6, 103]" + "'", str39, "[3, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 7, 7, 103]" + "'", str40, "[3, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 8, 8, 103]" + "'", str41, "[3, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 9, 9, 103]" + "'", str42, "[3, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 0, 0, 104]" + "'", str43, "[4, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 1, 1, 104]" + "'", str44, "[4, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 2, 2, 104]" + "'", str45, "[4, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 3, 3, 104]" + "'", str46, "[4, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4, 4, 104]" + "'", str47, "[4, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 5, 5, 104]" + "'", str48, "[4, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 6, 6, 104]" + "'", str49, "[4, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 7, 7, 104]" + "'", str50, "[4, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 8, 8, 104]" + "'", str51, "[4, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 9, 9, 104]" + "'", str52, "[4, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 0, 0, 105]" + "'", str53, "[5, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 1, 1, 105]" + "'", str54, "[5, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 2, 2, 105]" + "'", str55, "[5, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 3, 3, 105]" + "'", str56, "[5, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 4, 4, 105]" + "'", str57, "[5, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5, 5, 105]" + "'", str58, "[5, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 6, 6, 105]" + "'", str59, "[5, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 7, 7, 105]" + "'", str60, "[5, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 8, 8, 105]" + "'", str61, "[5, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 9, 9, 105]" + "'", str62, "[5, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 0, 0, 106]" + "'", str63, "[6, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[6, 1, 1, 106]" + "'", str64, "[6, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 2, 2, 106]" + "'", str65, "[6, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 3, 3, 106]" + "'", str66, "[6, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 4, 4, 106]" + "'", str67, "[6, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 5, 5, 106]" + "'", str68, "[6, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6, 6, 106]" + "'", str69, "[6, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 7, 7, 106]" + "'", str70, "[6, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 8, 8, 106]" + "'", str71, "[6, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[6, 9, 9, 106]" + "'", str72, "[6, 9, 9, 106]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test6150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6150");
        int[] intArray3 = new int[] { 10, (short) 10, 'a' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass21 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 27, 97]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 11, 97]" + "'", str4, "[10, 11, 97]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 12, 97]" + "'", str5, "[10, 12, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 13, 97]" + "'", str6, "[10, 13, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 14, 97]" + "'", str7, "[10, 14, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 15, 97]" + "'", str8, "[10, 15, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 16, 97]" + "'", str9, "[10, 16, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 17, 97]" + "'", str10, "[10, 17, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 18, 97]" + "'", str11, "[10, 18, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 19, 97]" + "'", str12, "[10, 19, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 20, 97]" + "'", str13, "[10, 20, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 21, 97]" + "'", str14, "[10, 21, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 22, 97]" + "'", str15, "[10, 22, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 23, 97]" + "'", str16, "[10, 23, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 24, 97]" + "'", str17, "[10, 24, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 25, 97]" + "'", str18, "[10, 25, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 26, 97]" + "'", str19, "[10, 26, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 27, 97]" + "'", str20, "[10, 27, 97]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test6151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6151");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass72 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 99, 167, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 37, 105, 1]" + "'", str9, "[0, 37, 105, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 38, 106, 1]" + "'", str10, "[0, 38, 106, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 39, 107, 1]" + "'", str11, "[0, 39, 107, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 40, 108, 1]" + "'", str12, "[0, 40, 108, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 41, 109, 1]" + "'", str13, "[0, 41, 109, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 42, 110, 1]" + "'", str14, "[0, 42, 110, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 43, 111, 1]" + "'", str15, "[0, 43, 111, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 44, 112, 1]" + "'", str16, "[0, 44, 112, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 45, 113, 1]" + "'", str17, "[0, 45, 113, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 46, 114, 1]" + "'", str18, "[0, 46, 114, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 47, 115, 1]" + "'", str19, "[0, 47, 115, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 48, 116, 1]" + "'", str20, "[0, 48, 116, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 49, 117, 1]" + "'", str21, "[0, 49, 117, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 50, 118, 1]" + "'", str22, "[0, 50, 118, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 51, 119, 1]" + "'", str23, "[0, 51, 119, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 52, 120, 1]" + "'", str24, "[0, 52, 120, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 53, 121, 1]" + "'", str25, "[0, 53, 121, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 54, 122, 1]" + "'", str26, "[0, 54, 122, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 55, 123, 1]" + "'", str27, "[0, 55, 123, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 56, 124, 1]" + "'", str28, "[0, 56, 124, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 57, 125, 1]" + "'", str29, "[0, 57, 125, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 58, 126, 1]" + "'", str30, "[0, 58, 126, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 59, 127, 1]" + "'", str31, "[0, 59, 127, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 60, 128, 1]" + "'", str32, "[0, 60, 128, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 61, 129, 1]" + "'", str33, "[0, 61, 129, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 62, 130, 1]" + "'", str34, "[0, 62, 130, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 63, 131, 1]" + "'", str35, "[0, 63, 131, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 64, 132, 1]" + "'", str36, "[0, 64, 132, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 65, 133, 1]" + "'", str37, "[0, 65, 133, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 66, 134, 1]" + "'", str38, "[0, 66, 134, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 67, 135, 1]" + "'", str39, "[0, 67, 135, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 68, 136, 1]" + "'", str40, "[0, 68, 136, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 69, 137, 1]" + "'", str41, "[0, 69, 137, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 70, 138, 1]" + "'", str42, "[0, 70, 138, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 71, 139, 1]" + "'", str43, "[0, 71, 139, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 72, 140, 1]" + "'", str44, "[0, 72, 140, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 73, 141, 1]" + "'", str45, "[0, 73, 141, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 74, 142, 1]" + "'", str46, "[0, 74, 142, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 75, 143, 1]" + "'", str47, "[0, 75, 143, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 76, 144, 1]" + "'", str48, "[0, 76, 144, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 77, 145, 1]" + "'", str49, "[0, 77, 145, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 78, 146, 1]" + "'", str50, "[0, 78, 146, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 79, 147, 1]" + "'", str51, "[0, 79, 147, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 80, 148, 1]" + "'", str52, "[0, 80, 148, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 81, 149, 1]" + "'", str53, "[0, 81, 149, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 82, 150, 1]" + "'", str54, "[0, 82, 150, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 83, 151, 1]" + "'", str55, "[0, 83, 151, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 84, 152, 1]" + "'", str56, "[0, 84, 152, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 85, 153, 1]" + "'", str57, "[0, 85, 153, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 86, 154, 1]" + "'", str58, "[0, 86, 154, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 87, 155, 1]" + "'", str59, "[0, 87, 155, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 88, 156, 1]" + "'", str60, "[0, 88, 156, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 89, 157, 1]" + "'", str61, "[0, 89, 157, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 90, 158, 1]" + "'", str62, "[0, 90, 158, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 91, 159, 1]" + "'", str63, "[0, 91, 159, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 92, 160, 1]" + "'", str64, "[0, 92, 160, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 93, 161, 1]" + "'", str65, "[0, 93, 161, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 94, 162, 1]" + "'", str66, "[0, 94, 162, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 95, 163, 1]" + "'", str67, "[0, 95, 163, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 96, 164, 1]" + "'", str68, "[0, 96, 164, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 97, 165, 1]" + "'", str69, "[0, 97, 165, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 98, 166, 1]" + "'", str70, "[0, 98, 166, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 99, 167, 1]" + "'", str71, "[0, 99, 167, 1]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test6152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6152");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass96 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[9, 0, 0, 8]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 0]" + "'", str22, "[1, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 0]" + "'", str23, "[1, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 0]" + "'", str24, "[1, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 1]" + "'", str25, "[2, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 1]" + "'", str26, "[2, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 1]" + "'", str27, "[2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 1]" + "'", str28, "[2, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 1]" + "'", str29, "[2, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 1]" + "'", str30, "[2, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 1]" + "'", str31, "[2, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 1]" + "'", str32, "[2, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 1]" + "'", str33, "[2, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 1]" + "'", str34, "[2, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 2]" + "'", str35, "[3, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 2]" + "'", str36, "[3, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 2]" + "'", str37, "[3, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 2]" + "'", str38, "[3, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 2]" + "'", str39, "[3, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 2]" + "'", str40, "[3, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 2]" + "'", str41, "[3, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 2]" + "'", str42, "[3, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 2]" + "'", str43, "[3, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 2]" + "'", str44, "[3, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 3]" + "'", str45, "[4, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 3]" + "'", str46, "[4, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 3]" + "'", str47, "[4, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 3]" + "'", str48, "[4, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 3]" + "'", str49, "[4, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 3]" + "'", str50, "[4, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 3]" + "'", str51, "[4, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 3]" + "'", str52, "[4, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 3]" + "'", str53, "[4, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 3]" + "'", str54, "[4, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 4]" + "'", str55, "[5, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 4]" + "'", str56, "[5, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 4]" + "'", str57, "[5, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 4]" + "'", str58, "[5, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 4]" + "'", str59, "[5, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 4]" + "'", str60, "[5, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 6, 6, 4]" + "'", str61, "[5, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 7, 7, 4]" + "'", str62, "[5, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[5, 8, 8, 4]" + "'", str63, "[5, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 9, 9, 4]" + "'", str64, "[5, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 0, 0, 5]" + "'", str65, "[6, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 1, 1, 5]" + "'", str66, "[6, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 2, 2, 5]" + "'", str67, "[6, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 3, 3, 5]" + "'", str68, "[6, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 4, 4, 5]" + "'", str69, "[6, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 5, 5, 5]" + "'", str70, "[6, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 6, 6, 5]" + "'", str71, "[6, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[6, 7, 7, 5]" + "'", str72, "[6, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[6, 8, 8, 5]" + "'", str73, "[6, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 9, 9, 5]" + "'", str74, "[6, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[7, 0, 0, 6]" + "'", str75, "[7, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[7, 1, 1, 6]" + "'", str76, "[7, 1, 1, 6]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[7, 2, 2, 6]" + "'", str77, "[7, 2, 2, 6]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7, 3, 3, 6]" + "'", str78, "[7, 3, 3, 6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7, 4, 4, 6]" + "'", str79, "[7, 4, 4, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 5, 5, 6]" + "'", str80, "[7, 5, 5, 6]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[7, 6, 6, 6]" + "'", str81, "[7, 6, 6, 6]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[7, 7, 7, 6]" + "'", str82, "[7, 7, 7, 6]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[7, 8, 8, 6]" + "'", str83, "[7, 8, 8, 6]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[7, 9, 9, 6]" + "'", str84, "[7, 9, 9, 6]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[8, 0, 0, 7]" + "'", str85, "[8, 0, 0, 7]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[8, 1, 1, 7]" + "'", str86, "[8, 1, 1, 7]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[8, 2, 2, 7]" + "'", str87, "[8, 2, 2, 7]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[8, 3, 3, 7]" + "'", str88, "[8, 3, 3, 7]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[8, 4, 4, 7]" + "'", str89, "[8, 4, 4, 7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8, 5, 5, 7]" + "'", str90, "[8, 5, 5, 7]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[8, 6, 6, 7]" + "'", str91, "[8, 6, 6, 7]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[8, 7, 7, 7]" + "'", str92, "[8, 7, 7, 7]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[8, 8, 8, 7]" + "'", str93, "[8, 8, 8, 7]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[8, 9, 9, 7]" + "'", str94, "[8, 9, 9, 7]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[9, 0, 0, 8]" + "'", str95, "[9, 0, 0, 8]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test6153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6153");
        int[] intArray5 = new int[] { (short) 0, (short) 10, (short) 100, (byte) 1, (byte) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass34 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, 128, 1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 10, 101, 1, 0]" + "'", str6, "[0, 10, 101, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 102, 1, 0]" + "'", str7, "[0, 10, 102, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 103, 1, 0]" + "'", str8, "[0, 10, 103, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 104, 1, 0]" + "'", str9, "[0, 10, 104, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 105, 1, 0]" + "'", str10, "[0, 10, 105, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 106, 1, 0]" + "'", str11, "[0, 10, 106, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 107, 1, 0]" + "'", str12, "[0, 10, 107, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 10, 108, 1, 0]" + "'", str13, "[0, 10, 108, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 109, 1, 0]" + "'", str14, "[0, 10, 109, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 10, 110, 1, 0]" + "'", str15, "[0, 10, 110, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 10, 111, 1, 0]" + "'", str16, "[0, 10, 111, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 10, 112, 1, 0]" + "'", str17, "[0, 10, 112, 1, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 10, 113, 1, 0]" + "'", str18, "[0, 10, 113, 1, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 10, 114, 1, 0]" + "'", str19, "[0, 10, 114, 1, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 10, 115, 1, 0]" + "'", str20, "[0, 10, 115, 1, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 10, 116, 1, 0]" + "'", str21, "[0, 10, 116, 1, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 10, 117, 1, 0]" + "'", str22, "[0, 10, 117, 1, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 10, 118, 1, 0]" + "'", str23, "[0, 10, 118, 1, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 10, 119, 1, 0]" + "'", str24, "[0, 10, 119, 1, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 10, 120, 1, 0]" + "'", str25, "[0, 10, 120, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 10, 121, 1, 0]" + "'", str26, "[0, 10, 121, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 10, 122, 1, 0]" + "'", str27, "[0, 10, 122, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 10, 123, 1, 0]" + "'", str28, "[0, 10, 123, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 10, 124, 1, 0]" + "'", str29, "[0, 10, 124, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 10, 125, 1, 0]" + "'", str30, "[0, 10, 125, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 10, 126, 1, 0]" + "'", str31, "[0, 10, 126, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 10, 127, 1, 0]" + "'", str32, "[0, 10, 127, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 10, 128, 1, 0]" + "'", str33, "[0, 10, 128, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test6154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6154");
        int[] intArray5 = new int[] { '#', (short) 10, 100, '4', (short) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass45 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[35, 10, 139, 52, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 10, 101, 52, 1]" + "'", str6, "[35, 10, 101, 52, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 10, 102, 52, 1]" + "'", str7, "[35, 10, 102, 52, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 10, 103, 52, 1]" + "'", str8, "[35, 10, 103, 52, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 10, 104, 52, 1]" + "'", str9, "[35, 10, 104, 52, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 10, 105, 52, 1]" + "'", str10, "[35, 10, 105, 52, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 10, 106, 52, 1]" + "'", str11, "[35, 10, 106, 52, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 10, 107, 52, 1]" + "'", str12, "[35, 10, 107, 52, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 10, 108, 52, 1]" + "'", str13, "[35, 10, 108, 52, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 10, 109, 52, 1]" + "'", str14, "[35, 10, 109, 52, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 10, 110, 52, 1]" + "'", str15, "[35, 10, 110, 52, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 10, 111, 52, 1]" + "'", str16, "[35, 10, 111, 52, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 10, 112, 52, 1]" + "'", str17, "[35, 10, 112, 52, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 10, 113, 52, 1]" + "'", str18, "[35, 10, 113, 52, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 10, 114, 52, 1]" + "'", str19, "[35, 10, 114, 52, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 10, 115, 52, 1]" + "'", str20, "[35, 10, 115, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 10, 116, 52, 1]" + "'", str21, "[35, 10, 116, 52, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 10, 117, 52, 1]" + "'", str22, "[35, 10, 117, 52, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 10, 118, 52, 1]" + "'", str23, "[35, 10, 118, 52, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 10, 119, 52, 1]" + "'", str24, "[35, 10, 119, 52, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 10, 120, 52, 1]" + "'", str25, "[35, 10, 120, 52, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 10, 121, 52, 1]" + "'", str26, "[35, 10, 121, 52, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 10, 122, 52, 1]" + "'", str27, "[35, 10, 122, 52, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 10, 123, 52, 1]" + "'", str28, "[35, 10, 123, 52, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 10, 124, 52, 1]" + "'", str29, "[35, 10, 124, 52, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 10, 125, 52, 1]" + "'", str30, "[35, 10, 125, 52, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 10, 126, 52, 1]" + "'", str31, "[35, 10, 126, 52, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 10, 127, 52, 1]" + "'", str32, "[35, 10, 127, 52, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 10, 128, 52, 1]" + "'", str33, "[35, 10, 128, 52, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 10, 129, 52, 1]" + "'", str34, "[35, 10, 129, 52, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 10, 130, 52, 1]" + "'", str35, "[35, 10, 130, 52, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 10, 131, 52, 1]" + "'", str36, "[35, 10, 131, 52, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 10, 132, 52, 1]" + "'", str37, "[35, 10, 132, 52, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 10, 133, 52, 1]" + "'", str38, "[35, 10, 133, 52, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 10, 134, 52, 1]" + "'", str39, "[35, 10, 134, 52, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 10, 135, 52, 1]" + "'", str40, "[35, 10, 135, 52, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 10, 136, 52, 1]" + "'", str41, "[35, 10, 136, 52, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 10, 137, 52, 1]" + "'", str42, "[35, 10, 137, 52, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 10, 138, 52, 1]" + "'", str43, "[35, 10, 138, 52, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 10, 139, 52, 1]" + "'", str44, "[35, 10, 139, 52, 1]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test6155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6155");
        int[] intArray1 = new int[] { (byte) 10 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass31 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[39]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test6156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6156");
        int[] intArray5 = new int[] { 1, (byte) 1, (byte) 10, (byte) 100, (byte) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass48 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 52, 100, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 11, 100, 100]" + "'", str6, "[1, 1, 11, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 12, 100, 100]" + "'", str7, "[1, 1, 12, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 13, 100, 100]" + "'", str8, "[1, 1, 13, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 14, 100, 100]" + "'", str9, "[1, 1, 14, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 15, 100, 100]" + "'", str10, "[1, 1, 15, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 16, 100, 100]" + "'", str11, "[1, 1, 16, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 17, 100, 100]" + "'", str12, "[1, 1, 17, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 18, 100, 100]" + "'", str13, "[1, 1, 18, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 19, 100, 100]" + "'", str14, "[1, 1, 19, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 20, 100, 100]" + "'", str15, "[1, 1, 20, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 21, 100, 100]" + "'", str16, "[1, 1, 21, 100, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 22, 100, 100]" + "'", str17, "[1, 1, 22, 100, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 23, 100, 100]" + "'", str18, "[1, 1, 23, 100, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 24, 100, 100]" + "'", str19, "[1, 1, 24, 100, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 25, 100, 100]" + "'", str20, "[1, 1, 25, 100, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 26, 100, 100]" + "'", str21, "[1, 1, 26, 100, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 27, 100, 100]" + "'", str22, "[1, 1, 27, 100, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 28, 100, 100]" + "'", str23, "[1, 1, 28, 100, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 29, 100, 100]" + "'", str24, "[1, 1, 29, 100, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 30, 100, 100]" + "'", str25, "[1, 1, 30, 100, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 31, 100, 100]" + "'", str26, "[1, 1, 31, 100, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 32, 100, 100]" + "'", str27, "[1, 1, 32, 100, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 33, 100, 100]" + "'", str28, "[1, 1, 33, 100, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 34, 100, 100]" + "'", str29, "[1, 1, 34, 100, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 35, 100, 100]" + "'", str30, "[1, 1, 35, 100, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 36, 100, 100]" + "'", str31, "[1, 1, 36, 100, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 37, 100, 100]" + "'", str32, "[1, 1, 37, 100, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 38, 100, 100]" + "'", str33, "[1, 1, 38, 100, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 39, 100, 100]" + "'", str34, "[1, 1, 39, 100, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 40, 100, 100]" + "'", str35, "[1, 1, 40, 100, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 41, 100, 100]" + "'", str36, "[1, 1, 41, 100, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 42, 100, 100]" + "'", str37, "[1, 1, 42, 100, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 43, 100, 100]" + "'", str38, "[1, 1, 43, 100, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 44, 100, 100]" + "'", str39, "[1, 1, 44, 100, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 45, 100, 100]" + "'", str40, "[1, 1, 45, 100, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 46, 100, 100]" + "'", str41, "[1, 1, 46, 100, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 47, 100, 100]" + "'", str42, "[1, 1, 47, 100, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 48, 100, 100]" + "'", str43, "[1, 1, 48, 100, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 49, 100, 100]" + "'", str44, "[1, 1, 49, 100, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 50, 100, 100]" + "'", str45, "[1, 1, 50, 100, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 51, 100, 100]" + "'", str46, "[1, 1, 51, 100, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 52, 100, 100]" + "'", str47, "[1, 1, 52, 100, 100]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test6157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6157");
        int[] intArray5 = new int[] { ' ', '#', ' ', 100, (byte) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 35, 42, 100, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 35, 33, 100, 1]" + "'", str6, "[32, 35, 33, 100, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 35, 34, 100, 1]" + "'", str7, "[32, 35, 34, 100, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 35, 35, 100, 1]" + "'", str8, "[32, 35, 35, 100, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 35, 36, 100, 1]" + "'", str9, "[32, 35, 36, 100, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 35, 37, 100, 1]" + "'", str10, "[32, 35, 37, 100, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 35, 38, 100, 1]" + "'", str11, "[32, 35, 38, 100, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 35, 39, 100, 1]" + "'", str12, "[32, 35, 39, 100, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 35, 40, 100, 1]" + "'", str13, "[32, 35, 40, 100, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 35, 41, 100, 1]" + "'", str14, "[32, 35, 41, 100, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 35, 42, 100, 1]" + "'", str15, "[32, 35, 42, 100, 1]");
    }

    @Test
    public void test6158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6158");
        int[] intArray6 = new int[] { (byte) 0, ' ', 1, 'a', (short) 0, '#' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass48 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 32, 42, 138, 0, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 32, 2, 98, 0, 35]" + "'", str7, "[0, 32, 2, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 32, 3, 99, 0, 35]" + "'", str8, "[0, 32, 3, 99, 0, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 32, 4, 100, 0, 35]" + "'", str9, "[0, 32, 4, 100, 0, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 32, 5, 101, 0, 35]" + "'", str10, "[0, 32, 5, 101, 0, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 32, 6, 102, 0, 35]" + "'", str11, "[0, 32, 6, 102, 0, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 32, 7, 103, 0, 35]" + "'", str12, "[0, 32, 7, 103, 0, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 32, 8, 104, 0, 35]" + "'", str13, "[0, 32, 8, 104, 0, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 32, 9, 105, 0, 35]" + "'", str14, "[0, 32, 9, 105, 0, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 32, 10, 106, 0, 35]" + "'", str15, "[0, 32, 10, 106, 0, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 32, 11, 107, 0, 35]" + "'", str16, "[0, 32, 11, 107, 0, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 32, 12, 108, 0, 35]" + "'", str17, "[0, 32, 12, 108, 0, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 32, 13, 109, 0, 35]" + "'", str18, "[0, 32, 13, 109, 0, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 32, 14, 110, 0, 35]" + "'", str19, "[0, 32, 14, 110, 0, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 32, 15, 111, 0, 35]" + "'", str20, "[0, 32, 15, 111, 0, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 32, 16, 112, 0, 35]" + "'", str21, "[0, 32, 16, 112, 0, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 32, 17, 113, 0, 35]" + "'", str22, "[0, 32, 17, 113, 0, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 32, 18, 114, 0, 35]" + "'", str23, "[0, 32, 18, 114, 0, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 32, 19, 115, 0, 35]" + "'", str24, "[0, 32, 19, 115, 0, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 32, 20, 116, 0, 35]" + "'", str25, "[0, 32, 20, 116, 0, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 21, 117, 0, 35]" + "'", str26, "[0, 32, 21, 117, 0, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 32, 22, 118, 0, 35]" + "'", str27, "[0, 32, 22, 118, 0, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 32, 23, 119, 0, 35]" + "'", str28, "[0, 32, 23, 119, 0, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 32, 24, 120, 0, 35]" + "'", str29, "[0, 32, 24, 120, 0, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 32, 25, 121, 0, 35]" + "'", str30, "[0, 32, 25, 121, 0, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 32, 26, 122, 0, 35]" + "'", str31, "[0, 32, 26, 122, 0, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 32, 27, 123, 0, 35]" + "'", str32, "[0, 32, 27, 123, 0, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 32, 28, 124, 0, 35]" + "'", str33, "[0, 32, 28, 124, 0, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 32, 29, 125, 0, 35]" + "'", str34, "[0, 32, 29, 125, 0, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 32, 30, 126, 0, 35]" + "'", str35, "[0, 32, 30, 126, 0, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 32, 31, 127, 0, 35]" + "'", str36, "[0, 32, 31, 127, 0, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 32, 32, 128, 0, 35]" + "'", str37, "[0, 32, 32, 128, 0, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 32, 33, 129, 0, 35]" + "'", str38, "[0, 32, 33, 129, 0, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 32, 34, 130, 0, 35]" + "'", str39, "[0, 32, 34, 130, 0, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 32, 35, 131, 0, 35]" + "'", str40, "[0, 32, 35, 131, 0, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 32, 36, 132, 0, 35]" + "'", str41, "[0, 32, 36, 132, 0, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 32, 37, 133, 0, 35]" + "'", str42, "[0, 32, 37, 133, 0, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 32, 38, 134, 0, 35]" + "'", str43, "[0, 32, 38, 134, 0, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 32, 39, 135, 0, 35]" + "'", str44, "[0, 32, 39, 135, 0, 35]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 32, 40, 136, 0, 35]" + "'", str45, "[0, 32, 40, 136, 0, 35]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 32, 41, 137, 0, 35]" + "'", str46, "[0, 32, 41, 137, 0, 35]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 32, 42, 138, 0, 35]" + "'", str47, "[0, 32, 42, 138, 0, 35]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test6159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6159");
        int[] intArray3 = new int[] { (short) 0, '#', ' ' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass52 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 83, 32]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 36, 32]" + "'", str4, "[0, 36, 32]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 37, 32]" + "'", str5, "[0, 37, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 38, 32]" + "'", str6, "[0, 38, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 39, 32]" + "'", str7, "[0, 39, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 40, 32]" + "'", str8, "[0, 40, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 41, 32]" + "'", str9, "[0, 41, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 42, 32]" + "'", str10, "[0, 42, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 43, 32]" + "'", str11, "[0, 43, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 44, 32]" + "'", str12, "[0, 44, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 45, 32]" + "'", str13, "[0, 45, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 46, 32]" + "'", str14, "[0, 46, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 47, 32]" + "'", str15, "[0, 47, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 48, 32]" + "'", str16, "[0, 48, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 49, 32]" + "'", str17, "[0, 49, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 50, 32]" + "'", str18, "[0, 50, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 51, 32]" + "'", str19, "[0, 51, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 52, 32]" + "'", str20, "[0, 52, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 53, 32]" + "'", str21, "[0, 53, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 54, 32]" + "'", str22, "[0, 54, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 55, 32]" + "'", str23, "[0, 55, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 56, 32]" + "'", str24, "[0, 56, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 57, 32]" + "'", str25, "[0, 57, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 58, 32]" + "'", str26, "[0, 58, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 59, 32]" + "'", str27, "[0, 59, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 60, 32]" + "'", str28, "[0, 60, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 61, 32]" + "'", str29, "[0, 61, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 62, 32]" + "'", str30, "[0, 62, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 63, 32]" + "'", str31, "[0, 63, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 64, 32]" + "'", str32, "[0, 64, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 65, 32]" + "'", str33, "[0, 65, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 66, 32]" + "'", str34, "[0, 66, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 67, 32]" + "'", str35, "[0, 67, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 68, 32]" + "'", str36, "[0, 68, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 69, 32]" + "'", str37, "[0, 69, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 70, 32]" + "'", str38, "[0, 70, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 71, 32]" + "'", str39, "[0, 71, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 72, 32]" + "'", str40, "[0, 72, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 73, 32]" + "'", str41, "[0, 73, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 74, 32]" + "'", str42, "[0, 74, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 75, 32]" + "'", str43, "[0, 75, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 76, 32]" + "'", str44, "[0, 76, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 77, 32]" + "'", str45, "[0, 77, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 78, 32]" + "'", str46, "[0, 78, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 79, 32]" + "'", str47, "[0, 79, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 80, 32]" + "'", str48, "[0, 80, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 81, 32]" + "'", str49, "[0, 81, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 82, 32]" + "'", str50, "[0, 82, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 83, 32]" + "'", str51, "[0, 83, 32]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test6160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6160");
        int[] intArray4 = new int[] { 100, '#', 0, 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass17 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[101, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 36, 1, 1]" + "'", str5, "[100, 36, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 37, 2, 1]" + "'", str6, "[100, 37, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 38, 3, 1]" + "'", str7, "[100, 38, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 39, 4, 1]" + "'", str8, "[100, 39, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 40, 5, 1]" + "'", str9, "[100, 40, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 41, 6, 1]" + "'", str10, "[100, 41, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 42, 7, 1]" + "'", str11, "[100, 42, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 43, 8, 1]" + "'", str12, "[100, 43, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 44, 9, 1]" + "'", str13, "[100, 44, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 0, 0, 2]" + "'", str14, "[101, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 1, 1, 2]" + "'", str15, "[101, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 2, 2, 2]" + "'", str16, "[101, 2, 2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6161");
        int[] intArray2 = new int[] { ' ', (-1) };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass32 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[8, 8]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[33, 0]" + "'", str3, "[33, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[34, 1]" + "'", str4, "[34, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 2]" + "'", str5, "[35, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[36, 3]" + "'", str6, "[36, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[37, 4]" + "'", str7, "[37, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[38, 5]" + "'", str8, "[38, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[39, 6]" + "'", str9, "[39, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[40, 7]" + "'", str10, "[40, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[41, 8]" + "'", str11, "[41, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[42, 9]" + "'", str12, "[42, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 1]" + "'", str13, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 0, 1]" + "'", str23, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test6162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6162");
        int[] intArray1 = new int[] { (byte) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 1]" + "'", str10, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
    }

    @Test
    public void test6163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6163");
        int[] intArray3 = new int[] { (short) 0, '#', ' ' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass54 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 85, 32]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 36, 32]" + "'", str4, "[0, 36, 32]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 37, 32]" + "'", str5, "[0, 37, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 38, 32]" + "'", str6, "[0, 38, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 39, 32]" + "'", str7, "[0, 39, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 40, 32]" + "'", str8, "[0, 40, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 41, 32]" + "'", str9, "[0, 41, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 42, 32]" + "'", str10, "[0, 42, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 43, 32]" + "'", str11, "[0, 43, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 44, 32]" + "'", str12, "[0, 44, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 45, 32]" + "'", str13, "[0, 45, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 46, 32]" + "'", str14, "[0, 46, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 47, 32]" + "'", str15, "[0, 47, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 48, 32]" + "'", str16, "[0, 48, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 49, 32]" + "'", str17, "[0, 49, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 50, 32]" + "'", str18, "[0, 50, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 51, 32]" + "'", str19, "[0, 51, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 52, 32]" + "'", str20, "[0, 52, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 53, 32]" + "'", str21, "[0, 53, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 54, 32]" + "'", str22, "[0, 54, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 55, 32]" + "'", str23, "[0, 55, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 56, 32]" + "'", str24, "[0, 56, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 57, 32]" + "'", str25, "[0, 57, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 58, 32]" + "'", str26, "[0, 58, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 59, 32]" + "'", str27, "[0, 59, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 60, 32]" + "'", str28, "[0, 60, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 61, 32]" + "'", str29, "[0, 61, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 62, 32]" + "'", str30, "[0, 62, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 63, 32]" + "'", str31, "[0, 63, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 64, 32]" + "'", str32, "[0, 64, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 65, 32]" + "'", str33, "[0, 65, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 66, 32]" + "'", str34, "[0, 66, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 67, 32]" + "'", str35, "[0, 67, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 68, 32]" + "'", str36, "[0, 68, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 69, 32]" + "'", str37, "[0, 69, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 70, 32]" + "'", str38, "[0, 70, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 71, 32]" + "'", str39, "[0, 71, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 72, 32]" + "'", str40, "[0, 72, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 73, 32]" + "'", str41, "[0, 73, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 74, 32]" + "'", str42, "[0, 74, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 75, 32]" + "'", str43, "[0, 75, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 76, 32]" + "'", str44, "[0, 76, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 77, 32]" + "'", str45, "[0, 77, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 78, 32]" + "'", str46, "[0, 78, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 79, 32]" + "'", str47, "[0, 79, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 80, 32]" + "'", str48, "[0, 80, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 81, 32]" + "'", str49, "[0, 81, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 82, 32]" + "'", str50, "[0, 82, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 83, 32]" + "'", str51, "[0, 83, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 84, 32]" + "'", str52, "[0, 84, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 85, 32]" + "'", str53, "[0, 85, 32]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test6164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6164");
        int[] intArray3 = new int[] { (short) 0, '4', (byte) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass13 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 61, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 53, 10]" + "'", str4, "[0, 53, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 54, 10]" + "'", str5, "[0, 54, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 55, 10]" + "'", str6, "[0, 55, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 56, 10]" + "'", str7, "[0, 56, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 57, 10]" + "'", str8, "[0, 57, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 58, 10]" + "'", str9, "[0, 58, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 59, 10]" + "'", str10, "[0, 59, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 60, 10]" + "'", str11, "[0, 60, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 61, 10]" + "'", str12, "[0, 61, 10]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test6165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6165");
        int[] intArray1 = new int[] { 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass22 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[120]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6166");
        int[] intArray3 = new int[] { 1, (-1), ' ' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass22 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 7, 33]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 0, 32]" + "'", str4, "[1, 0, 32]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1, 32]" + "'", str5, "[1, 1, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 2, 32]" + "'", str6, "[1, 2, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 3, 32]" + "'", str7, "[1, 3, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 4, 32]" + "'", str8, "[1, 4, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 5, 32]" + "'", str9, "[1, 5, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 6, 32]" + "'", str10, "[1, 6, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 7, 32]" + "'", str11, "[1, 7, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 8, 32]" + "'", str12, "[1, 8, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 9, 32]" + "'", str13, "[1, 9, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 33]" + "'", str14, "[2, 0, 33]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 33]" + "'", str15, "[2, 1, 33]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 33]" + "'", str16, "[2, 2, 33]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 33]" + "'", str17, "[2, 3, 33]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 33]" + "'", str18, "[2, 4, 33]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 33]" + "'", str19, "[2, 5, 33]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 33]" + "'", str20, "[2, 6, 33]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 33]" + "'", str21, "[2, 7, 33]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6167");
        int[] intArray5 = new int[] { (short) 0, (short) 10, (short) -1, (byte) 1, (short) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, 6, 1, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 10, 0, 1, 10]" + "'", str6, "[0, 10, 0, 1, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 1, 1, 10]" + "'", str7, "[0, 10, 1, 1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 2, 1, 10]" + "'", str8, "[0, 10, 2, 1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 3, 1, 10]" + "'", str9, "[0, 10, 3, 1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 4, 1, 10]" + "'", str10, "[0, 10, 4, 1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 5, 1, 10]" + "'", str11, "[0, 10, 5, 1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 6, 1, 10]" + "'", str12, "[0, 10, 6, 1, 10]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test6168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6168");
        int[] intArray5 = new int[] { (short) 0, (byte) 1, (byte) 10, (byte) -1, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass42 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 1, 46, -1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 1, 11, -1, 100]" + "'", str6, "[0, 1, 11, -1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 12, -1, 100]" + "'", str7, "[0, 1, 12, -1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 13, -1, 100]" + "'", str8, "[0, 1, 13, -1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 14, -1, 100]" + "'", str9, "[0, 1, 14, -1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 15, -1, 100]" + "'", str10, "[0, 1, 15, -1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 16, -1, 100]" + "'", str11, "[0, 1, 16, -1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 17, -1, 100]" + "'", str12, "[0, 1, 17, -1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 18, -1, 100]" + "'", str13, "[0, 1, 18, -1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 19, -1, 100]" + "'", str14, "[0, 1, 19, -1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 20, -1, 100]" + "'", str15, "[0, 1, 20, -1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 21, -1, 100]" + "'", str16, "[0, 1, 21, -1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 1, 22, -1, 100]" + "'", str17, "[0, 1, 22, -1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 1, 23, -1, 100]" + "'", str18, "[0, 1, 23, -1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 1, 24, -1, 100]" + "'", str19, "[0, 1, 24, -1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 1, 25, -1, 100]" + "'", str20, "[0, 1, 25, -1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 1, 26, -1, 100]" + "'", str21, "[0, 1, 26, -1, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 1, 27, -1, 100]" + "'", str22, "[0, 1, 27, -1, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 1, 28, -1, 100]" + "'", str23, "[0, 1, 28, -1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 1, 29, -1, 100]" + "'", str24, "[0, 1, 29, -1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 1, 30, -1, 100]" + "'", str25, "[0, 1, 30, -1, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 1, 31, -1, 100]" + "'", str26, "[0, 1, 31, -1, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 1, 32, -1, 100]" + "'", str27, "[0, 1, 32, -1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 1, 33, -1, 100]" + "'", str28, "[0, 1, 33, -1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 1, 34, -1, 100]" + "'", str29, "[0, 1, 34, -1, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 1, 35, -1, 100]" + "'", str30, "[0, 1, 35, -1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 1, 36, -1, 100]" + "'", str31, "[0, 1, 36, -1, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 1, 37, -1, 100]" + "'", str32, "[0, 1, 37, -1, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 1, 38, -1, 100]" + "'", str33, "[0, 1, 38, -1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 1, 39, -1, 100]" + "'", str34, "[0, 1, 39, -1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 1, 40, -1, 100]" + "'", str35, "[0, 1, 40, -1, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 1, 41, -1, 100]" + "'", str36, "[0, 1, 41, -1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 1, 42, -1, 100]" + "'", str37, "[0, 1, 42, -1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 1, 43, -1, 100]" + "'", str38, "[0, 1, 43, -1, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 1, 44, -1, 100]" + "'", str39, "[0, 1, 44, -1, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 1, 45, -1, 100]" + "'", str40, "[0, 1, 45, -1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 1, 46, -1, 100]" + "'", str41, "[0, 1, 46, -1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test6169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6169");
        int[] intArray3 = new int[] { (short) 100, (short) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass25 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 121, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 101, 1]" + "'", str4, "[100, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 102, 1]" + "'", str5, "[100, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 103, 1]" + "'", str6, "[100, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 104, 1]" + "'", str7, "[100, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 105, 1]" + "'", str8, "[100, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 106, 1]" + "'", str9, "[100, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 107, 1]" + "'", str10, "[100, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 108, 1]" + "'", str11, "[100, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 109, 1]" + "'", str12, "[100, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 110, 1]" + "'", str13, "[100, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 111, 1]" + "'", str14, "[100, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 112, 1]" + "'", str15, "[100, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 113, 1]" + "'", str16, "[100, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 114, 1]" + "'", str17, "[100, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 115, 1]" + "'", str18, "[100, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 116, 1]" + "'", str19, "[100, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 117, 1]" + "'", str20, "[100, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 118, 1]" + "'", str21, "[100, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 119, 1]" + "'", str22, "[100, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 120, 1]" + "'", str23, "[100, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 121, 1]" + "'", str24, "[100, 121, 1]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test6170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6170");
        int[] intArray3 = new int[] { 10, (byte) 100, 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 144, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 101, 0]" + "'", str4, "[10, 101, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 102, 0]" + "'", str5, "[10, 102, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 103, 0]" + "'", str6, "[10, 103, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 104, 0]" + "'", str7, "[10, 104, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 105, 0]" + "'", str8, "[10, 105, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 106, 0]" + "'", str9, "[10, 106, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 107, 0]" + "'", str10, "[10, 107, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 108, 0]" + "'", str11, "[10, 108, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 109, 0]" + "'", str12, "[10, 109, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 110, 0]" + "'", str13, "[10, 110, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 111, 0]" + "'", str14, "[10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 112, 0]" + "'", str15, "[10, 112, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 113, 0]" + "'", str16, "[10, 113, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 114, 0]" + "'", str17, "[10, 114, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 115, 0]" + "'", str18, "[10, 115, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 116, 0]" + "'", str19, "[10, 116, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 117, 0]" + "'", str20, "[10, 117, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 118, 0]" + "'", str21, "[10, 118, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 119, 0]" + "'", str22, "[10, 119, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 120, 0]" + "'", str23, "[10, 120, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 121, 0]" + "'", str24, "[10, 121, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 122, 0]" + "'", str25, "[10, 122, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 123, 0]" + "'", str26, "[10, 123, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 124, 0]" + "'", str27, "[10, 124, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 125, 0]" + "'", str28, "[10, 125, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 126, 0]" + "'", str29, "[10, 126, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 127, 0]" + "'", str30, "[10, 127, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 128, 0]" + "'", str31, "[10, 128, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 129, 0]" + "'", str32, "[10, 129, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 130, 0]" + "'", str33, "[10, 130, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[10, 131, 0]" + "'", str34, "[10, 131, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 132, 0]" + "'", str35, "[10, 132, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 133, 0]" + "'", str36, "[10, 133, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[10, 134, 0]" + "'", str37, "[10, 134, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[10, 135, 0]" + "'", str38, "[10, 135, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 136, 0]" + "'", str39, "[10, 136, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[10, 137, 0]" + "'", str40, "[10, 137, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[10, 138, 0]" + "'", str41, "[10, 138, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[10, 139, 0]" + "'", str42, "[10, 139, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[10, 140, 0]" + "'", str43, "[10, 140, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 141, 0]" + "'", str44, "[10, 141, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[10, 142, 0]" + "'", str45, "[10, 142, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[10, 143, 0]" + "'", str46, "[10, 143, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[10, 144, 0]" + "'", str47, "[10, 144, 0]");
    }

    @Test
    public void test6171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6171");
        int[] intArray3 = new int[] { 0, (byte) -1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass50 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[4, 5, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 0]" + "'", str4, "[0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 0]" + "'", str5, "[0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 0]" + "'", str6, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 0]" + "'", str7, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 0]" + "'", str8, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 0]" + "'", str9, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 0]" + "'", str10, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 0]" + "'", str11, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 0]" + "'", str12, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 0]" + "'", str13, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 1]" + "'", str14, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 1]" + "'", str15, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 1]" + "'", str16, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 1]" + "'", str17, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 1]" + "'", str18, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 1]" + "'", str19, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 1]" + "'", str20, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 1]" + "'", str21, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 1]" + "'", str22, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 1]" + "'", str23, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 2]" + "'", str24, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 2]" + "'", str25, "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 2]" + "'", str26, "[2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 2]" + "'", str27, "[2, 3, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 2]" + "'", str28, "[2, 4, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 2]" + "'", str29, "[2, 5, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 2]" + "'", str30, "[2, 6, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 2]" + "'", str31, "[2, 7, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 2]" + "'", str32, "[2, 8, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 2]" + "'", str33, "[2, 9, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 3]" + "'", str34, "[3, 0, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 3]" + "'", str35, "[3, 1, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 3]" + "'", str36, "[3, 2, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 3]" + "'", str37, "[3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 3]" + "'", str38, "[3, 4, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 3]" + "'", str39, "[3, 5, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 3]" + "'", str40, "[3, 6, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 3]" + "'", str41, "[3, 7, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 3]" + "'", str42, "[3, 8, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 3]" + "'", str43, "[3, 9, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 4]" + "'", str44, "[4, 0, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 4]" + "'", str45, "[4, 1, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 4]" + "'", str46, "[4, 2, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 4]" + "'", str47, "[4, 3, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 4]" + "'", str48, "[4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 4]" + "'", str49, "[4, 5, 4]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test6172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6172");
        int[] intArray4 = new int[] { '4', 0, (short) -1, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass38 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[55, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 1, 0, 0]" + "'", str5, "[52, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 2, 1, 0]" + "'", str6, "[52, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 3, 2, 0]" + "'", str7, "[52, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 4, 3, 0]" + "'", str8, "[52, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 5, 4, 0]" + "'", str9, "[52, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 6, 5, 0]" + "'", str10, "[52, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 7, 6, 0]" + "'", str11, "[52, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 8, 7, 0]" + "'", str12, "[52, 8, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 9, 8, 0]" + "'", str13, "[52, 9, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 10, 9, 0]" + "'", str14, "[52, 10, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 0, 0, 1]" + "'", str15, "[53, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 1, 1, 1]" + "'", str16, "[53, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 2, 2, 1]" + "'", str17, "[53, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 3, 3, 1]" + "'", str18, "[53, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 4, 4, 1]" + "'", str19, "[53, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 5, 5, 1]" + "'", str20, "[53, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 6, 6, 1]" + "'", str21, "[53, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 7, 7, 1]" + "'", str22, "[53, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[53, 8, 8, 1]" + "'", str23, "[53, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[53, 9, 9, 1]" + "'", str24, "[53, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 0, 0, 2]" + "'", str25, "[54, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 1, 1, 2]" + "'", str26, "[54, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[54, 2, 2, 2]" + "'", str27, "[54, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[54, 3, 3, 2]" + "'", str28, "[54, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[54, 4, 4, 2]" + "'", str29, "[54, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[54, 5, 5, 2]" + "'", str30, "[54, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[54, 6, 6, 2]" + "'", str31, "[54, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[54, 7, 7, 2]" + "'", str32, "[54, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[54, 8, 8, 2]" + "'", str33, "[54, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[54, 9, 9, 2]" + "'", str34, "[54, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[55, 0, 0, 3]" + "'", str35, "[55, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[55, 1, 1, 3]" + "'", str36, "[55, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[55, 2, 2, 3]" + "'", str37, "[55, 2, 2, 3]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test6173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6173");
        int[] intArray6 = new int[] { (byte) 1, (byte) 0, (-1), (-1), 100, ' ' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass59 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 5, 1, 1, 105, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 0, 0, 100, 32]" + "'", str7, "[1, 0, 0, 0, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 1, 1, 100, 32]" + "'", str8, "[1, 0, 1, 1, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 2, 2, 100, 32]" + "'", str9, "[1, 0, 2, 2, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 3, 3, 100, 32]" + "'", str10, "[1, 0, 3, 3, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 4, 4, 100, 32]" + "'", str11, "[1, 0, 4, 4, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 5, 5, 100, 32]" + "'", str12, "[1, 0, 5, 5, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 6, 6, 100, 32]" + "'", str13, "[1, 0, 6, 6, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 7, 7, 100, 32]" + "'", str14, "[1, 0, 7, 7, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 8, 8, 100, 32]" + "'", str15, "[1, 0, 8, 8, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 9, 9, 100, 32]" + "'", str16, "[1, 0, 9, 9, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 0, 0, 101, 32]" + "'", str17, "[1, 1, 0, 0, 101, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 1, 1, 101, 32]" + "'", str18, "[1, 1, 1, 1, 101, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 2, 2, 101, 32]" + "'", str19, "[1, 1, 2, 2, 101, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 3, 3, 101, 32]" + "'", str20, "[1, 1, 3, 3, 101, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 4, 4, 101, 32]" + "'", str21, "[1, 1, 4, 4, 101, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 5, 5, 101, 32]" + "'", str22, "[1, 1, 5, 5, 101, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 6, 6, 101, 32]" + "'", str23, "[1, 1, 6, 6, 101, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 7, 7, 101, 32]" + "'", str24, "[1, 1, 7, 7, 101, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 8, 8, 101, 32]" + "'", str25, "[1, 1, 8, 8, 101, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 9, 9, 101, 32]" + "'", str26, "[1, 1, 9, 9, 101, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 0, 0, 102, 32]" + "'", str27, "[1, 2, 0, 0, 102, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 2, 1, 1, 102, 32]" + "'", str28, "[1, 2, 1, 1, 102, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 2, 2, 2, 102, 32]" + "'", str29, "[1, 2, 2, 2, 102, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 2, 3, 3, 102, 32]" + "'", str30, "[1, 2, 3, 3, 102, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 2, 4, 4, 102, 32]" + "'", str31, "[1, 2, 4, 4, 102, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 2, 5, 5, 102, 32]" + "'", str32, "[1, 2, 5, 5, 102, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 2, 6, 6, 102, 32]" + "'", str33, "[1, 2, 6, 6, 102, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 2, 7, 7, 102, 32]" + "'", str34, "[1, 2, 7, 7, 102, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 2, 8, 8, 102, 32]" + "'", str35, "[1, 2, 8, 8, 102, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 2, 9, 9, 102, 32]" + "'", str36, "[1, 2, 9, 9, 102, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 3, 0, 0, 103, 32]" + "'", str37, "[1, 3, 0, 0, 103, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 3, 1, 1, 103, 32]" + "'", str38, "[1, 3, 1, 1, 103, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 3, 2, 2, 103, 32]" + "'", str39, "[1, 3, 2, 2, 103, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 3, 3, 3, 103, 32]" + "'", str40, "[1, 3, 3, 3, 103, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 3, 4, 4, 103, 32]" + "'", str41, "[1, 3, 4, 4, 103, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 3, 5, 5, 103, 32]" + "'", str42, "[1, 3, 5, 5, 103, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 3, 6, 6, 103, 32]" + "'", str43, "[1, 3, 6, 6, 103, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 3, 7, 7, 103, 32]" + "'", str44, "[1, 3, 7, 7, 103, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 3, 8, 8, 103, 32]" + "'", str45, "[1, 3, 8, 8, 103, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 3, 9, 9, 103, 32]" + "'", str46, "[1, 3, 9, 9, 103, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 4, 0, 0, 104, 32]" + "'", str47, "[1, 4, 0, 0, 104, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 4, 1, 1, 104, 32]" + "'", str48, "[1, 4, 1, 1, 104, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 4, 2, 2, 104, 32]" + "'", str49, "[1, 4, 2, 2, 104, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 4, 3, 3, 104, 32]" + "'", str50, "[1, 4, 3, 3, 104, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 4, 4, 4, 104, 32]" + "'", str51, "[1, 4, 4, 4, 104, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 4, 5, 5, 104, 32]" + "'", str52, "[1, 4, 5, 5, 104, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 4, 6, 6, 104, 32]" + "'", str53, "[1, 4, 6, 6, 104, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 4, 7, 7, 104, 32]" + "'", str54, "[1, 4, 7, 7, 104, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 4, 8, 8, 104, 32]" + "'", str55, "[1, 4, 8, 8, 104, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 4, 9, 9, 104, 32]" + "'", str56, "[1, 4, 9, 9, 104, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 5, 0, 0, 105, 32]" + "'", str57, "[1, 5, 0, 0, 105, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 5, 1, 1, 105, 32]" + "'", str58, "[1, 5, 1, 1, 105, 32]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test6174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6174");
        int[] intArray3 = new int[] { (byte) 1, (byte) 100, (short) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass25 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 101, 100]" + "'", str4, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 102, 100]" + "'", str5, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 103, 100]" + "'", str6, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 104, 100]" + "'", str7, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 105, 100]" + "'", str8, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 106, 100]" + "'", str9, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 107, 100]" + "'", str10, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 108, 100]" + "'", str11, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 109, 100]" + "'", str12, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 110, 100]" + "'", str13, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 111, 100]" + "'", str14, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 112, 100]" + "'", str15, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 113, 100]" + "'", str16, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 114, 100]" + "'", str17, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 115, 100]" + "'", str18, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 116, 100]" + "'", str19, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 117, 100]" + "'", str20, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 118, 100]" + "'", str21, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 119, 100]" + "'", str22, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 120, 100]" + "'", str23, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 121, 100]" + "'", str24, "[1, 121, 100]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test6175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6175");
        int[] intArray6 = new int[] { ' ', '#', (short) 1, (short) 10, '#', 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass40 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 35, 34, 43, 35, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 35, 2, 11, 35, 100]" + "'", str7, "[32, 35, 2, 11, 35, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 35, 3, 12, 35, 100]" + "'", str8, "[32, 35, 3, 12, 35, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 35, 4, 13, 35, 100]" + "'", str9, "[32, 35, 4, 13, 35, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 35, 5, 14, 35, 100]" + "'", str10, "[32, 35, 5, 14, 35, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 35, 6, 15, 35, 100]" + "'", str11, "[32, 35, 6, 15, 35, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 35, 7, 16, 35, 100]" + "'", str12, "[32, 35, 7, 16, 35, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 35, 8, 17, 35, 100]" + "'", str13, "[32, 35, 8, 17, 35, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 35, 9, 18, 35, 100]" + "'", str14, "[32, 35, 9, 18, 35, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 35, 10, 19, 35, 100]" + "'", str15, "[32, 35, 10, 19, 35, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 35, 11, 20, 35, 100]" + "'", str16, "[32, 35, 11, 20, 35, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 35, 12, 21, 35, 100]" + "'", str17, "[32, 35, 12, 21, 35, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 35, 13, 22, 35, 100]" + "'", str18, "[32, 35, 13, 22, 35, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 35, 14, 23, 35, 100]" + "'", str19, "[32, 35, 14, 23, 35, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 35, 15, 24, 35, 100]" + "'", str20, "[32, 35, 15, 24, 35, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 35, 16, 25, 35, 100]" + "'", str21, "[32, 35, 16, 25, 35, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 35, 17, 26, 35, 100]" + "'", str22, "[32, 35, 17, 26, 35, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 35, 18, 27, 35, 100]" + "'", str23, "[32, 35, 18, 27, 35, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 35, 19, 28, 35, 100]" + "'", str24, "[32, 35, 19, 28, 35, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 35, 20, 29, 35, 100]" + "'", str25, "[32, 35, 20, 29, 35, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 35, 21, 30, 35, 100]" + "'", str26, "[32, 35, 21, 30, 35, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 35, 22, 31, 35, 100]" + "'", str27, "[32, 35, 22, 31, 35, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 35, 23, 32, 35, 100]" + "'", str28, "[32, 35, 23, 32, 35, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 35, 24, 33, 35, 100]" + "'", str29, "[32, 35, 24, 33, 35, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 35, 25, 34, 35, 100]" + "'", str30, "[32, 35, 25, 34, 35, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 35, 26, 35, 35, 100]" + "'", str31, "[32, 35, 26, 35, 35, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 35, 27, 36, 35, 100]" + "'", str32, "[32, 35, 27, 36, 35, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 35, 28, 37, 35, 100]" + "'", str33, "[32, 35, 28, 37, 35, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 35, 29, 38, 35, 100]" + "'", str34, "[32, 35, 29, 38, 35, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 35, 30, 39, 35, 100]" + "'", str35, "[32, 35, 30, 39, 35, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 35, 31, 40, 35, 100]" + "'", str36, "[32, 35, 31, 40, 35, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 35, 32, 41, 35, 100]" + "'", str37, "[32, 35, 32, 41, 35, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 35, 33, 42, 35, 100]" + "'", str38, "[32, 35, 33, 42, 35, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 35, 34, 43, 35, 100]" + "'", str39, "[32, 35, 34, 43, 35, 100]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test6176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6176");
        int[] intArray6 = new int[] { (short) 100, (short) 0, (byte) 100, (short) 10, (byte) 0, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 151, 61, 0, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 101, 11, 0, 0]" + "'", str7, "[100, 0, 101, 11, 0, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 102, 12, 0, 0]" + "'", str8, "[100, 0, 102, 12, 0, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 103, 13, 0, 0]" + "'", str9, "[100, 0, 103, 13, 0, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 104, 14, 0, 0]" + "'", str10, "[100, 0, 104, 14, 0, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 105, 15, 0, 0]" + "'", str11, "[100, 0, 105, 15, 0, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 106, 16, 0, 0]" + "'", str12, "[100, 0, 106, 16, 0, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 107, 17, 0, 0]" + "'", str13, "[100, 0, 107, 17, 0, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 108, 18, 0, 0]" + "'", str14, "[100, 0, 108, 18, 0, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 0, 109, 19, 0, 0]" + "'", str15, "[100, 0, 109, 19, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 0, 110, 20, 0, 0]" + "'", str16, "[100, 0, 110, 20, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 0, 111, 21, 0, 0]" + "'", str17, "[100, 0, 111, 21, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 0, 112, 22, 0, 0]" + "'", str18, "[100, 0, 112, 22, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 0, 113, 23, 0, 0]" + "'", str19, "[100, 0, 113, 23, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 0, 114, 24, 0, 0]" + "'", str20, "[100, 0, 114, 24, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 0, 115, 25, 0, 0]" + "'", str21, "[100, 0, 115, 25, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 0, 116, 26, 0, 0]" + "'", str22, "[100, 0, 116, 26, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 0, 117, 27, 0, 0]" + "'", str23, "[100, 0, 117, 27, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 0, 118, 28, 0, 0]" + "'", str24, "[100, 0, 118, 28, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 0, 119, 29, 0, 0]" + "'", str25, "[100, 0, 119, 29, 0, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 0, 120, 30, 0, 0]" + "'", str26, "[100, 0, 120, 30, 0, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 0, 121, 31, 0, 0]" + "'", str27, "[100, 0, 121, 31, 0, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 0, 122, 32, 0, 0]" + "'", str28, "[100, 0, 122, 32, 0, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 0, 123, 33, 0, 0]" + "'", str29, "[100, 0, 123, 33, 0, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 0, 124, 34, 0, 0]" + "'", str30, "[100, 0, 124, 34, 0, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 0, 125, 35, 0, 0]" + "'", str31, "[100, 0, 125, 35, 0, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 0, 126, 36, 0, 0]" + "'", str32, "[100, 0, 126, 36, 0, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 0, 127, 37, 0, 0]" + "'", str33, "[100, 0, 127, 37, 0, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 0, 128, 38, 0, 0]" + "'", str34, "[100, 0, 128, 38, 0, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 129, 39, 0, 0]" + "'", str35, "[100, 0, 129, 39, 0, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 0, 130, 40, 0, 0]" + "'", str36, "[100, 0, 130, 40, 0, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 0, 131, 41, 0, 0]" + "'", str37, "[100, 0, 131, 41, 0, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 0, 132, 42, 0, 0]" + "'", str38, "[100, 0, 132, 42, 0, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 0, 133, 43, 0, 0]" + "'", str39, "[100, 0, 133, 43, 0, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 0, 134, 44, 0, 0]" + "'", str40, "[100, 0, 134, 44, 0, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 0, 135, 45, 0, 0]" + "'", str41, "[100, 0, 135, 45, 0, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 0, 136, 46, 0, 0]" + "'", str42, "[100, 0, 136, 46, 0, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 0, 137, 47, 0, 0]" + "'", str43, "[100, 0, 137, 47, 0, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 0, 138, 48, 0, 0]" + "'", str44, "[100, 0, 138, 48, 0, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 0, 139, 49, 0, 0]" + "'", str45, "[100, 0, 139, 49, 0, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 0, 140, 50, 0, 0]" + "'", str46, "[100, 0, 140, 50, 0, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 0, 141, 51, 0, 0]" + "'", str47, "[100, 0, 141, 51, 0, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 0, 142, 52, 0, 0]" + "'", str48, "[100, 0, 142, 52, 0, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 0, 143, 53, 0, 0]" + "'", str49, "[100, 0, 143, 53, 0, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 0, 144, 54, 0, 0]" + "'", str50, "[100, 0, 144, 54, 0, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 0, 145, 55, 0, 0]" + "'", str51, "[100, 0, 145, 55, 0, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 0, 146, 56, 0, 0]" + "'", str52, "[100, 0, 146, 56, 0, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 0, 147, 57, 0, 0]" + "'", str53, "[100, 0, 147, 57, 0, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 0, 148, 58, 0, 0]" + "'", str54, "[100, 0, 148, 58, 0, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 0, 149, 59, 0, 0]" + "'", str55, "[100, 0, 149, 59, 0, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 0, 150, 60, 0, 0]" + "'", str56, "[100, 0, 150, 60, 0, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 0, 151, 61, 0, 0]" + "'", str57, "[100, 0, 151, 61, 0, 0]");
    }

    @Test
    public void test6177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6177");
        int[] intArray2 = new int[] { '#', (short) 10 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass44 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[76, 51]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[36, 11]" + "'", str3, "[36, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[37, 12]" + "'", str4, "[37, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[38, 13]" + "'", str5, "[38, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[39, 14]" + "'", str6, "[39, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[40, 15]" + "'", str7, "[40, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[41, 16]" + "'", str8, "[41, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[42, 17]" + "'", str9, "[42, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[43, 18]" + "'", str10, "[43, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[44, 19]" + "'", str11, "[44, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[45, 20]" + "'", str12, "[45, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[46, 21]" + "'", str13, "[46, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[47, 22]" + "'", str14, "[47, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[48, 23]" + "'", str15, "[48, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[49, 24]" + "'", str16, "[49, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[50, 25]" + "'", str17, "[50, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[51, 26]" + "'", str18, "[51, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 27]" + "'", str19, "[52, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 28]" + "'", str20, "[53, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[54, 29]" + "'", str21, "[54, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[55, 30]" + "'", str22, "[55, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[56, 31]" + "'", str23, "[56, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[57, 32]" + "'", str24, "[57, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[58, 33]" + "'", str25, "[58, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[59, 34]" + "'", str26, "[59, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[60, 35]" + "'", str27, "[60, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[61, 36]" + "'", str28, "[61, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[62, 37]" + "'", str29, "[62, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[63, 38]" + "'", str30, "[63, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[64, 39]" + "'", str31, "[64, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[65, 40]" + "'", str32, "[65, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[66, 41]" + "'", str33, "[66, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[67, 42]" + "'", str34, "[67, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[68, 43]" + "'", str35, "[68, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[69, 44]" + "'", str36, "[69, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[70, 45]" + "'", str37, "[70, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[71, 46]" + "'", str38, "[71, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[72, 47]" + "'", str39, "[72, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[73, 48]" + "'", str40, "[73, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[74, 49]" + "'", str41, "[74, 49]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[75, 50]" + "'", str42, "[75, 50]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[76, 51]" + "'", str43, "[76, 51]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test6178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6178");
        int[] intArray6 = new int[] { (byte) -1, (short) 100, '4', ' ', (byte) 100, '4' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str98 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str99 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 100, 145, 125, 100, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 100, 53, 33, 100, 52]" + "'", str7, "[-1, 100, 53, 33, 100, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 100, 54, 34, 100, 52]" + "'", str8, "[-1, 100, 54, 34, 100, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 100, 55, 35, 100, 52]" + "'", str9, "[-1, 100, 55, 35, 100, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 100, 56, 36, 100, 52]" + "'", str10, "[-1, 100, 56, 36, 100, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 100, 57, 37, 100, 52]" + "'", str11, "[-1, 100, 57, 37, 100, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 100, 58, 38, 100, 52]" + "'", str12, "[-1, 100, 58, 38, 100, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 100, 59, 39, 100, 52]" + "'", str13, "[-1, 100, 59, 39, 100, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 100, 60, 40, 100, 52]" + "'", str14, "[-1, 100, 60, 40, 100, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 100, 61, 41, 100, 52]" + "'", str15, "[-1, 100, 61, 41, 100, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 100, 62, 42, 100, 52]" + "'", str16, "[-1, 100, 62, 42, 100, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 100, 63, 43, 100, 52]" + "'", str17, "[-1, 100, 63, 43, 100, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 100, 64, 44, 100, 52]" + "'", str18, "[-1, 100, 64, 44, 100, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 100, 65, 45, 100, 52]" + "'", str19, "[-1, 100, 65, 45, 100, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 100, 66, 46, 100, 52]" + "'", str20, "[-1, 100, 66, 46, 100, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 100, 67, 47, 100, 52]" + "'", str21, "[-1, 100, 67, 47, 100, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 100, 68, 48, 100, 52]" + "'", str22, "[-1, 100, 68, 48, 100, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 100, 69, 49, 100, 52]" + "'", str23, "[-1, 100, 69, 49, 100, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 100, 70, 50, 100, 52]" + "'", str24, "[-1, 100, 70, 50, 100, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 100, 71, 51, 100, 52]" + "'", str25, "[-1, 100, 71, 51, 100, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 100, 72, 52, 100, 52]" + "'", str26, "[-1, 100, 72, 52, 100, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 100, 73, 53, 100, 52]" + "'", str27, "[-1, 100, 73, 53, 100, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 100, 74, 54, 100, 52]" + "'", str28, "[-1, 100, 74, 54, 100, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 100, 75, 55, 100, 52]" + "'", str29, "[-1, 100, 75, 55, 100, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 100, 76, 56, 100, 52]" + "'", str30, "[-1, 100, 76, 56, 100, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 100, 77, 57, 100, 52]" + "'", str31, "[-1, 100, 77, 57, 100, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 100, 78, 58, 100, 52]" + "'", str32, "[-1, 100, 78, 58, 100, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 100, 79, 59, 100, 52]" + "'", str33, "[-1, 100, 79, 59, 100, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 100, 80, 60, 100, 52]" + "'", str34, "[-1, 100, 80, 60, 100, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 100, 81, 61, 100, 52]" + "'", str35, "[-1, 100, 81, 61, 100, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 100, 82, 62, 100, 52]" + "'", str36, "[-1, 100, 82, 62, 100, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 100, 83, 63, 100, 52]" + "'", str37, "[-1, 100, 83, 63, 100, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 100, 84, 64, 100, 52]" + "'", str38, "[-1, 100, 84, 64, 100, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 100, 85, 65, 100, 52]" + "'", str39, "[-1, 100, 85, 65, 100, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 100, 86, 66, 100, 52]" + "'", str40, "[-1, 100, 86, 66, 100, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 100, 87, 67, 100, 52]" + "'", str41, "[-1, 100, 87, 67, 100, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 100, 88, 68, 100, 52]" + "'", str42, "[-1, 100, 88, 68, 100, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 100, 89, 69, 100, 52]" + "'", str43, "[-1, 100, 89, 69, 100, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 100, 90, 70, 100, 52]" + "'", str44, "[-1, 100, 90, 70, 100, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 100, 91, 71, 100, 52]" + "'", str45, "[-1, 100, 91, 71, 100, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 100, 92, 72, 100, 52]" + "'", str46, "[-1, 100, 92, 72, 100, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[-1, 100, 93, 73, 100, 52]" + "'", str47, "[-1, 100, 93, 73, 100, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[-1, 100, 94, 74, 100, 52]" + "'", str48, "[-1, 100, 94, 74, 100, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[-1, 100, 95, 75, 100, 52]" + "'", str49, "[-1, 100, 95, 75, 100, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[-1, 100, 96, 76, 100, 52]" + "'", str50, "[-1, 100, 96, 76, 100, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[-1, 100, 97, 77, 100, 52]" + "'", str51, "[-1, 100, 97, 77, 100, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[-1, 100, 98, 78, 100, 52]" + "'", str52, "[-1, 100, 98, 78, 100, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[-1, 100, 99, 79, 100, 52]" + "'", str53, "[-1, 100, 99, 79, 100, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[-1, 100, 100, 80, 100, 52]" + "'", str54, "[-1, 100, 100, 80, 100, 52]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[-1, 100, 101, 81, 100, 52]" + "'", str55, "[-1, 100, 101, 81, 100, 52]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[-1, 100, 102, 82, 100, 52]" + "'", str56, "[-1, 100, 102, 82, 100, 52]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[-1, 100, 103, 83, 100, 52]" + "'", str57, "[-1, 100, 103, 83, 100, 52]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[-1, 100, 104, 84, 100, 52]" + "'", str58, "[-1, 100, 104, 84, 100, 52]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[-1, 100, 105, 85, 100, 52]" + "'", str59, "[-1, 100, 105, 85, 100, 52]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[-1, 100, 106, 86, 100, 52]" + "'", str60, "[-1, 100, 106, 86, 100, 52]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[-1, 100, 107, 87, 100, 52]" + "'", str61, "[-1, 100, 107, 87, 100, 52]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[-1, 100, 108, 88, 100, 52]" + "'", str62, "[-1, 100, 108, 88, 100, 52]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[-1, 100, 109, 89, 100, 52]" + "'", str63, "[-1, 100, 109, 89, 100, 52]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[-1, 100, 110, 90, 100, 52]" + "'", str64, "[-1, 100, 110, 90, 100, 52]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[-1, 100, 111, 91, 100, 52]" + "'", str65, "[-1, 100, 111, 91, 100, 52]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[-1, 100, 112, 92, 100, 52]" + "'", str66, "[-1, 100, 112, 92, 100, 52]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[-1, 100, 113, 93, 100, 52]" + "'", str67, "[-1, 100, 113, 93, 100, 52]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[-1, 100, 114, 94, 100, 52]" + "'", str68, "[-1, 100, 114, 94, 100, 52]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[-1, 100, 115, 95, 100, 52]" + "'", str69, "[-1, 100, 115, 95, 100, 52]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[-1, 100, 116, 96, 100, 52]" + "'", str70, "[-1, 100, 116, 96, 100, 52]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[-1, 100, 117, 97, 100, 52]" + "'", str71, "[-1, 100, 117, 97, 100, 52]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[-1, 100, 118, 98, 100, 52]" + "'", str72, "[-1, 100, 118, 98, 100, 52]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[-1, 100, 119, 99, 100, 52]" + "'", str73, "[-1, 100, 119, 99, 100, 52]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[-1, 100, 120, 100, 100, 52]" + "'", str74, "[-1, 100, 120, 100, 100, 52]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[-1, 100, 121, 101, 100, 52]" + "'", str75, "[-1, 100, 121, 101, 100, 52]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[-1, 100, 122, 102, 100, 52]" + "'", str76, "[-1, 100, 122, 102, 100, 52]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[-1, 100, 123, 103, 100, 52]" + "'", str77, "[-1, 100, 123, 103, 100, 52]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[-1, 100, 124, 104, 100, 52]" + "'", str78, "[-1, 100, 124, 104, 100, 52]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[-1, 100, 125, 105, 100, 52]" + "'", str79, "[-1, 100, 125, 105, 100, 52]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[-1, 100, 126, 106, 100, 52]" + "'", str80, "[-1, 100, 126, 106, 100, 52]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[-1, 100, 127, 107, 100, 52]" + "'", str81, "[-1, 100, 127, 107, 100, 52]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[-1, 100, 128, 108, 100, 52]" + "'", str82, "[-1, 100, 128, 108, 100, 52]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[-1, 100, 129, 109, 100, 52]" + "'", str83, "[-1, 100, 129, 109, 100, 52]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[-1, 100, 130, 110, 100, 52]" + "'", str84, "[-1, 100, 130, 110, 100, 52]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[-1, 100, 131, 111, 100, 52]" + "'", str85, "[-1, 100, 131, 111, 100, 52]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[-1, 100, 132, 112, 100, 52]" + "'", str86, "[-1, 100, 132, 112, 100, 52]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[-1, 100, 133, 113, 100, 52]" + "'", str87, "[-1, 100, 133, 113, 100, 52]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[-1, 100, 134, 114, 100, 52]" + "'", str88, "[-1, 100, 134, 114, 100, 52]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[-1, 100, 135, 115, 100, 52]" + "'", str89, "[-1, 100, 135, 115, 100, 52]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[-1, 100, 136, 116, 100, 52]" + "'", str90, "[-1, 100, 136, 116, 100, 52]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[-1, 100, 137, 117, 100, 52]" + "'", str91, "[-1, 100, 137, 117, 100, 52]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[-1, 100, 138, 118, 100, 52]" + "'", str92, "[-1, 100, 138, 118, 100, 52]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[-1, 100, 139, 119, 100, 52]" + "'", str93, "[-1, 100, 139, 119, 100, 52]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[-1, 100, 140, 120, 100, 52]" + "'", str94, "[-1, 100, 140, 120, 100, 52]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[-1, 100, 141, 121, 100, 52]" + "'", str95, "[-1, 100, 141, 121, 100, 52]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[-1, 100, 142, 122, 100, 52]" + "'", str96, "[-1, 100, 142, 122, 100, 52]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[-1, 100, 143, 123, 100, 52]" + "'", str97, "[-1, 100, 143, 123, 100, 52]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[-1, 100, 144, 124, 100, 52]" + "'", str98, "[-1, 100, 144, 124, 100, 52]");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[-1, 100, 145, 125, 100, 52]" + "'", str99, "[-1, 100, 145, 125, 100, 52]");
    }

    @Test
    public void test6179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6179");
        int[] intArray4 = new int[] { (short) 0, 100, (byte) 0, (byte) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass60 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[5, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 1, 0]" + "'", str5, "[0, 101, 1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 2, 0]" + "'", str6, "[0, 102, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 3, 0]" + "'", str7, "[0, 103, 3, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 4, 0]" + "'", str8, "[0, 104, 4, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 5, 0]" + "'", str9, "[0, 105, 5, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 6, 0]" + "'", str10, "[0, 106, 6, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 7, 0]" + "'", str11, "[0, 107, 7, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 8, 0]" + "'", str12, "[0, 108, 8, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 9, 0]" + "'", str13, "[0, 109, 9, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 0, 1]" + "'", str14, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 1, 1]" + "'", str15, "[1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 1]" + "'", str16, "[1, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 3, 1]" + "'", str17, "[1, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 4, 1]" + "'", str18, "[1, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 5, 1]" + "'", str19, "[1, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 6, 1]" + "'", str20, "[1, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 7, 1]" + "'", str21, "[1, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 8, 1]" + "'", str22, "[1, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 9, 1]" + "'", str23, "[1, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 0, 2]" + "'", str24, "[2, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 1, 2]" + "'", str25, "[2, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 2, 2]" + "'", str26, "[2, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 3, 2]" + "'", str27, "[2, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 4, 2]" + "'", str28, "[2, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 5, 2]" + "'", str29, "[2, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 6, 2]" + "'", str30, "[2, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 7, 2]" + "'", str31, "[2, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 8, 2]" + "'", str32, "[2, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 9, 2]" + "'", str33, "[2, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 0, 3]" + "'", str34, "[3, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 1, 3]" + "'", str35, "[3, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 2, 3]" + "'", str36, "[3, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 3, 3]" + "'", str37, "[3, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 4, 3]" + "'", str38, "[3, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 5, 3]" + "'", str39, "[3, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 6, 3]" + "'", str40, "[3, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 7, 3]" + "'", str41, "[3, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 8, 3]" + "'", str42, "[3, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 9, 3]" + "'", str43, "[3, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 0, 4]" + "'", str44, "[4, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 1, 4]" + "'", str45, "[4, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 2, 4]" + "'", str46, "[4, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 3, 4]" + "'", str47, "[4, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 4, 4]" + "'", str48, "[4, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 5, 4]" + "'", str49, "[4, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 6, 4]" + "'", str50, "[4, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 7, 4]" + "'", str51, "[4, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 8, 4]" + "'", str52, "[4, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 9, 9, 4]" + "'", str53, "[4, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 0, 0, 5]" + "'", str54, "[5, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 1, 1, 5]" + "'", str55, "[5, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 2, 2, 5]" + "'", str56, "[5, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 3, 3, 5]" + "'", str57, "[5, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 4, 4, 5]" + "'", str58, "[5, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 5, 5, 5]" + "'", str59, "[5, 5, 5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test6180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6180");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass68 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 1]" + "'", str10, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 1]" + "'", str20, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[4]" + "'", str24, "[4]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[5]" + "'", str25, "[5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[6]" + "'", str26, "[6]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[7]" + "'", str27, "[7]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[8]" + "'", str28, "[8]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[9]" + "'", str29, "[9]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 1]" + "'", str30, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1]" + "'", str31, "[1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2]" + "'", str32, "[2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3]" + "'", str33, "[3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4]" + "'", str34, "[4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[5]" + "'", str35, "[5]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[6]" + "'", str36, "[6]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[7]" + "'", str37, "[7]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[8]" + "'", str38, "[8]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[9]" + "'", str39, "[9]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 1]" + "'", str40, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1]" + "'", str41, "[1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2]" + "'", str42, "[2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3]" + "'", str43, "[3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4]" + "'", str44, "[4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5]" + "'", str45, "[5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[6]" + "'", str46, "[6]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[7]" + "'", str47, "[7]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[8]" + "'", str48, "[8]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[9]" + "'", str49, "[9]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 1]" + "'", str50, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1]" + "'", str51, "[1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[2]" + "'", str52, "[2]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3]" + "'", str53, "[3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4]" + "'", str54, "[4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5]" + "'", str55, "[5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6]" + "'", str56, "[6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[7]" + "'", str57, "[7]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[8]" + "'", str58, "[8]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[9]" + "'", str59, "[9]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 1]" + "'", str60, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1]" + "'", str61, "[1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[2]" + "'", str62, "[2]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[3]" + "'", str63, "[3]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[4]" + "'", str64, "[4]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5]" + "'", str65, "[5]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6]" + "'", str66, "[6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7]" + "'", str67, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test6181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6181");
        int[] intArray3 = new int[] { (short) 100, (short) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass22 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 118, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 101, 1]" + "'", str4, "[100, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 102, 1]" + "'", str5, "[100, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 103, 1]" + "'", str6, "[100, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 104, 1]" + "'", str7, "[100, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 105, 1]" + "'", str8, "[100, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 106, 1]" + "'", str9, "[100, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 107, 1]" + "'", str10, "[100, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 108, 1]" + "'", str11, "[100, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 109, 1]" + "'", str12, "[100, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 110, 1]" + "'", str13, "[100, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 111, 1]" + "'", str14, "[100, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 112, 1]" + "'", str15, "[100, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 113, 1]" + "'", str16, "[100, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 114, 1]" + "'", str17, "[100, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 115, 1]" + "'", str18, "[100, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 116, 1]" + "'", str19, "[100, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 117, 1]" + "'", str20, "[100, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 118, 1]" + "'", str21, "[100, 118, 1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6182");
        int[] intArray4 = new int[] { 0, (byte) 100, (byte) 100, (byte) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass22 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 117, 117, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 101, 100]" + "'", str5, "[0, 101, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 102, 100]" + "'", str6, "[0, 102, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 103, 100]" + "'", str7, "[0, 103, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 104, 100]" + "'", str8, "[0, 104, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 105, 100]" + "'", str9, "[0, 105, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 106, 100]" + "'", str10, "[0, 106, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 107, 100]" + "'", str11, "[0, 107, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 108, 100]" + "'", str12, "[0, 108, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 109, 100]" + "'", str13, "[0, 109, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 110, 100]" + "'", str14, "[0, 110, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 111, 111, 100]" + "'", str15, "[0, 111, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 112, 112, 100]" + "'", str16, "[0, 112, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 113, 113, 100]" + "'", str17, "[0, 113, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 114, 114, 100]" + "'", str18, "[0, 114, 114, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 115, 115, 100]" + "'", str19, "[0, 115, 115, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 116, 116, 100]" + "'", str20, "[0, 116, 116, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 117, 117, 100]" + "'", str21, "[0, 117, 117, 100]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6183");
        int[] intArray5 = new int[] { (short) 0, (byte) 1, (byte) 10, (byte) -1, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass44 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 1, 48, -1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 1, 11, -1, 100]" + "'", str6, "[0, 1, 11, -1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 12, -1, 100]" + "'", str7, "[0, 1, 12, -1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 13, -1, 100]" + "'", str8, "[0, 1, 13, -1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 14, -1, 100]" + "'", str9, "[0, 1, 14, -1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 15, -1, 100]" + "'", str10, "[0, 1, 15, -1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 16, -1, 100]" + "'", str11, "[0, 1, 16, -1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 17, -1, 100]" + "'", str12, "[0, 1, 17, -1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 18, -1, 100]" + "'", str13, "[0, 1, 18, -1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 19, -1, 100]" + "'", str14, "[0, 1, 19, -1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 20, -1, 100]" + "'", str15, "[0, 1, 20, -1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 21, -1, 100]" + "'", str16, "[0, 1, 21, -1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 1, 22, -1, 100]" + "'", str17, "[0, 1, 22, -1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 1, 23, -1, 100]" + "'", str18, "[0, 1, 23, -1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 1, 24, -1, 100]" + "'", str19, "[0, 1, 24, -1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 1, 25, -1, 100]" + "'", str20, "[0, 1, 25, -1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 1, 26, -1, 100]" + "'", str21, "[0, 1, 26, -1, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 1, 27, -1, 100]" + "'", str22, "[0, 1, 27, -1, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 1, 28, -1, 100]" + "'", str23, "[0, 1, 28, -1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 1, 29, -1, 100]" + "'", str24, "[0, 1, 29, -1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 1, 30, -1, 100]" + "'", str25, "[0, 1, 30, -1, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 1, 31, -1, 100]" + "'", str26, "[0, 1, 31, -1, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 1, 32, -1, 100]" + "'", str27, "[0, 1, 32, -1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 1, 33, -1, 100]" + "'", str28, "[0, 1, 33, -1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 1, 34, -1, 100]" + "'", str29, "[0, 1, 34, -1, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 1, 35, -1, 100]" + "'", str30, "[0, 1, 35, -1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 1, 36, -1, 100]" + "'", str31, "[0, 1, 36, -1, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 1, 37, -1, 100]" + "'", str32, "[0, 1, 37, -1, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 1, 38, -1, 100]" + "'", str33, "[0, 1, 38, -1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 1, 39, -1, 100]" + "'", str34, "[0, 1, 39, -1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 1, 40, -1, 100]" + "'", str35, "[0, 1, 40, -1, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 1, 41, -1, 100]" + "'", str36, "[0, 1, 41, -1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 1, 42, -1, 100]" + "'", str37, "[0, 1, 42, -1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 1, 43, -1, 100]" + "'", str38, "[0, 1, 43, -1, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 1, 44, -1, 100]" + "'", str39, "[0, 1, 44, -1, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 1, 45, -1, 100]" + "'", str40, "[0, 1, 45, -1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 1, 46, -1, 100]" + "'", str41, "[0, 1, 46, -1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 1, 47, -1, 100]" + "'", str42, "[0, 1, 47, -1, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 1, 48, -1, 100]" + "'", str43, "[0, 1, 48, -1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test6184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6184");
        int[] intArray3 = new int[] { (byte) 1, (byte) 100, (short) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass28 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 124, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 101, 100]" + "'", str4, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 102, 100]" + "'", str5, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 103, 100]" + "'", str6, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 104, 100]" + "'", str7, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 105, 100]" + "'", str8, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 106, 100]" + "'", str9, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 107, 100]" + "'", str10, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 108, 100]" + "'", str11, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 109, 100]" + "'", str12, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 110, 100]" + "'", str13, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 111, 100]" + "'", str14, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 112, 100]" + "'", str15, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 113, 100]" + "'", str16, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 114, 100]" + "'", str17, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 115, 100]" + "'", str18, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 116, 100]" + "'", str19, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 117, 100]" + "'", str20, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 118, 100]" + "'", str21, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 119, 100]" + "'", str22, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 120, 100]" + "'", str23, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 121, 100]" + "'", str24, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 122, 100]" + "'", str25, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 123, 100]" + "'", str26, "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 124, 100]" + "'", str27, "[1, 124, 100]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test6185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6185");
        int[] intArray4 = new int[] { (byte) 100, (-1), (short) -1, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[101, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 0, 0, 100]" + "'", str5, "[100, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 1, 1, 100]" + "'", str6, "[100, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 2, 2, 100]" + "'", str7, "[100, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 3, 3, 100]" + "'", str8, "[100, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 4, 4, 100]" + "'", str9, "[100, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 5, 5, 100]" + "'", str10, "[100, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 6, 6, 100]" + "'", str11, "[100, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 7, 7, 100]" + "'", str12, "[100, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 8, 8, 100]" + "'", str13, "[100, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 9, 9, 100]" + "'", str14, "[100, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 0, 0, 101]" + "'", str15, "[101, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 1, 1, 101]" + "'", str16, "[101, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 2, 2, 101]" + "'", str17, "[101, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 3, 3, 101]" + "'", str18, "[101, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 4, 4, 101]" + "'", str19, "[101, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 5, 5, 101]" + "'", str20, "[101, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 6, 6, 101]" + "'", str21, "[101, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[101, 7, 7, 101]" + "'", str22, "[101, 7, 7, 101]");
    }

    @Test
    public void test6186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6186");
        int[] intArray3 = new int[] { (short) 100, (short) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass24 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 120, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 101, 1]" + "'", str4, "[100, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 102, 1]" + "'", str5, "[100, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 103, 1]" + "'", str6, "[100, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 104, 1]" + "'", str7, "[100, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 105, 1]" + "'", str8, "[100, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 106, 1]" + "'", str9, "[100, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 107, 1]" + "'", str10, "[100, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 108, 1]" + "'", str11, "[100, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 109, 1]" + "'", str12, "[100, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 110, 1]" + "'", str13, "[100, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 111, 1]" + "'", str14, "[100, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 112, 1]" + "'", str15, "[100, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 113, 1]" + "'", str16, "[100, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 114, 1]" + "'", str17, "[100, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 115, 1]" + "'", str18, "[100, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 116, 1]" + "'", str19, "[100, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 117, 1]" + "'", str20, "[100, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 118, 1]" + "'", str21, "[100, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 119, 1]" + "'", str22, "[100, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 120, 1]" + "'", str23, "[100, 120, 1]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test6187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6187");
        int[] intArray1 = new int[] { (byte) 0 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass91 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 1]" + "'", str41, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 1]" + "'", str51, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7]" + "'", str58, "[7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8]" + "'", str59, "[8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9]" + "'", str60, "[9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 1]" + "'", str61, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1]" + "'", str62, "[1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[2]" + "'", str63, "[2]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[3]" + "'", str64, "[3]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[4]" + "'", str65, "[4]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5]" + "'", str66, "[5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6]" + "'", str67, "[6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7]" + "'", str68, "[7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[8]" + "'", str69, "[8]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[9]" + "'", str70, "[9]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 0, 1]" + "'", str71, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1]" + "'", str72, "[1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[2]" + "'", str73, "[2]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[3]" + "'", str74, "[3]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[4]" + "'", str75, "[4]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[5]" + "'", str76, "[5]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6]" + "'", str77, "[6]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7]" + "'", str78, "[7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8]" + "'", str79, "[8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[9]" + "'", str80, "[9]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 0, 1]" + "'", str81, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1]" + "'", str82, "[1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[2]" + "'", str83, "[2]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[3]" + "'", str84, "[3]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[4]" + "'", str85, "[4]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[5]" + "'", str86, "[5]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[6]" + "'", str87, "[6]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[7]" + "'", str88, "[7]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[8]" + "'", str89, "[8]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[9]" + "'", str90, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test6188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6188");
        int[] intArray3 = new int[] { (short) 100, (short) 10, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 33, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 11, 100]" + "'", str4, "[100, 11, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 12, 100]" + "'", str5, "[100, 12, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 13, 100]" + "'", str6, "[100, 13, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 14, 100]" + "'", str7, "[100, 14, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 15, 100]" + "'", str8, "[100, 15, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 16, 100]" + "'", str9, "[100, 16, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 17, 100]" + "'", str10, "[100, 17, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 18, 100]" + "'", str11, "[100, 18, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 19, 100]" + "'", str12, "[100, 19, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 20, 100]" + "'", str13, "[100, 20, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 21, 100]" + "'", str14, "[100, 21, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 22, 100]" + "'", str15, "[100, 22, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 23, 100]" + "'", str16, "[100, 23, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 24, 100]" + "'", str17, "[100, 24, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 25, 100]" + "'", str18, "[100, 25, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 26, 100]" + "'", str19, "[100, 26, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 27, 100]" + "'", str20, "[100, 27, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 28, 100]" + "'", str21, "[100, 28, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 29, 100]" + "'", str22, "[100, 29, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 30, 100]" + "'", str23, "[100, 30, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 31, 100]" + "'", str24, "[100, 31, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 32, 100]" + "'", str25, "[100, 32, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 33, 100]" + "'", str26, "[100, 33, 100]");
    }

    @Test
    public void test6189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6189");
        int[] intArray4 = new int[] { '4', 0, (short) -1, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[55, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 1, 0, 0]" + "'", str5, "[52, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 2, 1, 0]" + "'", str6, "[52, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 3, 2, 0]" + "'", str7, "[52, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 4, 3, 0]" + "'", str8, "[52, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 5, 4, 0]" + "'", str9, "[52, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 6, 5, 0]" + "'", str10, "[52, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 7, 6, 0]" + "'", str11, "[52, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 8, 7, 0]" + "'", str12, "[52, 8, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[52, 9, 8, 0]" + "'", str13, "[52, 9, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[52, 10, 9, 0]" + "'", str14, "[52, 10, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 0, 0, 1]" + "'", str15, "[53, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 1, 1, 1]" + "'", str16, "[53, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 2, 2, 1]" + "'", str17, "[53, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 3, 3, 1]" + "'", str18, "[53, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 4, 4, 1]" + "'", str19, "[53, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 5, 5, 1]" + "'", str20, "[53, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 6, 6, 1]" + "'", str21, "[53, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 7, 7, 1]" + "'", str22, "[53, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[53, 8, 8, 1]" + "'", str23, "[53, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[53, 9, 9, 1]" + "'", str24, "[53, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 0, 0, 2]" + "'", str25, "[54, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 1, 1, 2]" + "'", str26, "[54, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[54, 2, 2, 2]" + "'", str27, "[54, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[54, 3, 3, 2]" + "'", str28, "[54, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[54, 4, 4, 2]" + "'", str29, "[54, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[54, 5, 5, 2]" + "'", str30, "[54, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[54, 6, 6, 2]" + "'", str31, "[54, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[54, 7, 7, 2]" + "'", str32, "[54, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[54, 8, 8, 2]" + "'", str33, "[54, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[54, 9, 9, 2]" + "'", str34, "[54, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[55, 0, 0, 3]" + "'", str35, "[55, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[55, 1, 1, 3]" + "'", str36, "[55, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[55, 2, 2, 3]" + "'", str37, "[55, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[55, 3, 3, 3]" + "'", str38, "[55, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[55, 4, 4, 3]" + "'", str39, "[55, 4, 4, 3]");
    }

    @Test
    public void test6190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6190");
        int[] intArray2 = new int[] { (short) 10, 10 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass45 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[52, 52]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 11]" + "'", str3, "[11, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 12]" + "'", str4, "[12, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 13]" + "'", str5, "[13, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 14]" + "'", str6, "[14, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 15]" + "'", str7, "[15, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 16]" + "'", str8, "[16, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 17]" + "'", str9, "[17, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 18]" + "'", str10, "[18, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 19]" + "'", str11, "[19, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 20]" + "'", str12, "[20, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 21]" + "'", str13, "[21, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 22]" + "'", str14, "[22, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 23]" + "'", str15, "[23, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 24]" + "'", str16, "[24, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 25]" + "'", str17, "[25, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 26]" + "'", str18, "[26, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 27]" + "'", str19, "[27, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 28]" + "'", str20, "[28, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 29]" + "'", str21, "[29, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 30]" + "'", str22, "[30, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 31]" + "'", str23, "[31, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 32]" + "'", str24, "[32, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 33]" + "'", str25, "[33, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 34]" + "'", str26, "[34, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 35]" + "'", str27, "[35, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 36]" + "'", str28, "[36, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 37]" + "'", str29, "[37, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 38]" + "'", str30, "[38, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 39]" + "'", str31, "[39, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 40]" + "'", str32, "[40, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 41]" + "'", str33, "[41, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 42]" + "'", str34, "[42, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 43]" + "'", str35, "[43, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 44]" + "'", str36, "[44, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 45]" + "'", str37, "[45, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 46]" + "'", str38, "[46, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 47]" + "'", str39, "[47, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 48]" + "'", str40, "[48, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 49]" + "'", str41, "[49, 49]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 50]" + "'", str42, "[50, 50]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 51]" + "'", str43, "[51, 51]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 52]" + "'", str44, "[52, 52]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test6191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6191");
        int[] intArray3 = new int[] { (short) 100, (short) 10, (byte) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass25 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 31, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 11, 100]" + "'", str4, "[100, 11, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 12, 100]" + "'", str5, "[100, 12, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 13, 100]" + "'", str6, "[100, 13, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 14, 100]" + "'", str7, "[100, 14, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 15, 100]" + "'", str8, "[100, 15, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 16, 100]" + "'", str9, "[100, 16, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 17, 100]" + "'", str10, "[100, 17, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 18, 100]" + "'", str11, "[100, 18, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 19, 100]" + "'", str12, "[100, 19, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 20, 100]" + "'", str13, "[100, 20, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 21, 100]" + "'", str14, "[100, 21, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 22, 100]" + "'", str15, "[100, 22, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 23, 100]" + "'", str16, "[100, 23, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 24, 100]" + "'", str17, "[100, 24, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 25, 100]" + "'", str18, "[100, 25, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 26, 100]" + "'", str19, "[100, 26, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 27, 100]" + "'", str20, "[100, 27, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 28, 100]" + "'", str21, "[100, 28, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 29, 100]" + "'", str22, "[100, 29, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 30, 100]" + "'", str23, "[100, 30, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 31, 100]" + "'", str24, "[100, 31, 100]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test6192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6192");
        int[] intArray5 = new int[] { ' ', '#', ' ', 100, (byte) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass15 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 35, 41, 100, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 35, 33, 100, 1]" + "'", str6, "[32, 35, 33, 100, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 35, 34, 100, 1]" + "'", str7, "[32, 35, 34, 100, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 35, 35, 100, 1]" + "'", str8, "[32, 35, 35, 100, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 35, 36, 100, 1]" + "'", str9, "[32, 35, 36, 100, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 35, 37, 100, 1]" + "'", str10, "[32, 35, 37, 100, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 35, 38, 100, 1]" + "'", str11, "[32, 35, 38, 100, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 35, 39, 100, 1]" + "'", str12, "[32, 35, 39, 100, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 35, 40, 100, 1]" + "'", str13, "[32, 35, 40, 100, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 35, 41, 100, 1]" + "'", str14, "[32, 35, 41, 100, 1]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test6193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6193");
        int[] intArray6 = new int[] { (byte) 1, (byte) 0, (-1), (-1), 100, ' ' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass58 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 5, 0, 0, 105, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 0, 0, 100, 32]" + "'", str7, "[1, 0, 0, 0, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 1, 1, 100, 32]" + "'", str8, "[1, 0, 1, 1, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 2, 2, 100, 32]" + "'", str9, "[1, 0, 2, 2, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 3, 3, 100, 32]" + "'", str10, "[1, 0, 3, 3, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 4, 4, 100, 32]" + "'", str11, "[1, 0, 4, 4, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 5, 5, 100, 32]" + "'", str12, "[1, 0, 5, 5, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 6, 6, 100, 32]" + "'", str13, "[1, 0, 6, 6, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 7, 7, 100, 32]" + "'", str14, "[1, 0, 7, 7, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 8, 8, 100, 32]" + "'", str15, "[1, 0, 8, 8, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 9, 9, 100, 32]" + "'", str16, "[1, 0, 9, 9, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 0, 0, 101, 32]" + "'", str17, "[1, 1, 0, 0, 101, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 1, 1, 101, 32]" + "'", str18, "[1, 1, 1, 1, 101, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 2, 2, 101, 32]" + "'", str19, "[1, 1, 2, 2, 101, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 3, 3, 101, 32]" + "'", str20, "[1, 1, 3, 3, 101, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 4, 4, 101, 32]" + "'", str21, "[1, 1, 4, 4, 101, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 5, 5, 101, 32]" + "'", str22, "[1, 1, 5, 5, 101, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 6, 6, 101, 32]" + "'", str23, "[1, 1, 6, 6, 101, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 7, 7, 101, 32]" + "'", str24, "[1, 1, 7, 7, 101, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 8, 8, 101, 32]" + "'", str25, "[1, 1, 8, 8, 101, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 9, 9, 101, 32]" + "'", str26, "[1, 1, 9, 9, 101, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 0, 0, 102, 32]" + "'", str27, "[1, 2, 0, 0, 102, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 2, 1, 1, 102, 32]" + "'", str28, "[1, 2, 1, 1, 102, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 2, 2, 2, 102, 32]" + "'", str29, "[1, 2, 2, 2, 102, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 2, 3, 3, 102, 32]" + "'", str30, "[1, 2, 3, 3, 102, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 2, 4, 4, 102, 32]" + "'", str31, "[1, 2, 4, 4, 102, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 2, 5, 5, 102, 32]" + "'", str32, "[1, 2, 5, 5, 102, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 2, 6, 6, 102, 32]" + "'", str33, "[1, 2, 6, 6, 102, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 2, 7, 7, 102, 32]" + "'", str34, "[1, 2, 7, 7, 102, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 2, 8, 8, 102, 32]" + "'", str35, "[1, 2, 8, 8, 102, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 2, 9, 9, 102, 32]" + "'", str36, "[1, 2, 9, 9, 102, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 3, 0, 0, 103, 32]" + "'", str37, "[1, 3, 0, 0, 103, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 3, 1, 1, 103, 32]" + "'", str38, "[1, 3, 1, 1, 103, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 3, 2, 2, 103, 32]" + "'", str39, "[1, 3, 2, 2, 103, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 3, 3, 3, 103, 32]" + "'", str40, "[1, 3, 3, 3, 103, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 3, 4, 4, 103, 32]" + "'", str41, "[1, 3, 4, 4, 103, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 3, 5, 5, 103, 32]" + "'", str42, "[1, 3, 5, 5, 103, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 3, 6, 6, 103, 32]" + "'", str43, "[1, 3, 6, 6, 103, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 3, 7, 7, 103, 32]" + "'", str44, "[1, 3, 7, 7, 103, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 3, 8, 8, 103, 32]" + "'", str45, "[1, 3, 8, 8, 103, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 3, 9, 9, 103, 32]" + "'", str46, "[1, 3, 9, 9, 103, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 4, 0, 0, 104, 32]" + "'", str47, "[1, 4, 0, 0, 104, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 4, 1, 1, 104, 32]" + "'", str48, "[1, 4, 1, 1, 104, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 4, 2, 2, 104, 32]" + "'", str49, "[1, 4, 2, 2, 104, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 4, 3, 3, 104, 32]" + "'", str50, "[1, 4, 3, 3, 104, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 4, 4, 4, 104, 32]" + "'", str51, "[1, 4, 4, 4, 104, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 4, 5, 5, 104, 32]" + "'", str52, "[1, 4, 5, 5, 104, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 4, 6, 6, 104, 32]" + "'", str53, "[1, 4, 6, 6, 104, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 4, 7, 7, 104, 32]" + "'", str54, "[1, 4, 7, 7, 104, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 4, 8, 8, 104, 32]" + "'", str55, "[1, 4, 8, 8, 104, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 4, 9, 9, 104, 32]" + "'", str56, "[1, 4, 9, 9, 104, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 5, 0, 0, 105, 32]" + "'", str57, "[1, 5, 0, 0, 105, 32]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test6194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6194");
        int[] intArray5 = new int[] { (short) 100, ' ', (byte) 100, (short) 0, '4' };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass27 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 32, 121, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 32, 101, 0, 52]" + "'", str6, "[100, 32, 101, 0, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 32, 102, 0, 52]" + "'", str7, "[100, 32, 102, 0, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 32, 103, 0, 52]" + "'", str8, "[100, 32, 103, 0, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 32, 104, 0, 52]" + "'", str9, "[100, 32, 104, 0, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 32, 105, 0, 52]" + "'", str10, "[100, 32, 105, 0, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 32, 106, 0, 52]" + "'", str11, "[100, 32, 106, 0, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 32, 107, 0, 52]" + "'", str12, "[100, 32, 107, 0, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 32, 108, 0, 52]" + "'", str13, "[100, 32, 108, 0, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 32, 109, 0, 52]" + "'", str14, "[100, 32, 109, 0, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 32, 110, 0, 52]" + "'", str15, "[100, 32, 110, 0, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 32, 111, 0, 52]" + "'", str16, "[100, 32, 111, 0, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 32, 112, 0, 52]" + "'", str17, "[100, 32, 112, 0, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 32, 113, 0, 52]" + "'", str18, "[100, 32, 113, 0, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 32, 114, 0, 52]" + "'", str19, "[100, 32, 114, 0, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 32, 115, 0, 52]" + "'", str20, "[100, 32, 115, 0, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 32, 116, 0, 52]" + "'", str21, "[100, 32, 116, 0, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 32, 117, 0, 52]" + "'", str22, "[100, 32, 117, 0, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 32, 118, 0, 52]" + "'", str23, "[100, 32, 118, 0, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 32, 119, 0, 52]" + "'", str24, "[100, 32, 119, 0, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 32, 120, 0, 52]" + "'", str25, "[100, 32, 120, 0, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 32, 121, 0, 52]" + "'", str26, "[100, 32, 121, 0, 52]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test6195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6195");
        int[] intArray6 = new int[] { 0, 1, (short) 100, '#', (-1), 1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 1, 147, 82, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 101, 36, -1, 1]" + "'", str7, "[0, 1, 101, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 102, 37, -1, 1]" + "'", str8, "[0, 1, 102, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 103, 38, -1, 1]" + "'", str9, "[0, 1, 103, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 104, 39, -1, 1]" + "'", str10, "[0, 1, 104, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 105, 40, -1, 1]" + "'", str11, "[0, 1, 105, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 106, 41, -1, 1]" + "'", str12, "[0, 1, 106, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 107, 42, -1, 1]" + "'", str13, "[0, 1, 107, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 108, 43, -1, 1]" + "'", str14, "[0, 1, 108, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 109, 44, -1, 1]" + "'", str15, "[0, 1, 109, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 110, 45, -1, 1]" + "'", str16, "[0, 1, 110, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 1, 111, 46, -1, 1]" + "'", str17, "[0, 1, 111, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 1, 112, 47, -1, 1]" + "'", str18, "[0, 1, 112, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 1, 113, 48, -1, 1]" + "'", str19, "[0, 1, 113, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 1, 114, 49, -1, 1]" + "'", str20, "[0, 1, 114, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 1, 115, 50, -1, 1]" + "'", str21, "[0, 1, 115, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 1, 116, 51, -1, 1]" + "'", str22, "[0, 1, 116, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 1, 117, 52, -1, 1]" + "'", str23, "[0, 1, 117, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 1, 118, 53, -1, 1]" + "'", str24, "[0, 1, 118, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 1, 119, 54, -1, 1]" + "'", str25, "[0, 1, 119, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 1, 120, 55, -1, 1]" + "'", str26, "[0, 1, 120, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 1, 121, 56, -1, 1]" + "'", str27, "[0, 1, 121, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 1, 122, 57, -1, 1]" + "'", str28, "[0, 1, 122, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 1, 123, 58, -1, 1]" + "'", str29, "[0, 1, 123, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 1, 124, 59, -1, 1]" + "'", str30, "[0, 1, 124, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 1, 125, 60, -1, 1]" + "'", str31, "[0, 1, 125, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 1, 126, 61, -1, 1]" + "'", str32, "[0, 1, 126, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 1, 127, 62, -1, 1]" + "'", str33, "[0, 1, 127, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 1, 128, 63, -1, 1]" + "'", str34, "[0, 1, 128, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 1, 129, 64, -1, 1]" + "'", str35, "[0, 1, 129, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 1, 130, 65, -1, 1]" + "'", str36, "[0, 1, 130, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 1, 131, 66, -1, 1]" + "'", str37, "[0, 1, 131, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 1, 132, 67, -1, 1]" + "'", str38, "[0, 1, 132, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 1, 133, 68, -1, 1]" + "'", str39, "[0, 1, 133, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 1, 134, 69, -1, 1]" + "'", str40, "[0, 1, 134, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 1, 135, 70, -1, 1]" + "'", str41, "[0, 1, 135, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 1, 136, 71, -1, 1]" + "'", str42, "[0, 1, 136, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 1, 137, 72, -1, 1]" + "'", str43, "[0, 1, 137, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 1, 138, 73, -1, 1]" + "'", str44, "[0, 1, 138, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 1, 139, 74, -1, 1]" + "'", str45, "[0, 1, 139, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 1, 140, 75, -1, 1]" + "'", str46, "[0, 1, 140, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 1, 141, 76, -1, 1]" + "'", str47, "[0, 1, 141, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 1, 142, 77, -1, 1]" + "'", str48, "[0, 1, 142, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 1, 143, 78, -1, 1]" + "'", str49, "[0, 1, 143, 78, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 1, 144, 79, -1, 1]" + "'", str50, "[0, 1, 144, 79, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 1, 145, 80, -1, 1]" + "'", str51, "[0, 1, 145, 80, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 1, 146, 81, -1, 1]" + "'", str52, "[0, 1, 146, 81, -1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 1, 147, 82, -1, 1]" + "'", str53, "[0, 1, 147, 82, -1, 1]");
    }

    @Test
    public void test6196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6196");
        int[] intArray5 = new int[] { (byte) 0, '#', 100, (byte) -1, (short) 10 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass38 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 132, -1, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 101, -1, 10]" + "'", str6, "[0, 35, 101, -1, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 102, -1, 10]" + "'", str7, "[0, 35, 102, -1, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 103, -1, 10]" + "'", str8, "[0, 35, 103, -1, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 104, -1, 10]" + "'", str9, "[0, 35, 104, -1, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 105, -1, 10]" + "'", str10, "[0, 35, 105, -1, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 106, -1, 10]" + "'", str11, "[0, 35, 106, -1, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 107, -1, 10]" + "'", str12, "[0, 35, 107, -1, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 108, -1, 10]" + "'", str13, "[0, 35, 108, -1, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 109, -1, 10]" + "'", str14, "[0, 35, 109, -1, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 110, -1, 10]" + "'", str15, "[0, 35, 110, -1, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 111, -1, 10]" + "'", str16, "[0, 35, 111, -1, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 112, -1, 10]" + "'", str17, "[0, 35, 112, -1, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 113, -1, 10]" + "'", str18, "[0, 35, 113, -1, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 114, -1, 10]" + "'", str19, "[0, 35, 114, -1, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 115, -1, 10]" + "'", str20, "[0, 35, 115, -1, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 116, -1, 10]" + "'", str21, "[0, 35, 116, -1, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 117, -1, 10]" + "'", str22, "[0, 35, 117, -1, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 118, -1, 10]" + "'", str23, "[0, 35, 118, -1, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 119, -1, 10]" + "'", str24, "[0, 35, 119, -1, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 120, -1, 10]" + "'", str25, "[0, 35, 120, -1, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 121, -1, 10]" + "'", str26, "[0, 35, 121, -1, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 122, -1, 10]" + "'", str27, "[0, 35, 122, -1, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 123, -1, 10]" + "'", str28, "[0, 35, 123, -1, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 124, -1, 10]" + "'", str29, "[0, 35, 124, -1, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 125, -1, 10]" + "'", str30, "[0, 35, 125, -1, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 126, -1, 10]" + "'", str31, "[0, 35, 126, -1, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 127, -1, 10]" + "'", str32, "[0, 35, 127, -1, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 128, -1, 10]" + "'", str33, "[0, 35, 128, -1, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 129, -1, 10]" + "'", str34, "[0, 35, 129, -1, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 130, -1, 10]" + "'", str35, "[0, 35, 130, -1, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 131, -1, 10]" + "'", str36, "[0, 35, 131, -1, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 132, -1, 10]" + "'", str37, "[0, 35, 132, -1, 10]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test6197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6197");
        int[] intArray4 = new int[] { 0, (byte) 100, (byte) 100, (byte) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass19 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 114, 114, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 101, 100]" + "'", str5, "[0, 101, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 102, 100]" + "'", str6, "[0, 102, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 103, 100]" + "'", str7, "[0, 103, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 104, 100]" + "'", str8, "[0, 104, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 105, 100]" + "'", str9, "[0, 105, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 106, 100]" + "'", str10, "[0, 106, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 107, 100]" + "'", str11, "[0, 107, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 108, 100]" + "'", str12, "[0, 108, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 109, 100]" + "'", str13, "[0, 109, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 110, 100]" + "'", str14, "[0, 110, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 111, 111, 100]" + "'", str15, "[0, 111, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 112, 112, 100]" + "'", str16, "[0, 112, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 113, 113, 100]" + "'", str17, "[0, 113, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 114, 114, 100]" + "'", str18, "[0, 114, 114, 100]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test6198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6198");
        int[] intArray4 = new int[] { (short) 0, (byte) 10, 0, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass52 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[4, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 1, 100]" + "'", str5, "[0, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 2, 100]" + "'", str6, "[0, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 3, 100]" + "'", str7, "[0, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 4, 100]" + "'", str8, "[0, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 5, 100]" + "'", str9, "[0, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 6, 100]" + "'", str10, "[0, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 7, 100]" + "'", str11, "[0, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 8, 100]" + "'", str12, "[0, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 9, 100]" + "'", str13, "[0, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 0, 101]" + "'", str14, "[1, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 1, 101]" + "'", str15, "[1, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101]" + "'", str16, "[1, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 3, 101]" + "'", str17, "[1, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 4, 101]" + "'", str18, "[1, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 5, 101]" + "'", str19, "[1, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 6, 101]" + "'", str20, "[1, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 7, 101]" + "'", str21, "[1, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 8, 101]" + "'", str22, "[1, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 9, 101]" + "'", str23, "[1, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 0, 102]" + "'", str24, "[2, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 1, 102]" + "'", str25, "[2, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 2, 102]" + "'", str26, "[2, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 3, 102]" + "'", str27, "[2, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 4, 102]" + "'", str28, "[2, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 5, 102]" + "'", str29, "[2, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 6, 102]" + "'", str30, "[2, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 7, 102]" + "'", str31, "[2, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 8, 102]" + "'", str32, "[2, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 9, 102]" + "'", str33, "[2, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 0, 103]" + "'", str34, "[3, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 1, 103]" + "'", str35, "[3, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 2, 103]" + "'", str36, "[3, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 3, 103]" + "'", str37, "[3, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 4, 103]" + "'", str38, "[3, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 5, 103]" + "'", str39, "[3, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 6, 103]" + "'", str40, "[3, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 7, 103]" + "'", str41, "[3, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 8, 103]" + "'", str42, "[3, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 9, 103]" + "'", str43, "[3, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 0, 104]" + "'", str44, "[4, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 1, 104]" + "'", str45, "[4, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 2, 104]" + "'", str46, "[4, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 3, 104]" + "'", str47, "[4, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 4, 104]" + "'", str48, "[4, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 5, 104]" + "'", str49, "[4, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 6, 104]" + "'", str50, "[4, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 7, 104]" + "'", str51, "[4, 7, 7, 104]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test6199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6199");
        int[] intArray3 = new int[] { (short) 0, '4', (byte) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass17 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 65, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 53, 10]" + "'", str4, "[0, 53, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 54, 10]" + "'", str5, "[0, 54, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 55, 10]" + "'", str6, "[0, 55, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 56, 10]" + "'", str7, "[0, 56, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 57, 10]" + "'", str8, "[0, 57, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 58, 10]" + "'", str9, "[0, 58, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 59, 10]" + "'", str10, "[0, 59, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 60, 10]" + "'", str11, "[0, 60, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 61, 10]" + "'", str12, "[0, 61, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 62, 10]" + "'", str13, "[0, 62, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 63, 10]" + "'", str14, "[0, 63, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 64, 10]" + "'", str15, "[0, 64, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 65, 10]" + "'", str16, "[0, 65, 10]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6200");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass74 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 101, 169, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 37, 105, 1]" + "'", str9, "[0, 37, 105, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 38, 106, 1]" + "'", str10, "[0, 38, 106, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 39, 107, 1]" + "'", str11, "[0, 39, 107, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 40, 108, 1]" + "'", str12, "[0, 40, 108, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 41, 109, 1]" + "'", str13, "[0, 41, 109, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 42, 110, 1]" + "'", str14, "[0, 42, 110, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 43, 111, 1]" + "'", str15, "[0, 43, 111, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 44, 112, 1]" + "'", str16, "[0, 44, 112, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 45, 113, 1]" + "'", str17, "[0, 45, 113, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 46, 114, 1]" + "'", str18, "[0, 46, 114, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 47, 115, 1]" + "'", str19, "[0, 47, 115, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 48, 116, 1]" + "'", str20, "[0, 48, 116, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 49, 117, 1]" + "'", str21, "[0, 49, 117, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 50, 118, 1]" + "'", str22, "[0, 50, 118, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 51, 119, 1]" + "'", str23, "[0, 51, 119, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 52, 120, 1]" + "'", str24, "[0, 52, 120, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 53, 121, 1]" + "'", str25, "[0, 53, 121, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 54, 122, 1]" + "'", str26, "[0, 54, 122, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 55, 123, 1]" + "'", str27, "[0, 55, 123, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 56, 124, 1]" + "'", str28, "[0, 56, 124, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 57, 125, 1]" + "'", str29, "[0, 57, 125, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 58, 126, 1]" + "'", str30, "[0, 58, 126, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 59, 127, 1]" + "'", str31, "[0, 59, 127, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 60, 128, 1]" + "'", str32, "[0, 60, 128, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 61, 129, 1]" + "'", str33, "[0, 61, 129, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 62, 130, 1]" + "'", str34, "[0, 62, 130, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 63, 131, 1]" + "'", str35, "[0, 63, 131, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 64, 132, 1]" + "'", str36, "[0, 64, 132, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 65, 133, 1]" + "'", str37, "[0, 65, 133, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 66, 134, 1]" + "'", str38, "[0, 66, 134, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 67, 135, 1]" + "'", str39, "[0, 67, 135, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 68, 136, 1]" + "'", str40, "[0, 68, 136, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 69, 137, 1]" + "'", str41, "[0, 69, 137, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 70, 138, 1]" + "'", str42, "[0, 70, 138, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 71, 139, 1]" + "'", str43, "[0, 71, 139, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 72, 140, 1]" + "'", str44, "[0, 72, 140, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 73, 141, 1]" + "'", str45, "[0, 73, 141, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 74, 142, 1]" + "'", str46, "[0, 74, 142, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 75, 143, 1]" + "'", str47, "[0, 75, 143, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 76, 144, 1]" + "'", str48, "[0, 76, 144, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 77, 145, 1]" + "'", str49, "[0, 77, 145, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 78, 146, 1]" + "'", str50, "[0, 78, 146, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 79, 147, 1]" + "'", str51, "[0, 79, 147, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 80, 148, 1]" + "'", str52, "[0, 80, 148, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 81, 149, 1]" + "'", str53, "[0, 81, 149, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 82, 150, 1]" + "'", str54, "[0, 82, 150, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 83, 151, 1]" + "'", str55, "[0, 83, 151, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 84, 152, 1]" + "'", str56, "[0, 84, 152, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 85, 153, 1]" + "'", str57, "[0, 85, 153, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 86, 154, 1]" + "'", str58, "[0, 86, 154, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 87, 155, 1]" + "'", str59, "[0, 87, 155, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 88, 156, 1]" + "'", str60, "[0, 88, 156, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 89, 157, 1]" + "'", str61, "[0, 89, 157, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 90, 158, 1]" + "'", str62, "[0, 90, 158, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 91, 159, 1]" + "'", str63, "[0, 91, 159, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 92, 160, 1]" + "'", str64, "[0, 92, 160, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 93, 161, 1]" + "'", str65, "[0, 93, 161, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 94, 162, 1]" + "'", str66, "[0, 94, 162, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 95, 163, 1]" + "'", str67, "[0, 95, 163, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 96, 164, 1]" + "'", str68, "[0, 96, 164, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 97, 165, 1]" + "'", str69, "[0, 97, 165, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 98, 166, 1]" + "'", str70, "[0, 98, 166, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 99, 167, 1]" + "'", str71, "[0, 99, 167, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 100, 168, 1]" + "'", str72, "[0, 100, 168, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 101, 169, 1]" + "'", str73, "[0, 101, 169, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test6201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6201");
        int[] intArray3 = new int[] { 100, 1, (byte) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass86 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[108, 3, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 2, 0]" + "'", str4, "[100, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 3, 0]" + "'", str5, "[100, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 4, 0]" + "'", str6, "[100, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 5, 0]" + "'", str7, "[100, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 6, 0]" + "'", str8, "[100, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 7, 0]" + "'", str9, "[100, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 8, 0]" + "'", str10, "[100, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 9, 0]" + "'", str11, "[100, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[101, 0, 1]" + "'", str12, "[101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 1, 1]" + "'", str13, "[101, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 2, 1]" + "'", str14, "[101, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 3, 1]" + "'", str15, "[101, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 4, 1]" + "'", str16, "[101, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 5, 1]" + "'", str17, "[101, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 6, 1]" + "'", str18, "[101, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 7, 1]" + "'", str19, "[101, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 8, 1]" + "'", str20, "[101, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 9, 1]" + "'", str21, "[101, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[102, 0, 2]" + "'", str22, "[102, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 1, 2]" + "'", str23, "[102, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 2, 2]" + "'", str24, "[102, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 3, 2]" + "'", str25, "[102, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 4, 2]" + "'", str26, "[102, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 5, 2]" + "'", str27, "[102, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 6, 2]" + "'", str28, "[102, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[102, 7, 2]" + "'", str29, "[102, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[102, 8, 2]" + "'", str30, "[102, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[102, 9, 2]" + "'", str31, "[102, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[103, 0, 3]" + "'", str32, "[103, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[103, 1, 3]" + "'", str33, "[103, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[103, 2, 3]" + "'", str34, "[103, 2, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[103, 3, 3]" + "'", str35, "[103, 3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[103, 4, 3]" + "'", str36, "[103, 4, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[103, 5, 3]" + "'", str37, "[103, 5, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[103, 6, 3]" + "'", str38, "[103, 6, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[103, 7, 3]" + "'", str39, "[103, 7, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[103, 8, 3]" + "'", str40, "[103, 8, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[103, 9, 3]" + "'", str41, "[103, 9, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[104, 0, 4]" + "'", str42, "[104, 0, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[104, 1, 4]" + "'", str43, "[104, 1, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[104, 2, 4]" + "'", str44, "[104, 2, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[104, 3, 4]" + "'", str45, "[104, 3, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[104, 4, 4]" + "'", str46, "[104, 4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[104, 5, 4]" + "'", str47, "[104, 5, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[104, 6, 4]" + "'", str48, "[104, 6, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[104, 7, 4]" + "'", str49, "[104, 7, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[104, 8, 4]" + "'", str50, "[104, 8, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[104, 9, 4]" + "'", str51, "[104, 9, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[105, 0, 5]" + "'", str52, "[105, 0, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[105, 1, 5]" + "'", str53, "[105, 1, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[105, 2, 5]" + "'", str54, "[105, 2, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[105, 3, 5]" + "'", str55, "[105, 3, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[105, 4, 5]" + "'", str56, "[105, 4, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[105, 5, 5]" + "'", str57, "[105, 5, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[105, 6, 5]" + "'", str58, "[105, 6, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[105, 7, 5]" + "'", str59, "[105, 7, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[105, 8, 5]" + "'", str60, "[105, 8, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[105, 9, 5]" + "'", str61, "[105, 9, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[106, 0, 6]" + "'", str62, "[106, 0, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[106, 1, 6]" + "'", str63, "[106, 1, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[106, 2, 6]" + "'", str64, "[106, 2, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[106, 3, 6]" + "'", str65, "[106, 3, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[106, 4, 6]" + "'", str66, "[106, 4, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[106, 5, 6]" + "'", str67, "[106, 5, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[106, 6, 6]" + "'", str68, "[106, 6, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[106, 7, 6]" + "'", str69, "[106, 7, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[106, 8, 6]" + "'", str70, "[106, 8, 6]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[106, 9, 6]" + "'", str71, "[106, 9, 6]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[107, 0, 7]" + "'", str72, "[107, 0, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[107, 1, 7]" + "'", str73, "[107, 1, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[107, 2, 7]" + "'", str74, "[107, 2, 7]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[107, 3, 7]" + "'", str75, "[107, 3, 7]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[107, 4, 7]" + "'", str76, "[107, 4, 7]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[107, 5, 7]" + "'", str77, "[107, 5, 7]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[107, 6, 7]" + "'", str78, "[107, 6, 7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[107, 7, 7]" + "'", str79, "[107, 7, 7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[107, 8, 7]" + "'", str80, "[107, 8, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[107, 9, 7]" + "'", str81, "[107, 9, 7]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[108, 0, 8]" + "'", str82, "[108, 0, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[108, 1, 8]" + "'", str83, "[108, 1, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[108, 2, 8]" + "'", str84, "[108, 2, 8]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[108, 3, 8]" + "'", str85, "[108, 3, 8]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test6202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6202");
        int[] intArray6 = new int[] { 0, 1, (short) 100, '#', (-1), 1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass53 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 1, 146, 81, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 101, 36, -1, 1]" + "'", str7, "[0, 1, 101, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 102, 37, -1, 1]" + "'", str8, "[0, 1, 102, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 103, 38, -1, 1]" + "'", str9, "[0, 1, 103, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 104, 39, -1, 1]" + "'", str10, "[0, 1, 104, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 105, 40, -1, 1]" + "'", str11, "[0, 1, 105, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 106, 41, -1, 1]" + "'", str12, "[0, 1, 106, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 107, 42, -1, 1]" + "'", str13, "[0, 1, 107, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 108, 43, -1, 1]" + "'", str14, "[0, 1, 108, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 109, 44, -1, 1]" + "'", str15, "[0, 1, 109, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 110, 45, -1, 1]" + "'", str16, "[0, 1, 110, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 1, 111, 46, -1, 1]" + "'", str17, "[0, 1, 111, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 1, 112, 47, -1, 1]" + "'", str18, "[0, 1, 112, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 1, 113, 48, -1, 1]" + "'", str19, "[0, 1, 113, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 1, 114, 49, -1, 1]" + "'", str20, "[0, 1, 114, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 1, 115, 50, -1, 1]" + "'", str21, "[0, 1, 115, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 1, 116, 51, -1, 1]" + "'", str22, "[0, 1, 116, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 1, 117, 52, -1, 1]" + "'", str23, "[0, 1, 117, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 1, 118, 53, -1, 1]" + "'", str24, "[0, 1, 118, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 1, 119, 54, -1, 1]" + "'", str25, "[0, 1, 119, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 1, 120, 55, -1, 1]" + "'", str26, "[0, 1, 120, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 1, 121, 56, -1, 1]" + "'", str27, "[0, 1, 121, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 1, 122, 57, -1, 1]" + "'", str28, "[0, 1, 122, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 1, 123, 58, -1, 1]" + "'", str29, "[0, 1, 123, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 1, 124, 59, -1, 1]" + "'", str30, "[0, 1, 124, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 1, 125, 60, -1, 1]" + "'", str31, "[0, 1, 125, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 1, 126, 61, -1, 1]" + "'", str32, "[0, 1, 126, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 1, 127, 62, -1, 1]" + "'", str33, "[0, 1, 127, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 1, 128, 63, -1, 1]" + "'", str34, "[0, 1, 128, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 1, 129, 64, -1, 1]" + "'", str35, "[0, 1, 129, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 1, 130, 65, -1, 1]" + "'", str36, "[0, 1, 130, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 1, 131, 66, -1, 1]" + "'", str37, "[0, 1, 131, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 1, 132, 67, -1, 1]" + "'", str38, "[0, 1, 132, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 1, 133, 68, -1, 1]" + "'", str39, "[0, 1, 133, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 1, 134, 69, -1, 1]" + "'", str40, "[0, 1, 134, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 1, 135, 70, -1, 1]" + "'", str41, "[0, 1, 135, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 1, 136, 71, -1, 1]" + "'", str42, "[0, 1, 136, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 1, 137, 72, -1, 1]" + "'", str43, "[0, 1, 137, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 1, 138, 73, -1, 1]" + "'", str44, "[0, 1, 138, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 1, 139, 74, -1, 1]" + "'", str45, "[0, 1, 139, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 1, 140, 75, -1, 1]" + "'", str46, "[0, 1, 140, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 1, 141, 76, -1, 1]" + "'", str47, "[0, 1, 141, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 1, 142, 77, -1, 1]" + "'", str48, "[0, 1, 142, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 1, 143, 78, -1, 1]" + "'", str49, "[0, 1, 143, 78, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 1, 144, 79, -1, 1]" + "'", str50, "[0, 1, 144, 79, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 1, 145, 80, -1, 1]" + "'", str51, "[0, 1, 145, 80, -1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 1, 146, 81, -1, 1]" + "'", str52, "[0, 1, 146, 81, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test6203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6203");
        int[] intArray6 = new int[] { '#', (byte) -1, (byte) 1, (-1), (short) 100, 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 5, 6, 6, 106, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, -1, 2, 0, 100, 100]" + "'", str7, "[35, -1, 2, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, -1, 3, 1, 100, 100]" + "'", str8, "[35, -1, 3, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, -1, 4, 2, 100, 100]" + "'", str9, "[35, -1, 4, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, -1, 5, 3, 100, 100]" + "'", str10, "[35, -1, 5, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, -1, 6, 4, 100, 100]" + "'", str11, "[35, -1, 6, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, -1, 7, 5, 100, 100]" + "'", str12, "[35, -1, 7, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, -1, 8, 6, 100, 100]" + "'", str13, "[35, -1, 8, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, -1, 9, 7, 100, 100]" + "'", str14, "[35, -1, 9, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, -1, 10, 8, 100, 100]" + "'", str15, "[35, -1, 10, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, -1, 11, 9, 100, 100]" + "'", str16, "[35, -1, 11, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 0, 0, 0, 101, 100]" + "'", str17, "[35, 0, 0, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 0, 1, 1, 101, 100]" + "'", str18, "[35, 0, 1, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 0, 2, 2, 101, 100]" + "'", str19, "[35, 0, 2, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 0, 3, 3, 101, 100]" + "'", str20, "[35, 0, 3, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 0, 4, 4, 101, 100]" + "'", str21, "[35, 0, 4, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 0, 5, 5, 101, 100]" + "'", str22, "[35, 0, 5, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 0, 6, 6, 101, 100]" + "'", str23, "[35, 0, 6, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 0, 7, 7, 101, 100]" + "'", str24, "[35, 0, 7, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 0, 8, 8, 101, 100]" + "'", str25, "[35, 0, 8, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 0, 9, 9, 101, 100]" + "'", str26, "[35, 0, 9, 9, 101, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 1, 0, 0, 102, 100]" + "'", str27, "[35, 1, 0, 0, 102, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 1, 1, 1, 102, 100]" + "'", str28, "[35, 1, 1, 1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 1, 2, 2, 102, 100]" + "'", str29, "[35, 1, 2, 2, 102, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 1, 3, 3, 102, 100]" + "'", str30, "[35, 1, 3, 3, 102, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 1, 4, 4, 102, 100]" + "'", str31, "[35, 1, 4, 4, 102, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 1, 5, 5, 102, 100]" + "'", str32, "[35, 1, 5, 5, 102, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 1, 6, 6, 102, 100]" + "'", str33, "[35, 1, 6, 6, 102, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 1, 7, 7, 102, 100]" + "'", str34, "[35, 1, 7, 7, 102, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 8, 8, 102, 100]" + "'", str35, "[35, 1, 8, 8, 102, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 1, 9, 9, 102, 100]" + "'", str36, "[35, 1, 9, 9, 102, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 2, 0, 0, 103, 100]" + "'", str37, "[35, 2, 0, 0, 103, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 2, 1, 1, 103, 100]" + "'", str38, "[35, 2, 1, 1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 2, 2, 2, 103, 100]" + "'", str39, "[35, 2, 2, 2, 103, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 2, 3, 3, 103, 100]" + "'", str40, "[35, 2, 3, 3, 103, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 2, 4, 4, 103, 100]" + "'", str41, "[35, 2, 4, 4, 103, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 2, 5, 5, 103, 100]" + "'", str42, "[35, 2, 5, 5, 103, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 2, 6, 6, 103, 100]" + "'", str43, "[35, 2, 6, 6, 103, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 2, 7, 7, 103, 100]" + "'", str44, "[35, 2, 7, 7, 103, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 2, 8, 8, 103, 100]" + "'", str45, "[35, 2, 8, 8, 103, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 2, 9, 9, 103, 100]" + "'", str46, "[35, 2, 9, 9, 103, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 3, 0, 0, 104, 100]" + "'", str47, "[35, 3, 0, 0, 104, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 3, 1, 1, 104, 100]" + "'", str48, "[35, 3, 1, 1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 3, 2, 2, 104, 100]" + "'", str49, "[35, 3, 2, 2, 104, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 3, 3, 3, 104, 100]" + "'", str50, "[35, 3, 3, 3, 104, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 3, 4, 4, 104, 100]" + "'", str51, "[35, 3, 4, 4, 104, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 3, 5, 5, 104, 100]" + "'", str52, "[35, 3, 5, 5, 104, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 3, 6, 6, 104, 100]" + "'", str53, "[35, 3, 6, 6, 104, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 3, 7, 7, 104, 100]" + "'", str54, "[35, 3, 7, 7, 104, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 3, 8, 8, 104, 100]" + "'", str55, "[35, 3, 8, 8, 104, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 3, 9, 9, 104, 100]" + "'", str56, "[35, 3, 9, 9, 104, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 4, 0, 0, 105, 100]" + "'", str57, "[35, 4, 0, 0, 105, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 4, 1, 1, 105, 100]" + "'", str58, "[35, 4, 1, 1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 4, 2, 2, 105, 100]" + "'", str59, "[35, 4, 2, 2, 105, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 4, 3, 3, 105, 100]" + "'", str60, "[35, 4, 3, 3, 105, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 4, 4, 4, 105, 100]" + "'", str61, "[35, 4, 4, 4, 105, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 4, 5, 5, 105, 100]" + "'", str62, "[35, 4, 5, 5, 105, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 4, 6, 6, 105, 100]" + "'", str63, "[35, 4, 6, 6, 105, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 4, 7, 7, 105, 100]" + "'", str64, "[35, 4, 7, 7, 105, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 4, 8, 8, 105, 100]" + "'", str65, "[35, 4, 8, 8, 105, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 4, 9, 9, 105, 100]" + "'", str66, "[35, 4, 9, 9, 105, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[35, 5, 0, 0, 106, 100]" + "'", str67, "[35, 5, 0, 0, 106, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[35, 5, 1, 1, 106, 100]" + "'", str68, "[35, 5, 1, 1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[35, 5, 2, 2, 106, 100]" + "'", str69, "[35, 5, 2, 2, 106, 100]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[35, 5, 3, 3, 106, 100]" + "'", str70, "[35, 5, 3, 3, 106, 100]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[35, 5, 4, 4, 106, 100]" + "'", str71, "[35, 5, 4, 4, 106, 100]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[35, 5, 5, 5, 106, 100]" + "'", str72, "[35, 5, 5, 5, 106, 100]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[35, 5, 6, 6, 106, 100]" + "'", str73, "[35, 5, 6, 6, 106, 100]");
    }

    @Test
    public void test6204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6204");
        int[] intArray3 = new int[] { 0, (byte) -1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass53 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[4, 8, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 0]" + "'", str4, "[0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 0]" + "'", str5, "[0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 0]" + "'", str6, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 0]" + "'", str7, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 0]" + "'", str8, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 0]" + "'", str9, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 0]" + "'", str10, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 0]" + "'", str11, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 0]" + "'", str12, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 0]" + "'", str13, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 1]" + "'", str14, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 1]" + "'", str15, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 1]" + "'", str16, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 1]" + "'", str17, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 1]" + "'", str18, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 1]" + "'", str19, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 1]" + "'", str20, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 1]" + "'", str21, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 1]" + "'", str22, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 1]" + "'", str23, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 2]" + "'", str24, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 2]" + "'", str25, "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 2]" + "'", str26, "[2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 2]" + "'", str27, "[2, 3, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 2]" + "'", str28, "[2, 4, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 2]" + "'", str29, "[2, 5, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 2]" + "'", str30, "[2, 6, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 2]" + "'", str31, "[2, 7, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 2]" + "'", str32, "[2, 8, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 2]" + "'", str33, "[2, 9, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 3]" + "'", str34, "[3, 0, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 3]" + "'", str35, "[3, 1, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 3]" + "'", str36, "[3, 2, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 3]" + "'", str37, "[3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 3]" + "'", str38, "[3, 4, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 3]" + "'", str39, "[3, 5, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 3]" + "'", str40, "[3, 6, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 3]" + "'", str41, "[3, 7, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 3]" + "'", str42, "[3, 8, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 3]" + "'", str43, "[3, 9, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 4]" + "'", str44, "[4, 0, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 4]" + "'", str45, "[4, 1, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 4]" + "'", str46, "[4, 2, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 4]" + "'", str47, "[4, 3, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 4]" + "'", str48, "[4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 4]" + "'", str49, "[4, 5, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 4]" + "'", str50, "[4, 6, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 4]" + "'", str51, "[4, 7, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 4]" + "'", str52, "[4, 8, 4]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test6205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6205");
        int[] intArray6 = new int[] { (byte) 1, (byte) 0, (-1), (-1), 100, ' ' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass61 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 5, 3, 3, 105, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 0, 0, 100, 32]" + "'", str7, "[1, 0, 0, 0, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 1, 1, 100, 32]" + "'", str8, "[1, 0, 1, 1, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 2, 2, 100, 32]" + "'", str9, "[1, 0, 2, 2, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 3, 3, 100, 32]" + "'", str10, "[1, 0, 3, 3, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 4, 4, 100, 32]" + "'", str11, "[1, 0, 4, 4, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 5, 5, 100, 32]" + "'", str12, "[1, 0, 5, 5, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 6, 6, 100, 32]" + "'", str13, "[1, 0, 6, 6, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 7, 7, 100, 32]" + "'", str14, "[1, 0, 7, 7, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 8, 8, 100, 32]" + "'", str15, "[1, 0, 8, 8, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 9, 9, 100, 32]" + "'", str16, "[1, 0, 9, 9, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 0, 0, 101, 32]" + "'", str17, "[1, 1, 0, 0, 101, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 1, 1, 101, 32]" + "'", str18, "[1, 1, 1, 1, 101, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 2, 2, 101, 32]" + "'", str19, "[1, 1, 2, 2, 101, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 3, 3, 101, 32]" + "'", str20, "[1, 1, 3, 3, 101, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 4, 4, 101, 32]" + "'", str21, "[1, 1, 4, 4, 101, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 5, 5, 101, 32]" + "'", str22, "[1, 1, 5, 5, 101, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 6, 6, 101, 32]" + "'", str23, "[1, 1, 6, 6, 101, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 7, 7, 101, 32]" + "'", str24, "[1, 1, 7, 7, 101, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 8, 8, 101, 32]" + "'", str25, "[1, 1, 8, 8, 101, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 9, 9, 101, 32]" + "'", str26, "[1, 1, 9, 9, 101, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 0, 0, 102, 32]" + "'", str27, "[1, 2, 0, 0, 102, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 2, 1, 1, 102, 32]" + "'", str28, "[1, 2, 1, 1, 102, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 2, 2, 2, 102, 32]" + "'", str29, "[1, 2, 2, 2, 102, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 2, 3, 3, 102, 32]" + "'", str30, "[1, 2, 3, 3, 102, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 2, 4, 4, 102, 32]" + "'", str31, "[1, 2, 4, 4, 102, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 2, 5, 5, 102, 32]" + "'", str32, "[1, 2, 5, 5, 102, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 2, 6, 6, 102, 32]" + "'", str33, "[1, 2, 6, 6, 102, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 2, 7, 7, 102, 32]" + "'", str34, "[1, 2, 7, 7, 102, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 2, 8, 8, 102, 32]" + "'", str35, "[1, 2, 8, 8, 102, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 2, 9, 9, 102, 32]" + "'", str36, "[1, 2, 9, 9, 102, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 3, 0, 0, 103, 32]" + "'", str37, "[1, 3, 0, 0, 103, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 3, 1, 1, 103, 32]" + "'", str38, "[1, 3, 1, 1, 103, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 3, 2, 2, 103, 32]" + "'", str39, "[1, 3, 2, 2, 103, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 3, 3, 3, 103, 32]" + "'", str40, "[1, 3, 3, 3, 103, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 3, 4, 4, 103, 32]" + "'", str41, "[1, 3, 4, 4, 103, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 3, 5, 5, 103, 32]" + "'", str42, "[1, 3, 5, 5, 103, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 3, 6, 6, 103, 32]" + "'", str43, "[1, 3, 6, 6, 103, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 3, 7, 7, 103, 32]" + "'", str44, "[1, 3, 7, 7, 103, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 3, 8, 8, 103, 32]" + "'", str45, "[1, 3, 8, 8, 103, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 3, 9, 9, 103, 32]" + "'", str46, "[1, 3, 9, 9, 103, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 4, 0, 0, 104, 32]" + "'", str47, "[1, 4, 0, 0, 104, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 4, 1, 1, 104, 32]" + "'", str48, "[1, 4, 1, 1, 104, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 4, 2, 2, 104, 32]" + "'", str49, "[1, 4, 2, 2, 104, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 4, 3, 3, 104, 32]" + "'", str50, "[1, 4, 3, 3, 104, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 4, 4, 4, 104, 32]" + "'", str51, "[1, 4, 4, 4, 104, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 4, 5, 5, 104, 32]" + "'", str52, "[1, 4, 5, 5, 104, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 4, 6, 6, 104, 32]" + "'", str53, "[1, 4, 6, 6, 104, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 4, 7, 7, 104, 32]" + "'", str54, "[1, 4, 7, 7, 104, 32]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 4, 8, 8, 104, 32]" + "'", str55, "[1, 4, 8, 8, 104, 32]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 4, 9, 9, 104, 32]" + "'", str56, "[1, 4, 9, 9, 104, 32]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 5, 0, 0, 105, 32]" + "'", str57, "[1, 5, 0, 0, 105, 32]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 5, 1, 1, 105, 32]" + "'", str58, "[1, 5, 1, 1, 105, 32]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 5, 2, 2, 105, 32]" + "'", str59, "[1, 5, 2, 2, 105, 32]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 5, 3, 3, 105, 32]" + "'", str60, "[1, 5, 3, 3, 105, 32]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test6206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6206");
        int[] intArray4 = new int[] { 100, '#', 0, 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[101, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 36, 1, 1]" + "'", str5, "[100, 36, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 37, 2, 1]" + "'", str6, "[100, 37, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 38, 3, 1]" + "'", str7, "[100, 38, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 39, 4, 1]" + "'", str8, "[100, 39, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 40, 5, 1]" + "'", str9, "[100, 40, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 41, 6, 1]" + "'", str10, "[100, 41, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 42, 7, 1]" + "'", str11, "[100, 42, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 43, 8, 1]" + "'", str12, "[100, 43, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 44, 9, 1]" + "'", str13, "[100, 44, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 0, 0, 2]" + "'", str14, "[101, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 1, 1, 2]" + "'", str15, "[101, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 2, 2, 2]" + "'", str16, "[101, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 3, 3, 2]" + "'", str17, "[101, 3, 3, 2]");
    }

    @Test
    public void test6207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6207");
        int[] intArray3 = new int[] { (byte) -1, (short) -1, '4' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[-1, 0, 52]" + "'", str4, "[-1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 1, 52]" + "'", str5, "[-1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 2, 52]" + "'", str6, "[-1, 2, 52]");
    }

    @Test
    public void test6208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6208");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass75 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2, 2]" + "'", str54, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3, 3]" + "'", str55, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 4]" + "'", str56, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 5]" + "'", str57, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 6]" + "'", str58, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7, 7]" + "'", str59, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8, 8]" + "'", str60, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9, 9]" + "'", str61, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 0, 1]" + "'", str62, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1]" + "'", str63, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2, 2]" + "'", str64, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3, 3]" + "'", str65, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4, 4]" + "'", str66, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 5]" + "'", str67, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 6]" + "'", str68, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 7]" + "'", str69, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8, 8]" + "'", str70, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9, 9]" + "'", str71, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 0, 1]" + "'", str72, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1]" + "'", str73, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2, 2]" + "'", str74, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test6209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6209");
        int[] intArray1 = new int[] { ' ' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass56 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[86]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[33]" + "'", str2, "[33]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[34]" + "'", str3, "[34]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35]" + "'", str4, "[35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[36]" + "'", str5, "[36]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[37]" + "'", str6, "[37]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[38]" + "'", str7, "[38]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[39]" + "'", str8, "[39]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[40]" + "'", str9, "[40]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[41]" + "'", str10, "[41]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[42]" + "'", str11, "[42]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[43]" + "'", str12, "[43]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[44]" + "'", str13, "[44]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[45]" + "'", str14, "[45]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[46]" + "'", str15, "[46]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[47]" + "'", str16, "[47]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[48]" + "'", str17, "[48]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[49]" + "'", str18, "[49]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[50]" + "'", str19, "[50]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[51]" + "'", str20, "[51]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52]" + "'", str21, "[52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53]" + "'", str22, "[53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54]" + "'", str23, "[54]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[55]" + "'", str24, "[55]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[56]" + "'", str25, "[56]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[57]" + "'", str26, "[57]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[58]" + "'", str27, "[58]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[59]" + "'", str28, "[59]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[60]" + "'", str29, "[60]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[61]" + "'", str30, "[61]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[62]" + "'", str31, "[62]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[63]" + "'", str32, "[63]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[64]" + "'", str33, "[64]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[65]" + "'", str34, "[65]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[66]" + "'", str35, "[66]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[67]" + "'", str36, "[67]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[68]" + "'", str37, "[68]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[69]" + "'", str38, "[69]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[70]" + "'", str39, "[70]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[71]" + "'", str40, "[71]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[72]" + "'", str41, "[72]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[73]" + "'", str42, "[73]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[74]" + "'", str43, "[74]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[75]" + "'", str44, "[75]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[76]" + "'", str45, "[76]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[77]" + "'", str46, "[77]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[78]" + "'", str47, "[78]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[79]" + "'", str48, "[79]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[80]" + "'", str49, "[80]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[81]" + "'", str50, "[81]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[82]" + "'", str51, "[82]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[83]" + "'", str52, "[83]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[84]" + "'", str53, "[84]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[85]" + "'", str54, "[85]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[86]" + "'", str55, "[86]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test6210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6210");
        int[] intArray4 = new int[] { (byte) 0, ' ', (byte) 100, (byte) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass73 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 100, 168, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 33, 101, 1]" + "'", str5, "[0, 33, 101, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 34, 102, 1]" + "'", str6, "[0, 34, 102, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 103, 1]" + "'", str7, "[0, 35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 36, 104, 1]" + "'", str8, "[0, 36, 104, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 37, 105, 1]" + "'", str9, "[0, 37, 105, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 38, 106, 1]" + "'", str10, "[0, 38, 106, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 39, 107, 1]" + "'", str11, "[0, 39, 107, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 40, 108, 1]" + "'", str12, "[0, 40, 108, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 41, 109, 1]" + "'", str13, "[0, 41, 109, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 42, 110, 1]" + "'", str14, "[0, 42, 110, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 43, 111, 1]" + "'", str15, "[0, 43, 111, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 44, 112, 1]" + "'", str16, "[0, 44, 112, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 45, 113, 1]" + "'", str17, "[0, 45, 113, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 46, 114, 1]" + "'", str18, "[0, 46, 114, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 47, 115, 1]" + "'", str19, "[0, 47, 115, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 48, 116, 1]" + "'", str20, "[0, 48, 116, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 49, 117, 1]" + "'", str21, "[0, 49, 117, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 50, 118, 1]" + "'", str22, "[0, 50, 118, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 51, 119, 1]" + "'", str23, "[0, 51, 119, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 52, 120, 1]" + "'", str24, "[0, 52, 120, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 53, 121, 1]" + "'", str25, "[0, 53, 121, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 54, 122, 1]" + "'", str26, "[0, 54, 122, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 55, 123, 1]" + "'", str27, "[0, 55, 123, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 56, 124, 1]" + "'", str28, "[0, 56, 124, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 57, 125, 1]" + "'", str29, "[0, 57, 125, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 58, 126, 1]" + "'", str30, "[0, 58, 126, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 59, 127, 1]" + "'", str31, "[0, 59, 127, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 60, 128, 1]" + "'", str32, "[0, 60, 128, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 61, 129, 1]" + "'", str33, "[0, 61, 129, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 62, 130, 1]" + "'", str34, "[0, 62, 130, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 63, 131, 1]" + "'", str35, "[0, 63, 131, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 64, 132, 1]" + "'", str36, "[0, 64, 132, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 65, 133, 1]" + "'", str37, "[0, 65, 133, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 66, 134, 1]" + "'", str38, "[0, 66, 134, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 67, 135, 1]" + "'", str39, "[0, 67, 135, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 68, 136, 1]" + "'", str40, "[0, 68, 136, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 69, 137, 1]" + "'", str41, "[0, 69, 137, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 70, 138, 1]" + "'", str42, "[0, 70, 138, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 71, 139, 1]" + "'", str43, "[0, 71, 139, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 72, 140, 1]" + "'", str44, "[0, 72, 140, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 73, 141, 1]" + "'", str45, "[0, 73, 141, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 74, 142, 1]" + "'", str46, "[0, 74, 142, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 75, 143, 1]" + "'", str47, "[0, 75, 143, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 76, 144, 1]" + "'", str48, "[0, 76, 144, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 77, 145, 1]" + "'", str49, "[0, 77, 145, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 78, 146, 1]" + "'", str50, "[0, 78, 146, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 79, 147, 1]" + "'", str51, "[0, 79, 147, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 80, 148, 1]" + "'", str52, "[0, 80, 148, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 81, 149, 1]" + "'", str53, "[0, 81, 149, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 82, 150, 1]" + "'", str54, "[0, 82, 150, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 83, 151, 1]" + "'", str55, "[0, 83, 151, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 84, 152, 1]" + "'", str56, "[0, 84, 152, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 85, 153, 1]" + "'", str57, "[0, 85, 153, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 86, 154, 1]" + "'", str58, "[0, 86, 154, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 87, 155, 1]" + "'", str59, "[0, 87, 155, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 88, 156, 1]" + "'", str60, "[0, 88, 156, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 89, 157, 1]" + "'", str61, "[0, 89, 157, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 90, 158, 1]" + "'", str62, "[0, 90, 158, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 91, 159, 1]" + "'", str63, "[0, 91, 159, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 92, 160, 1]" + "'", str64, "[0, 92, 160, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 93, 161, 1]" + "'", str65, "[0, 93, 161, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 94, 162, 1]" + "'", str66, "[0, 94, 162, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 95, 163, 1]" + "'", str67, "[0, 95, 163, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 96, 164, 1]" + "'", str68, "[0, 96, 164, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 97, 165, 1]" + "'", str69, "[0, 97, 165, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 98, 166, 1]" + "'", str70, "[0, 98, 166, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 99, 167, 1]" + "'", str71, "[0, 99, 167, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 100, 168, 1]" + "'", str72, "[0, 100, 168, 1]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test6211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6211");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (byte) 10 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 19, 19, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, 10]" + "'", str5, "[1, 11, 11, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, 10]" + "'", str6, "[1, 12, 12, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, 10]" + "'", str7, "[1, 13, 13, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, 10]" + "'", str8, "[1, 14, 14, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, 10]" + "'", str9, "[1, 15, 15, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, 10]" + "'", str10, "[1, 16, 16, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, 10]" + "'", str11, "[1, 17, 17, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, 10]" + "'", str12, "[1, 18, 18, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, 10]" + "'", str13, "[1, 19, 19, 10]");
    }

    @Test
    public void test6212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6212");
        int[] intArray6 = new int[] { 0, 1, (short) 100, '#', (-1), 1 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass52 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 1, 145, 80, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 101, 36, -1, 1]" + "'", str7, "[0, 1, 101, 36, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 102, 37, -1, 1]" + "'", str8, "[0, 1, 102, 37, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 103, 38, -1, 1]" + "'", str9, "[0, 1, 103, 38, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 104, 39, -1, 1]" + "'", str10, "[0, 1, 104, 39, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 105, 40, -1, 1]" + "'", str11, "[0, 1, 105, 40, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 106, 41, -1, 1]" + "'", str12, "[0, 1, 106, 41, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 107, 42, -1, 1]" + "'", str13, "[0, 1, 107, 42, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 108, 43, -1, 1]" + "'", str14, "[0, 1, 108, 43, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 109, 44, -1, 1]" + "'", str15, "[0, 1, 109, 44, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 110, 45, -1, 1]" + "'", str16, "[0, 1, 110, 45, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 1, 111, 46, -1, 1]" + "'", str17, "[0, 1, 111, 46, -1, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 1, 112, 47, -1, 1]" + "'", str18, "[0, 1, 112, 47, -1, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 1, 113, 48, -1, 1]" + "'", str19, "[0, 1, 113, 48, -1, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 1, 114, 49, -1, 1]" + "'", str20, "[0, 1, 114, 49, -1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 1, 115, 50, -1, 1]" + "'", str21, "[0, 1, 115, 50, -1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 1, 116, 51, -1, 1]" + "'", str22, "[0, 1, 116, 51, -1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 1, 117, 52, -1, 1]" + "'", str23, "[0, 1, 117, 52, -1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 1, 118, 53, -1, 1]" + "'", str24, "[0, 1, 118, 53, -1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 1, 119, 54, -1, 1]" + "'", str25, "[0, 1, 119, 54, -1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 1, 120, 55, -1, 1]" + "'", str26, "[0, 1, 120, 55, -1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 1, 121, 56, -1, 1]" + "'", str27, "[0, 1, 121, 56, -1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 1, 122, 57, -1, 1]" + "'", str28, "[0, 1, 122, 57, -1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 1, 123, 58, -1, 1]" + "'", str29, "[0, 1, 123, 58, -1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 1, 124, 59, -1, 1]" + "'", str30, "[0, 1, 124, 59, -1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 1, 125, 60, -1, 1]" + "'", str31, "[0, 1, 125, 60, -1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 1, 126, 61, -1, 1]" + "'", str32, "[0, 1, 126, 61, -1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 1, 127, 62, -1, 1]" + "'", str33, "[0, 1, 127, 62, -1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 1, 128, 63, -1, 1]" + "'", str34, "[0, 1, 128, 63, -1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 1, 129, 64, -1, 1]" + "'", str35, "[0, 1, 129, 64, -1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 1, 130, 65, -1, 1]" + "'", str36, "[0, 1, 130, 65, -1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 1, 131, 66, -1, 1]" + "'", str37, "[0, 1, 131, 66, -1, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 1, 132, 67, -1, 1]" + "'", str38, "[0, 1, 132, 67, -1, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 1, 133, 68, -1, 1]" + "'", str39, "[0, 1, 133, 68, -1, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 1, 134, 69, -1, 1]" + "'", str40, "[0, 1, 134, 69, -1, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 1, 135, 70, -1, 1]" + "'", str41, "[0, 1, 135, 70, -1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 1, 136, 71, -1, 1]" + "'", str42, "[0, 1, 136, 71, -1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 1, 137, 72, -1, 1]" + "'", str43, "[0, 1, 137, 72, -1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 1, 138, 73, -1, 1]" + "'", str44, "[0, 1, 138, 73, -1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 1, 139, 74, -1, 1]" + "'", str45, "[0, 1, 139, 74, -1, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 1, 140, 75, -1, 1]" + "'", str46, "[0, 1, 140, 75, -1, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 1, 141, 76, -1, 1]" + "'", str47, "[0, 1, 141, 76, -1, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 1, 142, 77, -1, 1]" + "'", str48, "[0, 1, 142, 77, -1, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 1, 143, 78, -1, 1]" + "'", str49, "[0, 1, 143, 78, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 1, 144, 79, -1, 1]" + "'", str50, "[0, 1, 144, 79, -1, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 1, 145, 80, -1, 1]" + "'", str51, "[0, 1, 145, 80, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test6213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6213");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[8, 2, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 7, 1]" + "'", str19, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 8, 1]" + "'", str20, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 9, 1]" + "'", str21, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 0, 2]" + "'", str22, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 1, 2]" + "'", str23, "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2, 2]" + "'", str24, "[2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 3, 2]" + "'", str25, "[2, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 4, 2]" + "'", str26, "[2, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 5, 2]" + "'", str27, "[2, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 6, 2]" + "'", str28, "[2, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 7, 2]" + "'", str29, "[2, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 8, 2]" + "'", str30, "[2, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 9, 2]" + "'", str31, "[2, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 0, 3]" + "'", str32, "[3, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 1, 3]" + "'", str33, "[3, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 2, 3]" + "'", str34, "[3, 2, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3, 3]" + "'", str35, "[3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 4, 3]" + "'", str36, "[3, 4, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 5, 3]" + "'", str37, "[3, 5, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 6, 3]" + "'", str38, "[3, 6, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 7, 3]" + "'", str39, "[3, 7, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 8, 3]" + "'", str40, "[3, 8, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 9, 3]" + "'", str41, "[3, 9, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 0, 4]" + "'", str42, "[4, 0, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 1, 4]" + "'", str43, "[4, 1, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 2, 4]" + "'", str44, "[4, 2, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 3, 4]" + "'", str45, "[4, 3, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4, 4]" + "'", str46, "[4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 5, 4]" + "'", str47, "[4, 5, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 6, 4]" + "'", str48, "[4, 6, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 7, 4]" + "'", str49, "[4, 7, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 8, 4]" + "'", str50, "[4, 8, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 9, 4]" + "'", str51, "[4, 9, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 0, 5]" + "'", str52, "[5, 0, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 1, 5]" + "'", str53, "[5, 1, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 2, 5]" + "'", str54, "[5, 2, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 3, 5]" + "'", str55, "[5, 3, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 4, 5]" + "'", str56, "[5, 4, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 5, 5]" + "'", str57, "[5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 6, 5]" + "'", str58, "[5, 6, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 7, 5]" + "'", str59, "[5, 7, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 8, 5]" + "'", str60, "[5, 8, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 9, 5]" + "'", str61, "[5, 9, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 0, 6]" + "'", str62, "[6, 0, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 1, 6]" + "'", str63, "[6, 1, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[6, 2, 6]" + "'", str64, "[6, 2, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 3, 6]" + "'", str65, "[6, 3, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 4, 6]" + "'", str66, "[6, 4, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 5, 6]" + "'", str67, "[6, 5, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 6, 6]" + "'", str68, "[6, 6, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 7, 6]" + "'", str69, "[6, 7, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 8, 6]" + "'", str70, "[6, 8, 6]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 9, 6]" + "'", str71, "[6, 9, 6]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 0, 7]" + "'", str72, "[7, 0, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 1, 7]" + "'", str73, "[7, 1, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[7, 2, 7]" + "'", str74, "[7, 2, 7]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[7, 3, 7]" + "'", str75, "[7, 3, 7]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[7, 4, 7]" + "'", str76, "[7, 4, 7]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[7, 5, 7]" + "'", str77, "[7, 5, 7]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7, 6, 7]" + "'", str78, "[7, 6, 7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7, 7, 7]" + "'", str79, "[7, 7, 7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 8, 7]" + "'", str80, "[7, 8, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[7, 9, 7]" + "'", str81, "[7, 9, 7]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 0, 8]" + "'", str82, "[8, 0, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[8, 1, 8]" + "'", str83, "[8, 1, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[8, 2, 8]" + "'", str84, "[8, 2, 8]");
    }

    @Test
    public void test6214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6214");
        int[] intArray4 = new int[] { 0, (short) 100, (-1), (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[9, 1, 1, 8]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 0, -1]" + "'", str5, "[0, 101, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 1, -1]" + "'", str6, "[0, 102, 1, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 2, -1]" + "'", str7, "[0, 103, 2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 3, -1]" + "'", str8, "[0, 104, 3, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 4, -1]" + "'", str9, "[0, 105, 4, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 5, -1]" + "'", str10, "[0, 106, 5, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 6, -1]" + "'", str11, "[0, 107, 6, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 7, -1]" + "'", str12, "[0, 108, 7, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 8, -1]" + "'", str13, "[0, 109, 8, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 9, -1]" + "'", str14, "[0, 110, 9, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 0]" + "'", str15, "[1, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 0]" + "'", str16, "[1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 0]" + "'", str17, "[1, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 0]" + "'", str18, "[1, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 0]" + "'", str19, "[1, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 0]" + "'", str20, "[1, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 0]" + "'", str21, "[1, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 0]" + "'", str22, "[1, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 0]" + "'", str23, "[1, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 0]" + "'", str24, "[1, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 1]" + "'", str25, "[2, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 1]" + "'", str26, "[2, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 1]" + "'", str27, "[2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 1]" + "'", str28, "[2, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 1]" + "'", str29, "[2, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 1]" + "'", str30, "[2, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 1]" + "'", str31, "[2, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 1]" + "'", str32, "[2, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 1]" + "'", str33, "[2, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 1]" + "'", str34, "[2, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 2]" + "'", str35, "[3, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 2]" + "'", str36, "[3, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 2]" + "'", str37, "[3, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 2]" + "'", str38, "[3, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 2]" + "'", str39, "[3, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 2]" + "'", str40, "[3, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 2]" + "'", str41, "[3, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 2]" + "'", str42, "[3, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 2]" + "'", str43, "[3, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 2]" + "'", str44, "[3, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 3]" + "'", str45, "[4, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 3]" + "'", str46, "[4, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 3]" + "'", str47, "[4, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 3]" + "'", str48, "[4, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 3]" + "'", str49, "[4, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 3]" + "'", str50, "[4, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 3]" + "'", str51, "[4, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 3]" + "'", str52, "[4, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 3]" + "'", str53, "[4, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 3]" + "'", str54, "[4, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 4]" + "'", str55, "[5, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 4]" + "'", str56, "[5, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 4]" + "'", str57, "[5, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 4]" + "'", str58, "[5, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 4]" + "'", str59, "[5, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 4]" + "'", str60, "[5, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 6, 6, 4]" + "'", str61, "[5, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 7, 7, 4]" + "'", str62, "[5, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[5, 8, 8, 4]" + "'", str63, "[5, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 9, 9, 4]" + "'", str64, "[5, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 0, 0, 5]" + "'", str65, "[6, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 1, 1, 5]" + "'", str66, "[6, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 2, 2, 5]" + "'", str67, "[6, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 3, 3, 5]" + "'", str68, "[6, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 4, 4, 5]" + "'", str69, "[6, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 5, 5, 5]" + "'", str70, "[6, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 6, 6, 5]" + "'", str71, "[6, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[6, 7, 7, 5]" + "'", str72, "[6, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[6, 8, 8, 5]" + "'", str73, "[6, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 9, 9, 5]" + "'", str74, "[6, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[7, 0, 0, 6]" + "'", str75, "[7, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[7, 1, 1, 6]" + "'", str76, "[7, 1, 1, 6]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[7, 2, 2, 6]" + "'", str77, "[7, 2, 2, 6]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7, 3, 3, 6]" + "'", str78, "[7, 3, 3, 6]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7, 4, 4, 6]" + "'", str79, "[7, 4, 4, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 5, 5, 6]" + "'", str80, "[7, 5, 5, 6]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[7, 6, 6, 6]" + "'", str81, "[7, 6, 6, 6]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[7, 7, 7, 6]" + "'", str82, "[7, 7, 7, 6]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[7, 8, 8, 6]" + "'", str83, "[7, 8, 8, 6]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[7, 9, 9, 6]" + "'", str84, "[7, 9, 9, 6]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[8, 0, 0, 7]" + "'", str85, "[8, 0, 0, 7]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[8, 1, 1, 7]" + "'", str86, "[8, 1, 1, 7]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[8, 2, 2, 7]" + "'", str87, "[8, 2, 2, 7]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[8, 3, 3, 7]" + "'", str88, "[8, 3, 3, 7]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[8, 4, 4, 7]" + "'", str89, "[8, 4, 4, 7]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[8, 5, 5, 7]" + "'", str90, "[8, 5, 5, 7]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[8, 6, 6, 7]" + "'", str91, "[8, 6, 6, 7]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[8, 7, 7, 7]" + "'", str92, "[8, 7, 7, 7]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[8, 8, 8, 7]" + "'", str93, "[8, 8, 8, 7]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[8, 9, 9, 7]" + "'", str94, "[8, 9, 9, 7]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[9, 0, 0, 8]" + "'", str95, "[9, 0, 0, 8]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[9, 1, 1, 8]" + "'", str96, "[9, 1, 1, 8]");
    }

    @Test
    public void test6215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6215");
        int[] intArray1 = new int[] { (byte) 10 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[40]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
    }

    @Test
    public void test6216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6216");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 1]" + "'", str10, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 1]" + "'", str20, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[4]" + "'", str24, "[4]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[5]" + "'", str25, "[5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[6]" + "'", str26, "[6]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[7]" + "'", str27, "[7]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[8]" + "'", str28, "[8]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[9]" + "'", str29, "[9]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 1]" + "'", str30, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1]" + "'", str31, "[1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2]" + "'", str32, "[2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3]" + "'", str33, "[3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4]" + "'", str34, "[4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[5]" + "'", str35, "[5]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[6]" + "'", str36, "[6]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[7]" + "'", str37, "[7]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[8]" + "'", str38, "[8]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[9]" + "'", str39, "[9]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 0, 1]" + "'", str40, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1]" + "'", str41, "[1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2]" + "'", str42, "[2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3]" + "'", str43, "[3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4]" + "'", str44, "[4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5]" + "'", str45, "[5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[6]" + "'", str46, "[6]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[7]" + "'", str47, "[7]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[8]" + "'", str48, "[8]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[9]" + "'", str49, "[9]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 0, 1]" + "'", str50, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1]" + "'", str51, "[1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[2]" + "'", str52, "[2]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3]" + "'", str53, "[3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4]" + "'", str54, "[4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5]" + "'", str55, "[5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6]" + "'", str56, "[6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[7]" + "'", str57, "[7]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[8]" + "'", str58, "[8]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[9]" + "'", str59, "[9]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 0, 1]" + "'", str60, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1]" + "'", str61, "[1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[2]" + "'", str62, "[2]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[3]" + "'", str63, "[3]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[4]" + "'", str64, "[4]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5]" + "'", str65, "[5]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6]" + "'", str66, "[6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7]" + "'", str67, "[7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[8]" + "'", str68, "[8]");
    }

    @Test
    public void test6217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6217");
        int[] intArray3 = new int[] { (short) 100, (byte) 0, (short) 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass55 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[105, 1, 6]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 1, 1]" + "'", str4, "[100, 1, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 2, 1]" + "'", str5, "[100, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 3, 1]" + "'", str6, "[100, 3, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 4, 1]" + "'", str7, "[100, 4, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 5, 1]" + "'", str8, "[100, 5, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 6, 1]" + "'", str9, "[100, 6, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 7, 1]" + "'", str10, "[100, 7, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 8, 1]" + "'", str11, "[100, 8, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 9, 1]" + "'", str12, "[100, 9, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[101, 0, 2]" + "'", str13, "[101, 0, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[101, 1, 2]" + "'", str14, "[101, 1, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[101, 2, 2]" + "'", str15, "[101, 2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[101, 3, 2]" + "'", str16, "[101, 3, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[101, 4, 2]" + "'", str17, "[101, 4, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[101, 5, 2]" + "'", str18, "[101, 5, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[101, 6, 2]" + "'", str19, "[101, 6, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[101, 7, 2]" + "'", str20, "[101, 7, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[101, 8, 2]" + "'", str21, "[101, 8, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[101, 9, 2]" + "'", str22, "[101, 9, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[102, 0, 3]" + "'", str23, "[102, 0, 3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[102, 1, 3]" + "'", str24, "[102, 1, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[102, 2, 3]" + "'", str25, "[102, 2, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[102, 3, 3]" + "'", str26, "[102, 3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[102, 4, 3]" + "'", str27, "[102, 4, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[102, 5, 3]" + "'", str28, "[102, 5, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[102, 6, 3]" + "'", str29, "[102, 6, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[102, 7, 3]" + "'", str30, "[102, 7, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[102, 8, 3]" + "'", str31, "[102, 8, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[102, 9, 3]" + "'", str32, "[102, 9, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[103, 0, 4]" + "'", str33, "[103, 0, 4]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[103, 1, 4]" + "'", str34, "[103, 1, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[103, 2, 4]" + "'", str35, "[103, 2, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[103, 3, 4]" + "'", str36, "[103, 3, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[103, 4, 4]" + "'", str37, "[103, 4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[103, 5, 4]" + "'", str38, "[103, 5, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[103, 6, 4]" + "'", str39, "[103, 6, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[103, 7, 4]" + "'", str40, "[103, 7, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[103, 8, 4]" + "'", str41, "[103, 8, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[103, 9, 4]" + "'", str42, "[103, 9, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[104, 0, 5]" + "'", str43, "[104, 0, 5]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[104, 1, 5]" + "'", str44, "[104, 1, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[104, 2, 5]" + "'", str45, "[104, 2, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[104, 3, 5]" + "'", str46, "[104, 3, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[104, 4, 5]" + "'", str47, "[104, 4, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[104, 5, 5]" + "'", str48, "[104, 5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[104, 6, 5]" + "'", str49, "[104, 6, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[104, 7, 5]" + "'", str50, "[104, 7, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[104, 8, 5]" + "'", str51, "[104, 8, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[104, 9, 5]" + "'", str52, "[104, 9, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[105, 0, 6]" + "'", str53, "[105, 0, 6]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[105, 1, 6]" + "'", str54, "[105, 1, 6]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test6218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6218");
        int[] intArray3 = new int[] { (byte) 10, 'a', 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass32 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 125, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 98, 0]" + "'", str4, "[10, 98, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 99, 0]" + "'", str5, "[10, 99, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 100, 0]" + "'", str6, "[10, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 101, 0]" + "'", str7, "[10, 101, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 102, 0]" + "'", str8, "[10, 102, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 103, 0]" + "'", str9, "[10, 103, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 104, 0]" + "'", str10, "[10, 104, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 105, 0]" + "'", str11, "[10, 105, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 106, 0]" + "'", str12, "[10, 106, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 107, 0]" + "'", str13, "[10, 107, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 108, 0]" + "'", str14, "[10, 108, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 109, 0]" + "'", str15, "[10, 109, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 110, 0]" + "'", str16, "[10, 110, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 111, 0]" + "'", str17, "[10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 112, 0]" + "'", str18, "[10, 112, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 113, 0]" + "'", str19, "[10, 113, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 114, 0]" + "'", str20, "[10, 114, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 115, 0]" + "'", str21, "[10, 115, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 116, 0]" + "'", str22, "[10, 116, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 117, 0]" + "'", str23, "[10, 117, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 118, 0]" + "'", str24, "[10, 118, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 119, 0]" + "'", str25, "[10, 119, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 120, 0]" + "'", str26, "[10, 120, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 121, 0]" + "'", str27, "[10, 121, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 122, 0]" + "'", str28, "[10, 122, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 123, 0]" + "'", str29, "[10, 123, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 124, 0]" + "'", str30, "[10, 124, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 125, 0]" + "'", str31, "[10, 125, 0]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test6219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6219");
        int[] intArray6 = new int[] { (byte) 0, (short) 1, 1, (short) 1, 1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 7, 1, 1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 2, 2, 1, 0]" + "'", str7, "[0, 1, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 3, 3, 1, 0]" + "'", str8, "[0, 1, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 4, 4, 1, 0]" + "'", str9, "[0, 1, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 5, 5, 1, 0]" + "'", str10, "[0, 1, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 6, 6, 1, 0]" + "'", str11, "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 7, 7, 1, 0]" + "'", str12, "[0, 1, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 8, 8, 1, 0]" + "'", str13, "[0, 1, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 9, 9, 1, 0]" + "'", str14, "[0, 1, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 0, 0, 2, 0]" + "'", str15, "[0, 2, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 1, 1, 2, 0]" + "'", str16, "[0, 2, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 2, 2, 0]" + "'", str17, "[0, 2, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 2, 3, 3, 2, 0]" + "'", str18, "[0, 2, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 2, 4, 4, 2, 0]" + "'", str19, "[0, 2, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 2, 5, 5, 2, 0]" + "'", str20, "[0, 2, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 2, 6, 6, 2, 0]" + "'", str21, "[0, 2, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 2, 7, 7, 2, 0]" + "'", str22, "[0, 2, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 2, 8, 8, 2, 0]" + "'", str23, "[0, 2, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 2, 9, 9, 2, 0]" + "'", str24, "[0, 2, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 3, 0, 0, 3, 0]" + "'", str25, "[0, 3, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 3, 1, 1, 3, 0]" + "'", str26, "[0, 3, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 3, 2, 2, 3, 0]" + "'", str27, "[0, 3, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 3, 3, 3, 3, 0]" + "'", str28, "[0, 3, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 3, 4, 4, 3, 0]" + "'", str29, "[0, 3, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 3, 5, 5, 3, 0]" + "'", str30, "[0, 3, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 3, 6, 6, 3, 0]" + "'", str31, "[0, 3, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 3, 7, 7, 3, 0]" + "'", str32, "[0, 3, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 3, 8, 8, 3, 0]" + "'", str33, "[0, 3, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 3, 9, 9, 3, 0]" + "'", str34, "[0, 3, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 4, 0, 0, 4, 0]" + "'", str35, "[0, 4, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 4, 1, 1, 4, 0]" + "'", str36, "[0, 4, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 4, 2, 2, 4, 0]" + "'", str37, "[0, 4, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 4, 3, 3, 4, 0]" + "'", str38, "[0, 4, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 4, 4, 4, 4, 0]" + "'", str39, "[0, 4, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 4, 5, 5, 4, 0]" + "'", str40, "[0, 4, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 4, 6, 6, 4, 0]" + "'", str41, "[0, 4, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 4, 7, 7, 4, 0]" + "'", str42, "[0, 4, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 4, 8, 8, 4, 0]" + "'", str43, "[0, 4, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 4, 9, 9, 4, 0]" + "'", str44, "[0, 4, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 5, 0, 0, 5, 0]" + "'", str45, "[0, 5, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 5, 1, 1, 5, 0]" + "'", str46, "[0, 5, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 5, 2, 2, 5, 0]" + "'", str47, "[0, 5, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 5, 3, 3, 5, 0]" + "'", str48, "[0, 5, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 5, 4, 4, 5, 0]" + "'", str49, "[0, 5, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 5, 5, 5, 5, 0]" + "'", str50, "[0, 5, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 5, 6, 6, 5, 0]" + "'", str51, "[0, 5, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 5, 7, 7, 5, 0]" + "'", str52, "[0, 5, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 5, 8, 8, 5, 0]" + "'", str53, "[0, 5, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 5, 9, 9, 5, 0]" + "'", str54, "[0, 5, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 6, 0, 0, 6, 0]" + "'", str55, "[0, 6, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 6, 1, 1, 6, 0]" + "'", str56, "[0, 6, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 6, 2, 2, 6, 0]" + "'", str57, "[0, 6, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 6, 3, 3, 6, 0]" + "'", str58, "[0, 6, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 6, 4, 4, 6, 0]" + "'", str59, "[0, 6, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 6, 5, 5, 6, 0]" + "'", str60, "[0, 6, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 6, 6, 6, 6, 0]" + "'", str61, "[0, 6, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 6, 7, 7, 6, 0]" + "'", str62, "[0, 6, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 6, 8, 8, 6, 0]" + "'", str63, "[0, 6, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 6, 9, 9, 6, 0]" + "'", str64, "[0, 6, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 7, 0, 0, 7, 0]" + "'", str65, "[0, 7, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 7, 1, 1, 7, 0]" + "'", str66, "[0, 7, 1, 1, 7, 0]");
    }

    @Test
    public void test6220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6220");
        int[] intArray6 = new int[] { (byte) 0, (short) 1, 1, (short) 1, 1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass66 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 7, 0, 0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 2, 2, 1, 0]" + "'", str7, "[0, 1, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 3, 3, 1, 0]" + "'", str8, "[0, 1, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 4, 4, 1, 0]" + "'", str9, "[0, 1, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 5, 5, 1, 0]" + "'", str10, "[0, 1, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 6, 6, 1, 0]" + "'", str11, "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 7, 7, 1, 0]" + "'", str12, "[0, 1, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 8, 8, 1, 0]" + "'", str13, "[0, 1, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 9, 9, 1, 0]" + "'", str14, "[0, 1, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 0, 0, 2, 0]" + "'", str15, "[0, 2, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 1, 1, 2, 0]" + "'", str16, "[0, 2, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 2, 2, 0]" + "'", str17, "[0, 2, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 2, 3, 3, 2, 0]" + "'", str18, "[0, 2, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 2, 4, 4, 2, 0]" + "'", str19, "[0, 2, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 2, 5, 5, 2, 0]" + "'", str20, "[0, 2, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 2, 6, 6, 2, 0]" + "'", str21, "[0, 2, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 2, 7, 7, 2, 0]" + "'", str22, "[0, 2, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 2, 8, 8, 2, 0]" + "'", str23, "[0, 2, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 2, 9, 9, 2, 0]" + "'", str24, "[0, 2, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 3, 0, 0, 3, 0]" + "'", str25, "[0, 3, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 3, 1, 1, 3, 0]" + "'", str26, "[0, 3, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 3, 2, 2, 3, 0]" + "'", str27, "[0, 3, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 3, 3, 3, 3, 0]" + "'", str28, "[0, 3, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 3, 4, 4, 3, 0]" + "'", str29, "[0, 3, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 3, 5, 5, 3, 0]" + "'", str30, "[0, 3, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 3, 6, 6, 3, 0]" + "'", str31, "[0, 3, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 3, 7, 7, 3, 0]" + "'", str32, "[0, 3, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 3, 8, 8, 3, 0]" + "'", str33, "[0, 3, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 3, 9, 9, 3, 0]" + "'", str34, "[0, 3, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 4, 0, 0, 4, 0]" + "'", str35, "[0, 4, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 4, 1, 1, 4, 0]" + "'", str36, "[0, 4, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 4, 2, 2, 4, 0]" + "'", str37, "[0, 4, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 4, 3, 3, 4, 0]" + "'", str38, "[0, 4, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 4, 4, 4, 4, 0]" + "'", str39, "[0, 4, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 4, 5, 5, 4, 0]" + "'", str40, "[0, 4, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 4, 6, 6, 4, 0]" + "'", str41, "[0, 4, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 4, 7, 7, 4, 0]" + "'", str42, "[0, 4, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 4, 8, 8, 4, 0]" + "'", str43, "[0, 4, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 4, 9, 9, 4, 0]" + "'", str44, "[0, 4, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 5, 0, 0, 5, 0]" + "'", str45, "[0, 5, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 5, 1, 1, 5, 0]" + "'", str46, "[0, 5, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 5, 2, 2, 5, 0]" + "'", str47, "[0, 5, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 5, 3, 3, 5, 0]" + "'", str48, "[0, 5, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 5, 4, 4, 5, 0]" + "'", str49, "[0, 5, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 5, 5, 5, 5, 0]" + "'", str50, "[0, 5, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 5, 6, 6, 5, 0]" + "'", str51, "[0, 5, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 5, 7, 7, 5, 0]" + "'", str52, "[0, 5, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 5, 8, 8, 5, 0]" + "'", str53, "[0, 5, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 5, 9, 9, 5, 0]" + "'", str54, "[0, 5, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 6, 0, 0, 6, 0]" + "'", str55, "[0, 6, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 6, 1, 1, 6, 0]" + "'", str56, "[0, 6, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 6, 2, 2, 6, 0]" + "'", str57, "[0, 6, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 6, 3, 3, 6, 0]" + "'", str58, "[0, 6, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 6, 4, 4, 6, 0]" + "'", str59, "[0, 6, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 6, 5, 5, 6, 0]" + "'", str60, "[0, 6, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 6, 6, 6, 6, 0]" + "'", str61, "[0, 6, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 6, 7, 7, 6, 0]" + "'", str62, "[0, 6, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 6, 8, 8, 6, 0]" + "'", str63, "[0, 6, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 6, 9, 9, 6, 0]" + "'", str64, "[0, 6, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 7, 0, 0, 7, 0]" + "'", str65, "[0, 7, 0, 0, 7, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test6221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6221");
        int[] intArray5 = new int[] { '#', (short) 10, 100, '4', (short) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass46 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[35, 10, 140, 52, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 10, 101, 52, 1]" + "'", str6, "[35, 10, 101, 52, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 10, 102, 52, 1]" + "'", str7, "[35, 10, 102, 52, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 10, 103, 52, 1]" + "'", str8, "[35, 10, 103, 52, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 10, 104, 52, 1]" + "'", str9, "[35, 10, 104, 52, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 10, 105, 52, 1]" + "'", str10, "[35, 10, 105, 52, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 10, 106, 52, 1]" + "'", str11, "[35, 10, 106, 52, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 10, 107, 52, 1]" + "'", str12, "[35, 10, 107, 52, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 10, 108, 52, 1]" + "'", str13, "[35, 10, 108, 52, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 10, 109, 52, 1]" + "'", str14, "[35, 10, 109, 52, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 10, 110, 52, 1]" + "'", str15, "[35, 10, 110, 52, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 10, 111, 52, 1]" + "'", str16, "[35, 10, 111, 52, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 10, 112, 52, 1]" + "'", str17, "[35, 10, 112, 52, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 10, 113, 52, 1]" + "'", str18, "[35, 10, 113, 52, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 10, 114, 52, 1]" + "'", str19, "[35, 10, 114, 52, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 10, 115, 52, 1]" + "'", str20, "[35, 10, 115, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 10, 116, 52, 1]" + "'", str21, "[35, 10, 116, 52, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 10, 117, 52, 1]" + "'", str22, "[35, 10, 117, 52, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 10, 118, 52, 1]" + "'", str23, "[35, 10, 118, 52, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 10, 119, 52, 1]" + "'", str24, "[35, 10, 119, 52, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 10, 120, 52, 1]" + "'", str25, "[35, 10, 120, 52, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 10, 121, 52, 1]" + "'", str26, "[35, 10, 121, 52, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 10, 122, 52, 1]" + "'", str27, "[35, 10, 122, 52, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 10, 123, 52, 1]" + "'", str28, "[35, 10, 123, 52, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 10, 124, 52, 1]" + "'", str29, "[35, 10, 124, 52, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 10, 125, 52, 1]" + "'", str30, "[35, 10, 125, 52, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 10, 126, 52, 1]" + "'", str31, "[35, 10, 126, 52, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 10, 127, 52, 1]" + "'", str32, "[35, 10, 127, 52, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 10, 128, 52, 1]" + "'", str33, "[35, 10, 128, 52, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 10, 129, 52, 1]" + "'", str34, "[35, 10, 129, 52, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 10, 130, 52, 1]" + "'", str35, "[35, 10, 130, 52, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 10, 131, 52, 1]" + "'", str36, "[35, 10, 131, 52, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 10, 132, 52, 1]" + "'", str37, "[35, 10, 132, 52, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 10, 133, 52, 1]" + "'", str38, "[35, 10, 133, 52, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 10, 134, 52, 1]" + "'", str39, "[35, 10, 134, 52, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 10, 135, 52, 1]" + "'", str40, "[35, 10, 135, 52, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 10, 136, 52, 1]" + "'", str41, "[35, 10, 136, 52, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 10, 137, 52, 1]" + "'", str42, "[35, 10, 137, 52, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 10, 138, 52, 1]" + "'", str43, "[35, 10, 138, 52, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 10, 139, 52, 1]" + "'", str44, "[35, 10, 139, 52, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 10, 140, 52, 1]" + "'", str45, "[35, 10, 140, 52, 1]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test6222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6222");
        int[] intArray5 = new int[] { 1, 1, (short) -1, 1, 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass19 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 0, 1, 1]" + "'", str6, "[1, 1, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 1, 1, 1]" + "'", str7, "[1, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 2, 1, 1]" + "'", str8, "[1, 1, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 3, 1, 1]" + "'", str9, "[1, 1, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 4, 1, 1]" + "'", str10, "[1, 1, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 5, 1, 1]" + "'", str11, "[1, 1, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 6, 1, 1]" + "'", str12, "[1, 1, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 7, 1, 1]" + "'", str13, "[1, 1, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 8, 1, 1]" + "'", str14, "[1, 1, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 9, 1, 1]" + "'", str15, "[1, 1, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 0, 2, 1]" + "'", str16, "[1, 2, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 1, 2, 1]" + "'", str17, "[1, 2, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 2, 2, 2, 1]" + "'", str18, "[1, 2, 2, 2, 1]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test6223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6223");
        int[] intArray6 = new int[] { (byte) 0, ' ', 1, 'a', (short) 0, '#' };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass50 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 32, 44, 140, 0, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 32, 2, 98, 0, 35]" + "'", str7, "[0, 32, 2, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 32, 3, 99, 0, 35]" + "'", str8, "[0, 32, 3, 99, 0, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 32, 4, 100, 0, 35]" + "'", str9, "[0, 32, 4, 100, 0, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 32, 5, 101, 0, 35]" + "'", str10, "[0, 32, 5, 101, 0, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 32, 6, 102, 0, 35]" + "'", str11, "[0, 32, 6, 102, 0, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 32, 7, 103, 0, 35]" + "'", str12, "[0, 32, 7, 103, 0, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 32, 8, 104, 0, 35]" + "'", str13, "[0, 32, 8, 104, 0, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 32, 9, 105, 0, 35]" + "'", str14, "[0, 32, 9, 105, 0, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 32, 10, 106, 0, 35]" + "'", str15, "[0, 32, 10, 106, 0, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 32, 11, 107, 0, 35]" + "'", str16, "[0, 32, 11, 107, 0, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 32, 12, 108, 0, 35]" + "'", str17, "[0, 32, 12, 108, 0, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 32, 13, 109, 0, 35]" + "'", str18, "[0, 32, 13, 109, 0, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 32, 14, 110, 0, 35]" + "'", str19, "[0, 32, 14, 110, 0, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 32, 15, 111, 0, 35]" + "'", str20, "[0, 32, 15, 111, 0, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 32, 16, 112, 0, 35]" + "'", str21, "[0, 32, 16, 112, 0, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 32, 17, 113, 0, 35]" + "'", str22, "[0, 32, 17, 113, 0, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 32, 18, 114, 0, 35]" + "'", str23, "[0, 32, 18, 114, 0, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 32, 19, 115, 0, 35]" + "'", str24, "[0, 32, 19, 115, 0, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 32, 20, 116, 0, 35]" + "'", str25, "[0, 32, 20, 116, 0, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 32, 21, 117, 0, 35]" + "'", str26, "[0, 32, 21, 117, 0, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 32, 22, 118, 0, 35]" + "'", str27, "[0, 32, 22, 118, 0, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 32, 23, 119, 0, 35]" + "'", str28, "[0, 32, 23, 119, 0, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 32, 24, 120, 0, 35]" + "'", str29, "[0, 32, 24, 120, 0, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 32, 25, 121, 0, 35]" + "'", str30, "[0, 32, 25, 121, 0, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 32, 26, 122, 0, 35]" + "'", str31, "[0, 32, 26, 122, 0, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 32, 27, 123, 0, 35]" + "'", str32, "[0, 32, 27, 123, 0, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 32, 28, 124, 0, 35]" + "'", str33, "[0, 32, 28, 124, 0, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 32, 29, 125, 0, 35]" + "'", str34, "[0, 32, 29, 125, 0, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 32, 30, 126, 0, 35]" + "'", str35, "[0, 32, 30, 126, 0, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 32, 31, 127, 0, 35]" + "'", str36, "[0, 32, 31, 127, 0, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 32, 32, 128, 0, 35]" + "'", str37, "[0, 32, 32, 128, 0, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 32, 33, 129, 0, 35]" + "'", str38, "[0, 32, 33, 129, 0, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 32, 34, 130, 0, 35]" + "'", str39, "[0, 32, 34, 130, 0, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 32, 35, 131, 0, 35]" + "'", str40, "[0, 32, 35, 131, 0, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 32, 36, 132, 0, 35]" + "'", str41, "[0, 32, 36, 132, 0, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 32, 37, 133, 0, 35]" + "'", str42, "[0, 32, 37, 133, 0, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 32, 38, 134, 0, 35]" + "'", str43, "[0, 32, 38, 134, 0, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 32, 39, 135, 0, 35]" + "'", str44, "[0, 32, 39, 135, 0, 35]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 32, 40, 136, 0, 35]" + "'", str45, "[0, 32, 40, 136, 0, 35]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 32, 41, 137, 0, 35]" + "'", str46, "[0, 32, 41, 137, 0, 35]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 32, 42, 138, 0, 35]" + "'", str47, "[0, 32, 42, 138, 0, 35]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 32, 43, 139, 0, 35]" + "'", str48, "[0, 32, 43, 139, 0, 35]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 32, 44, 140, 0, 35]" + "'", str49, "[0, 32, 44, 140, 0, 35]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test6224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6224");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass83 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[8, 0, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 7, 1]" + "'", str19, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 8, 1]" + "'", str20, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 9, 1]" + "'", str21, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 0, 2]" + "'", str22, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 1, 2]" + "'", str23, "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2, 2]" + "'", str24, "[2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 3, 2]" + "'", str25, "[2, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 4, 2]" + "'", str26, "[2, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 5, 2]" + "'", str27, "[2, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 6, 2]" + "'", str28, "[2, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 7, 2]" + "'", str29, "[2, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 8, 2]" + "'", str30, "[2, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 9, 2]" + "'", str31, "[2, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 0, 3]" + "'", str32, "[3, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 1, 3]" + "'", str33, "[3, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 2, 3]" + "'", str34, "[3, 2, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3, 3]" + "'", str35, "[3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 4, 3]" + "'", str36, "[3, 4, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 5, 3]" + "'", str37, "[3, 5, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 6, 3]" + "'", str38, "[3, 6, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 7, 3]" + "'", str39, "[3, 7, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 8, 3]" + "'", str40, "[3, 8, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 9, 3]" + "'", str41, "[3, 9, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 0, 4]" + "'", str42, "[4, 0, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 1, 4]" + "'", str43, "[4, 1, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 2, 4]" + "'", str44, "[4, 2, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 3, 4]" + "'", str45, "[4, 3, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4, 4]" + "'", str46, "[4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 5, 4]" + "'", str47, "[4, 5, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 6, 4]" + "'", str48, "[4, 6, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 7, 4]" + "'", str49, "[4, 7, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 8, 4]" + "'", str50, "[4, 8, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 9, 4]" + "'", str51, "[4, 9, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 0, 5]" + "'", str52, "[5, 0, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 1, 5]" + "'", str53, "[5, 1, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 2, 5]" + "'", str54, "[5, 2, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 3, 5]" + "'", str55, "[5, 3, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 4, 5]" + "'", str56, "[5, 4, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 5, 5]" + "'", str57, "[5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 6, 5]" + "'", str58, "[5, 6, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 7, 5]" + "'", str59, "[5, 7, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 8, 5]" + "'", str60, "[5, 8, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 9, 5]" + "'", str61, "[5, 9, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 0, 6]" + "'", str62, "[6, 0, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 1, 6]" + "'", str63, "[6, 1, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[6, 2, 6]" + "'", str64, "[6, 2, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 3, 6]" + "'", str65, "[6, 3, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 4, 6]" + "'", str66, "[6, 4, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 5, 6]" + "'", str67, "[6, 5, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 6, 6]" + "'", str68, "[6, 6, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 7, 6]" + "'", str69, "[6, 7, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 8, 6]" + "'", str70, "[6, 8, 6]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 9, 6]" + "'", str71, "[6, 9, 6]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 0, 7]" + "'", str72, "[7, 0, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 1, 7]" + "'", str73, "[7, 1, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[7, 2, 7]" + "'", str74, "[7, 2, 7]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[7, 3, 7]" + "'", str75, "[7, 3, 7]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[7, 4, 7]" + "'", str76, "[7, 4, 7]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[7, 5, 7]" + "'", str77, "[7, 5, 7]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7, 6, 7]" + "'", str78, "[7, 6, 7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7, 7, 7]" + "'", str79, "[7, 7, 7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 8, 7]" + "'", str80, "[7, 8, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[7, 9, 7]" + "'", str81, "[7, 9, 7]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 0, 8]" + "'", str82, "[8, 0, 8]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test6225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6225");
        int[] intArray5 = new int[] { (short) 100, ' ', (byte) 100, (short) 0, '4' };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 32, 129, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 32, 101, 0, 52]" + "'", str6, "[100, 32, 101, 0, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 32, 102, 0, 52]" + "'", str7, "[100, 32, 102, 0, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 32, 103, 0, 52]" + "'", str8, "[100, 32, 103, 0, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 32, 104, 0, 52]" + "'", str9, "[100, 32, 104, 0, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 32, 105, 0, 52]" + "'", str10, "[100, 32, 105, 0, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 32, 106, 0, 52]" + "'", str11, "[100, 32, 106, 0, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 32, 107, 0, 52]" + "'", str12, "[100, 32, 107, 0, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 32, 108, 0, 52]" + "'", str13, "[100, 32, 108, 0, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 32, 109, 0, 52]" + "'", str14, "[100, 32, 109, 0, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 32, 110, 0, 52]" + "'", str15, "[100, 32, 110, 0, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 32, 111, 0, 52]" + "'", str16, "[100, 32, 111, 0, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 32, 112, 0, 52]" + "'", str17, "[100, 32, 112, 0, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 32, 113, 0, 52]" + "'", str18, "[100, 32, 113, 0, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 32, 114, 0, 52]" + "'", str19, "[100, 32, 114, 0, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 32, 115, 0, 52]" + "'", str20, "[100, 32, 115, 0, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 32, 116, 0, 52]" + "'", str21, "[100, 32, 116, 0, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 32, 117, 0, 52]" + "'", str22, "[100, 32, 117, 0, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 32, 118, 0, 52]" + "'", str23, "[100, 32, 118, 0, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 32, 119, 0, 52]" + "'", str24, "[100, 32, 119, 0, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 32, 120, 0, 52]" + "'", str25, "[100, 32, 120, 0, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 32, 121, 0, 52]" + "'", str26, "[100, 32, 121, 0, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 32, 122, 0, 52]" + "'", str27, "[100, 32, 122, 0, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 32, 123, 0, 52]" + "'", str28, "[100, 32, 123, 0, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 32, 124, 0, 52]" + "'", str29, "[100, 32, 124, 0, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 32, 125, 0, 52]" + "'", str30, "[100, 32, 125, 0, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 32, 126, 0, 52]" + "'", str31, "[100, 32, 126, 0, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 32, 127, 0, 52]" + "'", str32, "[100, 32, 127, 0, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 32, 128, 0, 52]" + "'", str33, "[100, 32, 128, 0, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 32, 129, 0, 52]" + "'", str34, "[100, 32, 129, 0, 52]");
    }

    @Test
    public void test6226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6226");
        int[] intArray5 = new int[] { (short) 1, ' ', (byte) -1, (short) 100, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass83 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 39, 6, 107, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 32, 0, 100, 100]" + "'", str6, "[1, 32, 0, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 32, 1, 100, 100]" + "'", str7, "[1, 32, 1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 32, 2, 100, 100]" + "'", str8, "[1, 32, 2, 100, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 32, 3, 100, 100]" + "'", str9, "[1, 32, 3, 100, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 32, 4, 100, 100]" + "'", str10, "[1, 32, 4, 100, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 32, 5, 100, 100]" + "'", str11, "[1, 32, 5, 100, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 32, 6, 100, 100]" + "'", str12, "[1, 32, 6, 100, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 32, 7, 100, 100]" + "'", str13, "[1, 32, 7, 100, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 32, 8, 100, 100]" + "'", str14, "[1, 32, 8, 100, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 32, 9, 100, 100]" + "'", str15, "[1, 32, 9, 100, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 33, 0, 101, 100]" + "'", str16, "[1, 33, 0, 101, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 33, 1, 101, 100]" + "'", str17, "[1, 33, 1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 33, 2, 101, 100]" + "'", str18, "[1, 33, 2, 101, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 33, 3, 101, 100]" + "'", str19, "[1, 33, 3, 101, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 33, 4, 101, 100]" + "'", str20, "[1, 33, 4, 101, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 33, 5, 101, 100]" + "'", str21, "[1, 33, 5, 101, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 33, 6, 101, 100]" + "'", str22, "[1, 33, 6, 101, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 33, 7, 101, 100]" + "'", str23, "[1, 33, 7, 101, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 33, 8, 101, 100]" + "'", str24, "[1, 33, 8, 101, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 33, 9, 101, 100]" + "'", str25, "[1, 33, 9, 101, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 34, 0, 102, 100]" + "'", str26, "[1, 34, 0, 102, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 34, 1, 102, 100]" + "'", str27, "[1, 34, 1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 2, 102, 100]" + "'", str28, "[1, 34, 2, 102, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 34, 3, 102, 100]" + "'", str29, "[1, 34, 3, 102, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 34, 4, 102, 100]" + "'", str30, "[1, 34, 4, 102, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 34, 5, 102, 100]" + "'", str31, "[1, 34, 5, 102, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 34, 6, 102, 100]" + "'", str32, "[1, 34, 6, 102, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 34, 7, 102, 100]" + "'", str33, "[1, 34, 7, 102, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 34, 8, 102, 100]" + "'", str34, "[1, 34, 8, 102, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 34, 9, 102, 100]" + "'", str35, "[1, 34, 9, 102, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 35, 0, 103, 100]" + "'", str36, "[1, 35, 0, 103, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 35, 1, 103, 100]" + "'", str37, "[1, 35, 1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 35, 2, 103, 100]" + "'", str38, "[1, 35, 2, 103, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 35, 3, 103, 100]" + "'", str39, "[1, 35, 3, 103, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 35, 4, 103, 100]" + "'", str40, "[1, 35, 4, 103, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 35, 5, 103, 100]" + "'", str41, "[1, 35, 5, 103, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 35, 6, 103, 100]" + "'", str42, "[1, 35, 6, 103, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 35, 7, 103, 100]" + "'", str43, "[1, 35, 7, 103, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 35, 8, 103, 100]" + "'", str44, "[1, 35, 8, 103, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 35, 9, 103, 100]" + "'", str45, "[1, 35, 9, 103, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 36, 0, 104, 100]" + "'", str46, "[1, 36, 0, 104, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 36, 1, 104, 100]" + "'", str47, "[1, 36, 1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 36, 2, 104, 100]" + "'", str48, "[1, 36, 2, 104, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 36, 3, 104, 100]" + "'", str49, "[1, 36, 3, 104, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 36, 4, 104, 100]" + "'", str50, "[1, 36, 4, 104, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 36, 5, 104, 100]" + "'", str51, "[1, 36, 5, 104, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 36, 6, 104, 100]" + "'", str52, "[1, 36, 6, 104, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 36, 7, 104, 100]" + "'", str53, "[1, 36, 7, 104, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 36, 8, 104, 100]" + "'", str54, "[1, 36, 8, 104, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 36, 9, 104, 100]" + "'", str55, "[1, 36, 9, 104, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 37, 0, 105, 100]" + "'", str56, "[1, 37, 0, 105, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 37, 1, 105, 100]" + "'", str57, "[1, 37, 1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 37, 2, 105, 100]" + "'", str58, "[1, 37, 2, 105, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 37, 3, 105, 100]" + "'", str59, "[1, 37, 3, 105, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 37, 4, 105, 100]" + "'", str60, "[1, 37, 4, 105, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 37, 5, 105, 100]" + "'", str61, "[1, 37, 5, 105, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 37, 6, 105, 100]" + "'", str62, "[1, 37, 6, 105, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 37, 7, 105, 100]" + "'", str63, "[1, 37, 7, 105, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 37, 8, 105, 100]" + "'", str64, "[1, 37, 8, 105, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 37, 9, 105, 100]" + "'", str65, "[1, 37, 9, 105, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 38, 0, 106, 100]" + "'", str66, "[1, 38, 0, 106, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 38, 1, 106, 100]" + "'", str67, "[1, 38, 1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 38, 2, 106, 100]" + "'", str68, "[1, 38, 2, 106, 100]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 38, 3, 106, 100]" + "'", str69, "[1, 38, 3, 106, 100]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 38, 4, 106, 100]" + "'", str70, "[1, 38, 4, 106, 100]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 38, 5, 106, 100]" + "'", str71, "[1, 38, 5, 106, 100]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 38, 6, 106, 100]" + "'", str72, "[1, 38, 6, 106, 100]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 38, 7, 106, 100]" + "'", str73, "[1, 38, 7, 106, 100]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 38, 8, 106, 100]" + "'", str74, "[1, 38, 8, 106, 100]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 38, 9, 106, 100]" + "'", str75, "[1, 38, 9, 106, 100]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 39, 0, 107, 100]" + "'", str76, "[1, 39, 0, 107, 100]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 39, 1, 107, 100]" + "'", str77, "[1, 39, 1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 39, 2, 107, 100]" + "'", str78, "[1, 39, 2, 107, 100]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 39, 3, 107, 100]" + "'", str79, "[1, 39, 3, 107, 100]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 39, 4, 107, 100]" + "'", str80, "[1, 39, 4, 107, 100]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 39, 5, 107, 100]" + "'", str81, "[1, 39, 5, 107, 100]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 39, 6, 107, 100]" + "'", str82, "[1, 39, 6, 107, 100]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test6227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6227");
        int[] intArray3 = new int[] { (byte) 10, 'a', 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 126, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 98, 0]" + "'", str4, "[10, 98, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 99, 0]" + "'", str5, "[10, 99, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 100, 0]" + "'", str6, "[10, 100, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 101, 0]" + "'", str7, "[10, 101, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 102, 0]" + "'", str8, "[10, 102, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 103, 0]" + "'", str9, "[10, 103, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 104, 0]" + "'", str10, "[10, 104, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 105, 0]" + "'", str11, "[10, 105, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 106, 0]" + "'", str12, "[10, 106, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 107, 0]" + "'", str13, "[10, 107, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 108, 0]" + "'", str14, "[10, 108, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 109, 0]" + "'", str15, "[10, 109, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 110, 0]" + "'", str16, "[10, 110, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 111, 0]" + "'", str17, "[10, 111, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 112, 0]" + "'", str18, "[10, 112, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 113, 0]" + "'", str19, "[10, 113, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 114, 0]" + "'", str20, "[10, 114, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 115, 0]" + "'", str21, "[10, 115, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 116, 0]" + "'", str22, "[10, 116, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 117, 0]" + "'", str23, "[10, 117, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 118, 0]" + "'", str24, "[10, 118, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 119, 0]" + "'", str25, "[10, 119, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 120, 0]" + "'", str26, "[10, 120, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 121, 0]" + "'", str27, "[10, 121, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 122, 0]" + "'", str28, "[10, 122, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 123, 0]" + "'", str29, "[10, 123, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 124, 0]" + "'", str30, "[10, 124, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 125, 0]" + "'", str31, "[10, 125, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 126, 0]" + "'", str32, "[10, 126, 0]");
    }

    @Test
    public void test6228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6228");
        int[] intArray3 = new int[] { 0, (byte) -1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass54 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[4, 9, 4]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 0]" + "'", str4, "[0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 0]" + "'", str5, "[0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 0]" + "'", str6, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 0]" + "'", str7, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 0]" + "'", str8, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 0]" + "'", str9, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 0]" + "'", str10, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 0]" + "'", str11, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 0]" + "'", str12, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 0]" + "'", str13, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 1]" + "'", str14, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 1]" + "'", str15, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 1]" + "'", str16, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 1]" + "'", str17, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 1]" + "'", str18, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 1]" + "'", str19, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 1]" + "'", str20, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 1]" + "'", str21, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 1]" + "'", str22, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 1]" + "'", str23, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 2]" + "'", str24, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 2]" + "'", str25, "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 2]" + "'", str26, "[2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 2]" + "'", str27, "[2, 3, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 2]" + "'", str28, "[2, 4, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 2]" + "'", str29, "[2, 5, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 2]" + "'", str30, "[2, 6, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 2]" + "'", str31, "[2, 7, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 2]" + "'", str32, "[2, 8, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 2]" + "'", str33, "[2, 9, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 3]" + "'", str34, "[3, 0, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 3]" + "'", str35, "[3, 1, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 3]" + "'", str36, "[3, 2, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 3]" + "'", str37, "[3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 3]" + "'", str38, "[3, 4, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 3]" + "'", str39, "[3, 5, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 3]" + "'", str40, "[3, 6, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 3]" + "'", str41, "[3, 7, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 3]" + "'", str42, "[3, 8, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 3]" + "'", str43, "[3, 9, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 4]" + "'", str44, "[4, 0, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 4]" + "'", str45, "[4, 1, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 4]" + "'", str46, "[4, 2, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 4]" + "'", str47, "[4, 3, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 4]" + "'", str48, "[4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 4]" + "'", str49, "[4, 5, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 4]" + "'", str50, "[4, 6, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 4]" + "'", str51, "[4, 7, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 4]" + "'", str52, "[4, 8, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 9, 4]" + "'", str53, "[4, 9, 4]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test6229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6229");
        int[] intArray5 = new int[] { (short) 10, ' ', (short) 10, 10, (byte) -1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass87 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 32, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 32, 11, 10, -1]" + "'", str6, "[10, 32, 11, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 32, 12, 10, -1]" + "'", str7, "[10, 32, 12, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 32, 13, 10, -1]" + "'", str8, "[10, 32, 13, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 32, 14, 10, -1]" + "'", str9, "[10, 32, 14, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 32, 15, 10, -1]" + "'", str10, "[10, 32, 15, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 32, 16, 10, -1]" + "'", str11, "[10, 32, 16, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 32, 17, 10, -1]" + "'", str12, "[10, 32, 17, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 32, 18, 10, -1]" + "'", str13, "[10, 32, 18, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 32, 19, 10, -1]" + "'", str14, "[10, 32, 19, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[10, 32, 20, 10, -1]" + "'", str15, "[10, 32, 20, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[10, 32, 21, 10, -1]" + "'", str16, "[10, 32, 21, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[10, 32, 22, 10, -1]" + "'", str17, "[10, 32, 22, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[10, 32, 23, 10, -1]" + "'", str18, "[10, 32, 23, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 32, 24, 10, -1]" + "'", str19, "[10, 32, 24, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 32, 25, 10, -1]" + "'", str20, "[10, 32, 25, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 32, 26, 10, -1]" + "'", str21, "[10, 32, 26, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 32, 27, 10, -1]" + "'", str22, "[10, 32, 27, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 32, 28, 10, -1]" + "'", str23, "[10, 32, 28, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 32, 29, 10, -1]" + "'", str24, "[10, 32, 29, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 32, 30, 10, -1]" + "'", str25, "[10, 32, 30, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 32, 31, 10, -1]" + "'", str26, "[10, 32, 31, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 32, 32, 10, -1]" + "'", str27, "[10, 32, 32, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[10, 32, 33, 10, -1]" + "'", str28, "[10, 32, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 32, 34, 10, -1]" + "'", str29, "[10, 32, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 32, 35, 10, -1]" + "'", str30, "[10, 32, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 32, 36, 10, -1]" + "'", str31, "[10, 32, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[10, 32, 37, 10, -1]" + "'", str32, "[10, 32, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 32, 38, 10, -1]" + "'", str33, "[10, 32, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[10, 32, 39, 10, -1]" + "'", str34, "[10, 32, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 32, 40, 10, -1]" + "'", str35, "[10, 32, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 32, 41, 10, -1]" + "'", str36, "[10, 32, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[10, 32, 42, 10, -1]" + "'", str37, "[10, 32, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[10, 32, 43, 10, -1]" + "'", str38, "[10, 32, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 32, 44, 10, -1]" + "'", str39, "[10, 32, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[10, 32, 45, 10, -1]" + "'", str40, "[10, 32, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[10, 32, 46, 10, -1]" + "'", str41, "[10, 32, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[10, 32, 47, 10, -1]" + "'", str42, "[10, 32, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[10, 32, 48, 10, -1]" + "'", str43, "[10, 32, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 32, 49, 10, -1]" + "'", str44, "[10, 32, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[10, 32, 50, 10, -1]" + "'", str45, "[10, 32, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[10, 32, 51, 10, -1]" + "'", str46, "[10, 32, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[10, 32, 52, 10, -1]" + "'", str47, "[10, 32, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[10, 32, 53, 10, -1]" + "'", str48, "[10, 32, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[10, 32, 54, 10, -1]" + "'", str49, "[10, 32, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[10, 32, 55, 10, -1]" + "'", str50, "[10, 32, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[10, 32, 56, 10, -1]" + "'", str51, "[10, 32, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[10, 32, 57, 10, -1]" + "'", str52, "[10, 32, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[10, 32, 58, 10, -1]" + "'", str53, "[10, 32, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[10, 32, 59, 10, -1]" + "'", str54, "[10, 32, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 32, 60, 10, -1]" + "'", str55, "[10, 32, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 32, 61, 10, -1]" + "'", str56, "[10, 32, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[10, 32, 62, 10, -1]" + "'", str57, "[10, 32, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[10, 32, 63, 10, -1]" + "'", str58, "[10, 32, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[10, 32, 64, 10, -1]" + "'", str59, "[10, 32, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[10, 32, 65, 10, -1]" + "'", str60, "[10, 32, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[10, 32, 66, 10, -1]" + "'", str61, "[10, 32, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[10, 32, 67, 10, -1]" + "'", str62, "[10, 32, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[10, 32, 68, 10, -1]" + "'", str63, "[10, 32, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[10, 32, 69, 10, -1]" + "'", str64, "[10, 32, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[10, 32, 70, 10, -1]" + "'", str65, "[10, 32, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[10, 32, 71, 10, -1]" + "'", str66, "[10, 32, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[10, 32, 72, 10, -1]" + "'", str67, "[10, 32, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[10, 32, 73, 10, -1]" + "'", str68, "[10, 32, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[10, 32, 74, 10, -1]" + "'", str69, "[10, 32, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[10, 32, 75, 10, -1]" + "'", str70, "[10, 32, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 32, 76, 10, -1]" + "'", str71, "[10, 32, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[10, 32, 77, 10, -1]" + "'", str72, "[10, 32, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[10, 32, 78, 10, -1]" + "'", str73, "[10, 32, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[10, 32, 79, 10, -1]" + "'", str74, "[10, 32, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[10, 32, 80, 10, -1]" + "'", str75, "[10, 32, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[10, 32, 81, 10, -1]" + "'", str76, "[10, 32, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[10, 32, 82, 10, -1]" + "'", str77, "[10, 32, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[10, 32, 83, 10, -1]" + "'", str78, "[10, 32, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[10, 32, 84, 10, -1]" + "'", str79, "[10, 32, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[10, 32, 85, 10, -1]" + "'", str80, "[10, 32, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[10, 32, 86, 10, -1]" + "'", str81, "[10, 32, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[10, 32, 87, 10, -1]" + "'", str82, "[10, 32, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[10, 32, 88, 10, -1]" + "'", str83, "[10, 32, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[10, 32, 89, 10, -1]" + "'", str84, "[10, 32, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[10, 32, 90, 10, -1]" + "'", str85, "[10, 32, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[10, 32, 91, 10, -1]" + "'", str86, "[10, 32, 91, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test6230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6230");
        int[] intArray2 = new int[] { (short) 10, 10 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass47 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[54, 54]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 11]" + "'", str3, "[11, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 12]" + "'", str4, "[12, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 13]" + "'", str5, "[13, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 14]" + "'", str6, "[14, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 15]" + "'", str7, "[15, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 16]" + "'", str8, "[16, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 17]" + "'", str9, "[17, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 18]" + "'", str10, "[18, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 19]" + "'", str11, "[19, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 20]" + "'", str12, "[20, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 21]" + "'", str13, "[21, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 22]" + "'", str14, "[22, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 23]" + "'", str15, "[23, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 24]" + "'", str16, "[24, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 25]" + "'", str17, "[25, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 26]" + "'", str18, "[26, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 27]" + "'", str19, "[27, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 28]" + "'", str20, "[28, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 29]" + "'", str21, "[29, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 30]" + "'", str22, "[30, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 31]" + "'", str23, "[31, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 32]" + "'", str24, "[32, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 33]" + "'", str25, "[33, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 34]" + "'", str26, "[34, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 35]" + "'", str27, "[35, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 36]" + "'", str28, "[36, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 37]" + "'", str29, "[37, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 38]" + "'", str30, "[38, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 39]" + "'", str31, "[39, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 40]" + "'", str32, "[40, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 41]" + "'", str33, "[41, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 42]" + "'", str34, "[42, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 43]" + "'", str35, "[43, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 44]" + "'", str36, "[44, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 45]" + "'", str37, "[45, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 46]" + "'", str38, "[46, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 47]" + "'", str39, "[47, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 48]" + "'", str40, "[48, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 49]" + "'", str41, "[49, 49]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 50]" + "'", str42, "[50, 50]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 51]" + "'", str43, "[51, 51]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 52]" + "'", str44, "[52, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 53]" + "'", str45, "[53, 53]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 54]" + "'", str46, "[54, 54]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test6231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6231");
        int[] intArray2 = new int[] { (-1), (short) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass39 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[6, 6]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 1]" + "'", str3, "[0, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 2]" + "'", str4, "[1, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 3]" + "'", str5, "[2, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 4]" + "'", str6, "[3, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 5]" + "'", str7, "[4, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 6]" + "'", str8, "[5, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 7]" + "'", str9, "[6, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 8]" + "'", str10, "[7, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[8, 9]" + "'", str11, "[8, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test6232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6232");
        int[] intArray3 = new int[] { (short) 0, '#', ' ' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass51 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 82, 32]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 36, 32]" + "'", str4, "[0, 36, 32]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 37, 32]" + "'", str5, "[0, 37, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 38, 32]" + "'", str6, "[0, 38, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 39, 32]" + "'", str7, "[0, 39, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 40, 32]" + "'", str8, "[0, 40, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 41, 32]" + "'", str9, "[0, 41, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 42, 32]" + "'", str10, "[0, 42, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 43, 32]" + "'", str11, "[0, 43, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 44, 32]" + "'", str12, "[0, 44, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 45, 32]" + "'", str13, "[0, 45, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 46, 32]" + "'", str14, "[0, 46, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 47, 32]" + "'", str15, "[0, 47, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 48, 32]" + "'", str16, "[0, 48, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 49, 32]" + "'", str17, "[0, 49, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 50, 32]" + "'", str18, "[0, 50, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 51, 32]" + "'", str19, "[0, 51, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 52, 32]" + "'", str20, "[0, 52, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 53, 32]" + "'", str21, "[0, 53, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 54, 32]" + "'", str22, "[0, 54, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 55, 32]" + "'", str23, "[0, 55, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 56, 32]" + "'", str24, "[0, 56, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 57, 32]" + "'", str25, "[0, 57, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 58, 32]" + "'", str26, "[0, 58, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 59, 32]" + "'", str27, "[0, 59, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 60, 32]" + "'", str28, "[0, 60, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 61, 32]" + "'", str29, "[0, 61, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 62, 32]" + "'", str30, "[0, 62, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 63, 32]" + "'", str31, "[0, 63, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 64, 32]" + "'", str32, "[0, 64, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 65, 32]" + "'", str33, "[0, 65, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 66, 32]" + "'", str34, "[0, 66, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 67, 32]" + "'", str35, "[0, 67, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 68, 32]" + "'", str36, "[0, 68, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 69, 32]" + "'", str37, "[0, 69, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 70, 32]" + "'", str38, "[0, 70, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 71, 32]" + "'", str39, "[0, 71, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 72, 32]" + "'", str40, "[0, 72, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 73, 32]" + "'", str41, "[0, 73, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 74, 32]" + "'", str42, "[0, 74, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 75, 32]" + "'", str43, "[0, 75, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 76, 32]" + "'", str44, "[0, 76, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 77, 32]" + "'", str45, "[0, 77, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 78, 32]" + "'", str46, "[0, 78, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 79, 32]" + "'", str47, "[0, 79, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 80, 32]" + "'", str48, "[0, 80, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 81, 32]" + "'", str49, "[0, 81, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 82, 32]" + "'", str50, "[0, 82, 32]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test6233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6233");
        int[] intArray2 = new int[] { '#', (short) 10 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[79, 54]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[36, 11]" + "'", str3, "[36, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[37, 12]" + "'", str4, "[37, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[38, 13]" + "'", str5, "[38, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[39, 14]" + "'", str6, "[39, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[40, 15]" + "'", str7, "[40, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[41, 16]" + "'", str8, "[41, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[42, 17]" + "'", str9, "[42, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[43, 18]" + "'", str10, "[43, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[44, 19]" + "'", str11, "[44, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[45, 20]" + "'", str12, "[45, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[46, 21]" + "'", str13, "[46, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[47, 22]" + "'", str14, "[47, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[48, 23]" + "'", str15, "[48, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[49, 24]" + "'", str16, "[49, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[50, 25]" + "'", str17, "[50, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[51, 26]" + "'", str18, "[51, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[52, 27]" + "'", str19, "[52, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 28]" + "'", str20, "[53, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[54, 29]" + "'", str21, "[54, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[55, 30]" + "'", str22, "[55, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[56, 31]" + "'", str23, "[56, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[57, 32]" + "'", str24, "[57, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[58, 33]" + "'", str25, "[58, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[59, 34]" + "'", str26, "[59, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[60, 35]" + "'", str27, "[60, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[61, 36]" + "'", str28, "[61, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[62, 37]" + "'", str29, "[62, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[63, 38]" + "'", str30, "[63, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[64, 39]" + "'", str31, "[64, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[65, 40]" + "'", str32, "[65, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[66, 41]" + "'", str33, "[66, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[67, 42]" + "'", str34, "[67, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[68, 43]" + "'", str35, "[68, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[69, 44]" + "'", str36, "[69, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[70, 45]" + "'", str37, "[70, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[71, 46]" + "'", str38, "[71, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[72, 47]" + "'", str39, "[72, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[73, 48]" + "'", str40, "[73, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[74, 49]" + "'", str41, "[74, 49]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[75, 50]" + "'", str42, "[75, 50]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[76, 51]" + "'", str43, "[76, 51]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[77, 52]" + "'", str44, "[77, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[78, 53]" + "'", str45, "[78, 53]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[79, 54]" + "'", str46, "[79, 54]");
    }

    @Test
    public void test6234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6234");
        int[] intArray2 = new int[] { 0, (short) 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass8 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[5, 105]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 101]" + "'", str3, "[1, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 102]" + "'", str4, "[2, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 103]" + "'", str5, "[3, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 104]" + "'", str6, "[4, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 105]" + "'", str7, "[5, 105]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test6235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6235");
        int[] intArray4 = new int[] { 100, (byte) 100, (byte) 100, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass71 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 166, 166, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 101, 101, 0]" + "'", str5, "[100, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 102, 102, 0]" + "'", str6, "[100, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 103, 103, 0]" + "'", str7, "[100, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 104, 104, 0]" + "'", str8, "[100, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 105, 105, 0]" + "'", str9, "[100, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 106, 106, 0]" + "'", str10, "[100, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 107, 107, 0]" + "'", str11, "[100, 107, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 108, 108, 0]" + "'", str12, "[100, 108, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 109, 109, 0]" + "'", str13, "[100, 109, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 110, 110, 0]" + "'", str14, "[100, 110, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 111, 111, 0]" + "'", str15, "[100, 111, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 112, 112, 0]" + "'", str16, "[100, 112, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 113, 113, 0]" + "'", str17, "[100, 113, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 114, 114, 0]" + "'", str18, "[100, 114, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 115, 115, 0]" + "'", str19, "[100, 115, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 116, 116, 0]" + "'", str20, "[100, 116, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 117, 117, 0]" + "'", str21, "[100, 117, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 118, 118, 0]" + "'", str22, "[100, 118, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 119, 119, 0]" + "'", str23, "[100, 119, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 120, 120, 0]" + "'", str24, "[100, 120, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 121, 121, 0]" + "'", str25, "[100, 121, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 122, 122, 0]" + "'", str26, "[100, 122, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 123, 123, 0]" + "'", str27, "[100, 123, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 124, 124, 0]" + "'", str28, "[100, 124, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 125, 125, 0]" + "'", str29, "[100, 125, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 126, 126, 0]" + "'", str30, "[100, 126, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 127, 127, 0]" + "'", str31, "[100, 127, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 128, 128, 0]" + "'", str32, "[100, 128, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 129, 129, 0]" + "'", str33, "[100, 129, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 130, 130, 0]" + "'", str34, "[100, 130, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 131, 131, 0]" + "'", str35, "[100, 131, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 132, 132, 0]" + "'", str36, "[100, 132, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 133, 133, 0]" + "'", str37, "[100, 133, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 134, 134, 0]" + "'", str38, "[100, 134, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 135, 135, 0]" + "'", str39, "[100, 135, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 136, 136, 0]" + "'", str40, "[100, 136, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 137, 137, 0]" + "'", str41, "[100, 137, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 138, 138, 0]" + "'", str42, "[100, 138, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 139, 139, 0]" + "'", str43, "[100, 139, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 140, 140, 0]" + "'", str44, "[100, 140, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 141, 141, 0]" + "'", str45, "[100, 141, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 142, 142, 0]" + "'", str46, "[100, 142, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 143, 143, 0]" + "'", str47, "[100, 143, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 144, 144, 0]" + "'", str48, "[100, 144, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 145, 145, 0]" + "'", str49, "[100, 145, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 146, 146, 0]" + "'", str50, "[100, 146, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 147, 147, 0]" + "'", str51, "[100, 147, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 148, 148, 0]" + "'", str52, "[100, 148, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 149, 149, 0]" + "'", str53, "[100, 149, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 150, 150, 0]" + "'", str54, "[100, 150, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 151, 151, 0]" + "'", str55, "[100, 151, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 152, 152, 0]" + "'", str56, "[100, 152, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 153, 153, 0]" + "'", str57, "[100, 153, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 154, 154, 0]" + "'", str58, "[100, 154, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 155, 155, 0]" + "'", str59, "[100, 155, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 156, 156, 0]" + "'", str60, "[100, 156, 156, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 157, 157, 0]" + "'", str61, "[100, 157, 157, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 158, 158, 0]" + "'", str62, "[100, 158, 158, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 159, 159, 0]" + "'", str63, "[100, 159, 159, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 160, 160, 0]" + "'", str64, "[100, 160, 160, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 161, 161, 0]" + "'", str65, "[100, 161, 161, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 162, 162, 0]" + "'", str66, "[100, 162, 162, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 163, 163, 0]" + "'", str67, "[100, 163, 163, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 164, 164, 0]" + "'", str68, "[100, 164, 164, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 165, 165, 0]" + "'", str69, "[100, 165, 165, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 166, 166, 0]" + "'", str70, "[100, 166, 166, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test6236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6236");
        int[] intArray2 = new int[] { (short) 10, 10 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass48 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[55, 55]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 11]" + "'", str3, "[11, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 12]" + "'", str4, "[12, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 13]" + "'", str5, "[13, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 14]" + "'", str6, "[14, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 15]" + "'", str7, "[15, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 16]" + "'", str8, "[16, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 17]" + "'", str9, "[17, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 18]" + "'", str10, "[18, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[19, 19]" + "'", str11, "[19, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[20, 20]" + "'", str12, "[20, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[21, 21]" + "'", str13, "[21, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[22, 22]" + "'", str14, "[22, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[23, 23]" + "'", str15, "[23, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[24, 24]" + "'", str16, "[24, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[25, 25]" + "'", str17, "[25, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[26, 26]" + "'", str18, "[26, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[27, 27]" + "'", str19, "[27, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[28, 28]" + "'", str20, "[28, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[29, 29]" + "'", str21, "[29, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[30, 30]" + "'", str22, "[30, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[31, 31]" + "'", str23, "[31, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 32]" + "'", str24, "[32, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[33, 33]" + "'", str25, "[33, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 34]" + "'", str26, "[34, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 35]" + "'", str27, "[35, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[36, 36]" + "'", str28, "[36, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 37]" + "'", str29, "[37, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[38, 38]" + "'", str30, "[38, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[39, 39]" + "'", str31, "[39, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[40, 40]" + "'", str32, "[40, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[41, 41]" + "'", str33, "[41, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[42, 42]" + "'", str34, "[42, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[43, 43]" + "'", str35, "[43, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[44, 44]" + "'", str36, "[44, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[45, 45]" + "'", str37, "[45, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[46, 46]" + "'", str38, "[46, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[47, 47]" + "'", str39, "[47, 47]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[48, 48]" + "'", str40, "[48, 48]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[49, 49]" + "'", str41, "[49, 49]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[50, 50]" + "'", str42, "[50, 50]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[51, 51]" + "'", str43, "[51, 51]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[52, 52]" + "'", str44, "[52, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[53, 53]" + "'", str45, "[53, 53]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[54, 54]" + "'", str46, "[54, 54]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[55, 55]" + "'", str47, "[55, 55]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test6237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6237");
        int[] intArray6 = new int[] { (byte) 0, (short) 1, 1, (short) 1, 1, (byte) 0 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass65 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 6, 9, 9, 6, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 2, 2, 1, 0]" + "'", str7, "[0, 1, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 3, 3, 1, 0]" + "'", str8, "[0, 1, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 4, 4, 1, 0]" + "'", str9, "[0, 1, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 5, 5, 1, 0]" + "'", str10, "[0, 1, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 6, 6, 1, 0]" + "'", str11, "[0, 1, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 7, 7, 1, 0]" + "'", str12, "[0, 1, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 8, 8, 1, 0]" + "'", str13, "[0, 1, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 9, 9, 1, 0]" + "'", str14, "[0, 1, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 2, 0, 0, 2, 0]" + "'", str15, "[0, 2, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 1, 1, 2, 0]" + "'", str16, "[0, 2, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 2, 2, 2, 2, 0]" + "'", str17, "[0, 2, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 2, 3, 3, 2, 0]" + "'", str18, "[0, 2, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 2, 4, 4, 2, 0]" + "'", str19, "[0, 2, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 2, 5, 5, 2, 0]" + "'", str20, "[0, 2, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 2, 6, 6, 2, 0]" + "'", str21, "[0, 2, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 2, 7, 7, 2, 0]" + "'", str22, "[0, 2, 7, 7, 2, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 2, 8, 8, 2, 0]" + "'", str23, "[0, 2, 8, 8, 2, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 2, 9, 9, 2, 0]" + "'", str24, "[0, 2, 9, 9, 2, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 3, 0, 0, 3, 0]" + "'", str25, "[0, 3, 0, 0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 3, 1, 1, 3, 0]" + "'", str26, "[0, 3, 1, 1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 3, 2, 2, 3, 0]" + "'", str27, "[0, 3, 2, 2, 3, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 3, 3, 3, 3, 0]" + "'", str28, "[0, 3, 3, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 3, 4, 4, 3, 0]" + "'", str29, "[0, 3, 4, 4, 3, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 3, 5, 5, 3, 0]" + "'", str30, "[0, 3, 5, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 3, 6, 6, 3, 0]" + "'", str31, "[0, 3, 6, 6, 3, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 3, 7, 7, 3, 0]" + "'", str32, "[0, 3, 7, 7, 3, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 3, 8, 8, 3, 0]" + "'", str33, "[0, 3, 8, 8, 3, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 3, 9, 9, 3, 0]" + "'", str34, "[0, 3, 9, 9, 3, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 4, 0, 0, 4, 0]" + "'", str35, "[0, 4, 0, 0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 4, 1, 1, 4, 0]" + "'", str36, "[0, 4, 1, 1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 4, 2, 2, 4, 0]" + "'", str37, "[0, 4, 2, 2, 4, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 4, 3, 3, 4, 0]" + "'", str38, "[0, 4, 3, 3, 4, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 4, 4, 4, 4, 0]" + "'", str39, "[0, 4, 4, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 4, 5, 5, 4, 0]" + "'", str40, "[0, 4, 5, 5, 4, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 4, 6, 6, 4, 0]" + "'", str41, "[0, 4, 6, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 4, 7, 7, 4, 0]" + "'", str42, "[0, 4, 7, 7, 4, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 4, 8, 8, 4, 0]" + "'", str43, "[0, 4, 8, 8, 4, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 4, 9, 9, 4, 0]" + "'", str44, "[0, 4, 9, 9, 4, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 5, 0, 0, 5, 0]" + "'", str45, "[0, 5, 0, 0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 5, 1, 1, 5, 0]" + "'", str46, "[0, 5, 1, 1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 5, 2, 2, 5, 0]" + "'", str47, "[0, 5, 2, 2, 5, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 5, 3, 3, 5, 0]" + "'", str48, "[0, 5, 3, 3, 5, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 5, 4, 4, 5, 0]" + "'", str49, "[0, 5, 4, 4, 5, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 5, 5, 5, 5, 0]" + "'", str50, "[0, 5, 5, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 5, 6, 6, 5, 0]" + "'", str51, "[0, 5, 6, 6, 5, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 5, 7, 7, 5, 0]" + "'", str52, "[0, 5, 7, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 5, 8, 8, 5, 0]" + "'", str53, "[0, 5, 8, 8, 5, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 5, 9, 9, 5, 0]" + "'", str54, "[0, 5, 9, 9, 5, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 6, 0, 0, 6, 0]" + "'", str55, "[0, 6, 0, 0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 6, 1, 1, 6, 0]" + "'", str56, "[0, 6, 1, 1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 6, 2, 2, 6, 0]" + "'", str57, "[0, 6, 2, 2, 6, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 6, 3, 3, 6, 0]" + "'", str58, "[0, 6, 3, 3, 6, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 6, 4, 4, 6, 0]" + "'", str59, "[0, 6, 4, 4, 6, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 6, 5, 5, 6, 0]" + "'", str60, "[0, 6, 5, 5, 6, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 6, 6, 6, 6, 0]" + "'", str61, "[0, 6, 6, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 6, 7, 7, 6, 0]" + "'", str62, "[0, 6, 7, 7, 6, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 6, 8, 8, 6, 0]" + "'", str63, "[0, 6, 8, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 6, 9, 9, 6, 0]" + "'", str64, "[0, 6, 9, 9, 6, 0]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test6238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6238");
        int[] intArray5 = new int[] { 100, '#', '4', '#', (byte) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass36 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 35, 82, 35, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 35, 53, 35, 0]" + "'", str6, "[100, 35, 53, 35, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 35, 54, 35, 0]" + "'", str7, "[100, 35, 54, 35, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 35, 55, 35, 0]" + "'", str8, "[100, 35, 55, 35, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 35, 56, 35, 0]" + "'", str9, "[100, 35, 56, 35, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 35, 57, 35, 0]" + "'", str10, "[100, 35, 57, 35, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 35, 58, 35, 0]" + "'", str11, "[100, 35, 58, 35, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 35, 59, 35, 0]" + "'", str12, "[100, 35, 59, 35, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 35, 60, 35, 0]" + "'", str13, "[100, 35, 60, 35, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 35, 61, 35, 0]" + "'", str14, "[100, 35, 61, 35, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 35, 62, 35, 0]" + "'", str15, "[100, 35, 62, 35, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 35, 63, 35, 0]" + "'", str16, "[100, 35, 63, 35, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 35, 64, 35, 0]" + "'", str17, "[100, 35, 64, 35, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 35, 65, 35, 0]" + "'", str18, "[100, 35, 65, 35, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 35, 66, 35, 0]" + "'", str19, "[100, 35, 66, 35, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 35, 67, 35, 0]" + "'", str20, "[100, 35, 67, 35, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 35, 68, 35, 0]" + "'", str21, "[100, 35, 68, 35, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 35, 69, 35, 0]" + "'", str22, "[100, 35, 69, 35, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 35, 70, 35, 0]" + "'", str23, "[100, 35, 70, 35, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 35, 71, 35, 0]" + "'", str24, "[100, 35, 71, 35, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 35, 72, 35, 0]" + "'", str25, "[100, 35, 72, 35, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 35, 73, 35, 0]" + "'", str26, "[100, 35, 73, 35, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 35, 74, 35, 0]" + "'", str27, "[100, 35, 74, 35, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 35, 75, 35, 0]" + "'", str28, "[100, 35, 75, 35, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 35, 76, 35, 0]" + "'", str29, "[100, 35, 76, 35, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 35, 77, 35, 0]" + "'", str30, "[100, 35, 77, 35, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 35, 78, 35, 0]" + "'", str31, "[100, 35, 78, 35, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 35, 79, 35, 0]" + "'", str32, "[100, 35, 79, 35, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 35, 80, 35, 0]" + "'", str33, "[100, 35, 80, 35, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 35, 81, 35, 0]" + "'", str34, "[100, 35, 81, 35, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 35, 82, 35, 0]" + "'", str35, "[100, 35, 82, 35, 0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test6239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6239");
        int[] intArray4 = new int[] { 0, 0, (byte) 100, (-1) };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 28, 128, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 101, -1]" + "'", str5, "[0, 1, 101, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 102, -1]" + "'", str6, "[0, 2, 102, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 103, -1]" + "'", str7, "[0, 3, 103, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 104, -1]" + "'", str8, "[0, 4, 104, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 105, -1]" + "'", str9, "[0, 5, 105, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 6, 106, -1]" + "'", str10, "[0, 6, 106, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 7, 107, -1]" + "'", str11, "[0, 7, 107, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 8, 108, -1]" + "'", str12, "[0, 8, 108, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 9, 109, -1]" + "'", str13, "[0, 9, 109, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 110, -1]" + "'", str14, "[0, 10, 110, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 11, 111, -1]" + "'", str15, "[0, 11, 111, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 12, 112, -1]" + "'", str16, "[0, 12, 112, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 13, 113, -1]" + "'", str17, "[0, 13, 113, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 14, 114, -1]" + "'", str18, "[0, 14, 114, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 15, 115, -1]" + "'", str19, "[0, 15, 115, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 16, 116, -1]" + "'", str20, "[0, 16, 116, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 17, 117, -1]" + "'", str21, "[0, 17, 117, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 18, 118, -1]" + "'", str22, "[0, 18, 118, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 19, 119, -1]" + "'", str23, "[0, 19, 119, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 20, 120, -1]" + "'", str24, "[0, 20, 120, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 21, 121, -1]" + "'", str25, "[0, 21, 121, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 22, 122, -1]" + "'", str26, "[0, 22, 122, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 23, 123, -1]" + "'", str27, "[0, 23, 123, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 24, 124, -1]" + "'", str28, "[0, 24, 124, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 25, 125, -1]" + "'", str29, "[0, 25, 125, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 26, 126, -1]" + "'", str30, "[0, 26, 126, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 27, 127, -1]" + "'", str31, "[0, 27, 127, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 28, 128, -1]" + "'", str32, "[0, 28, 128, -1]");
    }

    @Test
    public void test6240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6240");
        int[] intArray4 = new int[] { (short) 0, (byte) 10, 0, 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[4, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 1, 100]" + "'", str5, "[0, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 2, 100]" + "'", str6, "[0, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 3, 100]" + "'", str7, "[0, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 4, 100]" + "'", str8, "[0, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 5, 100]" + "'", str9, "[0, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 6, 100]" + "'", str10, "[0, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 7, 100]" + "'", str11, "[0, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 8, 100]" + "'", str12, "[0, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 9, 100]" + "'", str13, "[0, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 0, 101]" + "'", str14, "[1, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 1, 101]" + "'", str15, "[1, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 2, 101]" + "'", str16, "[1, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 3, 3, 101]" + "'", str17, "[1, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 4, 4, 101]" + "'", str18, "[1, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 5, 5, 101]" + "'", str19, "[1, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 6, 6, 101]" + "'", str20, "[1, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 7, 7, 101]" + "'", str21, "[1, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 8, 8, 101]" + "'", str22, "[1, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 9, 9, 101]" + "'", str23, "[1, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 0, 0, 102]" + "'", str24, "[2, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 1, 1, 102]" + "'", str25, "[2, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 2, 2, 102]" + "'", str26, "[2, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 3, 3, 102]" + "'", str27, "[2, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 4, 4, 102]" + "'", str28, "[2, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 5, 5, 102]" + "'", str29, "[2, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 6, 6, 102]" + "'", str30, "[2, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 7, 7, 102]" + "'", str31, "[2, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 8, 8, 102]" + "'", str32, "[2, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 9, 9, 102]" + "'", str33, "[2, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 0, 0, 103]" + "'", str34, "[3, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 1, 1, 103]" + "'", str35, "[3, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 2, 2, 103]" + "'", str36, "[3, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 3, 3, 103]" + "'", str37, "[3, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 4, 4, 103]" + "'", str38, "[3, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 5, 5, 103]" + "'", str39, "[3, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 6, 6, 103]" + "'", str40, "[3, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 7, 7, 103]" + "'", str41, "[3, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 8, 8, 103]" + "'", str42, "[3, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 9, 9, 103]" + "'", str43, "[3, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 0, 0, 104]" + "'", str44, "[4, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 1, 1, 104]" + "'", str45, "[4, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 2, 2, 104]" + "'", str46, "[4, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 3, 3, 104]" + "'", str47, "[4, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 4, 4, 104]" + "'", str48, "[4, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 5, 5, 104]" + "'", str49, "[4, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 6, 6, 104]" + "'", str50, "[4, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 7, 7, 104]" + "'", str51, "[4, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 8, 8, 104]" + "'", str52, "[4, 8, 8, 104]");
    }

    @Test
    public void test6241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6241");
        int[] intArray5 = new int[] { (short) 0, (byte) 1, (byte) 10, (byte) -1, (short) 100 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 1, 50, -1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 1, 11, -1, 100]" + "'", str6, "[0, 1, 11, -1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 1, 12, -1, 100]" + "'", str7, "[0, 1, 12, -1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 1, 13, -1, 100]" + "'", str8, "[0, 1, 13, -1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 1, 14, -1, 100]" + "'", str9, "[0, 1, 14, -1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 1, 15, -1, 100]" + "'", str10, "[0, 1, 15, -1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 1, 16, -1, 100]" + "'", str11, "[0, 1, 16, -1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 1, 17, -1, 100]" + "'", str12, "[0, 1, 17, -1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 1, 18, -1, 100]" + "'", str13, "[0, 1, 18, -1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 1, 19, -1, 100]" + "'", str14, "[0, 1, 19, -1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 20, -1, 100]" + "'", str15, "[0, 1, 20, -1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 1, 21, -1, 100]" + "'", str16, "[0, 1, 21, -1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 1, 22, -1, 100]" + "'", str17, "[0, 1, 22, -1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 1, 23, -1, 100]" + "'", str18, "[0, 1, 23, -1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 1, 24, -1, 100]" + "'", str19, "[0, 1, 24, -1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 1, 25, -1, 100]" + "'", str20, "[0, 1, 25, -1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 1, 26, -1, 100]" + "'", str21, "[0, 1, 26, -1, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 1, 27, -1, 100]" + "'", str22, "[0, 1, 27, -1, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 1, 28, -1, 100]" + "'", str23, "[0, 1, 28, -1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 1, 29, -1, 100]" + "'", str24, "[0, 1, 29, -1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 1, 30, -1, 100]" + "'", str25, "[0, 1, 30, -1, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 1, 31, -1, 100]" + "'", str26, "[0, 1, 31, -1, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 1, 32, -1, 100]" + "'", str27, "[0, 1, 32, -1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 1, 33, -1, 100]" + "'", str28, "[0, 1, 33, -1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 1, 34, -1, 100]" + "'", str29, "[0, 1, 34, -1, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 1, 35, -1, 100]" + "'", str30, "[0, 1, 35, -1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 1, 36, -1, 100]" + "'", str31, "[0, 1, 36, -1, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 1, 37, -1, 100]" + "'", str32, "[0, 1, 37, -1, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 1, 38, -1, 100]" + "'", str33, "[0, 1, 38, -1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 1, 39, -1, 100]" + "'", str34, "[0, 1, 39, -1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 1, 40, -1, 100]" + "'", str35, "[0, 1, 40, -1, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 1, 41, -1, 100]" + "'", str36, "[0, 1, 41, -1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 1, 42, -1, 100]" + "'", str37, "[0, 1, 42, -1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 1, 43, -1, 100]" + "'", str38, "[0, 1, 43, -1, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 1, 44, -1, 100]" + "'", str39, "[0, 1, 44, -1, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 1, 45, -1, 100]" + "'", str40, "[0, 1, 45, -1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 1, 46, -1, 100]" + "'", str41, "[0, 1, 46, -1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 1, 47, -1, 100]" + "'", str42, "[0, 1, 47, -1, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 1, 48, -1, 100]" + "'", str43, "[0, 1, 48, -1, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 1, 49, -1, 100]" + "'", str44, "[0, 1, 49, -1, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 1, 50, -1, 100]" + "'", str45, "[0, 1, 50, -1, 100]");
    }

    @Test
    public void test6242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6242");
        int[] intArray6 = new int[] { ' ', '#', (short) 1, (short) 10, '#', 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 35, 36, 45, 35, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 35, 2, 11, 35, 100]" + "'", str7, "[32, 35, 2, 11, 35, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 35, 3, 12, 35, 100]" + "'", str8, "[32, 35, 3, 12, 35, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 35, 4, 13, 35, 100]" + "'", str9, "[32, 35, 4, 13, 35, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 35, 5, 14, 35, 100]" + "'", str10, "[32, 35, 5, 14, 35, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 35, 6, 15, 35, 100]" + "'", str11, "[32, 35, 6, 15, 35, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 35, 7, 16, 35, 100]" + "'", str12, "[32, 35, 7, 16, 35, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 35, 8, 17, 35, 100]" + "'", str13, "[32, 35, 8, 17, 35, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 35, 9, 18, 35, 100]" + "'", str14, "[32, 35, 9, 18, 35, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 35, 10, 19, 35, 100]" + "'", str15, "[32, 35, 10, 19, 35, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 35, 11, 20, 35, 100]" + "'", str16, "[32, 35, 11, 20, 35, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 35, 12, 21, 35, 100]" + "'", str17, "[32, 35, 12, 21, 35, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 35, 13, 22, 35, 100]" + "'", str18, "[32, 35, 13, 22, 35, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 35, 14, 23, 35, 100]" + "'", str19, "[32, 35, 14, 23, 35, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 35, 15, 24, 35, 100]" + "'", str20, "[32, 35, 15, 24, 35, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 35, 16, 25, 35, 100]" + "'", str21, "[32, 35, 16, 25, 35, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 35, 17, 26, 35, 100]" + "'", str22, "[32, 35, 17, 26, 35, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 35, 18, 27, 35, 100]" + "'", str23, "[32, 35, 18, 27, 35, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 35, 19, 28, 35, 100]" + "'", str24, "[32, 35, 19, 28, 35, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 35, 20, 29, 35, 100]" + "'", str25, "[32, 35, 20, 29, 35, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 35, 21, 30, 35, 100]" + "'", str26, "[32, 35, 21, 30, 35, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 35, 22, 31, 35, 100]" + "'", str27, "[32, 35, 22, 31, 35, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 35, 23, 32, 35, 100]" + "'", str28, "[32, 35, 23, 32, 35, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 35, 24, 33, 35, 100]" + "'", str29, "[32, 35, 24, 33, 35, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 35, 25, 34, 35, 100]" + "'", str30, "[32, 35, 25, 34, 35, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 35, 26, 35, 35, 100]" + "'", str31, "[32, 35, 26, 35, 35, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 35, 27, 36, 35, 100]" + "'", str32, "[32, 35, 27, 36, 35, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 35, 28, 37, 35, 100]" + "'", str33, "[32, 35, 28, 37, 35, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 35, 29, 38, 35, 100]" + "'", str34, "[32, 35, 29, 38, 35, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 35, 30, 39, 35, 100]" + "'", str35, "[32, 35, 30, 39, 35, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 35, 31, 40, 35, 100]" + "'", str36, "[32, 35, 31, 40, 35, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 35, 32, 41, 35, 100]" + "'", str37, "[32, 35, 32, 41, 35, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 35, 33, 42, 35, 100]" + "'", str38, "[32, 35, 33, 42, 35, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 35, 34, 43, 35, 100]" + "'", str39, "[32, 35, 34, 43, 35, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 35, 35, 44, 35, 100]" + "'", str40, "[32, 35, 35, 44, 35, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[32, 35, 36, 45, 35, 100]" + "'", str41, "[32, 35, 36, 45, 35, 100]");
    }

    @Test
    public void test6243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6243");
        int[] intArray5 = new int[] { (short) 100, ' ', (byte) 100, (short) 0, '4' };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass34 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 32, 128, 0, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 32, 101, 0, 52]" + "'", str6, "[100, 32, 101, 0, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 32, 102, 0, 52]" + "'", str7, "[100, 32, 102, 0, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 32, 103, 0, 52]" + "'", str8, "[100, 32, 103, 0, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 32, 104, 0, 52]" + "'", str9, "[100, 32, 104, 0, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 32, 105, 0, 52]" + "'", str10, "[100, 32, 105, 0, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 32, 106, 0, 52]" + "'", str11, "[100, 32, 106, 0, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 32, 107, 0, 52]" + "'", str12, "[100, 32, 107, 0, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 32, 108, 0, 52]" + "'", str13, "[100, 32, 108, 0, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 32, 109, 0, 52]" + "'", str14, "[100, 32, 109, 0, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 32, 110, 0, 52]" + "'", str15, "[100, 32, 110, 0, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 32, 111, 0, 52]" + "'", str16, "[100, 32, 111, 0, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 32, 112, 0, 52]" + "'", str17, "[100, 32, 112, 0, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 32, 113, 0, 52]" + "'", str18, "[100, 32, 113, 0, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 32, 114, 0, 52]" + "'", str19, "[100, 32, 114, 0, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 32, 115, 0, 52]" + "'", str20, "[100, 32, 115, 0, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 32, 116, 0, 52]" + "'", str21, "[100, 32, 116, 0, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 32, 117, 0, 52]" + "'", str22, "[100, 32, 117, 0, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 32, 118, 0, 52]" + "'", str23, "[100, 32, 118, 0, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 32, 119, 0, 52]" + "'", str24, "[100, 32, 119, 0, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 32, 120, 0, 52]" + "'", str25, "[100, 32, 120, 0, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 32, 121, 0, 52]" + "'", str26, "[100, 32, 121, 0, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 32, 122, 0, 52]" + "'", str27, "[100, 32, 122, 0, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 32, 123, 0, 52]" + "'", str28, "[100, 32, 123, 0, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 32, 124, 0, 52]" + "'", str29, "[100, 32, 124, 0, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 32, 125, 0, 52]" + "'", str30, "[100, 32, 125, 0, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 32, 126, 0, 52]" + "'", str31, "[100, 32, 126, 0, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 32, 127, 0, 52]" + "'", str32, "[100, 32, 127, 0, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 32, 128, 0, 52]" + "'", str33, "[100, 32, 128, 0, 52]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test6244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6244");
        int[] intArray3 = new int[] { 1, (-1), ' ' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass23 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[2, 8, 33]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 0, 32]" + "'", str4, "[1, 0, 32]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1, 32]" + "'", str5, "[1, 1, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 2, 32]" + "'", str6, "[1, 2, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 3, 32]" + "'", str7, "[1, 3, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 4, 32]" + "'", str8, "[1, 4, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 5, 32]" + "'", str9, "[1, 5, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 6, 32]" + "'", str10, "[1, 6, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 7, 32]" + "'", str11, "[1, 7, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 8, 32]" + "'", str12, "[1, 8, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 9, 32]" + "'", str13, "[1, 9, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 33]" + "'", str14, "[2, 0, 33]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 33]" + "'", str15, "[2, 1, 33]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 33]" + "'", str16, "[2, 2, 33]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 33]" + "'", str17, "[2, 3, 33]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 33]" + "'", str18, "[2, 4, 33]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 33]" + "'", str19, "[2, 5, 33]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 33]" + "'", str20, "[2, 6, 33]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 33]" + "'", str21, "[2, 7, 33]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 33]" + "'", str22, "[2, 8, 33]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test6245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6245");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass75 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[7, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 7, 100]" + "'", str10, "[0, 106, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 8, 100]" + "'", str11, "[0, 107, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 9, 100]" + "'", str12, "[0, 108, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 101]" + "'", str13, "[1, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 1, 101]" + "'", str14, "[1, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 2, 101]" + "'", str15, "[1, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 3, 101]" + "'", str16, "[1, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 4, 101]" + "'", str17, "[1, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 5, 101]" + "'", str18, "[1, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 6, 101]" + "'", str19, "[1, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 7, 101]" + "'", str20, "[1, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 8, 101]" + "'", str21, "[1, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 9, 101]" + "'", str22, "[1, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 0, 102]" + "'", str23, "[2, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1, 102]" + "'", str24, "[2, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 2, 102]" + "'", str25, "[2, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 3, 102]" + "'", str26, "[2, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 4, 102]" + "'", str27, "[2, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 5, 102]" + "'", str28, "[2, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 6, 102]" + "'", str29, "[2, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 7, 102]" + "'", str30, "[2, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 8, 102]" + "'", str31, "[2, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 9, 102]" + "'", str32, "[2, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 0, 103]" + "'", str33, "[3, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 1, 103]" + "'", str34, "[3, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2, 103]" + "'", str35, "[3, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 3, 103]" + "'", str36, "[3, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 4, 103]" + "'", str37, "[3, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 5, 103]" + "'", str38, "[3, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 6, 6, 103]" + "'", str39, "[3, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 7, 7, 103]" + "'", str40, "[3, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 8, 8, 103]" + "'", str41, "[3, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 9, 9, 103]" + "'", str42, "[3, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 0, 0, 104]" + "'", str43, "[4, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 1, 1, 104]" + "'", str44, "[4, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 2, 2, 104]" + "'", str45, "[4, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 3, 3, 104]" + "'", str46, "[4, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4, 4, 104]" + "'", str47, "[4, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 5, 5, 104]" + "'", str48, "[4, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 6, 6, 104]" + "'", str49, "[4, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 7, 7, 104]" + "'", str50, "[4, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 8, 8, 104]" + "'", str51, "[4, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 9, 9, 104]" + "'", str52, "[4, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 0, 0, 105]" + "'", str53, "[5, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 1, 1, 105]" + "'", str54, "[5, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 2, 2, 105]" + "'", str55, "[5, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 3, 3, 105]" + "'", str56, "[5, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 4, 4, 105]" + "'", str57, "[5, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5, 5, 105]" + "'", str58, "[5, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 6, 6, 105]" + "'", str59, "[5, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 7, 7, 105]" + "'", str60, "[5, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 8, 8, 105]" + "'", str61, "[5, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 9, 9, 105]" + "'", str62, "[5, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 0, 0, 106]" + "'", str63, "[6, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[6, 1, 1, 106]" + "'", str64, "[6, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 2, 2, 106]" + "'", str65, "[6, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 3, 3, 106]" + "'", str66, "[6, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 4, 4, 106]" + "'", str67, "[6, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 5, 5, 106]" + "'", str68, "[6, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6, 6, 106]" + "'", str69, "[6, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 7, 7, 106]" + "'", str70, "[6, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 8, 8, 106]" + "'", str71, "[6, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[6, 9, 9, 106]" + "'", str72, "[6, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 0, 0, 107]" + "'", str73, "[7, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[7, 1, 1, 107]" + "'", str74, "[7, 1, 1, 107]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test6246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6246");
        int[] intArray4 = new int[] { '#', '#', 0, (short) 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass31 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 36, 1, 1]" + "'", str5, "[35, 36, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 37, 2, 1]" + "'", str6, "[35, 37, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 38, 3, 1]" + "'", str7, "[35, 38, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 39, 4, 1]" + "'", str8, "[35, 39, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 40, 5, 1]" + "'", str9, "[35, 40, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 41, 6, 1]" + "'", str10, "[35, 41, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 42, 7, 1]" + "'", str11, "[35, 42, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 43, 8, 1]" + "'", str12, "[35, 43, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 44, 9, 1]" + "'", str13, "[35, 44, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[36, 0, 0, 2]" + "'", str14, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 1, 1, 2]" + "'", str15, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 2, 2, 2]" + "'", str16, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 3, 3, 2]" + "'", str17, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 4, 4, 2]" + "'", str18, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 5, 5, 2]" + "'", str19, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 6, 6, 2]" + "'", str20, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 7, 7, 2]" + "'", str21, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 8, 8, 2]" + "'", str22, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 9, 9, 2]" + "'", str23, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[37, 0, 0, 3]" + "'", str24, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 1, 1, 3]" + "'", str25, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 2, 2, 3]" + "'", str26, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 3, 3, 3]" + "'", str27, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 4, 4, 3]" + "'", str28, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 5, 5, 3]" + "'", str29, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 6, 6, 3]" + "'", str30, "[37, 6, 6, 3]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test6247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6247");
        int[] intArray4 = new int[] { 100, (byte) 100, (byte) 100, (short) 0 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 168, 168, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 101, 101, 0]" + "'", str5, "[100, 101, 101, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 102, 102, 0]" + "'", str6, "[100, 102, 102, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 103, 103, 0]" + "'", str7, "[100, 103, 103, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 104, 104, 0]" + "'", str8, "[100, 104, 104, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 105, 105, 0]" + "'", str9, "[100, 105, 105, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 106, 106, 0]" + "'", str10, "[100, 106, 106, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 107, 107, 0]" + "'", str11, "[100, 107, 107, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 108, 108, 0]" + "'", str12, "[100, 108, 108, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 109, 109, 0]" + "'", str13, "[100, 109, 109, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 110, 110, 0]" + "'", str14, "[100, 110, 110, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 111, 111, 0]" + "'", str15, "[100, 111, 111, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 112, 112, 0]" + "'", str16, "[100, 112, 112, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 113, 113, 0]" + "'", str17, "[100, 113, 113, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 114, 114, 0]" + "'", str18, "[100, 114, 114, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 115, 115, 0]" + "'", str19, "[100, 115, 115, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 116, 116, 0]" + "'", str20, "[100, 116, 116, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 117, 117, 0]" + "'", str21, "[100, 117, 117, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 118, 118, 0]" + "'", str22, "[100, 118, 118, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 119, 119, 0]" + "'", str23, "[100, 119, 119, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 120, 120, 0]" + "'", str24, "[100, 120, 120, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 121, 121, 0]" + "'", str25, "[100, 121, 121, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 122, 122, 0]" + "'", str26, "[100, 122, 122, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 123, 123, 0]" + "'", str27, "[100, 123, 123, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 124, 124, 0]" + "'", str28, "[100, 124, 124, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 125, 125, 0]" + "'", str29, "[100, 125, 125, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 126, 126, 0]" + "'", str30, "[100, 126, 126, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 127, 127, 0]" + "'", str31, "[100, 127, 127, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 128, 128, 0]" + "'", str32, "[100, 128, 128, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 129, 129, 0]" + "'", str33, "[100, 129, 129, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 130, 130, 0]" + "'", str34, "[100, 130, 130, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 131, 131, 0]" + "'", str35, "[100, 131, 131, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 132, 132, 0]" + "'", str36, "[100, 132, 132, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 133, 133, 0]" + "'", str37, "[100, 133, 133, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 134, 134, 0]" + "'", str38, "[100, 134, 134, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 135, 135, 0]" + "'", str39, "[100, 135, 135, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 136, 136, 0]" + "'", str40, "[100, 136, 136, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 137, 137, 0]" + "'", str41, "[100, 137, 137, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 138, 138, 0]" + "'", str42, "[100, 138, 138, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 139, 139, 0]" + "'", str43, "[100, 139, 139, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 140, 140, 0]" + "'", str44, "[100, 140, 140, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 141, 141, 0]" + "'", str45, "[100, 141, 141, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 142, 142, 0]" + "'", str46, "[100, 142, 142, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 143, 143, 0]" + "'", str47, "[100, 143, 143, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 144, 144, 0]" + "'", str48, "[100, 144, 144, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 145, 145, 0]" + "'", str49, "[100, 145, 145, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 146, 146, 0]" + "'", str50, "[100, 146, 146, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 147, 147, 0]" + "'", str51, "[100, 147, 147, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 148, 148, 0]" + "'", str52, "[100, 148, 148, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 149, 149, 0]" + "'", str53, "[100, 149, 149, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 150, 150, 0]" + "'", str54, "[100, 150, 150, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 151, 151, 0]" + "'", str55, "[100, 151, 151, 0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 152, 152, 0]" + "'", str56, "[100, 152, 152, 0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 153, 153, 0]" + "'", str57, "[100, 153, 153, 0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 154, 154, 0]" + "'", str58, "[100, 154, 154, 0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 155, 155, 0]" + "'", str59, "[100, 155, 155, 0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 156, 156, 0]" + "'", str60, "[100, 156, 156, 0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 157, 157, 0]" + "'", str61, "[100, 157, 157, 0]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 158, 158, 0]" + "'", str62, "[100, 158, 158, 0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 159, 159, 0]" + "'", str63, "[100, 159, 159, 0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 160, 160, 0]" + "'", str64, "[100, 160, 160, 0]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 161, 161, 0]" + "'", str65, "[100, 161, 161, 0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 162, 162, 0]" + "'", str66, "[100, 162, 162, 0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 163, 163, 0]" + "'", str67, "[100, 163, 163, 0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 164, 164, 0]" + "'", str68, "[100, 164, 164, 0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 165, 165, 0]" + "'", str69, "[100, 165, 165, 0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 166, 166, 0]" + "'", str70, "[100, 166, 166, 0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 167, 167, 0]" + "'", str71, "[100, 167, 167, 0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 168, 168, 0]" + "'", str72, "[100, 168, 168, 0]");
    }

    @Test
    public void test6248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6248");
        int[] intArray3 = new int[] { (short) 0, '4', (byte) 10 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 66, 10]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 53, 10]" + "'", str4, "[0, 53, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 54, 10]" + "'", str5, "[0, 54, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 55, 10]" + "'", str6, "[0, 55, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 56, 10]" + "'", str7, "[0, 56, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 57, 10]" + "'", str8, "[0, 57, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 58, 10]" + "'", str9, "[0, 58, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 59, 10]" + "'", str10, "[0, 59, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 60, 10]" + "'", str11, "[0, 60, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 61, 10]" + "'", str12, "[0, 61, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 62, 10]" + "'", str13, "[0, 62, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 63, 10]" + "'", str14, "[0, 63, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 64, 10]" + "'", str15, "[0, 64, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 65, 10]" + "'", str16, "[0, 65, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 66, 10]" + "'", str17, "[0, 66, 10]");
    }

    @Test
    public void test6249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6249");
        int[] intArray1 = new int[] { ' ' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass57 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[87]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[33]" + "'", str2, "[33]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[34]" + "'", str3, "[34]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35]" + "'", str4, "[35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[36]" + "'", str5, "[36]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[37]" + "'", str6, "[37]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[38]" + "'", str7, "[38]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[39]" + "'", str8, "[39]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[40]" + "'", str9, "[40]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[41]" + "'", str10, "[41]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[42]" + "'", str11, "[42]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[43]" + "'", str12, "[43]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[44]" + "'", str13, "[44]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[45]" + "'", str14, "[45]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[46]" + "'", str15, "[46]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[47]" + "'", str16, "[47]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[48]" + "'", str17, "[48]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[49]" + "'", str18, "[49]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[50]" + "'", str19, "[50]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[51]" + "'", str20, "[51]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[52]" + "'", str21, "[52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53]" + "'", str22, "[53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54]" + "'", str23, "[54]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[55]" + "'", str24, "[55]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[56]" + "'", str25, "[56]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[57]" + "'", str26, "[57]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[58]" + "'", str27, "[58]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[59]" + "'", str28, "[59]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[60]" + "'", str29, "[60]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[61]" + "'", str30, "[61]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[62]" + "'", str31, "[62]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[63]" + "'", str32, "[63]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[64]" + "'", str33, "[64]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[65]" + "'", str34, "[65]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[66]" + "'", str35, "[66]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[67]" + "'", str36, "[67]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[68]" + "'", str37, "[68]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[69]" + "'", str38, "[69]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[70]" + "'", str39, "[70]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[71]" + "'", str40, "[71]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[72]" + "'", str41, "[72]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[73]" + "'", str42, "[73]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[74]" + "'", str43, "[74]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[75]" + "'", str44, "[75]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[76]" + "'", str45, "[76]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[77]" + "'", str46, "[77]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[78]" + "'", str47, "[78]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[79]" + "'", str48, "[79]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[80]" + "'", str49, "[80]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[81]" + "'", str50, "[81]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[82]" + "'", str51, "[82]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[83]" + "'", str52, "[83]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[84]" + "'", str53, "[84]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[85]" + "'", str54, "[85]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[86]" + "'", str55, "[86]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[87]" + "'", str56, "[87]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test6250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6250");
        int[] intArray1 = new int[] { '#' };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str90 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str91 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str92 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str93 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str94 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str95 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str96 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str97 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str98 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass99 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[132]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[36]" + "'", str2, "[36]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[37]" + "'", str3, "[37]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[38]" + "'", str4, "[38]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[39]" + "'", str5, "[39]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[40]" + "'", str6, "[40]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[41]" + "'", str7, "[41]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[42]" + "'", str8, "[42]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[43]" + "'", str9, "[43]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[44]" + "'", str10, "[44]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[45]" + "'", str11, "[45]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[46]" + "'", str12, "[46]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[47]" + "'", str13, "[47]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[48]" + "'", str14, "[48]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[49]" + "'", str15, "[49]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[50]" + "'", str16, "[50]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[51]" + "'", str17, "[51]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[52]" + "'", str18, "[52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53]" + "'", str19, "[53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[54]" + "'", str20, "[54]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[55]" + "'", str21, "[55]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[56]" + "'", str22, "[56]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[57]" + "'", str23, "[57]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[58]" + "'", str24, "[58]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[59]" + "'", str25, "[59]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[60]" + "'", str26, "[60]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[61]" + "'", str27, "[61]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[62]" + "'", str28, "[62]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[63]" + "'", str29, "[63]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[64]" + "'", str30, "[64]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[65]" + "'", str31, "[65]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[66]" + "'", str32, "[66]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[67]" + "'", str33, "[67]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[68]" + "'", str34, "[68]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[69]" + "'", str35, "[69]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[70]" + "'", str36, "[70]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[71]" + "'", str37, "[71]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[72]" + "'", str38, "[72]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[73]" + "'", str39, "[73]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[74]" + "'", str40, "[74]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[75]" + "'", str41, "[75]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[76]" + "'", str42, "[76]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[77]" + "'", str43, "[77]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[78]" + "'", str44, "[78]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[79]" + "'", str45, "[79]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[80]" + "'", str46, "[80]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[81]" + "'", str47, "[81]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[82]" + "'", str48, "[82]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[83]" + "'", str49, "[83]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[84]" + "'", str50, "[84]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[85]" + "'", str51, "[85]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[86]" + "'", str52, "[86]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[87]" + "'", str53, "[87]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[88]" + "'", str54, "[88]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[89]" + "'", str55, "[89]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[90]" + "'", str56, "[90]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[91]" + "'", str57, "[91]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[92]" + "'", str58, "[92]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[93]" + "'", str59, "[93]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[94]" + "'", str60, "[94]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[95]" + "'", str61, "[95]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[96]" + "'", str62, "[96]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97]" + "'", str63, "[97]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[98]" + "'", str64, "[98]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[99]" + "'", str65, "[99]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100]" + "'", str66, "[100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[101]" + "'", str67, "[101]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[102]" + "'", str68, "[102]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[103]" + "'", str69, "[103]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[104]" + "'", str70, "[104]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[105]" + "'", str71, "[105]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[106]" + "'", str72, "[106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[107]" + "'", str73, "[107]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[108]" + "'", str74, "[108]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[109]" + "'", str75, "[109]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[110]" + "'", str76, "[110]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[111]" + "'", str77, "[111]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[112]" + "'", str78, "[112]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[113]" + "'", str79, "[113]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[114]" + "'", str80, "[114]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[115]" + "'", str81, "[115]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[116]" + "'", str82, "[116]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[117]" + "'", str83, "[117]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[118]" + "'", str84, "[118]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[119]" + "'", str85, "[119]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[120]" + "'", str86, "[120]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[121]" + "'", str87, "[121]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[122]" + "'", str88, "[122]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[123]" + "'", str89, "[123]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[124]" + "'", str90, "[124]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[125]" + "'", str91, "[125]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[126]" + "'", str92, "[126]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[127]" + "'", str93, "[127]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[128]" + "'", str94, "[128]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[129]" + "'", str95, "[129]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[130]" + "'", str96, "[130]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[131]" + "'", str97, "[131]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[132]" + "'", str98, "[132]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test6251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6251");
        int[] intArray2 = new int[] { (byte) 10, (byte) 1 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[9, 9]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[11, 2]" + "'", str3, "[11, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[12, 3]" + "'", str4, "[12, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[13, 4]" + "'", str5, "[13, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[14, 5]" + "'", str6, "[14, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[15, 6]" + "'", str7, "[15, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[16, 7]" + "'", str8, "[16, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[17, 8]" + "'", str9, "[17, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[18, 9]" + "'", str10, "[18, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 0, 1]" + "'", str11, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 0, 1]" + "'", str21, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 0, 1]" + "'", str31, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 3]" + "'", str34, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 4]" + "'", str35, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5, 5]" + "'", str36, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6, 6]" + "'", str37, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7, 7]" + "'", str38, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8, 8]" + "'", str39, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9, 9]" + "'", str40, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 0, 0, 1]" + "'", str41, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 2]" + "'", str43, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 3]" + "'", str44, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 4]" + "'", str45, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 5]" + "'", str46, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6, 6]" + "'", str47, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7, 7]" + "'", str48, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8, 8]" + "'", str49, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9, 9]" + "'", str50, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 0, 0, 1]" + "'", str51, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2, 2]" + "'", str53, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3, 3]" + "'", str54, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 4]" + "'", str55, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 5]" + "'", str56, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 6]" + "'", str57, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7, 7]" + "'", str58, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8, 8]" + "'", str59, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9, 9]" + "'", str60, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 0, 0, 1]" + "'", str61, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[2, 2]" + "'", str63, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[3, 3]" + "'", str64, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[4, 4]" + "'", str65, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 5]" + "'", str66, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 6]" + "'", str67, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 7]" + "'", str68, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[8, 8]" + "'", str69, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[9, 9]" + "'", str70, "[9, 9]");
    }

    @Test
    public void test6252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6252");
        int[] intArray2 = new int[] { (byte) 1, 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 1]" + "'", str3, "[2, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 2]" + "'", str4, "[3, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 3]" + "'", str5, "[4, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 4]" + "'", str6, "[5, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 5]" + "'", str7, "[6, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 6]" + "'", str8, "[7, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 7]" + "'", str9, "[8, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 8]" + "'", str10, "[9, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 9]" + "'", str11, "[10, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9, 9]" + "'", str41, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 0, 0, 1]" + "'", str42, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1]" + "'", str43, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2, 2]" + "'", str44, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 3]" + "'", str45, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4]" + "'", str46, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 5]" + "'", str47, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6, 6]" + "'", str48, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7, 7]" + "'", str49, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8, 8]" + "'", str50, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9, 9]" + "'", str51, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 0, 0, 1]" + "'", str52, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1]" + "'", str53, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2, 2]" + "'", str54, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3, 3]" + "'", str55, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 4]" + "'", str56, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 5]" + "'", str57, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 6]" + "'", str58, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7, 7]" + "'", str59, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8, 8]" + "'", str60, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9, 9]" + "'", str61, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 0, 0, 1]" + "'", str62, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1]" + "'", str63, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2, 2]" + "'", str64, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3, 3]" + "'", str65, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4, 4]" + "'", str66, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 5]" + "'", str67, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 6]" + "'", str68, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 7]" + "'", str69, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8, 8]" + "'", str70, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9, 9]" + "'", str71, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 0, 0, 1]" + "'", str72, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1]" + "'", str73, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[2, 2]" + "'", str74, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[3, 3]" + "'", str75, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[4, 4]" + "'", str76, "[4, 4]");
    }

    @Test
    public void test6253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6253");
        int[] intArray5 = new int[] { (short) 0, (short) 10, (short) 100, (byte) 1, (byte) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass35 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, 129, 1, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 10, 101, 1, 0]" + "'", str6, "[0, 10, 101, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 102, 1, 0]" + "'", str7, "[0, 10, 102, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 103, 1, 0]" + "'", str8, "[0, 10, 103, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 104, 1, 0]" + "'", str9, "[0, 10, 104, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 105, 1, 0]" + "'", str10, "[0, 10, 105, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 106, 1, 0]" + "'", str11, "[0, 10, 106, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 107, 1, 0]" + "'", str12, "[0, 10, 107, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 10, 108, 1, 0]" + "'", str13, "[0, 10, 108, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 109, 1, 0]" + "'", str14, "[0, 10, 109, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 10, 110, 1, 0]" + "'", str15, "[0, 10, 110, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 10, 111, 1, 0]" + "'", str16, "[0, 10, 111, 1, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 10, 112, 1, 0]" + "'", str17, "[0, 10, 112, 1, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 10, 113, 1, 0]" + "'", str18, "[0, 10, 113, 1, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 10, 114, 1, 0]" + "'", str19, "[0, 10, 114, 1, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 10, 115, 1, 0]" + "'", str20, "[0, 10, 115, 1, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 10, 116, 1, 0]" + "'", str21, "[0, 10, 116, 1, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 10, 117, 1, 0]" + "'", str22, "[0, 10, 117, 1, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 10, 118, 1, 0]" + "'", str23, "[0, 10, 118, 1, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 10, 119, 1, 0]" + "'", str24, "[0, 10, 119, 1, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 10, 120, 1, 0]" + "'", str25, "[0, 10, 120, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 10, 121, 1, 0]" + "'", str26, "[0, 10, 121, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 10, 122, 1, 0]" + "'", str27, "[0, 10, 122, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 10, 123, 1, 0]" + "'", str28, "[0, 10, 123, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 10, 124, 1, 0]" + "'", str29, "[0, 10, 124, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 10, 125, 1, 0]" + "'", str30, "[0, 10, 125, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 10, 126, 1, 0]" + "'", str31, "[0, 10, 126, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 10, 127, 1, 0]" + "'", str32, "[0, 10, 127, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 10, 128, 1, 0]" + "'", str33, "[0, 10, 128, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 10, 129, 1, 0]" + "'", str34, "[0, 10, 129, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test6254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6254");
        int[] intArray2 = new int[] { 0, (short) 100 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass9 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[6, 106]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1, 101]" + "'", str3, "[1, 101]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2, 102]" + "'", str4, "[2, 102]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3, 103]" + "'", str5, "[3, 103]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4, 104]" + "'", str6, "[4, 104]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5, 105]" + "'", str7, "[5, 105]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6, 106]" + "'", str8, "[6, 106]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test6255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6255");
        int[] intArray2 = new int[] { (-1), (short) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass41 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[8, 8]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 1]" + "'", str3, "[0, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 2]" + "'", str4, "[1, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 3]" + "'", str5, "[2, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 4]" + "'", str6, "[3, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 5]" + "'", str7, "[4, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 6]" + "'", str8, "[5, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 7]" + "'", str9, "[6, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 8]" + "'", str10, "[7, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[8, 9]" + "'", str11, "[8, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8, 8]" + "'", str40, "[8, 8]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test6256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6256");
        int[] intArray1 = new int[] { 100 };
        java.lang.String str2 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[121]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
    }

    @Test
    public void test6257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6257");
        int[] intArray4 = new int[] { 0, (byte) 100, (byte) 100, (byte) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 118, 118, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 101, 100]" + "'", str5, "[0, 101, 101, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 102, 100]" + "'", str6, "[0, 102, 102, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 103, 100]" + "'", str7, "[0, 103, 103, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 104, 100]" + "'", str8, "[0, 104, 104, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 105, 100]" + "'", str9, "[0, 105, 105, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 106, 100]" + "'", str10, "[0, 106, 106, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 107, 100]" + "'", str11, "[0, 107, 107, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 108, 100]" + "'", str12, "[0, 108, 108, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 109, 100]" + "'", str13, "[0, 109, 109, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 110, 100]" + "'", str14, "[0, 110, 110, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 111, 111, 100]" + "'", str15, "[0, 111, 111, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 112, 112, 100]" + "'", str16, "[0, 112, 112, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 113, 113, 100]" + "'", str17, "[0, 113, 113, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 114, 114, 100]" + "'", str18, "[0, 114, 114, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 115, 115, 100]" + "'", str19, "[0, 115, 115, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 116, 116, 100]" + "'", str20, "[0, 116, 116, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 117, 117, 100]" + "'", str21, "[0, 117, 117, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 118, 118, 100]" + "'", str22, "[0, 118, 118, 100]");
    }

    @Test
    public void test6258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6258");
        int[] intArray3 = new int[] { (short) 100, (short) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 124, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 101, 1]" + "'", str4, "[100, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 102, 1]" + "'", str5, "[100, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 103, 1]" + "'", str6, "[100, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 104, 1]" + "'", str7, "[100, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 105, 1]" + "'", str8, "[100, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 106, 1]" + "'", str9, "[100, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 107, 1]" + "'", str10, "[100, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 108, 1]" + "'", str11, "[100, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 109, 1]" + "'", str12, "[100, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 110, 1]" + "'", str13, "[100, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 111, 1]" + "'", str14, "[100, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 112, 1]" + "'", str15, "[100, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 113, 1]" + "'", str16, "[100, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 114, 1]" + "'", str17, "[100, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 115, 1]" + "'", str18, "[100, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 116, 1]" + "'", str19, "[100, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 117, 1]" + "'", str20, "[100, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 118, 1]" + "'", str21, "[100, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 119, 1]" + "'", str22, "[100, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 120, 1]" + "'", str23, "[100, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 121, 1]" + "'", str24, "[100, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 122, 1]" + "'", str25, "[100, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 123, 1]" + "'", str26, "[100, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 124, 1]" + "'", str27, "[100, 124, 1]");
    }

    @Test
    public void test6259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6259");
        int[] intArray3 = new int[] { (byte) 1, (byte) 100, (short) 100 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 127, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 101, 100]" + "'", str4, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 102, 100]" + "'", str5, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 103, 100]" + "'", str6, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 104, 100]" + "'", str7, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 105, 100]" + "'", str8, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 106, 100]" + "'", str9, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 107, 100]" + "'", str10, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 108, 100]" + "'", str11, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 109, 100]" + "'", str12, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 110, 100]" + "'", str13, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 111, 100]" + "'", str14, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 112, 100]" + "'", str15, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 113, 100]" + "'", str16, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 114, 100]" + "'", str17, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 115, 100]" + "'", str18, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 116, 100]" + "'", str19, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 117, 100]" + "'", str20, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 118, 100]" + "'", str21, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 119, 100]" + "'", str22, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 120, 100]" + "'", str23, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 121, 100]" + "'", str24, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 122, 100]" + "'", str25, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 123, 100]" + "'", str26, "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 124, 100]" + "'", str27, "[1, 124, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 125, 100]" + "'", str28, "[1, 125, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 126, 100]" + "'", str29, "[1, 126, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 127, 100]" + "'", str30, "[1, 127, 100]");
    }

    @Test
    public void test6260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6260");
        int[] intArray5 = new int[] { 100, '#', '4', '#', (byte) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass34 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 35, 80, 35, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 35, 53, 35, 0]" + "'", str6, "[100, 35, 53, 35, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 35, 54, 35, 0]" + "'", str7, "[100, 35, 54, 35, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 35, 55, 35, 0]" + "'", str8, "[100, 35, 55, 35, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 35, 56, 35, 0]" + "'", str9, "[100, 35, 56, 35, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 35, 57, 35, 0]" + "'", str10, "[100, 35, 57, 35, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 35, 58, 35, 0]" + "'", str11, "[100, 35, 58, 35, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 35, 59, 35, 0]" + "'", str12, "[100, 35, 59, 35, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 35, 60, 35, 0]" + "'", str13, "[100, 35, 60, 35, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 35, 61, 35, 0]" + "'", str14, "[100, 35, 61, 35, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 35, 62, 35, 0]" + "'", str15, "[100, 35, 62, 35, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 35, 63, 35, 0]" + "'", str16, "[100, 35, 63, 35, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 35, 64, 35, 0]" + "'", str17, "[100, 35, 64, 35, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 35, 65, 35, 0]" + "'", str18, "[100, 35, 65, 35, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 35, 66, 35, 0]" + "'", str19, "[100, 35, 66, 35, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 35, 67, 35, 0]" + "'", str20, "[100, 35, 67, 35, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 35, 68, 35, 0]" + "'", str21, "[100, 35, 68, 35, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 35, 69, 35, 0]" + "'", str22, "[100, 35, 69, 35, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 35, 70, 35, 0]" + "'", str23, "[100, 35, 70, 35, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 35, 71, 35, 0]" + "'", str24, "[100, 35, 71, 35, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 35, 72, 35, 0]" + "'", str25, "[100, 35, 72, 35, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 35, 73, 35, 0]" + "'", str26, "[100, 35, 73, 35, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 35, 74, 35, 0]" + "'", str27, "[100, 35, 74, 35, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 35, 75, 35, 0]" + "'", str28, "[100, 35, 75, 35, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 35, 76, 35, 0]" + "'", str29, "[100, 35, 76, 35, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 35, 77, 35, 0]" + "'", str30, "[100, 35, 77, 35, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 35, 78, 35, 0]" + "'", str31, "[100, 35, 78, 35, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 35, 79, 35, 0]" + "'", str32, "[100, 35, 79, 35, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 35, 80, 35, 0]" + "'", str33, "[100, 35, 80, 35, 0]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test6261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6261");
        int[] intArray4 = new int[] { (short) 0, (short) 100, 10, 1 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass90 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 185, 95, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 11, 1]" + "'", str5, "[0, 101, 11, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 12, 1]" + "'", str6, "[0, 102, 12, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 13, 1]" + "'", str7, "[0, 103, 13, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 14, 1]" + "'", str8, "[0, 104, 14, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 15, 1]" + "'", str9, "[0, 105, 15, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 16, 1]" + "'", str10, "[0, 106, 16, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 17, 1]" + "'", str11, "[0, 107, 17, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 18, 1]" + "'", str12, "[0, 108, 18, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 109, 19, 1]" + "'", str13, "[0, 109, 19, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 110, 20, 1]" + "'", str14, "[0, 110, 20, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 111, 21, 1]" + "'", str15, "[0, 111, 21, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 112, 22, 1]" + "'", str16, "[0, 112, 22, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 113, 23, 1]" + "'", str17, "[0, 113, 23, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 114, 24, 1]" + "'", str18, "[0, 114, 24, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 115, 25, 1]" + "'", str19, "[0, 115, 25, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 116, 26, 1]" + "'", str20, "[0, 116, 26, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 117, 27, 1]" + "'", str21, "[0, 117, 27, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 118, 28, 1]" + "'", str22, "[0, 118, 28, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 119, 29, 1]" + "'", str23, "[0, 119, 29, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 120, 30, 1]" + "'", str24, "[0, 120, 30, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 121, 31, 1]" + "'", str25, "[0, 121, 31, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 122, 32, 1]" + "'", str26, "[0, 122, 32, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 123, 33, 1]" + "'", str27, "[0, 123, 33, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 124, 34, 1]" + "'", str28, "[0, 124, 34, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 125, 35, 1]" + "'", str29, "[0, 125, 35, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 126, 36, 1]" + "'", str30, "[0, 126, 36, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 127, 37, 1]" + "'", str31, "[0, 127, 37, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 128, 38, 1]" + "'", str32, "[0, 128, 38, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 129, 39, 1]" + "'", str33, "[0, 129, 39, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 130, 40, 1]" + "'", str34, "[0, 130, 40, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 131, 41, 1]" + "'", str35, "[0, 131, 41, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 132, 42, 1]" + "'", str36, "[0, 132, 42, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 133, 43, 1]" + "'", str37, "[0, 133, 43, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 134, 44, 1]" + "'", str38, "[0, 134, 44, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 135, 45, 1]" + "'", str39, "[0, 135, 45, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 136, 46, 1]" + "'", str40, "[0, 136, 46, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 137, 47, 1]" + "'", str41, "[0, 137, 47, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 138, 48, 1]" + "'", str42, "[0, 138, 48, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 139, 49, 1]" + "'", str43, "[0, 139, 49, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 140, 50, 1]" + "'", str44, "[0, 140, 50, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 141, 51, 1]" + "'", str45, "[0, 141, 51, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 142, 52, 1]" + "'", str46, "[0, 142, 52, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 143, 53, 1]" + "'", str47, "[0, 143, 53, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 144, 54, 1]" + "'", str48, "[0, 144, 54, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 145, 55, 1]" + "'", str49, "[0, 145, 55, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 146, 56, 1]" + "'", str50, "[0, 146, 56, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 147, 57, 1]" + "'", str51, "[0, 147, 57, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 148, 58, 1]" + "'", str52, "[0, 148, 58, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 149, 59, 1]" + "'", str53, "[0, 149, 59, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 150, 60, 1]" + "'", str54, "[0, 150, 60, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 151, 61, 1]" + "'", str55, "[0, 151, 61, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 152, 62, 1]" + "'", str56, "[0, 152, 62, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 153, 63, 1]" + "'", str57, "[0, 153, 63, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 154, 64, 1]" + "'", str58, "[0, 154, 64, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 155, 65, 1]" + "'", str59, "[0, 155, 65, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 156, 66, 1]" + "'", str60, "[0, 156, 66, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 157, 67, 1]" + "'", str61, "[0, 157, 67, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 158, 68, 1]" + "'", str62, "[0, 158, 68, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 159, 69, 1]" + "'", str63, "[0, 159, 69, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 160, 70, 1]" + "'", str64, "[0, 160, 70, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 161, 71, 1]" + "'", str65, "[0, 161, 71, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 162, 72, 1]" + "'", str66, "[0, 162, 72, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 163, 73, 1]" + "'", str67, "[0, 163, 73, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 164, 74, 1]" + "'", str68, "[0, 164, 74, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 165, 75, 1]" + "'", str69, "[0, 165, 75, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 166, 76, 1]" + "'", str70, "[0, 166, 76, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 167, 77, 1]" + "'", str71, "[0, 167, 77, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 168, 78, 1]" + "'", str72, "[0, 168, 78, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 169, 79, 1]" + "'", str73, "[0, 169, 79, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[0, 170, 80, 1]" + "'", str74, "[0, 170, 80, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[0, 171, 81, 1]" + "'", str75, "[0, 171, 81, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[0, 172, 82, 1]" + "'", str76, "[0, 172, 82, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[0, 173, 83, 1]" + "'", str77, "[0, 173, 83, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[0, 174, 84, 1]" + "'", str78, "[0, 174, 84, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[0, 175, 85, 1]" + "'", str79, "[0, 175, 85, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[0, 176, 86, 1]" + "'", str80, "[0, 176, 86, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[0, 177, 87, 1]" + "'", str81, "[0, 177, 87, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[0, 178, 88, 1]" + "'", str82, "[0, 178, 88, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[0, 179, 89, 1]" + "'", str83, "[0, 179, 89, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[0, 180, 90, 1]" + "'", str84, "[0, 180, 90, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[0, 181, 91, 1]" + "'", str85, "[0, 181, 91, 1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[0, 182, 92, 1]" + "'", str86, "[0, 182, 92, 1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[0, 183, 93, 1]" + "'", str87, "[0, 183, 93, 1]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[0, 184, 94, 1]" + "'", str88, "[0, 184, 94, 1]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[0, 185, 95, 1]" + "'", str89, "[0, 185, 95, 1]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test6262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6262");
        int[] intArray4 = new int[] { (byte) 0, (short) 100, (short) 1, (short) 100 };
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[7, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 101, 2, 100]" + "'", str5, "[0, 101, 2, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 102, 3, 100]" + "'", str6, "[0, 102, 3, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 103, 4, 100]" + "'", str7, "[0, 103, 4, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 104, 5, 100]" + "'", str8, "[0, 104, 5, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 105, 6, 100]" + "'", str9, "[0, 105, 6, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 106, 7, 100]" + "'", str10, "[0, 106, 7, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 107, 8, 100]" + "'", str11, "[0, 107, 8, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 108, 9, 100]" + "'", str12, "[0, 108, 9, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 0, 101]" + "'", str13, "[1, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 1, 101]" + "'", str14, "[1, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 2, 101]" + "'", str15, "[1, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 3, 3, 101]" + "'", str16, "[1, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 4, 4, 101]" + "'", str17, "[1, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 5, 5, 101]" + "'", str18, "[1, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 6, 6, 101]" + "'", str19, "[1, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 7, 7, 101]" + "'", str20, "[1, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 8, 8, 101]" + "'", str21, "[1, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 9, 9, 101]" + "'", str22, "[1, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 0, 0, 102]" + "'", str23, "[2, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 1, 1, 102]" + "'", str24, "[2, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2, 2, 102]" + "'", str25, "[2, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 3, 3, 102]" + "'", str26, "[2, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 4, 4, 102]" + "'", str27, "[2, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 5, 5, 102]" + "'", str28, "[2, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 6, 6, 102]" + "'", str29, "[2, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 7, 7, 102]" + "'", str30, "[2, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 8, 8, 102]" + "'", str31, "[2, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 9, 9, 102]" + "'", str32, "[2, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 0, 0, 103]" + "'", str33, "[3, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 1, 1, 103]" + "'", str34, "[3, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 2, 2, 103]" + "'", str35, "[3, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3, 3, 103]" + "'", str36, "[3, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 4, 4, 103]" + "'", str37, "[3, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 5, 5, 103]" + "'", str38, "[3, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 6, 6, 103]" + "'", str39, "[3, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 7, 7, 103]" + "'", str40, "[3, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 8, 8, 103]" + "'", str41, "[3, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 9, 9, 103]" + "'", str42, "[3, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 0, 0, 104]" + "'", str43, "[4, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 1, 1, 104]" + "'", str44, "[4, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 2, 2, 104]" + "'", str45, "[4, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 3, 3, 104]" + "'", str46, "[4, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4, 4, 104]" + "'", str47, "[4, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 5, 5, 104]" + "'", str48, "[4, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 6, 6, 104]" + "'", str49, "[4, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 7, 7, 104]" + "'", str50, "[4, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 8, 8, 104]" + "'", str51, "[4, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 9, 9, 104]" + "'", str52, "[4, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 0, 0, 105]" + "'", str53, "[5, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 1, 1, 105]" + "'", str54, "[5, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 2, 2, 105]" + "'", str55, "[5, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 3, 3, 105]" + "'", str56, "[5, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 4, 4, 105]" + "'", str57, "[5, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5, 5, 105]" + "'", str58, "[5, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 6, 6, 105]" + "'", str59, "[5, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 7, 7, 105]" + "'", str60, "[5, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 8, 8, 105]" + "'", str61, "[5, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 9, 9, 105]" + "'", str62, "[5, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 0, 0, 106]" + "'", str63, "[6, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[6, 1, 1, 106]" + "'", str64, "[6, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 2, 2, 106]" + "'", str65, "[6, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 3, 3, 106]" + "'", str66, "[6, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 4, 4, 106]" + "'", str67, "[6, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 5, 5, 106]" + "'", str68, "[6, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6, 6, 106]" + "'", str69, "[6, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 7, 7, 106]" + "'", str70, "[6, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 8, 8, 106]" + "'", str71, "[6, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[6, 9, 9, 106]" + "'", str72, "[6, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 0, 0, 107]" + "'", str73, "[7, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[7, 1, 1, 107]" + "'", str74, "[7, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[7, 2, 2, 107]" + "'", str75, "[7, 2, 2, 107]");
    }

    @Test
    public void test6263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6263");
        int[] intArray3 = new int[] { 0, 1, (short) 0 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass84 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[8, 1, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 2, 0]" + "'", str4, "[0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 3, 0]" + "'", str5, "[0, 3, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 4, 0]" + "'", str6, "[0, 4, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 5, 0]" + "'", str7, "[0, 5, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 6, 0]" + "'", str8, "[0, 6, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 7, 0]" + "'", str9, "[0, 7, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 8, 0]" + "'", str10, "[0, 8, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 9, 0]" + "'", str11, "[0, 9, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 1]" + "'", str12, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 1]" + "'", str13, "[1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 2, 1]" + "'", str14, "[1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 3, 1]" + "'", str15, "[1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 4, 1]" + "'", str16, "[1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 5, 1]" + "'", str17, "[1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 6, 1]" + "'", str18, "[1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 7, 1]" + "'", str19, "[1, 7, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 8, 1]" + "'", str20, "[1, 8, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 9, 1]" + "'", str21, "[1, 9, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 0, 2]" + "'", str22, "[2, 0, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 1, 2]" + "'", str23, "[2, 1, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2, 2]" + "'", str24, "[2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 3, 2]" + "'", str25, "[2, 3, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 4, 2]" + "'", str26, "[2, 4, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 5, 2]" + "'", str27, "[2, 5, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 6, 2]" + "'", str28, "[2, 6, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 7, 2]" + "'", str29, "[2, 7, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 8, 2]" + "'", str30, "[2, 8, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 9, 2]" + "'", str31, "[2, 9, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 0, 3]" + "'", str32, "[3, 0, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 1, 3]" + "'", str33, "[3, 1, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 2, 3]" + "'", str34, "[3, 2, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3, 3]" + "'", str35, "[3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 4, 3]" + "'", str36, "[3, 4, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 5, 3]" + "'", str37, "[3, 5, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 6, 3]" + "'", str38, "[3, 6, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 7, 3]" + "'", str39, "[3, 7, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 8, 3]" + "'", str40, "[3, 8, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 9, 3]" + "'", str41, "[3, 9, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 0, 4]" + "'", str42, "[4, 0, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 1, 4]" + "'", str43, "[4, 1, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[4, 2, 4]" + "'", str44, "[4, 2, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 3, 4]" + "'", str45, "[4, 3, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 4, 4]" + "'", str46, "[4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 5, 4]" + "'", str47, "[4, 5, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 6, 4]" + "'", str48, "[4, 6, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 7, 4]" + "'", str49, "[4, 7, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 8, 4]" + "'", str50, "[4, 8, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 9, 4]" + "'", str51, "[4, 9, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 0, 5]" + "'", str52, "[5, 0, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 1, 5]" + "'", str53, "[5, 1, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[5, 2, 5]" + "'", str54, "[5, 2, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 3, 5]" + "'", str55, "[5, 3, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 4, 5]" + "'", str56, "[5, 4, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 5, 5]" + "'", str57, "[5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 6, 5]" + "'", str58, "[5, 6, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 7, 5]" + "'", str59, "[5, 7, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 8, 5]" + "'", str60, "[5, 8, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 9, 5]" + "'", str61, "[5, 9, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 0, 6]" + "'", str62, "[6, 0, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 1, 6]" + "'", str63, "[6, 1, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[6, 2, 6]" + "'", str64, "[6, 2, 6]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 3, 6]" + "'", str65, "[6, 3, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 4, 6]" + "'", str66, "[6, 4, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 5, 6]" + "'", str67, "[6, 5, 6]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 6, 6]" + "'", str68, "[6, 6, 6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 7, 6]" + "'", str69, "[6, 7, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 8, 6]" + "'", str70, "[6, 8, 6]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 9, 6]" + "'", str71, "[6, 9, 6]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 0, 7]" + "'", str72, "[7, 0, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 1, 7]" + "'", str73, "[7, 1, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[7, 2, 7]" + "'", str74, "[7, 2, 7]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[7, 3, 7]" + "'", str75, "[7, 3, 7]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[7, 4, 7]" + "'", str76, "[7, 4, 7]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[7, 5, 7]" + "'", str77, "[7, 5, 7]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[7, 6, 7]" + "'", str78, "[7, 6, 7]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[7, 7, 7]" + "'", str79, "[7, 7, 7]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 8, 7]" + "'", str80, "[7, 8, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[7, 9, 7]" + "'", str81, "[7, 9, 7]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 0, 8]" + "'", str82, "[8, 0, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[8, 1, 8]" + "'", str83, "[8, 1, 8]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test6264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6264");
        int[] intArray2 = new int[] { (-1), (short) 0 };
        java.lang.String str3 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass40 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[0, 1]" + "'", str3, "[0, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 2]" + "'", str4, "[1, 2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[2, 3]" + "'", str5, "[2, 3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[3, 4]" + "'", str6, "[3, 4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[4, 5]" + "'", str7, "[4, 5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[5, 6]" + "'", str8, "[5, 6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[6, 7]" + "'", str9, "[6, 7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[7, 8]" + "'", str10, "[7, 8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[8, 9]" + "'", str11, "[8, 9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 0, 1]" + "'", str12, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1]" + "'", str13, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 2]" + "'", str14, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3, 3]" + "'", str15, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4, 4]" + "'", str16, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5, 5]" + "'", str17, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6, 6]" + "'", str18, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7, 7]" + "'", str19, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8, 8]" + "'", str20, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9, 9]" + "'", str21, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 0, 1]" + "'", str22, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1]" + "'", str23, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2, 2]" + "'", str24, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 3]" + "'", str25, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4, 4]" + "'", str26, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5, 5]" + "'", str27, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6, 6]" + "'", str28, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7, 7]" + "'", str29, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8, 8]" + "'", str30, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9, 9]" + "'", str31, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 0, 1]" + "'", str32, "[1, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1]" + "'", str33, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 2]" + "'", str34, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 3]" + "'", str35, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 4]" + "'", str36, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5, 5]" + "'", str37, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6, 6]" + "'", str38, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7, 7]" + "'", str39, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test6265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6265");
        int[] intArray5 = new int[] { '#', (byte) 100, 100, 10, (short) 0 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass56 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[35, 100, 150, 10, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 100, 101, 10, 0]" + "'", str6, "[35, 100, 101, 10, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 100, 102, 10, 0]" + "'", str7, "[35, 100, 102, 10, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 100, 103, 10, 0]" + "'", str8, "[35, 100, 103, 10, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 100, 104, 10, 0]" + "'", str9, "[35, 100, 104, 10, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 100, 105, 10, 0]" + "'", str10, "[35, 100, 105, 10, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 100, 106, 10, 0]" + "'", str11, "[35, 100, 106, 10, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 100, 107, 10, 0]" + "'", str12, "[35, 100, 107, 10, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 100, 108, 10, 0]" + "'", str13, "[35, 100, 108, 10, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 100, 109, 10, 0]" + "'", str14, "[35, 100, 109, 10, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 100, 110, 10, 0]" + "'", str15, "[35, 100, 110, 10, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 100, 111, 10, 0]" + "'", str16, "[35, 100, 111, 10, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 100, 112, 10, 0]" + "'", str17, "[35, 100, 112, 10, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 100, 113, 10, 0]" + "'", str18, "[35, 100, 113, 10, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 100, 114, 10, 0]" + "'", str19, "[35, 100, 114, 10, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 100, 115, 10, 0]" + "'", str20, "[35, 100, 115, 10, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 100, 116, 10, 0]" + "'", str21, "[35, 100, 116, 10, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 100, 117, 10, 0]" + "'", str22, "[35, 100, 117, 10, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 100, 118, 10, 0]" + "'", str23, "[35, 100, 118, 10, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 100, 119, 10, 0]" + "'", str24, "[35, 100, 119, 10, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 100, 120, 10, 0]" + "'", str25, "[35, 100, 120, 10, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 100, 121, 10, 0]" + "'", str26, "[35, 100, 121, 10, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 100, 122, 10, 0]" + "'", str27, "[35, 100, 122, 10, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 100, 123, 10, 0]" + "'", str28, "[35, 100, 123, 10, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 100, 124, 10, 0]" + "'", str29, "[35, 100, 124, 10, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 100, 125, 10, 0]" + "'", str30, "[35, 100, 125, 10, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 100, 126, 10, 0]" + "'", str31, "[35, 100, 126, 10, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 100, 127, 10, 0]" + "'", str32, "[35, 100, 127, 10, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 100, 128, 10, 0]" + "'", str33, "[35, 100, 128, 10, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 100, 129, 10, 0]" + "'", str34, "[35, 100, 129, 10, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 100, 130, 10, 0]" + "'", str35, "[35, 100, 130, 10, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 100, 131, 10, 0]" + "'", str36, "[35, 100, 131, 10, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 100, 132, 10, 0]" + "'", str37, "[35, 100, 132, 10, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 100, 133, 10, 0]" + "'", str38, "[35, 100, 133, 10, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 100, 134, 10, 0]" + "'", str39, "[35, 100, 134, 10, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 100, 135, 10, 0]" + "'", str40, "[35, 100, 135, 10, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 100, 136, 10, 0]" + "'", str41, "[35, 100, 136, 10, 0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 100, 137, 10, 0]" + "'", str42, "[35, 100, 137, 10, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 100, 138, 10, 0]" + "'", str43, "[35, 100, 138, 10, 0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 100, 139, 10, 0]" + "'", str44, "[35, 100, 139, 10, 0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 100, 140, 10, 0]" + "'", str45, "[35, 100, 140, 10, 0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 100, 141, 10, 0]" + "'", str46, "[35, 100, 141, 10, 0]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 100, 142, 10, 0]" + "'", str47, "[35, 100, 142, 10, 0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 100, 143, 10, 0]" + "'", str48, "[35, 100, 143, 10, 0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 100, 144, 10, 0]" + "'", str49, "[35, 100, 144, 10, 0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 100, 145, 10, 0]" + "'", str50, "[35, 100, 145, 10, 0]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 100, 146, 10, 0]" + "'", str51, "[35, 100, 146, 10, 0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 100, 147, 10, 0]" + "'", str52, "[35, 100, 147, 10, 0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 100, 148, 10, 0]" + "'", str53, "[35, 100, 148, 10, 0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 100, 149, 10, 0]" + "'", str54, "[35, 100, 149, 10, 0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 100, 150, 10, 0]" + "'", str55, "[35, 100, 150, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test6266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6266");
        int[] intArray5 = new int[] { '#', (short) 10, 100, '4', (short) 1 };
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[35, 10, 141, 52, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 10, 101, 52, 1]" + "'", str6, "[35, 10, 101, 52, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 10, 102, 52, 1]" + "'", str7, "[35, 10, 102, 52, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 10, 103, 52, 1]" + "'", str8, "[35, 10, 103, 52, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 10, 104, 52, 1]" + "'", str9, "[35, 10, 104, 52, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 10, 105, 52, 1]" + "'", str10, "[35, 10, 105, 52, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 10, 106, 52, 1]" + "'", str11, "[35, 10, 106, 52, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 10, 107, 52, 1]" + "'", str12, "[35, 10, 107, 52, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 10, 108, 52, 1]" + "'", str13, "[35, 10, 108, 52, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 10, 109, 52, 1]" + "'", str14, "[35, 10, 109, 52, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 10, 110, 52, 1]" + "'", str15, "[35, 10, 110, 52, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 10, 111, 52, 1]" + "'", str16, "[35, 10, 111, 52, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 10, 112, 52, 1]" + "'", str17, "[35, 10, 112, 52, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 10, 113, 52, 1]" + "'", str18, "[35, 10, 113, 52, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 10, 114, 52, 1]" + "'", str19, "[35, 10, 114, 52, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 10, 115, 52, 1]" + "'", str20, "[35, 10, 115, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 10, 116, 52, 1]" + "'", str21, "[35, 10, 116, 52, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 10, 117, 52, 1]" + "'", str22, "[35, 10, 117, 52, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 10, 118, 52, 1]" + "'", str23, "[35, 10, 118, 52, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 10, 119, 52, 1]" + "'", str24, "[35, 10, 119, 52, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 10, 120, 52, 1]" + "'", str25, "[35, 10, 120, 52, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 10, 121, 52, 1]" + "'", str26, "[35, 10, 121, 52, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 10, 122, 52, 1]" + "'", str27, "[35, 10, 122, 52, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 10, 123, 52, 1]" + "'", str28, "[35, 10, 123, 52, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 10, 124, 52, 1]" + "'", str29, "[35, 10, 124, 52, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 10, 125, 52, 1]" + "'", str30, "[35, 10, 125, 52, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 10, 126, 52, 1]" + "'", str31, "[35, 10, 126, 52, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 10, 127, 52, 1]" + "'", str32, "[35, 10, 127, 52, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 10, 128, 52, 1]" + "'", str33, "[35, 10, 128, 52, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 10, 129, 52, 1]" + "'", str34, "[35, 10, 129, 52, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 10, 130, 52, 1]" + "'", str35, "[35, 10, 130, 52, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 10, 131, 52, 1]" + "'", str36, "[35, 10, 131, 52, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 10, 132, 52, 1]" + "'", str37, "[35, 10, 132, 52, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 10, 133, 52, 1]" + "'", str38, "[35, 10, 133, 52, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 10, 134, 52, 1]" + "'", str39, "[35, 10, 134, 52, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 10, 135, 52, 1]" + "'", str40, "[35, 10, 135, 52, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 10, 136, 52, 1]" + "'", str41, "[35, 10, 136, 52, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 10, 137, 52, 1]" + "'", str42, "[35, 10, 137, 52, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 10, 138, 52, 1]" + "'", str43, "[35, 10, 138, 52, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 10, 139, 52, 1]" + "'", str44, "[35, 10, 139, 52, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 10, 140, 52, 1]" + "'", str45, "[35, 10, 140, 52, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 10, 141, 52, 1]" + "'", str46, "[35, 10, 141, 52, 1]");
    }

    @Test
    public void test6267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6267");
        int[] intArray3 = new int[] { (short) 100, (short) 100, 1 };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass27 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[100, 123, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100, 101, 1]" + "'", str4, "[100, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 102, 1]" + "'", str5, "[100, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 103, 1]" + "'", str6, "[100, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 104, 1]" + "'", str7, "[100, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 105, 1]" + "'", str8, "[100, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 106, 1]" + "'", str9, "[100, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 107, 1]" + "'", str10, "[100, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 108, 1]" + "'", str11, "[100, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 109, 1]" + "'", str12, "[100, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 110, 1]" + "'", str13, "[100, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 111, 1]" + "'", str14, "[100, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 112, 1]" + "'", str15, "[100, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 113, 1]" + "'", str16, "[100, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 114, 1]" + "'", str17, "[100, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 115, 1]" + "'", str18, "[100, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 116, 1]" + "'", str19, "[100, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 117, 1]" + "'", str20, "[100, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 118, 1]" + "'", str21, "[100, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 119, 1]" + "'", str22, "[100, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 120, 1]" + "'", str23, "[100, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 121, 1]" + "'", str24, "[100, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 122, 1]" + "'", str25, "[100, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 123, 1]" + "'", str26, "[100, 123, 1]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test6268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6268");
        int[] intArray6 = new int[] { ' ', '#', (short) 1, (short) 10, '#', 100 };
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass41 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 35, 35, 44, 35, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 35, 2, 11, 35, 100]" + "'", str7, "[32, 35, 2, 11, 35, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 35, 3, 12, 35, 100]" + "'", str8, "[32, 35, 3, 12, 35, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 35, 4, 13, 35, 100]" + "'", str9, "[32, 35, 4, 13, 35, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 35, 5, 14, 35, 100]" + "'", str10, "[32, 35, 5, 14, 35, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 35, 6, 15, 35, 100]" + "'", str11, "[32, 35, 6, 15, 35, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 35, 7, 16, 35, 100]" + "'", str12, "[32, 35, 7, 16, 35, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 35, 8, 17, 35, 100]" + "'", str13, "[32, 35, 8, 17, 35, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 35, 9, 18, 35, 100]" + "'", str14, "[32, 35, 9, 18, 35, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 35, 10, 19, 35, 100]" + "'", str15, "[32, 35, 10, 19, 35, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 35, 11, 20, 35, 100]" + "'", str16, "[32, 35, 11, 20, 35, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 35, 12, 21, 35, 100]" + "'", str17, "[32, 35, 12, 21, 35, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 35, 13, 22, 35, 100]" + "'", str18, "[32, 35, 13, 22, 35, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 35, 14, 23, 35, 100]" + "'", str19, "[32, 35, 14, 23, 35, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 35, 15, 24, 35, 100]" + "'", str20, "[32, 35, 15, 24, 35, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 35, 16, 25, 35, 100]" + "'", str21, "[32, 35, 16, 25, 35, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 35, 17, 26, 35, 100]" + "'", str22, "[32, 35, 17, 26, 35, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 35, 18, 27, 35, 100]" + "'", str23, "[32, 35, 18, 27, 35, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 35, 19, 28, 35, 100]" + "'", str24, "[32, 35, 19, 28, 35, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 35, 20, 29, 35, 100]" + "'", str25, "[32, 35, 20, 29, 35, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 35, 21, 30, 35, 100]" + "'", str26, "[32, 35, 21, 30, 35, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 35, 22, 31, 35, 100]" + "'", str27, "[32, 35, 22, 31, 35, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 35, 23, 32, 35, 100]" + "'", str28, "[32, 35, 23, 32, 35, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 35, 24, 33, 35, 100]" + "'", str29, "[32, 35, 24, 33, 35, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[32, 35, 25, 34, 35, 100]" + "'", str30, "[32, 35, 25, 34, 35, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[32, 35, 26, 35, 35, 100]" + "'", str31, "[32, 35, 26, 35, 35, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[32, 35, 27, 36, 35, 100]" + "'", str32, "[32, 35, 27, 36, 35, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 35, 28, 37, 35, 100]" + "'", str33, "[32, 35, 28, 37, 35, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[32, 35, 29, 38, 35, 100]" + "'", str34, "[32, 35, 29, 38, 35, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[32, 35, 30, 39, 35, 100]" + "'", str35, "[32, 35, 30, 39, 35, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[32, 35, 31, 40, 35, 100]" + "'", str36, "[32, 35, 31, 40, 35, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[32, 35, 32, 41, 35, 100]" + "'", str37, "[32, 35, 32, 41, 35, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[32, 35, 33, 42, 35, 100]" + "'", str38, "[32, 35, 33, 42, 35, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[32, 35, 34, 43, 35, 100]" + "'", str39, "[32, 35, 34, 43, 35, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[32, 35, 35, 44, 35, 100]" + "'", str40, "[32, 35, 35, 44, 35, 100]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test6269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTestNEXT_PALINDROMEBuggy12.test6269");
        int[] intArray3 = new int[] { (short) 0, '#', ' ' };
        java.lang.String str4 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 86, 32]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 36, 32]" + "'", str4, "[0, 36, 32]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 37, 32]" + "'", str5, "[0, 37, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 38, 32]" + "'", str6, "[0, 38, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 39, 32]" + "'", str7, "[0, 39, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 40, 32]" + "'", str8, "[0, 40, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 41, 32]" + "'", str9, "[0, 41, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 42, 32]" + "'", str10, "[0, 42, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 43, 32]" + "'", str11, "[0, 43, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 44, 32]" + "'", str12, "[0, 44, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 45, 32]" + "'", str13, "[0, 45, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 46, 32]" + "'", str14, "[0, 46, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 47, 32]" + "'", str15, "[0, 47, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 48, 32]" + "'", str16, "[0, 48, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 49, 32]" + "'", str17, "[0, 49, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 50, 32]" + "'", str18, "[0, 50, 32]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 51, 32]" + "'", str19, "[0, 51, 32]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 52, 32]" + "'", str20, "[0, 52, 32]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 53, 32]" + "'", str21, "[0, 53, 32]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 54, 32]" + "'", str22, "[0, 54, 32]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 55, 32]" + "'", str23, "[0, 55, 32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 56, 32]" + "'", str24, "[0, 56, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 57, 32]" + "'", str25, "[0, 57, 32]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 58, 32]" + "'", str26, "[0, 58, 32]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 59, 32]" + "'", str27, "[0, 59, 32]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 60, 32]" + "'", str28, "[0, 60, 32]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 61, 32]" + "'", str29, "[0, 61, 32]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 62, 32]" + "'", str30, "[0, 62, 32]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 63, 32]" + "'", str31, "[0, 63, 32]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 64, 32]" + "'", str32, "[0, 64, 32]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 65, 32]" + "'", str33, "[0, 65, 32]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 66, 32]" + "'", str34, "[0, 66, 32]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 67, 32]" + "'", str35, "[0, 67, 32]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 68, 32]" + "'", str36, "[0, 68, 32]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 69, 32]" + "'", str37, "[0, 69, 32]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 70, 32]" + "'", str38, "[0, 70, 32]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 71, 32]" + "'", str39, "[0, 71, 32]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 72, 32]" + "'", str40, "[0, 72, 32]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 73, 32]" + "'", str41, "[0, 73, 32]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 74, 32]" + "'", str42, "[0, 74, 32]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 75, 32]" + "'", str43, "[0, 75, 32]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 76, 32]" + "'", str44, "[0, 76, 32]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 77, 32]" + "'", str45, "[0, 77, 32]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 78, 32]" + "'", str46, "[0, 78, 32]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 79, 32]" + "'", str47, "[0, 79, 32]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 80, 32]" + "'", str48, "[0, 80, 32]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 81, 32]" + "'", str49, "[0, 81, 32]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 82, 32]" + "'", str50, "[0, 82, 32]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 83, 32]" + "'", str51, "[0, 83, 32]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 84, 32]" + "'", str52, "[0, 84, 32]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 85, 32]" + "'", str53, "[0, 85, 32]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 86, 32]" + "'", str54, "[0, 86, 32]");
    }
}

