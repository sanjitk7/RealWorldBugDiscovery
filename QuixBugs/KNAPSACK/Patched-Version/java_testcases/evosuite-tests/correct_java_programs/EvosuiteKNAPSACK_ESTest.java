/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 08:53:04 GMT 2024
 */

package correct_java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import correct_java_programs.KNAPSACK;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EvosuiteKNAPSACK_ESTest extends EvosuiteKNAPSACK_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      int[] intArray1 = new int[9];
      intArray1[1] = 288;
      intArray0[0] = intArray1;
      int int0 = KNAPSACK.knapsack(288, intArray0);
      assertEquals(288, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      int int0 = KNAPSACK.knapsack(288, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[][] intArray0 = new int[1][3];
      KNAPSACK.knapsack(3560, intArray0);
      // Undeclared exception!
      KNAPSACK.knapsack(3560, intArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack((-1), (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("correct_java_programs.KNAPSACK", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[][] intArray0 = new int[4][0];
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack((-2572), intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("correct_java_programs.KNAPSACK", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[][] intArray0 = new int[2][5];
      int[] intArray1 = new int[1];
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("correct_java_programs.KNAPSACK", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 979;
      intArray0[0] = intArray1;
      int int0 = KNAPSACK.knapsack(979, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
  }
}
