/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 08:53:45 GMT 2024
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java_programs.KNAPSACK;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EvosuiteKNAPSACK_ESTest extends EvosuiteKNAPSACK_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[][] intArray0 = new int[7][7];
      int[] intArray1 = new int[4];
      intArray1[0] = 503;
      intArray1[1] = 503;
      intArray1[2] = 503;
      intArray1[3] = 503;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 503;
      intArray2[1] = 503;
      intArray2[2] = 503;
      intArray2[3] = 503;
      intArray2[4] = 503;
      intArray2[5] = 503;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 0;
      intArray3[1] = 503;
      intArray3[2] = 154;
      intArray3[3] = 503;
      intArray3[4] = 503;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = 503;
      intArray4[1] = 503;
      intArray4[2] = 0;
      intArray4[3] = 503;
      intArray4[4] = 0;
      intArray4[5] = 0;
      intArray4[6] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[4];
      intArray5[0] = 503;
      intArray5[1] = 154;
      intArray5[2] = 0;
      intArray5[3] = 154;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[3];
      intArray6[0] = 154;
      intArray6[1] = 503;
      intArray6[2] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[6];
      intArray7[0] = 503;
      intArray7[1] = 503;
      intArray7[2] = 0;
      intArray7[3] = 154;
      intArray7[4] = 0;
      intArray7[5] = 154;
      intArray0[6] = intArray7;
      KNAPSACK.knapsack(503, intArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[][] intArray0 = new int[8][8];
      int[] intArray1 = new int[4];
      intArray1[0] = 3474;
      intArray1[1] = 3474;
      intArray1[2] = 3474;
      intArray1[3] = 3474;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 3474;
      intArray2[1] = 3474;
      intArray2[2] = 0;
      intArray2[3] = 3474;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[8];
      intArray4[0] = (-665);
      intArray4[1] = 0;
      intArray4[2] = 0;
      intArray4[3] = 3474;
      intArray4[4] = 0;
      intArray4[5] = 3474;
      intArray4[6] = 0;
      intArray4[7] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = (-665);
      intArray5[1] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[7];
      intArray6[0] = (-665);
      intArray6[1] = 2342;
      intArray6[2] = 0;
      intArray6[3] = (-665);
      intArray6[4] = 3474;
      intArray6[5] = (-665);
      intArray6[6] = 3474;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[6];
      intArray7[0] = (-665);
      intArray7[1] = 0;
      intArray7[2] = (-665);
      intArray7[3] = 3474;
      intArray7[4] = 0;
      intArray7[5] = 2342;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[1];
      intArray8[0] = (-665);
      intArray0[7] = intArray8;
      // Undeclared exception!
      KNAPSACK.knapsack(3474, intArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int[][] intArray0 = new int[3][1];
      int[] intArray1 = new int[6];
      intArray1[0] = 1886;
      intArray1[1] = 1886;
      intArray1[2] = 1886;
      intArray1[3] = (-1040);
      intArray1[4] = 1886;
      intArray1[5] = 1886;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = (-1040);
      intArray2[1] = (-1040);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 1886;
      intArray3[1] = 1886;
      intArray3[2] = 1886;
      intArray3[3] = (-1040);
      intArray3[4] = 1886;
      intArray3[5] = (-1040);
      intArray3[6] = (-1040);
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(1886, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1887
         //
         verifyException("java_programs.KNAPSACK", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[3];
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = 1455;
      intArray2[6] = 0;
      intArray2[7] = 0;
      intArray0[1] = intArray2;
      KNAPSACK.knapsack(0, intArray0);
      KNAPSACK.knapsack(1455, intArray0);
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int int0 = KNAPSACK.knapsack(1455, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[][] intArray0 = new int[2][7];
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray0[1] = intArray2;
      KNAPSACK.knapsack(0, intArray0);
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      KNAPSACK.knapsack(0, intArray0);
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack((-2450), intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java_programs.KNAPSACK", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int int0 = 0;
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(0, (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java_programs.KNAPSACK", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int[][] intArray0 = new int[8][6];
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 0;
      intArray4[1] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 0;
      intArray5[1] = 0;
      intArray5[2] = 0;
      intArray5[3] = 0;
      intArray5[4] = 0;
      intArray5[5] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[9];
      intArray6[0] = 0;
      intArray6[1] = 0;
      intArray6[2] = 0;
      intArray6[3] = 0;
      intArray6[4] = 1411;
      intArray6[5] = 0;
      intArray6[6] = 0;
      intArray6[7] = 0;
      intArray6[8] = 0;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[1];
      intArray7[0] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[6];
      intArray8[0] = 0;
      intArray8[1] = 0;
      intArray8[2] = 0;
      intArray8[3] = 0;
      intArray8[4] = (-457);
      intArray8[5] = 1411;
      intArray0[7] = intArray8;
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java_programs.KNAPSACK", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int[][] intArray0 = new int[1][1];
      int[] intArray1 = new int[3];
      intArray1[0] = 1326;
      intArray1[1] = 0;
      intArray1[2] = 1326;
      intArray0[0] = intArray1;
      int int0 = KNAPSACK.knapsack(1326, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[][] intArray0 = new int[1][0];
      int[] intArray1 = new int[1];
      intArray1[0] = 0;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("java_programs.KNAPSACK", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[][] intArray0 = new int[0][1];
      int int0 = KNAPSACK.knapsack(1083, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[][] intArray0 = new int[1][1];
      int[] intArray1 = new int[7];
      intArray1[0] = 31;
      intArray0[0] = intArray1;
      KNAPSACK kNAPSACK0 = new KNAPSACK();
      int int0 = KNAPSACK.knapsack(2267, intArray0);
      assertEquals(0, int0);
  }
}
